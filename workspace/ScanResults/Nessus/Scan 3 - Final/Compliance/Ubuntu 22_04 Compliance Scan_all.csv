Plugin ID,CVE,CVSS v2.0 Base Score,Risk,Host,Protocol,Port,Name,Synopsis,Description,Solution,See Also,Plugin Output
"14272","","","None","192.168.110.1","tcp","22","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 22/tcp was found to be open"
"14272","","","None","192.168.110.1","tcp","80","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 80/tcp was found to be open"
"14272","","","None","192.168.110.1","tcp","443","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 443/tcp was found to be open"
"14272","","","None","192.168.110.1","tcp","30252","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 30252/tcp was found to be open"
"14272","","","None","192.168.110.1","tcp","42001","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 42001/tcp was found to be open"
"14272","","","None","192.168.110.1","udp","443","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 443/udp was found to be open"
"14272","","","None","192.168.110.1","udp","30041","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 30041/udp was found to be open"
"14272","","","None","192.168.110.1","udp","30042","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 30042/udp was found to be open"
"14272","","","None","192.168.110.1","udp","51021","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 51021/udp was found to be open"
"14272","","","None","192.168.110.1","udp","51022","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 51022/udp was found to be open"
"19506","","","None","192.168.110.1","tcp","0","Nessus Scan Information","This plugin displays information about the Nessus scan.","This plugin displays, for each tested host, information about the
scan itself :

  - The version of the plugin set.
  - The type of scanner (Nessus or Nessus Home).
  - The version of the Nessus Engine.
  - The port scanner(s) used.
  - The port range scanned.
  - The ping round trip time 
  - Whether credentialed or third-party patch management
    checks are possible.
  - Whether the display of superseded patches is enabled
  - The date of the scan.
  - The duration of the scan.
  - The number of hosts scanned in parallel.
  - The number of checks done in parallel.","n/a","","Information about this scan : 

Nessus version : 10.8.1
Nessus build : 20004
Plugin feed version : 202408120709
Scanner edition used : Nessus
Scanner OS : LINUX
Scanner distribution : ubuntu1604-x86-64
Scan type : Normal
Scan name : Ubuntu 22.04 Compliance Scan
Scan policy used : Policy Compliance Auditing
Scanner IP : 192.168.110.80
Port scanner(s) : netstat 
Port range : default
Ping RTT : 167.810 ms
Thorough tests : no
Experimental tests : no
Scan for Unpatched Vulnerabilities : no
Plugin debugging enabled : no
Paranoia level : 1
Report verbosity : 1
Safe checks : yes
Optimize the test : no
Credentialed checks : yes, as 'anapaya' via ssh
Attempt Least Privilege : no
Patch management checks : None
Display superseded patches : yes (supersedence plugin did not launch)
CGI scanning : disabled
Web application tests : disabled
Max hosts : 30
Max checks : 4
Recv timeout : 5
Backports : None
Allow post-scan editing : Yes
Nessus Plugin Signature Checking : Enabled
Audit File Signature Checking : Disabled
Scan Start Date : 2024/8/12 15:26 CEST
Scan duration : 346 sec
Scan for malware : no
"
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""CIS_Ubuntu_Linux_22.04_LTS_v2.0.0_L2_Server.audit from CIS Ubuntu Linux 22.04 LTS Benchmark v2.0.0"" : [PASSED]

See Also: https://workbench.cisecurity.org/benchmarks/17074

Policy Value:
PASSED","n/a","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.6 Ensure squashfs kernel module is not available"" : [PASSED]

The squashfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A squashfs image can be used without having to first decompress the image.

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

Solution:
Run the following script to disable the squashfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install squashfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist squashfs in the /etc/modprobe.d/ directory
 - Unload squashfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist squashfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""squashfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

Impact:

As Snap packages utilize squashfs as a compressed filesystem, disabling squashfs will cause Snap packages to fail.

Snap application packages of software are self-contained and work across a range of Linux distributions. This is unlike traditional Linux package management approaches, like APT or RPM, which require specifically adapted packages per Linux distribution on an application update and delay therefore application deployment from developers to their software's end-user. Snaps themselves have no dependency on any external store (""App store""), can be obtained from any source and can be therefore used for upstream software deployment.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - module: ""squashfs"" doesn't exist in ""/lib/modules/5.15.0-113-generic/kernel/fs""
 - module: ""squashfs"" doesn't exist in ""/lib/modules/5.15.0-87-generic/kernel/fs""","Run the following script to disable the squashfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install squashfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist squashfs in the /etc/modprobe.d/ directory
 - Unload squashfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist squashfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""squashfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

Impact:

As Snap packages utilize squashfs as a compressed filesystem, disabling squashfs will cause Snap packages to fail.

Snap application packages of software are self-contained and work across a range of Linux distributions. This is unlike traditional Linux package management approaches, like APT or RPM, which require specifically adapted packages per Linux distribution on an application update and delay therefore application deployment from developers to their software's end-user. Snaps themselves have no dependency on any external store (""App store""), can be obtained from any source and can be therefore used for upstream software deployment.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.7 Ensure udf kernel module is not available"" : [FAILED]

The udf filesystem type is the universal disk format used to implement ISO/IEC 13346 and ECMA-167 specifications. This is an open vendor filesystem type for data storage on a broad range of media. This filesystem type is necessary to support writing DVDs and newer optical disc formats.

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

Solution:
Run the following script to disable the udf module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install udf /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist udf in the /etc/modprobe.d/ directory
 - Unload udf from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist udf in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""udf"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

Impact:

Microsoft Azure requires the usage of udf

udf should not be disabled on systems run on Microsoft Azure.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""udf"" exists in:
  - ""/lib/modules/5.15.0-113-generic/kernel/fs""
  - ""/lib/modules/5.15.0-87-generic/kernel/fs""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""udf"" is not deny listed
 - module: ""udf"" is loadable: ""insmod /lib/modules/5.15.0-87-generic/kernel/fs/udf/udf.ko ""


- Correctly set:

 - module: ""udf"" is not loaded","Run the following script to disable the udf module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install udf /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist udf in the /etc/modprobe.d/ directory
 - Unload udf from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist udf in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""udf"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

Impact:

Microsoft Azure requires the usage of udf

udf should not be disabled on systems run on Microsoft Azure.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.3.1 Ensure separate partition exists for /home"" : [FAILED]

The /home directory is used to support disk storage needs of local users.

The default installation only creates a single / partition. Since the /home directory contains user generated data, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /home and impact all local users.

Configuring /home as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev These options limit an attacker's ability to create exploits on the system. In the case of /home options such as usrquota/grpquota may be considered to limit the impact that users can have on each other with regards to disk resource exhaustion. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options.

As /home contains user data, care should be taken to ensure the security and integrity of the data and mount point.

Solution:
For new installations, during installation create a custom partition setup and specify a separate partition for /home

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: [\s]+/home[\s]+
file: /proc/self/mountinfo
regex: [\s]+/home[\s]+

Actual Value:
The file ""/proc/self/mountinfo"" does not contain ""[\s]+/home[\s]+""","For new installations, during installation create a custom partition setup and specify a separate partition for /home

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.4.1 Ensure separate partition exists for /var"" : [PASSED]

The /var directory is used by daemons and other system services to temporarily store dynamic data. Some directories created by these processes may be world-writable.

The reasoning for mounting /var on a separate partition is as follows.

The default installation only creates a single / partition. Since the /var directory may contain world-writable files and directories, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /var and cause unintended behavior across the system as the disk is full. See man auditd.conf for details.

Configuring /var as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev These options limits an attackers ability to create exploits on the system. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options.

An example of exploiting /var may be an attacker establishing a hard-link to a system setuid program and wait for it to be updated. Once the program was updated, the hard-link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.

Solution:
For new installations, during installation create a custom partition setup and specify a separate partition for /var

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: [\s]+/var[\s]+
file: /proc/self/mountinfo
regex: [\s]+/var[\s]+

Actual Value:
Compliant file(s):
      /proc/self/mountinfo - regex '[\s]+/var[\s]+' found - expect '[\s]+/var[\s]+' found in the following lines:
          23: 94 29 253:0 / /var rw,relatime shared:47 - ext4 /dev/mapper/vg--secondary-lv--var rw","For new installations, during installation create a custom partition setup and specify a separate partition for /var

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.5.1 Ensure separate partition exists for /var/tmp"" : [FAILED]

The /var/tmp directory is a world-writable directory used for temporary storage by all users and some applications. Temporary files residing in /var/tmp are to be preserved between reboots.

The default installation only creates a single / partition. Since the /var/tmp directory is world-writable, there is a risk of resource exhaustion. In addition, other operations on the system could fill up the disk unrelated to /var/tmp and cause potential disruption to daemons as the disk is full.

Configuring /var/tmp as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev These options limits an attackers ability to create exploits on the system.

Solution:
For new installations, during installation create a custom partition setup and specify a separate partition for /var/tmp

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: [\s]+/var/tmp[\s]+
file: /proc/self/mountinfo
regex: [\s]+/var/tmp[\s]+

Actual Value:
The file ""/proc/self/mountinfo"" does not contain ""[\s]+/var/tmp[\s]+""","For new installations, during installation create a custom partition setup and specify a separate partition for /var/tmp

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.6.1 Ensure separate partition exists for /var/log"" : [FAILED]

The /var/log directory is used by system services to store log data.

The default installation only creates a single / partition. Since the /var/log directory contains log files which can grow quite large, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole.

Configuring /var/log as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev These options limit an attackers ability to create exploits on the system. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options.

As /var/log contains log files, care should be taken to ensure the security and integrity of the data and mount point.

Solution:
For new installations, during installation create a custom partition setup and specify a separate partition for /var/log

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2

Policy Value:
expect: [\s]+/var/log[\s]+
file: /proc/self/mountinfo
regex: [\s]+/var/log[\s]+

Actual Value:
The file ""/proc/self/mountinfo"" does not contain ""[\s]+/var/log[\s]+""","For new installations, during installation create a custom partition setup and specify a separate partition for /var/log

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.7.1 Ensure separate partition exists for /var/log/audit"" : [FAILED]

The auditing daemon, auditd stores log data in the /var/log/audit directory.

The default installation only creates a single / partition. Since the /var/log/audit directory contains the audit.log file which can grow quite large, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /var/log/audit and cause auditd to trigger it's space_left_action as the disk is full. See man auditd.conf for details.

Configuring /var/log/audit as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev These options limit an attacker's ability to create exploits on the system. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options.

As /var/log/audit contains audit logs, care should be taken to ensure the security and integrity of the data and mount point.

Solution:
For new installations, during installation create a custom partition setup and specify a separate partition for /var/log/audit

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2

Policy Value:
expect: [\s]+/var/log/audit[\s]+
file: /proc/self/mountinfo
regex: [\s]+/var/log/audit[\s]+

Actual Value:
The file ""/proc/self/mountinfo"" does not contain ""[\s]+/var/log/audit[\s]+""","For new installations, during installation create a custom partition setup and specify a separate partition for /var/log/audit

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.3.1.4 Ensure all AppArmor Profiles are enforcing"" : [PASSED]

AppArmor profiles define what resources applications are able to access.

Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that any policies that exist on the system are activated.

Solution:
Run the following command to set all profiles to enforce mode:

# aa-enforce /etc/apparmor.d/*

Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - apparmor_status - processes are confined
The command '/sbin/apparmor_status' returned : 

apparmor module is loaded.
42 profiles are loaded.
42 profiles are in enforce mode.
   /snap/snapd/19457/usr/lib/snapd/snap-confine
   /snap/snapd/19457/usr/lib/snapd/snap-confine//mount-namespace-capture-helper
   /snap/snapd/20290/usr/lib/snapd/snap-confine
   /snap/snapd/20290/usr/lib/snapd/snap-confine//mount-namespace-capture-helper
   /usr/bin/man
   /usr/lib/NetworkManager/nm-dhcp-client.action
   /usr/lib/NetworkManager/nm-dhcp-helper
   /usr/lib/connman/scripts/dhclient-script
   /usr/lib/snapd/snap-confine
   /usr/lib/snapd/snap-confine//mount-namespace-capture-helper
   /{,usr/}sbin/dhclient
   docker-default
   lsb_release
   man_filter
   man_groff
   nvidia_modprobe
   nvidia_modprobe//kmod
   snap-update-ns.lxd
   snap.lxd.activate
   snap.lxd.benchmark
   snap.lxd.buginfo
   snap.lxd.check-kernel
   snap.lxd.daemon
   snap.lxd.hook.configure
   snap.lxd.hook.install
   snap.lxd.hook.remove
   snap.lxd.lxc
   snap.lxd.lxc-to-lxd
   snap.lxd.lxd
   snap.lxd.migrate
   snap.lxd.user-daemon
   tcpdump
   ubuntu_pro_apt_news
   ubuntu_pro_esm_cache
   ubuntu_pro_esm_cache//apt_methods
   ubuntu_pro_esm_cache//apt_methods_gpgv
   ubuntu_pro_esm_cache//cloud_id
   ubuntu_pro_esm_cache//dpkg
   ubuntu_pro_esm_cache//ps
   ubuntu_pro_esm_cache//ubuntu_distro_info
   ubuntu_pro_esm_cache_systemctl
   ubuntu_pro_esm_cache_systemd_detect_virt
0 profiles are in complain mode.
0 profiles are in kill mode.
0 profiles are in unconfined mode.
5 processes have profiles defined.
5 processes are in enforce mode.
   /app/scion-all (2075830) docker-default
   /app/scion-all (2075838) docker-default
   /otelcol-contrib (2075840) docker-default
   /app/scion-all (2075867) docker-default
   /app/appliance (2075882) docker-default
0 processes are in complain mode.
0 processes are unconfined but have a profile defined.
0 processes are in mixed mode.
0 processes are in kill mode.

-------------------------
PASSED - apparmor_status - profiles are loaded
The command '/sbin/apparmor_status' returned : 

apparmor module is loaded.
42 profiles are loaded.
42 profiles are in enforce mode.
   /snap/snapd/19457/usr/lib/snapd/snap-confine
   /snap/snapd/19457/usr/lib/snapd/snap-confine//mount-namespace-capture-helper
   /snap/snapd/20290/usr/lib/snapd/snap-confine
   /snap/snapd/20290/usr/lib/snapd/snap-confine//mount-namespace-capture-helper
   /usr/bin/man
   /usr/lib/NetworkManager/nm-dhcp-client.action
   /usr/lib/NetworkManager/nm-dhcp-helper
   /usr/lib/connman/scripts/dhclient-script
   /usr/lib/snapd/snap-confine
   /usr/lib/snapd/snap-confine//mount-namespace-capture-helper
   /{,usr/}sbin/dhclient
   docker-default
   lsb_release
   man_filter
   man_groff
   nvidia_modprobe
   nvidia_modprobe//kmod
   snap-update-ns.lxd
   snap.lxd.activate
   snap.lxd.benchmark
   snap.lxd.buginfo
   snap.lxd.check-kernel
   snap.lxd.daemon
   snap.lxd.hook.configure
   snap.lxd.hook.install
   snap.lxd.hook.remove
   snap.lxd.lxc
   snap.lxd.lxc-to-lxd
   snap.lxd.lxd
   snap.lxd.migrate
   snap.lxd.user-daemon
   tcpdump
   ubuntu_pro_apt_news
   ubuntu_pro_esm_cache
   ubuntu_pro_esm_cache//apt_methods
   ubuntu_pro_esm_cache//apt_methods_gpgv
   ubuntu_pro_esm_cache//cloud_id
   ubuntu_pro_esm_cache//dpkg
   ubuntu_pro_esm_cache//ps
   ubuntu_pro_esm_cache//ubuntu_distro_info
   ubuntu_pro_esm_cache_systemctl
   ubuntu_pro_esm_cache_systemd_detect_virt
0 profiles are in complain mode.
0 profiles are in kill mode.
0 profiles are in unconfined mode.
5 processes have profiles defined.
5 processes are in enforce mode.
   /app/scion-all (2075830) docker-default
   /app/scion-all (2075838) docker-default
   /otelcol-contrib (2075840) docker-default
   /app/scion-all (2075867) docker-default
   /app/appliance (2075882) docker-default
0 processes are in complain mode.
0 processes are unconfined but have a profile defined.
0 processes are in mixed mode.
0 processes are in kill mode.

-------------------------
PASSED - apparmor_status - profiles in complain mode
The command '/sbin/apparmor_status' returned : 

apparmor module is loaded.
42 profiles are loaded.
42 profiles are in enforce mode.
   /snap/snapd/19457/usr/lib/snapd/snap-confine
   /snap/snapd/19457/usr/lib/snapd/snap-confine//mount-namespace-capture-helper
   /snap/snapd/20290/usr/lib/snapd/snap-confine
   /snap/snapd/20290/usr/lib/snapd/snap-confine//mount-namespace-capture-helper
   /usr/bin/man
   /usr/lib/NetworkManager/nm-dhcp-client.action
   /usr/lib/NetworkManager/nm-dhcp-helper
   /usr/lib/connman/scripts/dhclient-script
   /usr/lib/snapd/snap-confine
   /usr/lib/snapd/snap-confine//mount-namespace-capture-helper
   /{,usr/}sbin/dhclient
   docker-default
   lsb_release
   man_filter
   man_groff
   nvidia_modprobe
   nvidia_modprobe//kmod
   snap-update-ns.lxd
   snap.lxd.activate
   snap.lxd.benchmark
   snap.lxd.buginfo
   snap.lxd.check-kernel
   snap.lxd.daemon
   snap.lxd.hook.configure
   snap.lxd.hook.install
   snap.lxd.hook.remove
   snap.lxd.lxc
   snap.lxd.lxc-to-lxd
   snap.lxd.lxd
   snap.lxd.migrate
   snap.lxd.user-daemon
   tcpdump
   ubuntu_pro_apt_news
   ubuntu_pro_esm_cache
   ubuntu_pro_esm_cache//apt_methods
   ubuntu_pro_esm_cache//apt_methods_gpgv
   ubuntu_pro_esm_cache//cloud_id
   ubuntu_pro_esm_cache//dpkg
   ubuntu_pro_esm_cache//ps
   ubuntu_pro_esm_cache//ubuntu_distro_info
   ubuntu_pro_esm_cache_systemctl
   ubuntu_pro_esm_cache_systemd_detect_virt
0 profiles are in complain mode.
0 profiles are in kill mode.
0 profiles are in unconfined mode.
5 processes have profiles defined.
5 processes are in enforce mode.
   /app/scion-all (2075830) docker-default
   /app/scion-all (2075838) docker-default
   /otelcol-contrib (2075840) docker-default
   /app/scion-all (2075867) docker-default
   /app/appliance (2075882) docker-default
0 processes are in complain mode.
0 processes are unconfined but have a profile defined.
0 processes are in mixed mode.
0 processes are in kill mode.","Run the following command to set all profiles to enforce mode:

# aa-enforce /etc/apparmor.d/*

Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.1 Ensure GDM is removed"" : [PASSED]

The GNOME Display Manager (GDM) is a program that manages graphical display servers and handles graphical user logins.

If a Graphical User Interface (GUI) is not required, it should be removed to reduce the attack surface of the system.

Solution:
Run the following commands to uninstall gdm3 and remove unused dependencies:

# apt purge gdm3
# apt autoremove gdm3

Impact:

Removing the GNOME Display manager will remove the Graphical User Interface (GUI) from the system.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s gdm3 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s gdm3 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'gdm3' is not installed and no information is available","Run the following commands to uninstall gdm3 and remove unused dependencies:

# apt purge gdm3
# apt autoremove gdm3

Impact:

Removing the GNOME Display manager will remove the Graphical User Interface (GUI) from the system.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.20 Ensure X window server services are not in use"" : [PASSED]

The X Window System provides a Graphical User Interface (GUI) where users can have multiple windows in which to run programs and various add on. The X Windows system is typically used on workstations where users login, but not on servers where users typically do not login.

Unless your organization specifically requires graphical login access via X Windows, remove it to reduce the potential attack surface.

Solution:
- IF - a Graphical Desktop Manager or X-Windows server is not required and approved by local site policy:

Run the following command to remove the X Windows Server package:

# apt purge xserver-common

Impact:

If a Graphical Desktop Manager (GDM) is in use on the system, there may be a dependency on the xorg-x11-server-common package. If the GDM is required and approved by local site policy, the package should not be removed.

Many Linux systems run applications which require a Java runtime. Some Linux Java packages have a dependency on specific X Windows xorg-x11-fonts. One workaround to avoid this dependency is to use the ""headless"" Java packages for your specific Java runtime.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|2.6,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s xserver-common 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s xserver-common 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'xserver-common' is not installed and no information is available","- IF - a Graphical Desktop Manager or X-Windows server is not required and approved by local site policy:

Run the following command to remove the X Windows Server package:

# apt purge xserver-common

Impact:

If a Graphical Desktop Manager (GDM) is in use on the system, there may be a dependency on the xorg-x11-server-common package. If the GDM is required and approved by local site policy, the package should not be removed.

Many Linux systems run applications which require a Java runtime. Some Linux Java packages have a dependency on specific X Windows xorg-x11-fonts. One workaround to avoid this dependency is to use the ""headless"" Java packages for your specific Java runtime.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.2.1 Ensure dccp kernel module is not available"" : [FAILED]

The Datagram Congestion Control Protocol (DCCP) is a transport layer protocol that supports streaming media and telephony. DCCP provides a way to gain access to congestion control, without having to do it at the application layer, but does not provide in-sequence delivery.

-IF- the protocol is not required, it is recommended that the drivers not be installed to reduce the potential attack surface.

Solution:
Run the following script to disable the dccp module:

-IF- the module is available in the running kernel:

 - Create a file with install dccp /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist dccp in the /etc/modprobe.d/ directory
 - Unload dccp from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist dccp in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""dccp"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""dccp"" exists in:
  - ""/lib/modules/5.15.0-113-generic/kernel/net""
  - ""/lib/modules/5.15.0-87-generic/kernel/net""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""dccp"" is not deny listed
 - module: ""dccp"" is loadable: ""insmod /lib/modules/5.15.0-87-generic/kernel/net/dccp/dccp.ko ""


- Correctly set:

 - module: ""dccp"" is not loaded","Run the following script to disable the dccp module:

-IF- the module is available in the running kernel:

 - Create a file with install dccp /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist dccp in the /etc/modprobe.d/ directory
 - Unload dccp from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist dccp in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""dccp"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.2.2 Ensure tipc kernel module is not available"" : [FAILED]

The Transparent Inter-Process Communication (TIPC) protocol is designed to provide communication between cluster nodes.

-IF- the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.

Solution:
Run the following script to disable the tipc module:

-IF- the module is available in the running kernel:

 - Create a file with install tipc /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist tipc in the /etc/modprobe.d/ directory
 - Unload tipc from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist tipc in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""tipc"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""tipc"" exists in:
  - ""/lib/modules/5.15.0-113-generic/kernel/net""
  - ""/lib/modules/5.15.0-87-generic/kernel/net""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""tipc"" is not deny listed
 - module: ""tipc"" is loadable: ""insmod /lib/modules/5.15.0-87-generic/kernel/net/tipc/tipc.ko ""


- Correctly set:

 - module: ""tipc"" is not loaded","Run the following script to disable the tipc module:

-IF- the module is available in the running kernel:

 - Create a file with install tipc /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist tipc in the /etc/modprobe.d/ directory
 - Unload tipc from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist tipc in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""tipc"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.2.3 Ensure rds kernel module is not available"" : [FAILED]

The Reliable Datagram Sockets (RDS) protocol is a transport layer protocol designed to provide low-latency, high-bandwidth communications between cluster nodes. It was developed by the Oracle Corporation.

-IF- the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.

Solution:
Run the following script to disable the rds module:

-IF- the module is available in the running kernel:

 - Create a file with install rds /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist rds in the /etc/modprobe.d/ directory
 - Unload rds from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist rds in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""rds"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""rds"" exists in:
  - ""/lib/modules/5.15.0-113-generic/kernel/net""
  - ""/lib/modules/5.15.0-87-generic/kernel/net""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""rds"" is not deny listed
 - module: ""rds"" is loadable: ""insmod /lib/modules/5.15.0-87-generic/kernel/net/rds/rds.ko ""


- Correctly set:

 - module: ""rds"" is not loaded","Run the following script to disable the rds module:

-IF- the module is available in the running kernel:

 - Create a file with install rds /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist rds in the /etc/modprobe.d/ directory
 - Unload rds from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist rds in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""rds"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.2.4 Ensure sctp kernel module is not available"" : [FAILED]

The Stream Control Transmission Protocol (SCTP) is a transport layer protocol used to support message oriented communication, with several streams of messages in one connection. It serves a similar function as TCP and UDP, incorporating features of both. It is message-oriented like UDP, and ensures reliable in-sequence transport of messages with congestion control like TCP.

-IF- the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.

Solution:
Run the following script to disable the sctp module:

-IF- the module is available in the running kernel:

 - Create a file with install sctp /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist sctp in the /etc/modprobe.d/ directory
 - Unload sctp from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist sctp in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""sctp"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""sctp"" exists in:
  - ""/lib/modules/5.15.0-113-generic/kernel/net""
  - ""/lib/modules/5.15.0-87-generic/kernel/net""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""sctp"" is not deny listed
 - module: ""sctp"" is loadable: ""insmod /lib/modules/5.15.0-87-generic/kernel/net/sctp/sctp.ko ""


- Correctly set:

 - module: ""sctp"" is not loaded","Run the following script to disable the sctp module:

-IF- the module is available in the running kernel:

 - Create a file with install sctp /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist sctp in the /etc/modprobe.d/ directory
 - Unload sctp from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist sctp in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""sctp"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.8 Ensure sshd DisableForwarding is enabled"" : [FAILED]

The DisableForwarding parameter disables all forwarding features, including X11, ssh-agent(1), TCP and StreamLocal. This option overrides all other forwarding-related options and may simplify restricted configurations.

 - X11Forwarding provides the ability to tunnel X11 traffic through the connection to enable remote graphic connections.
 - ssh-agent is a program to hold private keys used for public key authentication. Through use of environment variables the agent can be located and automatically used for authentication when logging in to other machines using ssh.
 - SSH port forwarding is a mechanism in SSH for tunneling application ports from the client to the server, or servers to clients. It can be used for adding encryption to legacy applications, going through firewalls, and some system administrators and IT professionals use it for opening backdoors into the internal network from their home machines.

Disable X11 forwarding unless there is an operational requirement to use X11 applications directly. There is a small risk that the remote X11 servers of users who are logged in via SSH with X11 forwarding could be compromised by other users on the X11 server. Note that even if X11 forwarding is disabled, users can always install their own forwarders.

anyone with root privilege on the the intermediate server can make free use of ssh-agent to authenticate them to other servers

Leaving port forwarding enabled can expose the organization to security risks and backdoors. SSH connections are protected with strong encryption. This makes their contents invisible to most deployed network monitoring and traffic filtering solutions. This invisibility carries considerable risk potential if it is used for malicious purposes such as data exfiltration. Cybercriminals or malware could exploit SSH to hide their unauthorized communications, or to exfiltrate stolen data from the target network.

Solution:
Edit the /etc/ssh/sshd_config file to set the DisableForwarding parameter to yes above any Include entry as follows:

DisableForwarding yes

Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

Impact:

SSH tunnels are widely used in many corporate environments. In some environments the applications themselves may have very limited native support for security. By utilizing tunneling, compliance with SOX, HIPAA, PCI-DSS, and other standards can be achieved without having to modify the applications.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

port 22: disableforwarding no
Fail","Edit the /etc/ssh/sshd_config file to set the DisableForwarding parameter to yes above any Include entry as follows:

DisableForwarding yes

Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

Impact:

SSH tunnels are widely used in many corporate environments. In some environments the applications themselves may have very limited native support for security. By utilizing tunneling, compliance with SOX, HIPAA, PCI-DSS, and other standards can be achieved without having to modify the applications.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.9 Ensure sshd GSSAPIAuthentication is disabled"" : [PASSED]

The GSSAPIAuthentication parameter specifies whether user authentication based on GSSAPI is allowed

Allowing GSSAPI authentication through SSH exposes the system's GSSAPI to remote hosts, and should be disabled to reduce the attack surface of the system

Solution:
Edit the /etc/ssh/sshd_config file to set the GSSAPIAuthentication parameter to no above any Include and Match entries as follows:

GSSAPIAuthentication no

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|2A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - sshd_config GSSAPIAuthentication
The file ""/etc/ssh/sshd_config"" does not contain ""(?i)^\h*GSSAPIAuthentication\h+""?yes\b""

-------------------------
PASSED - sshd -T GSSAPIAuthentication
The command script with multiple lines returned : 

port 22: gssapiauthentication no
Pass","Edit the /etc/ssh/sshd_config file to set the GSSAPIAuthentication parameter to no above any Include and Match entries as follows:

GSSAPIAuthentication no

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.2.4 Ensure users must provide password for privilege escalation"" : [PASSED]

The operating system must be configured so that users must provide a password for privilege escalation.

Without (re-)authentication, users may access resources or perform tasks for which they do not have authorization.

When operating systems provide the capability to escalate a functional capability, it is critical the user (re-)authenticate.

Solution:
Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit the relevant sudoers file.

Remove any line with occurrences of NOPASSWD tags in the file.

Impact:

This will prevent automated processes from being able to elevate privileges.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|2A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: ^[^#]*NOPASSWD
file: /etc/sudoers /etc/sudoers.d/*
regex: ^[^#]*NOPASSWD

Actual Value:
The file ""/etc/sudoers"" does not contain ""^[^#]*NOPASSWD""","Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit the relevant sudoers file.

Remove any line with occurrences of NOPASSWD tags in the file.

Impact:

This will prevent automated processes from being able to elevate privileges.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.1.3 Ensure password failed attempts lockout includes root account"" : [FAILED]

even_deny_root - Root account can become locked as well as regular accounts

root_unlock_time=n - This option implies even_deny_root option. Allow access after n seconds to root account after the account is locked. In case the option is not specified the value is the same as of the unlock_time option.

Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.

Solution:
Edit /etc/security/faillock.conf :

 - Remove or update any line containing root_unlock_time - OR - set it to a value of 60 or more
 - Update or add the following line:

even_deny_root

Run the following command:

# grep -Pl -- 'bpam_faillock.soh+([^#
r]+h+)?(even_deny_root|root_unlock_time)' /usr/share/pam-configs/*

Edit any returned files and remove the even_deny_root and root_unlock_time arguments from the pam_faillock.so line(s):

Impact:

Use of unlock_time=0 or root_unlock_time=0 may allow an attacker to cause denial of service to legitimate users.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.7,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),LEVEL|2A,NESA|M1.2.2,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - even_deny_root
The file ""/etc/security/faillock.conf"" does not contain ""(?i)^\h*(even_deny_root|root_unlock_time\h*=\h*\d+)\b""

-------------------------
PASSED - faillock - root_unlock_time
No matching files were found

-------------------------
PASSED - common-auth root_unlock_time
No matching files were found","Edit /etc/security/faillock.conf :

 - Remove or update any line containing root_unlock_time - OR - set it to a value of 60 or more
 - Update or add the following line:

even_deny_root

Run the following command:

# grep -Pl -- 'bpam_faillock.soh+([^#
r]+h+)?(even_deny_root|root_unlock_time)' /usr/share/pam-configs/*

Edit any returned files and remove the even_deny_root and root_unlock_time arguments from the pam_faillock.so line(s):

Impact:

Use of unlock_time=0 or root_unlock_time=0 may allow an attacker to cause denial of service to legitimate users.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.1.2 Ensure minimum password age is configured"" : [FAILED]

The minimum password age determines the number of days that you must use a password before you can change it.

PASS_MIN_DAYS <

N

> - The minimum number of days allowed between password changes. Any password changes attempted sooner than this will be rejected. If not specified, 0 will be assumed (which disables the restriction).

Users may have favorite passwords that they like to use because they are easy to remember and they believe that their password choice is secure from compromise. Unfortunately, passwords are compromised and if an attacker is targeting a specific individual user account, with foreknowledge of data about that user, reuse of old, potentially compromised passwords, may cause a security breach.

By restricting the frequency of password changes, an administrator can prevent users from repeatedly changing their password in an attempt to circumvent password reuse controls

Solution:
Edit /etc/login.defs and set PASS_MIN_DAYS to a value greater than 0 that follows local site policy:

Example:

PASS_MIN_DAYS 1

Run the following command to modify user parameters for all users with a password set to a minimum age greater than zero that follows local site policy:

# chage --mindays <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($4 < 1)system (""chage --mindays 1 "" $1)}' /etc/shadow

Impact:

By enforcing a minimum password age, a user will be unable to change their password if they observe a potential compromise of their password, e.g. ""shoulder surfing"", during the time defined by minimum password age. In this event the user should follow local site policy to report a compromised password.

If a users password is set by other personnel as a procedure in dealing with a lost or expired password, the user should be forced to update this ""set"" password with their own password. e.g. force ""change at next logon"".

If it is not possible to have a user set their own password immediately, and this recommendation or local site procedure may cause a user to continue using a third party generated password, PASS_MIN_DAYS for the effected user should be temporally changed to 0 to allow a user to change their password immediately.

For applications where the user is not using the password at console, the ability to ""change at next logon"" may be limited. This may cause a user to continue to use a password created by other personnel.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|2M,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - shadow - password min days
Non-compliant file(s):
      /etc/shadow - regex '^[^:]+:[^!*]' found - expect '^([^:]*:){3}([1-9]|[1-9][0-9]+):' not found in the following lines:
          31: anapaya:$y$j9T$ld4wFdA6EdhIUxC5QRGFR.$mRDFnnG03qpGMXd785DXjqcUx09.41n97bj3Kthsvv2:19858:0:99999:7:::

-------------------------
FAILED - login.defs PASS_MIN_DAYS
Non-compliant file(s):
      /etc/login.defs - regex '(?i)^[\s]*PASS_MIN_DAYS[\s]+' found - expect '(?i)PASS_MIN_DAYS[\s]+([1-9]|[1-9][0-9]+)[\s]*$' not found in the following lines:
          166: PASS_MIN_DAYS	0","Edit /etc/login.defs and set PASS_MIN_DAYS to a value greater than 0 that follows local site policy:

Example:

PASS_MIN_DAYS 1

Run the following command to modify user parameters for all users with a password set to a minimum age greater than zero that follows local site policy:

# chage --mindays <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($4 < 1)system (""chage --mindays 1 "" $1)}' /etc/shadow

Impact:

By enforcing a minimum password age, a user will be unable to change their password if they observe a potential compromise of their password, e.g. ""shoulder surfing"", during the time defined by minimum password age. In this event the user should follow local site policy to report a compromised password.

If a users password is set by other personnel as a procedure in dealing with a lost or expired password, the user should be forced to update this ""set"" password with their own password. e.g. force ""change at next logon"".

If it is not possible to have a user set their own password immediately, and this recommendation or local site procedure may cause a user to continue using a third party generated password, PASS_MIN_DAYS for the effected user should be temporally changed to 0 to allow a user to change their password immediately.

For applications where the user is not using the password at console, the ability to ""change at next logon"" may be limited. This may cause a user to continue to use a password created by other personnel.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.3.1 Ensure nologin is not listed in /etc/shells"" : [PASSED]

/etc/shells is a text file which contains the full pathnames of valid login shells. This file is consulted by chsh and available to be queried by other programs.

Be aware that there are programs which consult this file to find out if a user is a normal user; for example, FTP daemons traditionally disallow access to users with shells not included in this file.

A user can use chsh to change their configured shell.

If a user has a shell configured that isn't in in /etc/shells then the system assumes that they're somehow restricted. In the case of chsh it means that the user cannot change that value.

Other programs might query that list and apply similar restrictions.

By putting nologin in /etc/shells any user that has nologin as its shell is considered a full, unrestricted user. This is not the expected behavior for nologin

Solution:
Edit /etc/shells and remove any lines that include nologin

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5,800-53r5|IA-5,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5,LEVEL|2A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2

Policy Value:
expect: ^.*\/nologin\b
file: /etc/shells
regex: ^.*\/nologin\b

Actual Value:
The file ""/etc/shells"" does not contain ""^.*\/nologin\b""","Edit /etc/shells and remove any lines that include nologin","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.1.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tools"" : [FAILED]

Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.

Protecting the integrity of the tools used for auditing purposes is a critical step toward ensuring the integrity of audit information. Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

Attackers may replace the audit tools or inject code into the existing tools with the purpose of providing the capability to hide or erase system activity from the audit logs.

Audit tools should be cryptographically signed in order to provide the capability to identify when the audit tools have been modified, manipulated, or replaced. An example is a checksum hash of the file or files.

Solution:
Edit /etc/aide/aide.conf and add or update the following selection lines:

# Audit Tools
/sbin/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/auditd p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/aureport p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/autrace p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512

Note: - IF - /etc/aide/aide.conf includes a @@x_include statement:

Example:

@@x_include /etc/aide/aide.conf.d ^[a-zA-Z0-9_-]+$
 - @@x_include FILE
 - @@x_include DIRECTORY REGEX
 - @x_include is identical to @@include except that if a config file is executable it is run and the output is used as config.
 - If the executable file exits with status greater than zero or writes to stderr aide stops with an error.
 - For security reasons DIRECTORY and each executable config file must be owned by the current user and must not be group or world-writable.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|SI-7,800-53r5|SI-7,CSF|PR.DS-6,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(c)(1),HIPAA|164.312(c)(2),HIPAA|164.312(e)(2)(i),ITSG-33|SI-7,ITSG-33|SI-7a.,LEVEL|2A,NESA|T3.4.1,NESA|T7.3.2,NESA|T7.3.3,PCI-DSSv3.2.1|10.5.5,QCSC-v1|3.2

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - * Reasons for audit failure * :
 - AIDE configuration file not found.
  Please verify AIDE is installed on the system","Edit /etc/aide/aide.conf and add or update the following selection lines:

# Audit Tools
/sbin/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/auditd p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/aureport p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/autrace p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512

Note: - IF - /etc/aide/aide.conf includes a @@x_include statement:

Example:

@@x_include /etc/aide/aide.conf.d ^[a-zA-Z0-9_-]+$
 - @@x_include FILE
 - @@x_include DIRECTORY REGEX
 - @x_include is identical to @@include except that if a config file is executable it is run and the output is used as config.
 - If the executable file exits with status greater than zero or writes to stderr aide stops with an error.
 - For security reasons DIRECTORY and each executable config file must be owned by the current user and must not be group or world-writable.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.1.1 Ensure auditd packages are installed"" : [FAILED]

auditd is the userspace component to the Linux Auditing System. It's responsible for writing audit records to the disk

The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.

Solution:
Run the following command to Install auditd and audispd-plugins

# apt install auditd audispd-plugins

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - dpkg check auditd
The command '/bin/dpkg -s auditd 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'auditd' is not installed and no information is available

-------------------------
FAILED - dpkg check audispd-plugins
The command '/bin/dpkg -s audispd-plugins 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'audispd-plugins' is not installed and no information is available","Run the following command to Install auditd and audispd-plugins

# apt install auditd audispd-plugins","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.1.2 Ensure auditd service is enabled and active"" : [FAILED]

Turn on the auditd daemon to record system events.

The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.

Solution:
Run the following commands to unmask, enable and start auditd :

# systemctl unmask auditd
# systemctl enable auditd
# systemctl start auditd

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - check if auditd is active
The command '/bin/systemctl is-active auditd' returned : 

inactive

-------------------------
FAILED - check if auditd is enabled
The command '/bin/systemctl is-enabled auditd' returned : 

Failed to get unit file state for auditd.service: No such file or directory","Run the following commands to unmask, enable and start auditd :

# systemctl unmask auditd
# systemctl enable auditd
# systemctl start auditd","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.1.3 Ensure auditing for processes that start prior to auditd is enabled"" : [FAILED]

Configure grub2 so that processes that are capable of being audited can be audited even if they start up prior to auditd startup.

Audit events need to be captured on processes that start up prior to auditd so that potential malicious activity cannot go undetected.

Solution:
Edit /etc/default/grub and add audit=1 to GRUB_CMDLINE_LINUX :

Example:

GRUB_CMDLINE_LINUX=""audit=1""

Run the following command to update the grub2 configuration:

# update-grub

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$
timeout: 7200

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - Grub parameter: ""audit=1"" is not set","Edit /etc/default/grub and add audit=1 to GRUB_CMDLINE_LINUX :

Example:

GRUB_CMDLINE_LINUX=""audit=1""

Run the following command to update the grub2 configuration:

# update-grub","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.1.4 Ensure audit_backlog_limit is sufficient"" : [FAILED]

In the kernel-level audit subsystem, a socket buffer queue is used to hold audit events. Whenever a new audit event is received, it is logged and prepared to be added to this queue.

The kernel boot parameter audit_backlog_limit=N with N representing the amount of messages, will ensure that a queue cannot grow beyond a certain size. If an audit event is logged which would grow the queue beyond this limit, then a failure occurs and is handled according to the system configuration

If an audit event is logged which would grow the queue beyond the audit_backlog_limit then a failure occurs, auditd records will be lost, and potential malicious activity could go undetected.

Solution:
Edit /etc/default/grub and add audit_backlog_limit=N to GRUB_CMDLINE_LINUX. The recommended size for N is 8192 or larger.

Example:

GRUB_CMDLINE_LINUX=""audit_backlog_limit=8192""

Run the following command to update the grub2 configuration:

# update-grub

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: /bin/find /boot -type f -name 'grub.cfg' -exec /bin/grep -Ph -- '^\h*linux' {} + | /bin/grep -Pv 'audit_backlog_limit=\d+\b' | /bin/awk '{print} END { if (NR==0) print ""pass"" }'
expect: ^pass$
timeout: 7200

Actual Value:
The command '/bin/find /boot -type f -name 'grub.cfg' -exec /bin/grep -Ph -- '^\h*linux' {} + | /bin/grep -Pv 'audit_backlog_limit=\d+\b' | /bin/awk '{print} END { if (NR==0) print ""pass"" }'' returned : 

linux	/vmlinuz-5.15.0-113-generic root=/dev/mapper/vg--main-lv--root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  intel_iommu=on iommu=pt
		linux	/vmlinuz-5.15.0-113-generic root=/dev/mapper/vg--main-lv--root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  intel_iommu=on iommu=pt
		linux	/vmlinuz-5.15.0-113-generic root=/dev/mapper/vg--main-lv--root ro recovery nomodeset dis_ucode_ldr noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0 
		linux	/vmlinuz-5.15.0-87-generic root=/dev/mapper/vg--main-lv--root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  intel_iommu=on iommu=pt
		linux	/vmlinuz-5.15.0-87-generic root=/dev/mapper/vg--main-lv--root ro recovery nomodeset dis_ucode_ldr noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0","Edit /etc/default/grub and add audit_backlog_limit=N to GRUB_CMDLINE_LINUX. The recommended size for N is 8192 or larger.

Example:

GRUB_CMDLINE_LINUX=""audit_backlog_limit=8192""

Run the following command to update the grub2 configuration:

# update-grub","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.2.1 Ensure audit log storage size is configured"" : [FAILED]

Configure the maximum size of the audit log file. Once the log reaches the maximum size, it will be rotated and a new log file will be started.

It is important that an appropriate size is determined for log files so that they do not impact the system and audit data is not lost.

Solution:
Set the following parameter in /etc/audit/auditd.conf in accordance with site policy:

max_log_file = <MB>

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2

Policy Value:
expect: ^[\s]*max_log_file[\s]*=[\s]*32[\s]*$
file: /etc/audit/auditd.conf
regex: ^[\s]*max_log_file[\s]*=

Actual Value:
No files found: /etc/audit/auditd.conf","Set the following parameter in /etc/audit/auditd.conf in accordance with site policy:

max_log_file = <MB>","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.2.2 Ensure audit logs are not automatically deleted"" : [FAILED]

The max_log_file_action setting determines how to handle the audit log file reaching the max file size. A value of keep_logs will rotate the logs but never delete old logs.

In high security contexts, the benefits of maintaining a long audit history exceed the cost of storing the audit history.

Solution:
Set the following parameter in /etc/audit/auditd.conf:

max_log_file_action = keep_logs

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2

Policy Value:
expect: ^[\s]*max_log_file_action[\s]*=[\s]*(?i)keep_logs(?-i)[\s]*$
file: /etc/audit/auditd.conf
regex: ^[\s]*max_log_file_action[\s]*=

Actual Value:
No files found: /etc/audit/auditd.conf","Set the following parameter in /etc/audit/auditd.conf:

max_log_file_action = keep_logs","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.2.3 Ensure system is disabled when audit logs are full"" : [FAILED]

The auditd daemon can be configured to halt the system or put the system in single user mode, if no free space is available or an error is detected on the partition that holds the audit log files.

The disk_full_action parameter tells the system what action to take when no free space is available on the partition that holds the audit log files. Valid values are ignore syslog rotate exec suspend single and halt

 - ignore the audit daemon will issue a syslog message but no other action is taken
 - syslog the audit daemon will issue a warning to syslog
 - rotate the audit daemon will rotate logs, losing the oldest to free up space
 - exec /path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging once its completed its action
 - suspend the audit daemon will stop writing records to the disk
 - single the audit daemon will put the computer system in single user mode
 - halt the audit daemon will shut down the system

The disk_error_action parameter tells the system what action to take when an error is detected on the partition that holds the audit log files. Valid values are ignore syslog exec suspend single and halt

 - ignore the audit daemon will not take any action
 - syslog the audit daemon will issue no more than 5 consecutive warnings to syslog
 - exec /path-to-script will execute the script. You cannot pass parameters to the script
 - suspend the audit daemon will stop writing records to the disk
 - single the audit daemon will put the computer system in single user mode
 - halt the audit daemon will shut down the system

In high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability.

Solution:
Set one of the following parameters in /etc/audit/auditd.conf depending on your local security policies.

disk_full_action = <halt|single>
disk_error_action = <syslog|single|halt>

Example:

disk_full_action = halt
disk_error_action = halt

Impact:

disk_full_action parameter:

 - Set to halt - the auditd daemon will shutdown the system when the disk partition containing the audit logs becomes full.
 - Set to single - the auditd daemon will put the computer system in single user mode when the disk partition containing the audit logs becomes full.

disk_error_action parameter:

 - Set to halt - the auditd daemon will shutdown the system when an error is detected on the partition that holds the audit log files.
 - Set to single - the auditd daemon will put the computer system in single user mode when an error is detected on the partition that holds the audit log files.
 - Set to syslog - the auditd daemon will issue no more than 5 consecutive warnings to syslog when an error is detected on the partition that holds the audit log files.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-4,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-4,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv8|8.2,CSCv8|8.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.DS-4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-4,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NESA|T3.3.1,NESA|T3.6.2,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - disk_full_action
No files found: /etc/audit/auditd.conf

-------------------------
FAILED - disk_error_action = root
No files found: /etc/audit/auditd.conf","Set one of the following parameters in /etc/audit/auditd.conf depending on your local security policies.

disk_full_action = <halt|single>
disk_error_action = <syslog|single|halt>

Example:

disk_full_action = halt
disk_error_action = halt

Impact:

disk_full_action parameter:

 - Set to halt - the auditd daemon will shutdown the system when the disk partition containing the audit logs becomes full.
 - Set to single - the auditd daemon will put the computer system in single user mode when the disk partition containing the audit logs becomes full.

disk_error_action parameter:

 - Set to halt - the auditd daemon will shutdown the system when an error is detected on the partition that holds the audit log files.
 - Set to single - the auditd daemon will put the computer system in single user mode when an error is detected on the partition that holds the audit log files.
 - Set to syslog - the auditd daemon will issue no more than 5 consecutive warnings to syslog when an error is detected on the partition that holds the audit log files.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.2.4 Ensure system warns when audit logs are low on space"" : [FAILED]

The auditd daemon can be configured to halt the system, put the system in single user mode or send a warning message, if the partition that holds the audit log files is low on space.

The space_left_action parameter tells the system what action to take when the system has detected that it is starting to get low on disk space. Valid values are ignore syslog rotate email exec suspend single and halt

 - ignore the audit daemon does nothing
 - syslog the audit daemon will issue a warning to syslog
 - rotate the audit daemon will rotate logs, losing the oldest to free up space
 - email the audit daemon will send a warning to the email account specified in action_mail_acct as well as sending the message to syslog
 - exec /path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging once its completed its action
 - suspend the audit daemon will stop writing records to the disk
 - single the audit daemon will put the computer system in single user mode
 - halt the audit daemon will shut down the system

The admin_space_left_action parameter tells the system what action to take when the system has detected that it is low on disk space. Valid values are ignore syslog rotate email exec suspend single and halt

 - ignore the audit daemon does nothing
 - syslog the audit daemon will issue a warning to syslog
 - rotate the audit daemon will rotate logs, losing the oldest to free up space
 - email the audit daemon will send a warning to the email account specified in action_mail_acct as well as sending the message to syslog
 - exec /path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging once its completed its action
 - suspend the audit daemon will stop writing records to the disk
 - single the audit daemon will put the computer system in single user mode
 - halt the audit daemon will shut down the system

In high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability.

Solution:
Set the space_left_action parameter in /etc/audit/auditd.conf to email exec single or halt :

Example:

space_left_action = email

Set the admin_space_left_action parameter in /etc/audit/auditd.conf to single or halt :

Example:

admin_space_left_action = single

Note: A Mail Transfer Agent (MTA) must be installed and configured properly to set space_left_action = email

Impact:

If the admin_space_left_action is set to single the audit daemon will put the computer system in single user mode.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-4,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-4,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSCv8|8.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.DS-4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-4,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NESA|T3.3.1,NESA|T3.6.2,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - admin_space_left_action
No files found: /etc/audit/auditd.conf

-------------------------
FAILED - space_left_action
No files found: /etc/audit/auditd.conf","Set the space_left_action parameter in /etc/audit/auditd.conf to email exec single or halt :

Example:

space_left_action = email

Set the admin_space_left_action parameter in /etc/audit/auditd.conf to single or halt :

Example:

admin_space_left_action = single

Note: A Mail Transfer Agent (MTA) must be installed and configured properly to set space_left_action = email

Impact:

If the admin_space_left_action is set to single the audit daemon will put the computer system in single user mode.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.1 Ensure changes to system administration scope (sudoers) is collected"" : [FAILED]

Monitor scope changes for system administrators. If the system has been properly configured to force system administrators to log in as themselves first and then use the sudo command to execute privileged commands, it is possible to monitor changes in scope. The file /etc/sudoers or files in /etc/sudoers.d will be written to when the file(s) or related attributes have changed. The audit records will be tagged with the identifier ""scope"".

Changes in the /etc/sudoers and /etc/sudoers.d files can indicate that an unauthorized change has been made to the scope of system administrator activity.

Solution:
Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor scope changes for system administrators.

Example:

# printf '%s
' ""-w /etc/sudoers -p wa -k scope"" ""-w /etc/sudoers.d -p wa -k scope"" >> /etc/audit/rules.d/50-scope.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|4.8,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - auditctl /etc/sudoers
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/sudoers/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - /etc/sudoers.d
The command '/bin/awk '/^ *-w/ &&/\/etc\/sudoers\.d/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - /etc/sudoers
The command '/bin/awk '/^ *-w/ &&/\/etc\/sudoers/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /etc/sudoers.d
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/sudoers\.d/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail","Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor scope changes for system administrators.

Example:

# printf '%s
' ""-w /etc/sudoers -p wa -k scope"" ""-w /etc/sudoers.d -p wa -k scope"" >> /etc/audit/rules.d/50-scope.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.10 Ensure successful file system mounts are collected"" : [FAILED]

Monitor the use of the mount system call. The mount (and umount ) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user

It is highly unusual for a non privileged user to mount file systems to the system. While tracking mount commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful open creat and truncate system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document.

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful file system mounts.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b32 -S mount -F auid>=$UID_MIN -F auid!=unset -k mounts
-a always,exit -F arch=b64 -S mount -F auid>=$UID_MIN -F auid!=unset -k mounts
"" >> /etc/audit/rules.d/50-mounts.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - auditctl b64
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -S/ &&/mount/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b32
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -S/ &&/mount/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b64
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -S/ &&/mount/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -S/ &&/mount/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful file system mounts.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b32 -S mount -F auid>=$UID_MIN -F auid!=unset -k mounts
-a always,exit -F arch=b64 -S mount -F auid>=$UID_MIN -F auid!=unset -k mounts
"" >> /etc/audit/rules.d/50-mounts.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.11 Ensure session initiation information is collected"" : [FAILED]

Monitor session initiation events. The parameters in this section track changes to the files associated with session events.

 - /var/run/utmp - tracks all currently logged in users.
 - /var/log/wtmp - file tracks logins, logouts, shutdown, and reboot events.
 - /var/log/btmp - keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp

All audit records will be tagged with the identifier ""session.""

Monitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in).

Solution:
Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor session initiation information.

Example:

# printf ""
-w /var/run/utmp -p wa -k session
-w /var/log/wtmp -p wa -k session
-w /var/log/btmp -p wa -k session
"" >> /etc/audit/rules.d/50-session.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|16.13,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - auditctl /var/run/utmp
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/  &&/\/var\/run\/utmp/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - utmp
The command '/bin/awk '/^ *-w/  &&/\/var\/run\/utmp/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - btmp
The command '/bin/awk '/^ *-w/  &&/\/var\/log\/btmp/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /var/log/wtmp
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/  &&/\/var\/log\/wtmp/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /var/log/btmp
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/  &&/\/var\/log\/btmp/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - wtmp
The command '/bin/awk '/^ *-w/  &&/\/var\/log\/wtmp/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail","Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor session initiation information.

Example:

# printf ""
-w /var/run/utmp -p wa -k session
-w /var/log/wtmp -p wa -k session
-w /var/log/btmp -p wa -k session
"" >> /etc/audit/rules.d/50-session.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.12 Ensure login and logout events are collected"" : [FAILED]

Monitor login and logout events. The parameters below track changes to files associated with login/logout events.

 - /var/log/lastlog - maintain records of the last time a user successfully logged in.
 - /var/run/faillock - directory maintains records of login failures via the pam_faillock module.

Monitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins.

Solution:
Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor login and logout events.

Example:

# printf ""
-w /var/log/lastlog -p wa -k logins
-w /var/run/faillock -p wa -k logins
"" >> /etc/audit/rules.d/50-login.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - faillock
The command '/bin/awk '/^ *-w/ && /\/var\/run\/faillock/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /var/log/lastlog
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ && /\/var\/log\/lastlog/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /var/run/faillock
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ && /\/var\/run\/faillock/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - lastlog
The command '/bin/awk '/^ *-w/ && /\/var\/log\/lastlog/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail","Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor login and logout events.

Example:

# printf ""
-w /var/log/lastlog -p wa -k logins
-w /var/run/faillock -p wa -k logins
"" >> /etc/audit/rules.d/50-login.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.13 Ensure file deletion events by users are collected"" : [FAILED]

Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for:

 - unlink - remove a file
 - unlinkat - remove a file attribute
 - rename - rename a file
 - renameat rename a file attributesystem calls and tags them with the identifier ""delete"".

Monitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered.

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor file deletion events by users.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S rename,unlink,unlinkat,renameat -F auid>=${UID_MIN} -F auid!=unset -F key=delete
-a always,exit -F arch=b32 -S rename,unlink,unlinkat,renameat -F auid>=${UID_MIN} -F auid!=unset -F key=delete
"" >> /etc/audit/rules.d/50-delete.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - b32 unlink
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/)  &&/ -F *arch=b32/  &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/)  &&/ -F *auid>=${UID_MIN}/  &&/ -S/  &&(/unlink/||/rename/||/unlinkat/||/renameat/)  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules  | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64 unlink
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/)  &&/ -F *arch=b64/  &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/)  &&/ -F *auid>=${UID_MIN}/  &&/ -S/  &&(/unlink/||/rename/||/unlinkat/||/renameat/)  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b32 unlink
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/)  &&/ -F *arch=b32/  &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/)  &&/ -F *auid>=${UID_MIN}/  &&/ -S/  &&(/unlink/||/rename/||/unlinkat/||/renameat/)  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b64 unlink
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/)  &&/ -F *arch=b64/  &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/)  &&/ -F *auid>=${UID_MIN}/  &&/ -S/  &&(/unlink/||/rename/||/unlinkat/||/renameat/)  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules  | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor file deletion events by users.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S rename,unlink,unlinkat,renameat -F auid>=${UID_MIN} -F auid!=unset -F key=delete
-a always,exit -F arch=b32 -S rename,unlink,unlinkat,renameat -F auid>=${UID_MIN} -F auid!=unset -F key=delete
"" >> /etc/audit/rules.d/50-delete.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.14 Ensure events that modify the system's Mandatory Access Controls are collected"" : [FAILED]

Monitor AppArmor, an implementation of mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/apparmor/ and /etc/apparmor.d/ directories.

Note: If a different Mandatory Access Control method is used, changes to the corresponding directories should be audited.

Changes to files in the /etc/apparmor/ and /etc/apparmor.d/ directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system.

Solution:
Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify the system's Mandatory Access Controls.

Example:

# printf ""
-w /etc/apparmor/ -p wa -k MAC-policy
-w /etc/apparmor.d/ -p wa -k MAC-policy
"" >> /etc/audit/rules.d/50-MAC-policy.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|5.5,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - auditctl - /etc/apparmor.d/
The command '/sbin/auditctl -l 2>/dev/null | /bin/awk '/^ *-w/ && /\/etc\/apparmor.d/ && / +-p *wa/ && (/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

fail

-------------------------
FAILED - rules - /etc/apparmor/
The command '/bin/awk '/^ *-w/ && /\/etc\/apparmor/ && / +-p *wa/ && (/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - rules - /etc/apparmor.d/
The command '/bin/awk '/^ *-w/ && /\/etc\/apparmor.d/ && / +-p *wa/ && (/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl - /etc/apparmor/
The command '/sbin/auditctl -l 2>/dev/null | /bin/awk '/^ *-w/ && /\/etc\/apparmor/ && / +-p *wa/ && (/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

fail","Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify the system's Mandatory Access Controls.

Example:

# printf ""
-w /etc/apparmor/ -p wa -k MAC-policy
-w /etc/apparmor.d/ -p wa -k MAC-policy
"" >> /etc/audit/rules.d/50-MAC-policy.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.15 Ensure successful and unsuccessful attempts to use the chcon command are recorded"" : [FAILED]

The operating system must generate audit records for successful/unsuccessful uses of the chcon command.

The chcon command is used to change file security context. Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.

Audit records can be generated from various components within the information system (e.g., module or policy filter).

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the chcon command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - /etc/audit/rules.d/*.rules
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/bin\/chcon/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/bin\/chcon/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

sh: 1: auditctl: not found
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the chcon command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.16 Ensure successful and unsuccessful attempts to use the setfacl command are recorded"" : [FAILED]

The operating system must generate audit records for successful/unsuccessful uses of the setfacl command

This utility sets Access Control Lists (ACLs) of files and directories. Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.

Audit records can be generated from various components within the information system (e.g., module or policy filter).

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the setfacl command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/bin/setfacl -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - /etc/audit/rules.d/*.rules
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/bin\/setfacl/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf  ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/bin\/setfacl/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf  ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the setfacl command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/bin/setfacl -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.17 Ensure successful and unsuccessful attempts to use the chacl command are recorded"" : [FAILED]

The operating system must generate audit records for successful/unsuccessful uses of the chacl command.

chacl is an IRIX-compatibility command, and is maintained for those users who are familiar with its use from either XFS or IRIX.

chacl changes the ACL(s) for a file or directory. Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.

Audit records can be generated from various components within the information system (e.g., module or policy filter).

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the chacl command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/bin/chacl -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - /etc/audit/rules.d/*.rules
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/bin\/chacl/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf  ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/bin\/chacl/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf  ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

sh: 1: auditctl: not found
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the chacl command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/bin/chacl -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.18 Ensure successful and unsuccessful attempts to use the usermod command are recorded"" : [FAILED]

The operating system must generate audit records for successful/unsuccessful uses of the usermod command.

The usermod command modifies the system account files to reflect the changes that are specified on the command line. Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.

Audit records can be generated from various components within the information system (e.g., module or policy filter).

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the usermod command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/sbin/usermod -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k usermod
"" >> /etc/audit/rules.d/50-usermod.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - /etc/audit/rules.d/*.rules
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/sbin\/usermod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf  ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/sbin\/usermod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf  ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the usermod command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/sbin/usermod -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k usermod
"" >> /etc/audit/rules.d/50-usermod.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.19 Ensure kernel module loading unloading and modification is collected"" : [FAILED]

Monitor the loading and unloading of kernel modules. All the loading / listing / dependency checking of modules is done by kmod via symbolic links.

The following system calls control loading and unloading of modules:

 - init_module - load a module
 - finit_module - load a module (used when the overhead of using cryptographically signed modules to determine the authenticity of a module can be avoided)
 - delete_module - delete a module

Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of modules

Monitoring the use of all the various ways to manipulate kernel modules could provide system administrators with evidence that an unauthorized change was made to a kernel module, possibly compromising the security of the system.

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor kernel module modification.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S init_module,finit_module,delete_module -F auid>=${UID_MIN} -F auid!=unset -k kernel_modules
-a always,exit -F path=/usr/bin/kmod -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k kernel_modules
"" >> /etc/audit/rules.d/50-kernel_modules.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - /usr/bin/kmod
The command script with multiple lines returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
ERROR: Variable 'UID_MIN' is unset.
pass

-------------------------
FAILED - auditctl delete_module
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b(32|64)/ &&/ -S/ &&/delete_module/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - on disk init_module
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b(32|64)/ &&/ -S/ &&/init_module/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - on disk finit_module
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b(32|64)/ &&/ -S/ &&/finit_module/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /usr/bin/kmod
The command script with multiple lines returned : 

bash: line 3: auditctl: command not found
fail

-------------------------
FAILED - auditctl init_module
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b(32|64)/ &&/ -S/ &&/init_module/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - on disk delete_module
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b(32|64)/ &&/ -S/ &&/delete_module/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl finit_module
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b(32|64)/ &&/ -S/ &&/finit_module/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
PASSED - symlinks
The command script with multiple lines returned : 

OK","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor kernel module modification.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S init_module,finit_module,delete_module -F auid>=${UID_MIN} -F auid!=unset -k kernel_modules
-a always,exit -F path=/usr/bin/kmod -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k kernel_modules
"" >> /etc/audit/rules.d/50-kernel_modules.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.2 Ensure actions as another user are always logged"" : [FAILED]

sudo provides users with temporary elevated privileges to perform operations, either as the superuser or another user.

Creating an audit log of users with temporary elevated privileges and the operation(s) they performed is essential to reporting. Administrators will want to correlate the events written to the audit trail with the records written to sudo 's logfile to verify if unauthorized commands have been executed.

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor elevated privileges.

Example:

# printf ""
-a always,exit -F arch=b64 -C euid!=uid -F auid!=unset -S execve -k user_emulation
-a always,exit -F arch=b32 -C euid!=uid -F auid!=unset -S execve -k user_emulation
"" >> /etc/audit/rules.d/50-user_emulation.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - /etc/audit/rules.d/*.rules b32
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&(/ -C *euid!=uid/||/ -C *uid!=euid/) &&/ -S *execve/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - /etc/audit/rules.d/*.rules b64
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&(/ -C *euid!=uid/||/ -C *uid!=euid/) &&/ -S *execve/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&(/ -C *euid!=uid/||/ -C *uid!=euid/) &&/ -S *execve/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl b32
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&(/ -C *euid!=uid/||/ -C *uid!=euid/) &&/ -S *execve/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor elevated privileges.

Example:

# printf ""
-a always,exit -F arch=b64 -C euid!=uid -F auid!=unset -S execve -k user_emulation
-a always,exit -F arch=b32 -C euid!=uid -F auid!=unset -S execve -k user_emulation
"" >> /etc/audit/rules.d/50-user_emulation.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.20 Ensure the audit configuration is immutable"" : [FAILED]

Set system audit so that audit rules cannot be modified with auditctl Setting the flag ""-e 2"" forces audit to be put in immutable mode. Audit changes can only be made on system reboot.

Note: This setting will require the system to be rebooted to update the active auditd configuration settings.

In immutable mode, unauthorized users cannot execute changes to the audit system to potentially hide malicious activity and then put the audit rules back. Users would most likely notice a system reboot and that could alert administrators of an attempt to make unauthorized audit changes.

Solution:
Edit or create the file /etc/audit/rules.d/99-finalize.rules and add the line -e 2 at the end of the file:

Example:

# printf -- ""-e 2
"" >> /etc/audit/rules.d/99-finalize.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,800-53r5|MP-2,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(b),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|6.2,CSCv7|6.3,CSCv8|3.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-2,CSF|PR.PT-3,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T3.6.2,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /bin/grep -Ph -- '^\h*-e\h+2\b' /etc/audit/rules.d/*.rules | /bin/tail -1
expect: ^[\s]*-e[\s]+2[\s]*$

Actual Value:
The command '/bin/grep -Ph -- '^\h*-e\h+2\b' /etc/audit/rules.d/*.rules | /bin/tail -1' returned : 

/bin/grep: /etc/audit/rules.d/*.rules: No such file or directory","Edit or create the file /etc/audit/rules.d/99-finalize.rules and add the line -e 2 at the end of the file:

Example:

# printf -- ""-e 2
"" >> /etc/audit/rules.d/99-finalize.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.21 Ensure the running and on disk configuration is the same"" : [FAILED]

The Audit system have both on disk and running configuration. It is possible for these configuration settings to differ.

Note: Due to the limitations of augenrules and auditctl it is not absolutely guaranteed that loading the rule sets via augenrules --load will result in all rules being loaded or even that the user will be informed if there was a problem loading the rules.

Configuration differences between what is currently running and what is on disk could cause unexpected problems or may give a false impression of compliance requirements.

Solution:
If the rules are not aligned across all three () areas, run the following command to merge and load all rules:

# augenrules --load

Check if reboot is required.

if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then echo ""Reboot required to load rules""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2M,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: /sbin/augenrules --check
expect: ^[\s]*/sbin/augenrules:[\s]*No change[\s]*$

Actual Value:
The command '/sbin/augenrules --check' returned : 

sh: 1: /sbin/augenrules: not found","If the rules are not aligned across all three () areas, run the following command to merge and load all rules:

# augenrules --load

Check if reboot is required.

if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then echo ""Reboot required to load rules""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.3 Ensure events that modify the sudo log file are collected"" : [PASSED]

Monitor the sudo log file. If the system has been properly configured to disable the use of the su command and force all administrators to have to log in first and then use sudo to execute privileged commands, then all administrator commands will be logged to /var/log/sudo.log Any time a command is executed, an audit event will be triggered as the /var/log/sudo.log file will be opened for write and the executed administration command will be written to the log.

Changes in /var/log/sudo.log indicate that an administrator has executed a command or the log file itself has been tampered with. Administrators will want to correlate the events written to the audit trail with the records written to /var/log/sudo.log to verify if unauthorized commands have been executed.

Solution:
Note: This recommendation requires that the sudo logfile is configured. See guidance provided in the recommendation ""Ensure sudo log file exists""

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify the sudo log file.

Example:

# {
SUDO_LOG_FILE=$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,? .*//' -e 's/""//g')
[ -n ""${SUDO_LOG_FILE}"" ] &amp;&amp; printf ""
-w ${SUDO_LOG_FILE} -p wa -k sudo_log_file
"" >> /etc/audit/rules.d/50-sudo.rules || printf ""ERROR: Variable 'SUDO_LOG_FILE' is unset.
""
}

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - auditctl sudo log file
The command script with multiple lines returned : 

ERROR: Variable 'SUDO_LOG_FILE' is unset.
pass

-------------------------
PASSED - on disk sudo log file
The command script with multiple lines returned : 

ERROR: Variable 'SUDO_LOG_FILE' is unset.
pass","Note: This recommendation requires that the sudo logfile is configured. See guidance provided in the recommendation ""Ensure sudo log file exists""

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify the sudo log file.

Example:

# {
SUDO_LOG_FILE=$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,? .*//' -e 's/""//g')
[ -n ""${SUDO_LOG_FILE}"" ] &amp;&amp; printf ""
-w ${SUDO_LOG_FILE} -p wa -k sudo_log_file
"" >> /etc/audit/rules.d/50-sudo.rules || printf ""ERROR: Variable 'SUDO_LOG_FILE' is unset.
""
}

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.4 Ensure events that modify date and time information are collected"" : [FAILED]

Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the;

 - adjtimex - tune kernel clock
 - settimeofday - set time using timeval and timezone structures
 - stime - using seconds since 1/1/1970
 - clock_settime - allows for the setting of several internal clocks and timers

system calls have been executed. Further, ensure to write an audit record to the configured audit log file upon exit, tagging the records with a unique identifier such as ""time-change"".

Unexpected changes in system date and/or time could be a sign of malicious activity on the system.

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify date and time information.

Example:

# printf ""
-a always,exit -F arch=b64 -S adjtimex,settimeofday,clock_settime -k time-change
-a always,exit -F arch=b32 -S adjtimex,settimeofday,clock_settime -k time-change
-w /etc/localtime -p wa -k time-change
"" >> /etc/audit/rules.d/50-time-change.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|5.5,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - settimeofday x32
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/settimeofday/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl settimeofday x64
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/settimeofday/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - adjtimex x64
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/adjtimex/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - settimeofday x64
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/settimeofday/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl clock_settime x32
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/clock_settime/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl clock_settime x64
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/clock_settime/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - adjtimex x32
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/adjtimex/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - /etc/localtime
The command '/bin/awk '/^ *-w/ &&/\/etc\/localtime/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - clock_settime x64
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/clock_settime/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - clock_settime x32
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/clock_settime/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl settimeofday x32
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/settimeofday/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/localtime
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/localtime/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl adjtimex x32
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/adjtimex/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl adjtimex x64
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/adjtimex/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify date and time information.

Example:

# printf ""
-a always,exit -F arch=b64 -S adjtimex,settimeofday,clock_settime -k time-change
-a always,exit -F arch=b32 -S adjtimex,settimeofday,clock_settime -k time-change
-w /etc/localtime -p wa -k time-change
"" >> /etc/audit/rules.d/50-time-change.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.5 Ensure events that modify the system's network environment are collected"" : [FAILED]

Record changes to network environment files or system calls. The below parameters monitors the following system calls, and write an audit event on system call exit:

 - sethostname - set the systems host name
 - setdomainname - set the systems domain name

The files being monitored are:

 - /etc/issue and /etc/issue.net - messages displayed pre-login
 - /etc/hosts - file containing host names and associated IP addresses
 - /etc/networks - symbolic names for networks
 - /etc/network/ - directory containing network interface scripts and configurations files
 - /etc/netplan/ - central location for YAML networking configurations files

Monitoring system events that change network environments, such as sethostname and setdomainname helps identify unauthorized alterations to host and domain names, which could compromise security settings reliant on these names. Changes to /etc/hosts can signal unauthorized attempts to alter machine associations with IP addresses, potentially redirecting users and processes to unintended destinations. Surveillance of /etc/issue and /etc/issue.net is crucial to detect intruders inserting false information to deceive users. Monitoring /etc/network/ reveals modifications to network interfaces or scripts that may jeopardize system availability or security. Additionally, tracking changes in the /etc/netplan/ directory ensures swift detection of unauthorized adjustments to network configurations. All audit records should be appropriately tagged for relevance

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify the system's network environment.

Example:

# printf ""
-a always,exit -F arch=b64 -S sethostname,setdomainname -k system-locale
-a always,exit -F arch=b32 -S sethostname,setdomainname -k system-locale
-w /etc/issue -p wa -k system-locale
-w /etc/issue.net -p wa -k system-locale
-w /etc/hosts -p wa -k system-locale
-w /etc/networks -p wa -k system-locale
-w /etc/network/ -p wa -k system-locale
-w /etc/netplan/ -p wa -k system-locale
"" >> /etc/audit/rules.d/50-system_locale.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|5.5,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - on disk /etc/network/
The command '/bin/awk '/^ *-w/ &&/\/etc\/network\// &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - /etc/issue.net
The command '/bin/awk '/^ *-w/ &&/\/etc\/issue.net/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - on disk b32 setdomainname
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/setdomainname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - rules - /etc/networks
The command '/bin/awk '/^ *-w/ &&/\/etc\/networks/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64 setdomainname
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/setdomainname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl b64 sethostname
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/sethostname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - on disk b64 setdomainname
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/setdomainname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 sethostname
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/sethostname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/network
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/network / &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/issue.net
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/issue.net/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/issue
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/issue / &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - b32 sethostname
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/sethostname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl - /etc/networks
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/networks/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/hosts
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/hosts/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - b64 sethostname
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/sethostname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - on disk /etc/issue
The command '/bin/awk '/^ *-w/ &&/\/etc\/issue / &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - on disk /etc/netplan
The command '/bin/awk '/^ *-w/ &&/\/etc\/netplan\// &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 setdomainname
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/setdomainname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - /etc/hosts
The command '/bin/awk '/^ *-w/ &&/\/etc\/hosts/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /etc/netplan
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/netplan/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify the system's network environment.

Example:

# printf ""
-a always,exit -F arch=b64 -S sethostname,setdomainname -k system-locale
-a always,exit -F arch=b32 -S sethostname,setdomainname -k system-locale
-w /etc/issue -p wa -k system-locale
-w /etc/issue.net -p wa -k system-locale
-w /etc/hosts -p wa -k system-locale
-w /etc/networks -p wa -k system-locale
-w /etc/network/ -p wa -k system-locale
-w /etc/netplan/ -p wa -k system-locale
"" >> /etc/audit/rules.d/50-system_locale.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.6 Ensure use of privileged commands are collected"" : [FAILED]

Monitor privileged programs, those that have the setuid and/or setgid bit set on execution, to determine if unprivileged users are running these commands.

Execution of privileged commands by non-privileged users could be an indication of someone trying to gain unauthorized access to the system.

Solution:
Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor the use of privileged commands.

Example script:

#!/usr/bin/env bash

{
  UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
  AUDIT_RULE_FILE=""/etc/audit/rules.d/50-privileged.rules""
  NEW_DATA=()
  for PARTITION in $(findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | grep -Pv ""noexec|nosuid"" | awk '{print $1}'); do
    readarray -t DATA < <(find ""${PARTITION}"" -xdev -perm /6000 -type f | awk -v UID_MIN=${UID_MIN} '{print ""-a always,exit -F path="" $1 "" -F perm=x -F auid>=""UID_MIN"" -F auid!=unset -k privileged"" }')
      for ENTRY in ""${DATA[@]}""; do
        NEW_DATA+=(""${ENTRY}"")
      done
  done
  readarray &amp;> /dev/null -t OLD_DATA < ""${AUDIT_RULE_FILE}""
  COMBINED_DATA=( ""${OLD_DATA[@]}"" ""${NEW_DATA[@]}"" )
  printf '%s
' ""${COMBINED_DATA[@]}"" | sort -u > ""${AUDIT_RULE_FILE}""
}

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

Special mount points

If there are any special mount points that are not visible by default from just scanning / change the PARTITION variable to the appropriate partition and re-run the remediation.

Impact:

Both the audit and remediation section of this recommendation will traverse all mounted file systems that is not mounted with either noexec or nosuid mount options. If there are large file systems without these mount options, such traversal will be significantly detrimental to the performance of the system.

Before running either the audit or remediation section, inspect the output of the following command to determine exactly which file systems will be traversed:

# findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | grep -Pv ""noexec|nosuid""

To exclude a particular file system due to adverse performance impacts, update the audit and remediation sections by adding a sufficiently unique string to the grep statement. The above command can be used to test the modified exclusions.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - auditctl
The command 'RUNNING=$(/sbin/auditctl -l); [ -n ""${RUNNING}"" ] && for PARTITION in $(/bin/findmnt -n -l -k -it $(/bin/awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | /bin/grep -Pv ""noexec|nosuid"" | /bin/awk '{print $1}'); do for PRIVILEGED in $(/bin/find ""${PARTITION}"" -xdev -perm /6000 -type f); do printf -- ""${RUNNING}"" | /bin/grep -q ""${PRIVILEGED}"" && printf ""OK: '${PRIVILEGED}' found in auditing rules.\n"" || printf ""Warning: '${PRIVILEGED}' not found in running configuration.\n""; done; done | /bin/awk '{print} END { if ($1 ~ ""Warning"") print ""Fail - Warnings found""; else print ""Pass - No warning entries found"" }'' returned : 

sh: 1: /sbin/auditctl: not found

-------------------------
FAILED - /etc/audit/rules.d
The command 'for PARTITION in $(/bin/findmnt -n -l -k -it $(/bin/awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | /bin/grep -Pv ""noexec|nosuid"" | /bin/awk '{print $1}'); do for PRIVILEGED in $(/bin/find ""${PARTITION}"" -xdev -perm /6000 -type f); do /bin/grep -qr ""${PRIVILEGED}"" /etc/audit/rules.d && printf ""OK: '${PRIVILEGED}' found in auditing rules.\n"" || printf ""Warning: '${PRIVILEGED}' not found in on disk configuration.\n""; done; done | /bin/awk '{print} END { if ($1 ~ ""Warning"") print ""Fail - Warnings found""; else print ""Pass - No warning entries found"" }'' returned : 

/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
Warning: '/usr/sbin/pam_extrausers_chkpwd' not found in on disk configuration.
Warning: '/usr/sbin/unix_chkpwd' not found in on disk configuration.
Warning: '/usr/libexec/polkit-agent-helper-1' not found in on disk configuration.
Warning: '/usr/lib/openssh/ssh-keysign' not found in on disk configuration.
Warning: '/usr/lib/dbus-1.0/dbus-daemon-launch-helper' not found in on disk configuration.
Warning: '/usr/lib/x86_64-linux-gnu/utempter/utempter' not found in on disk configuration.
Warning: '/usr/bin/sudo' not found in on disk configuration.
Warning: '/usr/bin/mount' not found in on disk configuration.
Warning: '/usr/bin/chsh' not found in on disk configuration.
Warning: '/usr/bin/ssh-agent' not found in on disk configuration.
Warning: '/usr/bin/chage' not found in on disk configuration.
Warning: '/usr/bin/newgrp' not found in on disk configuration.
Warning: '/usr/bin/gpasswd' not found in on disk configuration.
Warning: '/usr/bin/umount' not found in on disk configuration.
Warning: '/usr/bin/chfn' not found in on disk configuration.
Warning: '/usr/bin/crontab' not found in on disk configuration.
Warning: '/usr/bin/expiry' not found in on disk configuration.
Warning: '/usr/bin/passwd' not found in on disk configuration.
Warning: '/usr/bin/su' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/bin/mount' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/bin/su' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/bin/umount' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/usr/bin/chfn' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/usr/bin/wall' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/usr/bin/passwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/usr/bin/newgrp' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/usr/bin/chsh' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/usr/bin/chage' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/usr/bin/gpasswd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/usr/bin/expiry' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/sbin/unix_chkpwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/4fc489f79dd162280b28f289eb439b70a9ad854fe4cf9f740a8a1817be3e5236/diff/usr/bin/chfn' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/4fc489f79dd162280b28f289eb439b70a9ad854fe4cf9f740a8a1817be3e5236/diff/usr/bin/passwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/4fc489f79dd162280b28f289eb439b70a9ad854fe4cf9f740a8a1817be3e5236/diff/usr/bin/chsh' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/4fc489f79dd162280b28f289eb439b70a9ad854fe4cf9f740a8a1817be3e5236/diff/usr/bin/chage' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/4fc489f79dd162280b28f289eb439b70a9ad854fe4cf9f740a8a1817be3e5236/diff/usr/bin/gpasswd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/4fc489f79dd162280b28f289eb439b70a9ad854fe4cf9f740a8a1817be3e5236/diff/usr/bin/expiry' not found in on disk configurat/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
ion.
Warning: '/var/lib/docker/overlay2/4fc489f79dd162280b28f289eb439b70a9ad854fe4cf9f740a8a1817be3e5236/diff/sbin/unix_chkpwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/bin/mount' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/bin/su' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/bin/umount' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/usr/bin/chfn' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/usr/bin/wall' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/usr/bin/passwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/usr/bin/newgrp' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/usr/bin/chsh' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/usr/bin/chage' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/usr/bin/gpasswd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/usr/bin/expiry' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/sbin/unix_chkpwd' not found in on disk configuration.
Fail - Warnings found","Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor the use of privileged commands.

Example script:

#!/usr/bin/env bash

{
  UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
  AUDIT_RULE_FILE=""/etc/audit/rules.d/50-privileged.rules""
  NEW_DATA=()
  for PARTITION in $(findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | grep -Pv ""noexec|nosuid"" | awk '{print $1}'); do
    readarray -t DATA < <(find ""${PARTITION}"" -xdev -perm /6000 -type f | awk -v UID_MIN=${UID_MIN} '{print ""-a always,exit -F path="" $1 "" -F perm=x -F auid>=""UID_MIN"" -F auid!=unset -k privileged"" }')
      for ENTRY in ""${DATA[@]}""; do
        NEW_DATA+=(""${ENTRY}"")
      done
  done
  readarray &amp;> /dev/null -t OLD_DATA < ""${AUDIT_RULE_FILE}""
  COMBINED_DATA=( ""${OLD_DATA[@]}"" ""${NEW_DATA[@]}"" )
  printf '%s
' ""${COMBINED_DATA[@]}"" | sort -u > ""${AUDIT_RULE_FILE}""
}

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

Special mount points

If there are any special mount points that are not visible by default from just scanning / change the PARTITION variable to the appropriate partition and re-run the remediation.

Impact:

Both the audit and remediation section of this recommendation will traverse all mounted file systems that is not mounted with either noexec or nosuid mount options. If there are large file systems without these mount options, such traversal will be significantly detrimental to the performance of the system.

Before running either the audit or remediation section, inspect the output of the following command to determine exactly which file systems will be traversed:

# findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | grep -Pv ""noexec|nosuid""

To exclude a particular file system due to adverse performance impacts, update the audit and remediation sections by adding a sufficiently unique string to the grep statement. The above command can be used to test the modified exclusions.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.7 Ensure unsuccessful file access attempts are collected"" : [FAILED]

Monitor for unsuccessful attempts to access files. The following parameters are associated with system calls that control files:

 - creation - creat
 - opening - open openat
 - truncation - truncate ftruncate

An audit log record will only be written if all of the following criteria is met for the user when trying to access a file:

 - a non-privileged user (auid>=UID_MIN)
 - is not a Daemon event (auid=4294967295/unset/-1)
 - if the system call returned EACCES (permission denied) or EPERM (some other permanent error associated with the specific system call)

Failed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system.

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor unsuccessful file access attempts.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-EACCES -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-EPERM -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-EACCES -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-EPERM -F auid>=${UID_MIN} -F auid!=unset -k access
"" >> /etc/audit/rules.d/50-access.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|14.9,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - auditctl b32 EPERM
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EPERM/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 EACCES
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EACCES/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 EPERM
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EPERM/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b32 EACCES
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EACCES/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b64 EPERM
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EPERM/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b32 EACCES
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EACCES/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b32 EPERM
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EPERM/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b64 EACCES
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EACCES/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor unsuccessful file access attempts.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-EACCES -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-EPERM -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-EACCES -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-EPERM -F auid>=${UID_MIN} -F auid!=unset -k access
"" >> /etc/audit/rules.d/50-access.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.8 Ensure events that modify user/group information are collected"" : [FAILED]

Record events affecting the modification of user or group information, including that of passwords and old passwords if in use.

 - /etc/group - system groups
 - /etc/passwd - system users
 - /etc/gshadow - encrypted password for each group
 - /etc/shadow - system user passwords
 - /etc/security/opasswd - storage of old passwords if the relevant PAM module is in use
 - /etc/nsswitch.conf - file configures how the system uses various databases and name resolution mechanisms
 - /etc/pam.conf - file determines the authentication services to be used, and the order in which the services are used.
 - /etc/pam.d - directory contains the PAM configuration files for each PAM-aware application.

The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier ""identity"" in the audit log file.

Unexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.

Solution:
Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify user/group information.

Example:

# printf ""
-w /etc/group -p wa -k identity
-w /etc/passwd -p wa -k identity
-w /etc/gshadow -p wa -k identity
-w /etc/shadow -p wa -k identity
-w /etc/security/opasswd -p wa -k identity
-w /etc/nsswitch.conf -p wa -k identity
-w /etc/pam.conf -p wa -k identity
-w /etc/pam.d -p wa -k identity
"" >> /etc/audit/rules.d/50-identity.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|4.8,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - /etc/shadow
The command '/bin/awk '/^ *-w/ &&/\/etc\/shadow/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /etc/nsswitch.cnof
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/nsswitch\.conf/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - on disk /etc/pam.conf
The command '/bin/awk '/^ *-w/ &&/\/etc\/pam\.conf/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - /etc/gshadow
The command '/bin/awk '/^ *-w/ &&/\/etc\/gshadow/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /etc/security/opasswd
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/security\/opasswd/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - /etc/group
The command '/bin/awk '/^ *-w/ &&/\/etc\/group/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - /etc/passwd
The command '/bin/awk '/^ *-w/ &&/\/etc\/passwd/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /etc/pam.d
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/pam\.d/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/shadow
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/shadow/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/gshadow
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/gshadow/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - on disk /etc/nsswitch.conf
The command '/bin/awk '/^ *-w/ &&/\/etc\/nsswitch\.conf/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /etc/passwd
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/passwd/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - /etc/security/opasswd
The command '/bin/awk '/^ *-w/ &&/\/etc\/security\/opasswd/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - on disk /etc/pam.d
The command '/bin/awk '/^ *-w/ &&/\/etc\/pam\.d/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /etc/group
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/group/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/pam.conf
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/pam\.conf/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail","Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify user/group information.

Example:

# printf ""
-w /etc/group -p wa -k identity
-w /etc/passwd -p wa -k identity
-w /etc/gshadow -p wa -k identity
-w /etc/shadow -p wa -k identity
-w /etc/security/opasswd -p wa -k identity
-w /etc/nsswitch.conf -p wa -k identity
-w /etc/pam.conf -p wa -k identity
-w /etc/pam.d -p wa -k identity
"" >> /etc/audit/rules.d/50-identity.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.9 Ensure discretionary access control permission modification events are collected"" : [FAILED]

Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The following commands and system calls effect the permissions, ownership and various attributes of files.

 - chmod
 - fchmod
 - fchmodat
 - chown
 - fchown
 - fchownat
 - lchown
 - setxattr
 - lsetxattr
 - fsetxattr
 - removexattr
 - lremovexattr
 - fremovexattr

In all cases, an audit record will only be written for non-system user ids and will ignore Daemon events. All audit records will be tagged with the identifier ""perm_mod.""

Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor discretionary access control permission modification events.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b64 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
"" >> /etc/audit/rules.d/50-perm_mod.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|5.5,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - auditctl b32 setxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/setxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b64 fchownat
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchownat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 fchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchownat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 chmod
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b32 chmod
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b32 lremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 fremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b64 fsetxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 fchmod
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 fremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 chown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b64 fchmodat
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmodat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b32 fchmodat
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmodat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64 fsetxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b32 fsetxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64 fchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b32 fchmod
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b64 lremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 fchmodat
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmodat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b64 fchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b64 setxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/setxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b64 fremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b64 removexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/removexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b32 lchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64 lsetxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b32 removexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/removexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 fchmod
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b32 setxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/setxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 fchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b32 chown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b32 fchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b64 fchmod
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b32 chown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b32 fremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 lsetxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 removexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/removexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b32 chmod
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64 removexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/removexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 fchmodat
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmodat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 lchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b32 lchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 lremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b32 fchownat
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchownat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64 fchownat
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchownat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b32 lremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b64 chown
The co","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor discretionary access control permission modification events.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b64 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
"" >> /etc/audit/rules.d/50-perm_mod.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.1 Ensure audit log files mode is configured"" : [FAILED]

Audit log files contain information about the system and system activity.

Access to audit records can reveal system and configuration data to attackers, potentially compromising its confidentiality.

Solution:
Run the following command to remove more permissive mode than 0640 from audit log files:

# [ -f /etc/audit/auditd.conf ] &amp;&amp; find ""$(dirname $(awk -F ""="" '/^s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))"" -type f -perm /0137 -exec chmod u-x,g-wx,o-rwx {} +

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
  - File: ""/etc/audit/auditd.conf"" not found.
  - ** Verify auditd is installed **","Run the following command to remove more permissive mode than 0640 from audit log files:

# [ -f /etc/audit/auditd.conf ] &amp;&amp; find ""$(dirname $(awk -F ""="" '/^s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))"" -type f -perm /0137 -exec chmod u-x,g-wx,o-rwx {} +","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.10 Ensure audit tools group owner is configured"" : [FAILED]

Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.

Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.

Solution:
Run the following command to change group ownership to the groop root :

# chgrp root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules
group: root

Actual Value:
No files found: /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules","Run the following command to change group ownership to the groop root :

# chgrp root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.2 Ensure audit log files owner is configured"" : [FAILED]

Audit log files contain information about the system and system activity.

Access to audit records can reveal system and configuration data to attackers, potentially compromising its confidentiality.

Solution:
Run the following command to configure the audit log files to be owned by the root user:

# [ -f /etc/audit/auditd.conf ] &amp;&amp; find ""$(dirname $(awk -F ""="" '/^s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))"" -type f ! -user root -exec chown root {} +

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - * Reasons for audit failure * :
  - File: ""/etc/audit/auditd.conf"" not found.
  - ** Verify auditd is installed **","Run the following command to configure the audit log files to be owned by the root user:

# [ -f /etc/audit/auditd.conf ] &amp;&amp; find ""$(dirname $(awk -F ""="" '/^s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))"" -type f ! -user root -exec chown root {} +","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.3 Ensure audit log files group owner is configured"" : [FAILED]

Audit log files contain information about the system and system activity.

Access to audit records can reveal system and configuration data to attackers, potentially compromising its confidentiality.

Solution:
Run the following command to configure the audit log files to be group owned by adm :

# find $(dirname $(awk -F""="" '/^s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs)) -type f ( ! -group adm -a ! -group root ) -exec chgrp adm {} +

Run the following command to set the log_group parameter in the audit configuration file to log_group = adm :

# sed -ri 's/^s*#?s*log_groups*=s*S+(s*#.*)?.*$/log_group = adm1/' /etc/audit/auditd.conf

Run the following command to restart the audit daemon to reload the configuration file:

# systemctl restart auditd

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - log_group path permissions
The command script with multiple lines returned : 

pass

-------------------------
FAILED - auditd.conf log_group
No files found: /etc/audit/auditd.conf","Run the following command to configure the audit log files to be group owned by adm :

# find $(dirname $(awk -F""="" '/^s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs)) -type f ( ! -group adm -a ! -group root ) -exec chgrp adm {} +

Run the following command to set the log_group parameter in the audit configuration file to log_group = adm :

# sed -ri 's/^s*#?s*log_groups*=s*S+(s*#.*)?.*$/log_group = adm1/' /etc/audit/auditd.conf

Run the following command to restart the audit daemon to reload the configuration file:

# systemctl restart auditd","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.4 Ensure the audit log file directory mode is configured"" : [FAILED]

The audit log directory contains audit log files.

Audit information includes all information including: audit records, audit settings and audit reports. This information is needed to successfully audit system activity. This information must be protected from unauthorized modification or deletion. If this information were to be compromised, forensic analysis and discovery of the true source of potentially malicious system activity is impossible to achieve.

Solution:
Run the following command to configure the audit log directory to have a mode of ""0750"" or less permissive:

# chmod g-w,o-rwx ""$(dirname ""$(awk -F= '/^s*log_files*/{print $2}' /etc/audit/auditd.conf | xargs)"")""

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
  - File: ""/etc/audit/auditd.conf"" not found
  - ** Verify auditd is installed **","Run the following command to configure the audit log directory to have a mode of ""0750"" or less permissive:

# chmod g-w,o-rwx ""$(dirname ""$(awk -F= '/^s*log_files*/{print $2}' /etc/audit/auditd.conf | xargs)"")""","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.5 Ensure audit configuration files mode is configured"" : [PASSED]

Audit configuration files control auditd and what events are audited.

Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events.

Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.

Solution:
Run the following command to remove more permissive mode than 0640 from the audit configuration files:

# find /etc/audit/ -type f ( -name '*.conf' -o -name '*.rules' ) -exec chmod u-x,g-wx,o-rwx {} +

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /bin/find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) -exec /bin/stat -Lc ""%n %a"" {} + | /bin/grep -Pv -- '^\h*\H+\h*([0,2,4,6][0,4]0)\h*$' | /bin/awk '{print} END { if(NR==0) print ""pass"" ; else print ""fail""}'
expect: ^pass$
timeout: 7200

Actual Value:
The command '/bin/find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) -exec /bin/stat -Lc ""%n %a"" {} + | /bin/grep -Pv -- '^\h*\H+\h*([0,2,4,6][0,4]0)\h*$' | /bin/awk '{print} END { if(NR==0) print ""pass"" ; else print ""fail""}'' returned : 

/bin/find: '/etc/audit/': No such file or directory
pass","Run the following command to remove more permissive mode than 0640 from the audit configuration files:

# find /etc/audit/ -type f ( -name '*.conf' -o -name '*.rules' ) -exec chmod u-x,g-wx,o-rwx {} +","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.6 Ensure audit configuration files owner is configured"" : [PASSED]

Audit configuration files control auditd and what events are audited.

Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events.

Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.

Solution:
Run the following command to change ownership to root user:

# find /etc/audit/ -type f ( -name '*.conf' -o -name '*.rules' ) ! -user root -exec chown root {} +

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /bin/find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -user root | /bin/awk '{print} END { if(NR==0) print ""pass"" ; else print ""fail""}'
expect: ^pass$
timeout: 7200

Actual Value:
The command '/bin/find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -user root | /bin/awk '{print} END { if(NR==0) print ""pass"" ; else print ""fail""}'' returned : 

/bin/find: '/etc/audit/': No such file or directory
pass","Run the following command to change ownership to root user:

# find /etc/audit/ -type f ( -name '*.conf' -o -name '*.rules' ) ! -user root -exec chown root {} +","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.7 Ensure audit configuration files group owner is configured"" : [PASSED]

Audit configuration files control auditd and what events are audited.

Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events.

Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.

Solution:
Run the following command to change group to root :

# find /etc/audit/ -type f ( -name '*.conf' -o -name '*.rules' ) ! -group root -exec chgrp root {} +

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /bin/find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -group root | /bin/awk '{print} END { if(NR==0) print ""pass"" ; else print ""fail""}'
expect: ^pass$
timeout: 7200

Actual Value:
The command '/bin/find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -group root | /bin/awk '{print} END { if(NR==0) print ""pass"" ; else print ""fail""}'' returned : 

/bin/find: '/etc/audit/': No such file or directory
pass","Run the following command to change group to root :

# find /etc/audit/ -type f ( -name '*.conf' -o -name '*.rules' ) ! -group root -exec chgrp root {} +","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.8 Ensure audit tools mode is configured"" : [FAILED]

Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.

Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.

Solution:
Run the following command to remove more permissive mode from the audit tools:

# chmod go-w /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules
mask: 022

Actual Value:
No files found: /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules","Run the following command to remove more permissive mode from the audit tools:

# chmod go-w /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.9 Ensure audit tools owner is configured"" : [FAILED]

Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.

Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.

Solution:
Run the following command to change the owner of the audit tools to the root user:

# chown root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules
owner: root

Actual Value:
No files found: /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules","Run the following command to change the owner of the audit tools to the root user:

# chown root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""CIS_Ubuntu_Linux_22.04_LTS_v2.0.0_L1_Server.audit from CIS Ubuntu Linux 22.04 LTS Benchmark v2.0.0"" : [PASSED]

See Also: https://workbench.cisecurity.org/benchmarks/17074

Policy Value:
PASSED","n/a","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.1 Ensure cramfs kernel module is not available"" : [FAILED]

The cramfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A cramfs image can be used without having to first decompress the image.

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

Solution:
Run the following script to disable the cramfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install cramfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist cramfs in the /etc/modprobe.d/ directory
 - Unload cramfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist cramfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""cramfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""cramfs"" exists in:
  - ""/lib/modules/5.15.0-113-generic/kernel/fs""
  - ""/lib/modules/5.15.0-87-generic/kernel/fs""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""cramfs"" is not deny listed
 - module: ""cramfs"" is loadable: ""insmod /lib/modules/5.15.0-87-generic/kernel/fs/cramfs/cramfs.ko ""


- Correctly set:

 - module: ""cramfs"" is not loaded","Run the following script to disable the cramfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install cramfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist cramfs in the /etc/modprobe.d/ directory
 - Unload cramfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist cramfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""cramfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.2 Ensure freevxfs kernel module is not available"" : [FAILED]

The freevxfs filesystem type is a free version of the Veritas type filesystem. This is the primary filesystem type for HP-UX operating systems.

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

Solution:
Run the following script to disable the freevxfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install freevxfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist freevxfs in the /etc/modprobe.d/ directory
 - Unload freevxfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist freevxfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""freevxfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""freevxfs"" exists in:
  - ""/lib/modules/5.15.0-113-generic/kernel/fs""
  - ""/lib/modules/5.15.0-87-generic/kernel/fs""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""freevxfs"" is not deny listed
 - module: ""freevxfs"" is loadable: ""insmod /lib/modules/5.15.0-87-generic/kernel/fs/freevxfs/freevxfs.ko ""


- Correctly set:

 - module: ""freevxfs"" is not loaded","Run the following script to disable the freevxfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install freevxfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist freevxfs in the /etc/modprobe.d/ directory
 - Unload freevxfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist freevxfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""freevxfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.3 Ensure hfs kernel module is not available"" : [FAILED]

The hfs filesystem type is a hierarchical filesystem that allows you to mount Mac OS filesystems.

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

Solution:
Run the following script to disable the hfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install hfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist hfs in the /etc/modprobe.d/ directory
 - Unload hfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist hfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""hfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""hfs"" exists in:
  - ""/lib/modules/5.15.0-113-generic/kernel/fs""
  - ""/lib/modules/5.15.0-87-generic/kernel/fs""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""hfs"" is not deny listed
 - module: ""hfs"" is loadable: ""insmod /lib/modules/5.15.0-87-generic/kernel/fs/hfs/hfs.ko ""


- Correctly set:

 - module: ""hfs"" is not loaded","Run the following script to disable the hfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install hfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist hfs in the /etc/modprobe.d/ directory
 - Unload hfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist hfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""hfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.4 Ensure hfsplus kernel module is not available"" : [FAILED]

The hfsplus filesystem type is a hierarchical filesystem designed to replace hfs that allows you to mount Mac OS filesystems.

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

Solution:
Run the following script to disable the hfsplus module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install hfsplus /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist hfsplus in the /etc/modprobe.d/ directory
 - Unload hfsplus from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist hfsplus in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""hfsplus"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""hfsplus"" exists in:
  - ""/lib/modules/5.15.0-113-generic/kernel/fs""
  - ""/lib/modules/5.15.0-87-generic/kernel/fs""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""hfsplus"" is not deny listed
 - module: ""hfsplus"" is loadable: ""insmod /lib/modules/5.15.0-87-generic/kernel/fs/hfsplus/hfsplus.ko ""


- Correctly set:

 - module: ""hfsplus"" is not loaded","Run the following script to disable the hfsplus module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install hfsplus /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist hfsplus in the /etc/modprobe.d/ directory
 - Unload hfsplus from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist hfsplus in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""hfsplus"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.5 Ensure jffs2 kernel module is not available"" : [FAILED]

The jffs2 (journaling flash filesystem 2) filesystem type is a log-structured filesystem used in flash memory devices.

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

Solution:
Run the following script to disable the jffs2 module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install jffs2 /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist jffs2 in the /etc/modprobe.d/ directory
 - Unload jffs2 from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist jffs2 in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""jffs2"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""jffs2"" exists in:
  - ""/lib/modules/5.15.0-113-generic/kernel/fs""
  - ""/lib/modules/5.15.0-87-generic/kernel/fs""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""jffs2"" is not deny listed
 - module: ""jffs2"" is loadable: ""insmod /lib/modules/5.15.0-87-generic/kernel/fs/jffs2/jffs2.ko ""


- Correctly set:

 - module: ""jffs2"" is not loaded","Run the following script to disable the jffs2 module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install jffs2 /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist jffs2 in the /etc/modprobe.d/ directory
 - Unload jffs2 from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist jffs2 in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""jffs2"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.8 Ensure usb-storage kernel module is not available"" : [FAILED]

USB storage provides a means to transfer and store files ensuring persistence and availability of the files independent of network connection status. Its popularity and utility has led to USB-based malware being a simple and common means for network infiltration and a first step to establishing a persistent threat within a networked environment.

Restricting USB access on the system will decrease the physical attack surface for a device and diminish the possible vectors to introduce malware.

Solution:
Run the following script to disable the usb-storage module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install usb-storage /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist usb-storage in the /etc/modprobe.d/ directory
 - Unload usb-storage from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist usb-storage in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""usb-storage"" # set module name
   l_mtype=""drivers"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

Impact:

Disabling the usb-storage module will disable any usage of USB storage devices.

If requirements and local site policy allow the use of such devices, other solutions should be configured accordingly instead. One example of a commonly used solution is USBGuard

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|13.7,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""usb-storage"" exists in:
  - ""/lib/modules/5.15.0-113-generic/kernel/drivers""
  - ""/lib/modules/5.15.0-87-generic/kernel/drivers""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""usb-storage"" is not deny listed
 - module: ""usb-storage"" is loadable: ""insmod /lib/modules/5.15.0-87-generic/kernel/drivers/usb/storage/usb-storage.ko ""


- Correctly set:

 - module: ""usb-storage"" is not loaded","Run the following script to disable the usb-storage module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install usb-storage /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist usb-storage in the /etc/modprobe.d/ directory
 - Unload usb-storage from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist usb-storage in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""usb-storage"" # set module name
   l_mtype=""drivers"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

Impact:

Disabling the usb-storage module will disable any usage of USB storage devices.

If requirements and local site policy allow the use of such devices, other solutions should be configured accordingly instead. One example of a commonly used solution is USBGuard","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.1.1 Ensure /tmp is a separate partition"" : [FAILED]

The /tmp directory is a world-writable directory used for temporary storage by all users and some applications.

- IF - an entry for /tmp exists in /etc/fstab it will take precedence over entries in systemd default unit file.

Note: In an environment where the main system is diskless and connected to iSCSI, entries in /etc/fstab may not take precedence.

/tmp can be configured to use tmpfs

tmpfs puts everything into the kernel internal caches and grows and shrinks to accommodate the files it contains and is able to swap unneeded pages out to swap space. It has maximum size limits which can be adjusted on the fly via mount -o remount

Since tmpfs lives completely in the page cache and on swap, all tmpfs pages will be shown as ""Shmem"" in /proc/meminfo and ""Shared"" in free Notice that these counters also include shared memory. The most reliable way to get the count is using df and du

tmpfs has three mount options for sizing:

 - size : The limit of allocated bytes for this tmpfs instance. The default is half of your physical RAM without swap. If you oversize your tmpfs instances the machine will deadlock since the OOM handler will not be able to free that memory.
 - nr_blocks : The same as size, but in blocks of PAGE_SIZE.
 - nr_inodes : The maximum number of inodes for this instance. The default is half of the number of your physical RAM pages, or (on a machine with highmem) the number of lowmem RAM pages, whichever is the lower.

These parameters accept a suffix k, m or g and can be changed on remount. The size parameter also accepts a suffix % to limit this tmpfs instance to that percentage of your physical RAM. The default, when neither size nor nr_blocks is specified, is size=50%

Making /tmp its own file system allows an administrator to set additional mount options such as the noexec option on the mount, making /tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hard link to a system setuid program and wait for it to be updated. Once the program was updated, the hard link would be broken, and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.

This can be accomplished by either mounting tmpfs to /tmp or creating a separate partition for /tmp

Solution:
First ensure that systemd is correctly configured to ensure that /tmp will be mounted at boot time.

# systemctl unmask tmp.mount

For specific configuration requirements of the /tmp mount for your environment, modify /etc/fstab

Example of using tmpfs with specific mount options:

tmpfs	/tmp	tmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 0

Note: the size=2G is an example of setting a specific size for tmpfs

Example of using a volume or disk with specific mount options. The source location of the volume or disk will vary depending on your environment:

<device> /tmp <fstype> defaults,nodev,nosuid,noexec 0 0

Impact:

By design files saved to /tmp should have no expectation of surviving a reboot of the system. tmpfs is ram based and all files stored to tmpfs will be lost when the system is rebooted.

If files need to be persistent through a reboot, they should be saved to /var/tmp not /tmp

Since the /tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to tmpfs or a separate partition.

Running out of /tmp space is a problem regardless of what kind of filesystem lies under it, but in a configuration where /tmp is not a separate file system it will essentially have the whole disk available, as the default installation only creates a single / partition. On the other hand, a RAM-based /tmp (as with tmpfs ) will almost certainly be much smaller, which can lead to applications filling up the filesystem much more easily. Another alternative is to create a dedicated partition for /tmp from a separate volume or disk. One of the downsides of a disk-based dedicated partition is that it will be slower than tmpfs which is RAM-based.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/findmnt -nk /tmp
expect: ^[\s]*/tmp[\s]+

Actual Value:
The command '/bin/findmnt -nk /tmp' did not return any result","First ensure that systemd is correctly configured to ensure that /tmp will be mounted at boot time.

# systemctl unmask tmp.mount

For specific configuration requirements of the /tmp mount for your environment, modify /etc/fstab

Example of using tmpfs with specific mount options:

tmpfs	/tmp	tmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 0

Note: the size=2G is an example of setting a specific size for tmpfs

Example of using a volume or disk with specific mount options. The source location of the volume or disk will vary depending on your environment:

<device> /tmp <fstype> defaults,nodev,nosuid,noexec 0 0

Impact:

By design files saved to /tmp should have no expectation of surviving a reboot of the system. tmpfs is ram based and all files stored to tmpfs will be lost when the system is rebooted.

If files need to be persistent through a reboot, they should be saved to /var/tmp not /tmp

Since the /tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to tmpfs or a separate partition.

Running out of /tmp space is a problem regardless of what kind of filesystem lies under it, but in a configuration where /tmp is not a separate file system it will essentially have the whole disk available, as the default installation only creates a single / partition. On the other hand, a RAM-based /tmp (as with tmpfs ) will almost certainly be much smaller, which can lead to applications filling up the filesystem much more easily. Another alternative is to create a dedicated partition for /tmp from a separate volume or disk. One of the downsides of a disk-based dedicated partition is that it will be slower than tmpfs which is RAM-based.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.1.2 Ensure nodev option set on /tmp partition"" : [PASSED]

The nodev mount option specifies that the filesystem cannot contain special devices.

Since the /tmp filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /tmp

Solution:
- IF - a separate partition exists for /tmp

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /tmp partition.

Example:

<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /tmp with the configured options:

# mount -o remount /tmp

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
expect: nodev
file: /proc/self/mountinfo
regex: [\s]+/tmp[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /tmp

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /tmp partition.

Example:

<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /tmp with the configured options:

# mount -o remount /tmp","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.1.3 Ensure nosuid option set on /tmp partition"" : [PASSED]

The nosuid mount option specifies that the filesystem cannot contain setuid files.

Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /tmp

Solution:
- IF - a separate partition exists for /tmp

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /tmp partition.

Example:

<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /tmp with the configured options:

# mount -o remount /tmp

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nosuid
file: /proc/self/mountinfo
regex: [\s]+/tmp[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /tmp

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /tmp partition.

Example:

<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /tmp with the configured options:

# mount -o remount /tmp","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.1.4 Ensure noexec option set on /tmp partition"" : [PASSED]

The noexec mount option specifies that the filesystem cannot contain executable binaries.

Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /tmp

Solution:
- IF - a separate partition exists for /tmp

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /tmp partition.

Example:

<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /tmp with the configured options:

# mount -o remount /tmp

Impact:

Setting the noexec option on /tmp may prevent installation and/or updating of some 3rd party software.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: noexec
file: /proc/self/mountinfo
regex: [\s]+/tmp[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /tmp

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /tmp partition.

Example:

<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /tmp with the configured options:

# mount -o remount /tmp

Impact:

Setting the noexec option on /tmp may prevent installation and/or updating of some 3rd party software.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.2.1 Ensure /dev/shm is a separate partition"" : [PASSED]

The /dev/shm directory is a world-writable directory that can function as shared memory that facilitates inter process communication (IPC).

Making /dev/shm its own file system allows an administrator to set additional mount options such as the noexec option on the mount, making /dev/shm useless for an attacker to install executable code. It would also prevent an attacker from establishing a hard link to a system setuid program and wait for it to be updated. Once the program was updated, the hard link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.

This can be accomplished by mounting tmpfs to /dev/shm

Solution:
For specific configuration requirements of the /dev/shm mount for your environment, modify /etc/fstab

Example:

tmpfs	/dev/shm	tmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 0

Impact:

Since the /dev/shm directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition.

/dev/shm utilizing tmpfs can be resized using the size={size} parameter in the relevant entry in /etc/fstab

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
expect: [\s]+/dev/shm[\s]+
file: /proc/self/mountinfo
regex: [\s]+/dev/shm[\s]+
required: NO

Actual Value:
Compliant file(s):
      /proc/self/mountinfo - regex '[\s]+/dev/shm[\s]+' found - expect '[\s]+/dev/shm[\s]+' found in the following lines:
          8: 31 26 0:26 / /dev/shm rw,nosuid,nodev shared:4 - tmpfs tmpfs rw,inode64","For specific configuration requirements of the /dev/shm mount for your environment, modify /etc/fstab

Example:

tmpfs	/dev/shm	tmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 0

Impact:

Since the /dev/shm directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition.

/dev/shm utilizing tmpfs can be resized using the size={size} parameter in the relevant entry in /etc/fstab","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.2.2 Ensure nodev option set on /dev/shm partition"" : [PASSED]

The nodev mount option specifies that the filesystem cannot contain special devices.

Since the /dev/shm filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create special devices in /dev/shm partitions.

Solution:
- IF - a separate partition exists for /dev/shm

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.

Example:

tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /dev/shm with the configured options:

# mount -o remount /dev/shm

Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nodev
file: /proc/self/mountinfo
regex: [\s]+/dev/shm[\s]+
required: NO

Actual Value:
Compliant file(s):
      /proc/self/mountinfo - regex '[\s]+/dev/shm[\s]+' found - expect 'nodev' found in the following lines:
          8: 31 26 0:26 / /dev/shm rw,nosuid,nodev shared:4 - tmpfs tmpfs rw,inode64","- IF - a separate partition exists for /dev/shm

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.

Example:

tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /dev/shm with the configured options:

# mount -o remount /dev/shm

Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.2.3 Ensure nosuid option set on /dev/shm partition"" : [PASSED]

The nosuid mount option specifies that the filesystem cannot contain setuid files.

Setting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them.

Solution:
- IF - a separate partition exists for /dev/shm

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.

Example:

tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /dev/shm with the configured options:

# mount -o remount /dev/shm

Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nosuid
file: /proc/self/mountinfo
regex: [\s]+/dev/shm[\s]+
required: NO

Actual Value:
Compliant file(s):
      /proc/self/mountinfo - regex '[\s]+/dev/shm[\s]+' found - expect 'nosuid' found in the following lines:
          8: 31 26 0:26 / /dev/shm rw,nosuid,nodev shared:4 - tmpfs tmpfs rw,inode64","- IF - a separate partition exists for /dev/shm

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.

Example:

tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /dev/shm with the configured options:

# mount -o remount /dev/shm

Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.2.4 Ensure noexec option set on /dev/shm partition"" : [FAILED]

The noexec mount option specifies that the filesystem cannot contain executable binaries.

Setting this option on a file system prevents users from executing programs from shared memory. This deters users from introducing potentially malicious software on the system.

Solution:
- IF - a separate partition exists for /dev/shm

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /dev/shm partition.

Example:

tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /dev/shm with the configured options:

# mount -o remount /dev/shm

Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: noexec
file: /proc/self/mountinfo
regex: [\s]+/dev/shm[\s]+
required: NO

Actual Value:
Non-compliant file(s):
      /proc/self/mountinfo - regex '[\s]+/dev/shm[\s]+' found - expect 'noexec' not found in the following lines:
          8: 31 26 0:26 / /dev/shm rw,nosuid,nodev shared:4 - tmpfs tmpfs rw,inode64","- IF - a separate partition exists for /dev/shm

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /dev/shm partition.

Example:

tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /dev/shm with the configured options:

# mount -o remount /dev/shm

Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.3.2 Ensure nodev option set on /home partition"" : [PASSED]

The nodev mount option specifies that the filesystem cannot contain special devices.

Since the /home filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /home

Solution:
- IF - a separate partition exists for /home

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /home partition.

Example:

<device> /home <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /home with the configured options:

# mount -o remount /home

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nodev
file: /proc/self/mountinfo
regex: [\s]+/home[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /home

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /home partition.

Example:

<device> /home <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /home with the configured options:

# mount -o remount /home","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.3.3 Ensure nosuid option set on /home partition"" : [PASSED]

The nosuid mount option specifies that the filesystem cannot contain setuid files.

Since the /home filesystem is only intended for user file storage, set this option to ensure that users cannot create setuid files in /home

Solution:
- IF - a separate partition exists for /home

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /home partition.

Example:

<device> /home <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /home with the configured options:

# mount -o remount /home

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nosuid
file: /proc/self/mountinfo
regex: [\s]+/home[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /home

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /home partition.

Example:

<device> /home <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /home with the configured options:

# mount -o remount /home","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.4.2 Ensure nodev option set on /var partition"" : [FAILED]

The nodev mount option specifies that the filesystem cannot contain special devices.

Since the /var filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var

Solution:
- IF - a separate partition exists for /var

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var partition.

Example:

<device> /var <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var with the configured options:

# mount -o remount /var

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nodev
file: /proc/self/mountinfo
regex: [\s]+/var[\s]+
required: NO

Actual Value:
Non-compliant file(s):
      /proc/self/mountinfo - regex '[\s]+/var[\s]+' found - expect 'nodev' not found in the following lines:
          23: 94 29 253:0 / /var rw,relatime shared:47 - ext4 /dev/mapper/vg--secondary-lv--var rw","- IF - a separate partition exists for /var

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var partition.

Example:

<device> /var <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var with the configured options:

# mount -o remount /var","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.4.3 Ensure nosuid option set on /var partition"" : [FAILED]

The nosuid mount option specifies that the filesystem cannot contain setuid files.

Since the /var filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create setuid files in /var

Solution:
- IF - a separate partition exists for /var

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var partition.

Example:

<device> /var <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var with the configured options:

# mount -o remount /var

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nosuid
file: /proc/self/mountinfo
regex: [\s]+/var[\s]+
required: NO

Actual Value:
Non-compliant file(s):
      /proc/self/mountinfo - regex '[\s]+/var[\s]+' found - expect 'nosuid' not found in the following lines:
          23: 94 29 253:0 / /var rw,relatime shared:47 - ext4 /dev/mapper/vg--secondary-lv--var rw","- IF - a separate partition exists for /var

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var partition.

Example:

<device> /var <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var with the configured options:

# mount -o remount /var","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.5.2 Ensure nodev option set on /var/tmp partition"" : [PASSED]

The nodev mount option specifies that the filesystem cannot contain special devices.

Since the /var/tmp filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var/tmp

Solution:
- IF - a separate partition exists for /var/tmp

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/tmp partition.

Example:

<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/tmp with the configured options:

# mount -o remount /var/tmp

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nodev
file: /proc/self/mountinfo
regex: [\s]+/var/tmp[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/tmp

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/tmp partition.

Example:

<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/tmp with the configured options:

# mount -o remount /var/tmp","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.5.3 Ensure nosuid option set on /var/tmp partition"" : [PASSED]

The nosuid mount option specifies that the filesystem cannot contain setuid files.

Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /var/tmp

Solution:
- IF - a separate partition exists for /var/tmp

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/tmp partition.

Example:

<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/tmp with the configured options:

# mount -o remount /var/tmp

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nosuid
file: /proc/self/mountinfo
regex: [\s]+/var/tmp[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/tmp

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/tmp partition.

Example:

<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/tmp with the configured options:

# mount -o remount /var/tmp","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.5.4 Ensure noexec option set on /var/tmp partition"" : [PASSED]

The noexec mount option specifies that the filesystem cannot contain executable binaries.

Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /var/tmp

Solution:
- IF - a separate partition exists for /var/tmp

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/tmp partition.

Example:

<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/tmp with the configured options:

# mount -o remount /var/tmp

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: noexec
file: /proc/self/mountinfo
regex: [\s]+/var/tmp[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/tmp

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/tmp partition.

Example:

<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/tmp with the configured options:

# mount -o remount /var/tmp","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.6.2 Ensure nodev option set on /var/log partition"" : [PASSED]

The nodev mount option specifies that the filesystem cannot contain special devices.

Since the /var/log filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var/log

Solution:
- IF - a separate partition exists for /var/log

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log partition.

Example:

<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log with the configured options:

# mount -o remount /var/log

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nodev
file: /proc/self/mountinfo
regex: [\s]+/var/log[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/log

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log partition.

Example:

<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log with the configured options:

# mount -o remount /var/log","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.6.3 Ensure nosuid option set on /var/log partition"" : [PASSED]

The nosuid mount option specifies that the filesystem cannot contain setuid files.

Since the /var/log filesystem is only intended for log files, set this option to ensure that users cannot create setuid files in /var/log

Solution:
- IF - a separate partition exists for /var/log

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log partition.

Example:

<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log with the configured options:

# mount -o remount /var/log

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nosuid
file: /proc/self/mountinfo
regex: [\s]+/var/log[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/log

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log partition.

Example:

<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log with the configured options:

# mount -o remount /var/log","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.6.4 Ensure noexec option set on /var/log partition"" : [PASSED]

The noexec mount option specifies that the filesystem cannot contain executable binaries.

Since the /var/log filesystem is only intended for log files, set this option to ensure that users cannot run executable binaries from /var/log

Solution:
- IF - a separate partition exists for /var/log

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log partition.

Example:

<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log with the configured options:

# mount -o remount /var/log

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: noexec
file: /proc/self/mountinfo
regex: [\s]+/var/log[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/log

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log partition.

Example:

<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log with the configured options:

# mount -o remount /var/log","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.7.2 Ensure nodev option set on /var/log/audit partition"" : [PASSED]

The nodev mount option specifies that the filesystem cannot contain special devices.

Since the /var/log/audit filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var/log/audit

Solution:
- IF - a separate partition exists for /var/log/audit

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log/audit partition.

Example:

<device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log/audit with the configured options:

# mount -o remount /var/log/audit

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nodev
file: /proc/self/mountinfo
regex: [\s]+/var/log/audit[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/log/audit

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log/audit partition.

Example:

<device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log/audit with the configured options:

# mount -o remount /var/log/audit","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition"" : [PASSED]

The nosuid mount option specifies that the filesystem cannot contain setuid files.

Since the /var/log/audit filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create setuid files in /var/log/audit

Solution:
- IF - a separate partition exists for /var/log/audit

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log/audit partition.

Example:

<device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log/audit with the configured options:

# mount -o remount /var/log/audit

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nosuid
file: /proc/self/mountinfo
regex: [\s]+/var/log/audit[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/log/audit

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log/audit partition.

Example:

<device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log/audit with the configured options:

# mount -o remount /var/log/audit","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.7.4 Ensure noexec option set on /var/log/audit partition"" : [PASSED]

The noexec mount option specifies that the filesystem cannot contain executable binaries.

Since the /var/log/audit filesystem is only intended for audit logs, set this option to ensure that users cannot run executable binaries from /var/log/audit

Solution:
- IF - a separate partition exists for /var/log/audit

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log/audit partition.

Example:

<device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log/audit with the configured options:

# mount -o remount /var/log/audit

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: noexec
file: /proc/self/mountinfo
regex: [\s]+/var/log/audit[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/log/audit

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log/audit partition.

Example:

<device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log/audit with the configured options:

# mount -o remount /var/log/audit","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.2.1.1 Ensure GPG keys are configured"" : [WARNING]

Most package managers implement GPG key signing to verify package integrity during installation.

It is important to ensure that updates are obtained from a valid source to protect against spoofing that could lead to the inadvertent installation of malware on the system.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Update your package manager GPG keys in accordance with site policy.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.11.2,800-171|3.11.3,800-171|3.14.1,800-53|RA-5,800-53|SI-2,800-53|SI-2(2),800-53r5|RA-5,800-53r5|SI-2,800-53r5|SI-2(2),CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSCv7|3.5,CSCv8|7.3,CSCv8|7.4,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,ITSG-33|SI-2,ITSG-33|SI-2(2),LEVEL|1M,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.1,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,PCI-DSSv4.0|6.3.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.7

Policy Value:
cmd: /bin/apt-key list
expect: ^Manual Review Required$

Actual Value:
The command '/bin/apt-key list' returned : 

Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
/etc/apt/trusted.gpg.d/ubuntu-keyring-2012-cdimage.gpg
------------------------------------------------------
pub   rsa4096 2012-05-11 [SC]
      8439 38DF 228D 22F7 B374  2BC0 D94A A3F0 EFE2 1092
uid           [ unknown] Ubuntu CD Image Automatic Signing Key (2012) <cdimage@ubuntu.com>

/etc/apt/trusted.gpg.d/ubuntu-keyring-2018-archive.gpg
------------------------------------------------------
pub   rsa4096 2018-09-17 [SC]
      F6EC B376 2474 EDA9 D21B  7022 8719 20D1 991B C93C
uid           [ unknown] Ubuntu Archive Automatic Signing Key (2018) <ftpmaster@ubuntu.com>","Update your package manager GPG keys in accordance with site policy.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.2.1.2 Ensure package manager repositories are configured"" : [WARNING]

Systems need to have package manager repositories configured to ensure they receive the latest patches and updates.

If a system's package repositories are misconfigured important patches may not be identified or a rogue repository could introduce compromised software.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Configure your package manager repositories according to site policy.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.11.2,800-171|3.11.3,800-171|3.14.1,800-53|RA-5,800-53|SI-2,800-53|SI-2(2),800-53r5|RA-5,800-53r5|SI-2,800-53r5|SI-2(2),CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSCv7|3.5,CSCv8|7.3,CSCv8|7.4,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,ITSG-33|SI-2,ITSG-33|SI-2(2),LEVEL|1M,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.1,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,PCI-DSSv4.0|6.3.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.7

Policy Value:
cmd: /bin/apt-cache policy
expect: ^Manual Review Required$

Actual Value:
The command '/bin/apt-cache policy' returned : 

Package files:
 100 /var/lib/dpkg/status
     release a=now
Pinned packages:","Configure your package manager repositories according to site policy.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.2.2.1 Ensure updates, patches, and additional security software are installed"" : [PASSED]

Periodically patches are released for included software either due to security flaws or to include additional functionality.

Newer patches may contain security enhancements that would not be available through the latest full update. As a result, it is recommended that the latest software patches be used to take advantage of the latest functionality. As with any software installation, organizations need to determine if a given update meets their requirements and verify the compatibility and supportability of any additional software against the update revision that is selected.

Solution:
Run the following command to update all packages following local site policy guidance on applying updates and patches:

# apt update

# apt upgrade
  - OR -
# apt dist-upgrade

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.11.2,800-171|3.11.3,800-171|3.14.1,800-53|RA-5,800-53|SI-2,800-53|SI-2(2),800-53r5|RA-5,800-53r5|SI-2,800-53r5|SI-2(2),CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSCv7|3.5,CSCv8|7.3,CSCv8|7.4,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,ITSG-33|SI-2,ITSG-33|SI-2(2),LEVEL|1M,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.1,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,PCI-DSSv4.0|6.3.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.7

Policy Value:
cmd: /bin/apt-get -s upgrade | /bin/grep -Ev '(Reading|Building|Calculating)'
expect: ^[\s]*0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded

Actual Value:
The command '/bin/apt-get -s upgrade | /bin/grep -Ev '(Reading|Building|Calculating)'' returned : 

0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.","Run the following command to update all packages following local site policy guidance on applying updates and patches:

# apt update

# apt upgrade
  - OR -
# apt dist-upgrade","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.3.1.1 Ensure AppArmor is installed"" : [FAILED]

AppArmor provides Mandatory Access Controls.

Without a Mandatory Access Control system installed only the default Discretionary Access Control system will be available.

Solution:
Install AppArmor.

# apt install apparmor apparmor-utils

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - dpkg check apparmor-utils
The command '/bin/dpkg -s apparmor-utils 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

dpkg-query: package 'apparmor-utils' is not installed and no information is available

-------------------------
PASSED - dpkg check apparmor
The command '/bin/dpkg -s apparmor 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

Status: install ok installed","Install AppArmor.

# apt install apparmor apparmor-utils","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration"" : [FAILED]

Configure AppArmor to be enabled at boot time and verify that it has not been overwritten by the bootloader boot parameters.

Note: This recommendation is designed around the grub bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings.

AppArmor must be enabled at boot time in your bootloader configuration to ensure that the controls it provides are not overridden.

Solution:
Edit /etc/default/grub and add the apparmor=1 and security=apparmor parameters to the GRUB_CMDLINE_LINUX= line

GRUB_CMDLINE_LINUX=""apparmor=1 security=apparmor""

Run the following command to update the grub2 configuration:

# update-grub

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - grub.cfg security=apparmor
Non-compliant file(s):
      /boot/grub/grub.cfg - regex '^[\s]*linux[\s]*' found - expect '(?i)security=apparmor(?-i)' not found in the following lines:
          148: 	linux	/vmlinuz-5.15.0-113-generic root=/dev/mapper/vg--main-lv--root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  intel_iommu=on iommu=pt
          167: 		linux	/vmlinuz-5.15.0-113-generic root=/dev/mapper/vg--main-lv--root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  intel_iommu=on iommu=pt
          185: 		linux	/vmlinuz-5.15.0-113-generic root=/dev/mapper/vg--main-lv--root ro recovery nomodeset dis_ucode_ldr noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0 
          204: 		linux	/vmlinuz-5.15.0-87-generic root=/dev/mapper/vg--main-lv--root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  intel_iommu=on iommu=pt
          222: 		linux	/vmlinuz-5.15.0-87-generic root=/dev/mapper/vg--main-lv--root ro recovery nomodeset dis_ucode_ldr noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0

-------------------------
FAILED - grub.cfg apparmor=1
Non-compliant file(s):
      /boot/grub/grub.cfg - regex '^[\s]*linux[\s]*' found - expect '(?i)apparmor=1(?-i)' not found in the following lines:
          148: 	linux	/vmlinuz-5.15.0-113-generic root=/dev/mapper/vg--main-lv--root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  intel_iommu=on iommu=pt
          167: 		linux	/vmlinuz-5.15.0-113-generic root=/dev/mapper/vg--main-lv--root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  intel_iommu=on iommu=pt
          185: 		linux	/vmlinuz-5.15.0-113-generic root=/dev/mapper/vg--main-lv--root ro recovery nomodeset dis_ucode_ldr noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0 
          204: 		linux	/vmlinuz-5.15.0-87-generic root=/dev/mapper/vg--main-lv--root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  intel_iommu=on iommu=pt
          222: 		linux	/vmlinuz-5.15.0-87-generic root=/dev/mapper/vg--main-lv--root ro recovery nomodeset dis_ucode_ldr noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0","Edit /etc/default/grub and add the apparmor=1 and security=apparmor parameters to the GRUB_CMDLINE_LINUX= line

GRUB_CMDLINE_LINUX=""apparmor=1 security=apparmor""

Run the following command to update the grub2 configuration:

# update-grub","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.3.1.3 Ensure all AppArmor Profiles are in enforce or complain mode"" : [PASSED]

AppArmor profiles define what resources applications are able to access.

Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that any policies that exist on the system are activated.

Solution:
Run the following command to set all profiles to enforce mode:

# aa-enforce /etc/apparmor.d/*

OR

Run the following command to set all profiles to complain mode:

# aa-complain /etc/apparmor.d/*

Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - apparmor_status - processes are confined
The command '/sbin/apparmor_status' returned : 

apparmor module is loaded.
42 profiles are loaded.
42 profiles are in enforce mode.
   /snap/snapd/19457/usr/lib/snapd/snap-confine
   /snap/snapd/19457/usr/lib/snapd/snap-confine//mount-namespace-capture-helper
   /snap/snapd/20290/usr/lib/snapd/snap-confine
   /snap/snapd/20290/usr/lib/snapd/snap-confine//mount-namespace-capture-helper
   /usr/bin/man
   /usr/lib/NetworkManager/nm-dhcp-client.action
   /usr/lib/NetworkManager/nm-dhcp-helper
   /usr/lib/connman/scripts/dhclient-script
   /usr/lib/snapd/snap-confine
   /usr/lib/snapd/snap-confine//mount-namespace-capture-helper
   /{,usr/}sbin/dhclient
   docker-default
   lsb_release
   man_filter
   man_groff
   nvidia_modprobe
   nvidia_modprobe//kmod
   snap-update-ns.lxd
   snap.lxd.activate
   snap.lxd.benchmark
   snap.lxd.buginfo
   snap.lxd.check-kernel
   snap.lxd.daemon
   snap.lxd.hook.configure
   snap.lxd.hook.install
   snap.lxd.hook.remove
   snap.lxd.lxc
   snap.lxd.lxc-to-lxd
   snap.lxd.lxd
   snap.lxd.migrate
   snap.lxd.user-daemon
   tcpdump
   ubuntu_pro_apt_news
   ubuntu_pro_esm_cache
   ubuntu_pro_esm_cache//apt_methods
   ubuntu_pro_esm_cache//apt_methods_gpgv
   ubuntu_pro_esm_cache//cloud_id
   ubuntu_pro_esm_cache//dpkg
   ubuntu_pro_esm_cache//ps
   ubuntu_pro_esm_cache//ubuntu_distro_info
   ubuntu_pro_esm_cache_systemctl
   ubuntu_pro_esm_cache_systemd_detect_virt
0 profiles are in complain mode.
0 profiles are in kill mode.
0 profiles are in unconfined mode.
5 processes have profiles defined.
5 processes are in enforce mode.
   /app/scion-all (2075830) docker-default
   /app/scion-all (2075838) docker-default
   /otelcol-contrib (2075840) docker-default
   /app/scion-all (2075867) docker-default
   /app/appliance (2075882) docker-default
0 processes are in complain mode.
0 processes are unconfined but have a profile defined.
0 processes are in mixed mode.
0 processes are in kill mode.

-------------------------
PASSED - apparmor_status - profiles are loaded
The command '/sbin/apparmor_status' returned : 

apparmor module is loaded.
42 profiles are loaded.
42 profiles are in enforce mode.
   /snap/snapd/19457/usr/lib/snapd/snap-confine
   /snap/snapd/19457/usr/lib/snapd/snap-confine//mount-namespace-capture-helper
   /snap/snapd/20290/usr/lib/snapd/snap-confine
   /snap/snapd/20290/usr/lib/snapd/snap-confine//mount-namespace-capture-helper
   /usr/bin/man
   /usr/lib/NetworkManager/nm-dhcp-client.action
   /usr/lib/NetworkManager/nm-dhcp-helper
   /usr/lib/connman/scripts/dhclient-script
   /usr/lib/snapd/snap-confine
   /usr/lib/snapd/snap-confine//mount-namespace-capture-helper
   /{,usr/}sbin/dhclient
   docker-default
   lsb_release
   man_filter
   man_groff
   nvidia_modprobe
   nvidia_modprobe//kmod
   snap-update-ns.lxd
   snap.lxd.activate
   snap.lxd.benchmark
   snap.lxd.buginfo
   snap.lxd.check-kernel
   snap.lxd.daemon
   snap.lxd.hook.configure
   snap.lxd.hook.install
   snap.lxd.hook.remove
   snap.lxd.lxc
   snap.lxd.lxc-to-lxd
   snap.lxd.lxd
   snap.lxd.migrate
   snap.lxd.user-daemon
   tcpdump
   ubuntu_pro_apt_news
   ubuntu_pro_esm_cache
   ubuntu_pro_esm_cache//apt_methods
   ubuntu_pro_esm_cache//apt_methods_gpgv
   ubuntu_pro_esm_cache//cloud_id
   ubuntu_pro_esm_cache//dpkg
   ubuntu_pro_esm_cache//ps
   ubuntu_pro_esm_cache//ubuntu_distro_info
   ubuntu_pro_esm_cache_systemctl
   ubuntu_pro_esm_cache_systemd_detect_virt
0 profiles are in complain mode.
0 profiles are in kill mode.
0 profiles are in unconfined mode.
5 processes have profiles defined.
5 processes are in enforce mode.
   /app/scion-all (2075830) docker-default
   /app/scion-all (2075838) docker-default
   /otelcol-contrib (2075840) docker-default
   /app/scion-all (2075867) docker-default
   /app/appliance (2075882) docker-default
0 processes are in complain mode.
0 processes are unconfined but have a profile defined.
0 processes are in mixed mode.
0 processes are in kill mode.","Run the following command to set all profiles to enforce mode:

# aa-enforce /etc/apparmor.d/*

OR

Run the following command to set all profiles to complain mode:

# aa-complain /etc/apparmor.d/*

Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.4.1 Ensure bootloader password is set"" : [FAILED]

Setting the boot loader password will require that anyone rebooting the system must enter a password before being able to set command line boot parameters

Requiring a boot password upon execution of the boot loader will prevent an unauthorized user from entering boot parameters or changing the boot partition. This prevents users from weakening security (e.g. turning off AppArmor at boot time).

Solution:
Create an encrypted password with grub-mkpasswd-pbkdf2 :

# grub-mkpasswd-pbkdf2 --iteration-count=600000 --salt=64

Enter password: <password>
Reenter password: <password>
PBKDF2 hash of your password is <encrypted-password>

Add the following into a custom /etc/grub.d configuration file:

cat <<EOF
exec tail -n +2 $0
set superusers=""<username>""
password_pbkdf2 <username> <encrypted-password>
EOF

The superuser/user information and password should not be contained in the /etc/grub.d/00_header file as this file could be overwritten in a package update.

If there is a requirement to be able to boot/reboot without entering the password, edit /etc/grub.d/10_linux and add --unrestricted to the line CLASS=

Example:

CLASS=""--class gnu-linux --class gnu --class os --unrestricted""

Run the following command to update the grub2 configuration:

# update-grub

Impact:

If password protection is enabled, only the designated superuser can edit a GRUB 2 menu item by pressing ""e"" or access the GRUB 2 command line by pressing ""c""

If GRUB 2 is set up to boot automatically to a password-protected menu entry the user has no option to back out of the password prompt to select another menu entry. Holding the SHIFT key will not display the menu in this case. The user must enter the correct username and password. If unable to do so, the configuration files will have to be edited via a LiveCD or other means to fix the problem

You can add --unrestricted to the menu entries to allow the system to boot without entering a password. A password will still be required to edit menu items.

More Information:

https://help.ubuntu.com/community/Grub2/Passwords

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - grub.cfg superusers
The file ""/boot/grub/grub.cfg"" does not contain ""^[\s]*set[\s]*superusers[\s]*=""

-------------------------
FAILED - grub.cfg password
The file ""/boot/grub/grub.cfg"" does not contain ""^[\s]*password""","Create an encrypted password with grub-mkpasswd-pbkdf2 :

# grub-mkpasswd-pbkdf2 --iteration-count=600000 --salt=64

Enter password: <password>
Reenter password: <password>
PBKDF2 hash of your password is <encrypted-password>

Add the following into a custom /etc/grub.d configuration file:

cat <<EOF
exec tail -n +2 $0
set superusers=""<username>""
password_pbkdf2 <username> <encrypted-password>
EOF

The superuser/user information and password should not be contained in the /etc/grub.d/00_header file as this file could be overwritten in a package update.

If there is a requirement to be able to boot/reboot without entering the password, edit /etc/grub.d/10_linux and add --unrestricted to the line CLASS=

Example:

CLASS=""--class gnu-linux --class gnu --class os --unrestricted""

Run the following command to update the grub2 configuration:

# update-grub

Impact:

If password protection is enabled, only the designated superuser can edit a GRUB 2 menu item by pressing ""e"" or access the GRUB 2 command line by pressing ""c""

If GRUB 2 is set up to boot automatically to a password-protected menu entry the user has no option to back out of the password prompt to select another menu entry. Holding the SHIFT key will not display the menu in this case. The user must enter the correct username and password. If unable to do so, the configuration files will have to be edited via a LiveCD or other means to fix the problem

You can add --unrestricted to the menu entries to allow the system to boot without entering a password. A password will still be required to edit menu items.

More Information:

https://help.ubuntu.com/community/Grub2/Passwords","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.4.2 Ensure access to bootloader config is configured"" : [FAILED]

The grub configuration file contains information on boot settings and passwords for unlocking boot options.

Setting the permissions to read and write for root only prevents non-root users from seeing the boot parameters or changing them. Non-root users who read the boot parameters may be able to identify weaknesses in security upon boot and be able to exploit them.

Solution:
Run the following commands to set permissions on your grub configuration:

# chown root:root /boot/grub/grub.cfg
# chmod u-x,go-rwx /boot/grub/grub.cfg

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /boot/grub/grub.cfg
group: root
mask: 7177
owner: root

Actual Value:
The file /boot/grub/grub.cfg with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE  does not match the policy value owner: root group: root mask: 7177 uneven permissions : FALSE 

/boot/grub/grub.cfg","Run the following commands to set permissions on your grub configuration:

# chown root:root /boot/grub/grub.cfg
# chmod u-x,go-rwx /boot/grub/grub.cfg","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.5.1 Ensure address space layout randomization is enabled"" : [FAILED]

Address space layout randomization (ASLR) is an exploit mitigation technique which randomly arranges the address space of key data areas of a process.

Randomly placing virtual memory regions will make it difficult to write memory page exploits as the memory placement will be consistently shifting.

Solution:
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - kernel.randomize_va_space = 2

Example:

# printf ""%s
"" ""kernel.randomize_va_space = 2"" >> /etc/sysctl.d/60-kernel_sysctl.conf

Run the following command to set the active kernel parameter:

# sysctl -w kernel.randomize_va_space=2

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|SI-16,800-53r5|SI-16,CSCv7|8.3,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|1A

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""kernel.randomize_va_space"" is not set in an included file
   ** Note: ""kernel.randomize_va_space"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""kernel.randomize_va_space"" is correctly set to ""2"" in the running configuration","Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - kernel.randomize_va_space = 2

Example:

# printf ""%s
"" ""kernel.randomize_va_space = 2"" >> /etc/sysctl.d/60-kernel_sysctl.conf

Run the following command to set the active kernel parameter:

# sysctl -w kernel.randomize_va_space=2

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.5.2 Ensure ptrace_scope is restricted"" : [PASSED]

The ptrace() system call provides a means by which one process (the ""tracer"") may observe and control the execution of another process (the ""tracee""), and examine and change the tracee's memory and registers.

If one application is compromised, it would be possible for an attacker to attach to other running processes (e.g. Bash, Firefox, SSH sessions, GPG agent, etc) to extract additional credentials and continue to expand the scope of their attack.

Enabling restricted mode will limit the ability of a compromised process to PTRACE_ATTACH on other processes running under the same user. With restricted mode, ptrace will continue to work with root user.

Solution:
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - kernel.yama.ptrace_scope = 1

Example:

# printf ""%s
"" ""kernel.yama.ptrace_scope = 1"" >> /etc/sysctl.d/60-kernel_sysctl.conf

Run the following command to set the active kernel parameter:

# sysctl -w kernel.yama.ptrace_scope=1

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - ""kernel.yama.ptrace_scope"" is correctly set to ""1"" in the running configuration
 - ""kernel.yama.ptrace_scope"" is correctly set to ""1"" in ""/etc/sysctl.d/10-ptrace.conf""","Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - kernel.yama.ptrace_scope = 1

Example:

# printf ""%s
"" ""kernel.yama.ptrace_scope = 1"" >> /etc/sysctl.d/60-kernel_sysctl.conf

Run the following command to set the active kernel parameter:

# sysctl -w kernel.yama.ptrace_scope=1

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.5.3 Ensure core dumps are restricted"" : [FAILED]

A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core.

Solution:
Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - fs.suid_dumpable = 0

Example:

# printf ""%s
"" ""fs.suid_dumpable = 0"" >> /etc/sysctl.d/60-fs_sysctl.conf

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

-IF- systemd-coredump is installed:

edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.7,800-53|AC-6(10),800-53r5|AC-6(10),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - hard core 0
No matching files were found
Less than 1 matches of regex found

-------------------------
PASSED - check if coredump.service is enabled
The command '/bin/systemctl is-enabled coredump.service | /bin/awk '{print} END { if(NR==0) print ""disabled"" }'' returned : 

Failed to get unit file state for coredump.service: No such file or directory
disabled

-------------------------
FAILED - fs.suid_dumpable
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""fs.suid_dumpable"" is not set in an included file
   ** Note: ""fs.suid_dumpable"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""fs.suid_dumpable"" is correctly set to ""0"" in the running configuration","Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - fs.suid_dumpable = 0

Example:

# printf ""%s
"" ""fs.suid_dumpable = 0"" >> /etc/sysctl.d/60-fs_sysctl.conf

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

-IF- systemd-coredump is installed:

edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.5.4 Ensure prelink is not installed"" : [PASSED]

prelink is a program that modifies ELF shared libraries and ELF dynamically linked binaries in such a way that the time needed for the dynamic linker to perform relocations at startup significantly decreases.

The prelinking feature can interfere with the operation of AIDE, because it changes binaries. Prelinking can also increase the vulnerability of the system if a malicious user is able to compromise a common library such as libc.

Solution:
Run the following command to restore binaries to normal:

# prelink -ua

Uninstall prelink using the appropriate package manager or manual installation:

# apt purge prelink

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.7,800-171|3.3.1,800-171|3.3.2,800-53|AC-6(9),800-53|AU-2,800-53|AU-12,800-53r5|AC-6(9),800-53r5|AU-2,800-53r5|AU-12,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.3(a),CN-L3|8.1.10.6(a),CSCv7|14.9,CSCv8|3.14,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.3,ITSG-33|AC-6,ITSG-33|AU-2,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /bin/dpkg -s prelink 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s prelink 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'prelink' is not installed and no information is available","Run the following command to restore binaries to normal:

# prelink -ua

Uninstall prelink using the appropriate package manager or manual installation:

# apt purge prelink","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.5.5 Ensure Automatic Error Reporting is not enabled"" : [PASSED]

The Apport Error Reporting Service automatically generates crash reports for debugging

Apport collects potentially sensitive data, such as core dumps, stack traces, and log files. They can contain passwords, credit card numbers, serial numbers, and other private material.

Solution:
Edit /etc/default/apport and add or edit the enabled parameter to equal 0 :

enabled=0

Run the following commands to stop and mask the apport service

# systemctl stop apport.service
# systemctl mask apport.service

- OR -

Run the following command to remove the apport package:

# apt purge apport

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - check if apport.service is active
The command '/bin/systemctl is-active apport.service | /bin/grep '^active' | /bin/awk '{print} END {if(NR==0) print ""pass""}'' returned : 

pass

-------------------------
PASSED - /etc/default/apport - enabled
No matching files were found","Edit /etc/default/apport and add or edit the enabled parameter to equal 0 :

enabled=0

Run the following commands to stop and mask the apport service

# systemctl stop apport.service
# systemctl mask apport.service

- OR -

Run the following command to remove the apport package:

# apt purge apport","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.6.1 Ensure message of the day is configured properly"" : [PASSED]

The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: m - machine architecture r - operating system release s - operating system name v - operating system version

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the "" uname -a "" command once they have logged in.

Solution:
Edit the /etc/motd file with the appropriate contents according to your site policy, remove any instances of m r s v or references to the OS platform

- OR -

- IF - the motd is not used, this file can be removed.

Run the following command to remove the motd file:

# rm /etc/motd

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.9,800-53|AC-8a.,800-53r5|AC-8a.,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8a.,LEVEL|1A,NESA|M5.2.5,NESA|T5.5.1,NIAv2|AM10a,NIAv2|AM10b,NIAv2|AM10c,NIAv2|AM10d,NIAv2|AM10e,TBA-FIISB|45.2.4

Policy Value:
PASSED","Edit the /etc/motd file with the appropriate contents according to your site policy, remove any instances of m r s v or references to the OS platform

- OR -

- IF - the motd is not used, this file can be removed.

Run the following command to remove the motd file:

# rm /etc/motd","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.6.2 Ensure local login warning banner is configured properly"" : [FAILED]

The contents of the /etc/issue file are displayed to users prior to login for local terminals.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: m - machine architecture r - operating system release s - operating system name v - operating system version - or the operating system's name

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the "" uname -a "" command once they have logged in.

Solution:
Edit the /etc/issue file with the appropriate contents according to your site policy, remove any instances of m r s v or references to the OS platform

Example:

# echo ""Authorized users only. All activity may be monitored and reported."" > /etc/issue

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.9,800-53|AC-8,800-53r5|AC-8,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - banner text
First ERROR: Ubuntu 22.04.4 != All activities
Ubuntu 22.04.4 LTS \n \l

-------------------------
PASSED - mrsv not included in /etc/issue
The file ""/etc/issue"" does not contain ""\\[mrsv]""","Edit the /etc/issue file with the appropriate contents according to your site policy, remove any instances of m r s v or references to the OS platform

Example:

# echo ""Authorized users only. All activity may be monitored and reported."" > /etc/issue","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.6.3 Ensure remote login warning banner is configured properly"" : [FAILED]

The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: m - machine architecture r - operating system release s - operating system name v - operating system version

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the "" uname -a "" command once they have logged in.

Solution:
Edit the /etc/issue.net file with the appropriate contents according to your site policy, remove any instances of m r s v or references to the OS platform

Example:

# echo ""Authorized users only. All activity may be monitored and reported."" > /etc/issue.net

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.9,800-53|AC-8,800-53r5|AC-8,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - mrsv not included in /etc/issue.net
The file ""/etc/issue.net"" does not contain ""\\[mrsv]""

-------------------------
FAILED - banner text
First ERROR: Ubuntu 22.04.4 != All activities
Ubuntu 22.04.4 LTS","Edit the /etc/issue.net file with the appropriate contents according to your site policy, remove any instances of m r s v or references to the OS platform

Example:

# echo ""Authorized users only. All activity may be monitored and reported."" > /etc/issue.net","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.6.4 Ensure access to /etc/motd is configured"" : [PASSED]

The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.

- IF - the /etc/motd file does not have the correct access configured, it could be modified by unauthorized users with incorrect or misleading information.

Solution:
Run the following commands to set mode, owner, and group on /etc/motd :

# chown root:root $(readlink -e /etc/motd)
# chmod u-x,go-wx $(readlink -e /etc/motd)

- OR -

Run the following command to remove the /etc/motd file:

# rm /etc/motd

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/motd
group: root
mask: 133
owner: root
required: NO

Actual Value:
","Run the following commands to set mode, owner, and group on /etc/motd :

# chown root:root $(readlink -e /etc/motd)
# chmod u-x,go-wx $(readlink -e /etc/motd)

- OR -

Run the following command to remove the /etc/motd file:

# rm /etc/motd","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.6.5 Ensure access to /etc/issue is configured"" : [PASSED]

The contents of the /etc/issue file are displayed to users prior to login for local terminals.

- IF - the /etc/issue file does not have the correct access configured, it could be modified by unauthorized users with incorrect or misleading information.

Solution:
Run the following commands to set mode, owner, and group on /etc/issue :

# chown root:root $(readlink -e /etc/issue)
# chmod u-x,go-wx $(readlink -e /etc/issue)

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/issue
group: root
mask: 133
owner: root

Actual Value:
The file /etc/issue with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/issue","Run the following commands to set mode, owner, and group on /etc/issue :

# chown root:root $(readlink -e /etc/issue)
# chmod u-x,go-wx $(readlink -e /etc/issue)","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.6.6 Ensure access to /etc/issue.net is configured"" : [PASSED]

The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.

- IF - the /etc/issue.net file does not have the correct access configured, it could be modified by unauthorized users with incorrect or misleading information.

Solution:
Run the following commands to set mode, owner, and group on /etc/issue.net :

# chown root:root $(readlink -e /etc/issue.net)
# chmod u-x,go-wx $(readlink -e /etc/issue.net)

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/issue.net
group: root
mask: 133
owner: root

Actual Value:
The file /etc/issue.net with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/issue.net","Run the following commands to set mode, owner, and group on /etc/issue.net :

# chown root:root $(readlink -e /etc/issue.net)
# chmod u-x,go-wx $(readlink -e /etc/issue.net)","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.10 Ensure XDCMP is not enabled"" : [PASSED]

X Display Manager Control Protocol (XDMCP) is designed to provide authenticated access to display management services for remote displays

XDMCP is inherently insecure.

 - XDMCP is not a ciphered protocol. This may allow an attacker to capture keystrokes entered by a user
 - XDMCP is vulnerable to man-in-the-middle attacks. This may allow an attacker to steal the credentials of legitimate users by impersonating the XDMCP server.

Solution:
Edit all files returned by the audit and remove or commend out the Enable=true line in the [xdmcp] block:

Example file:

# GDM configuration storage
#
# See /usr/share/gdm/gdm.schemas for a list of available options.

[daemon]
# Uncomment the line below to force the login screen to use Xorg
#WaylandEnable=false

# Enabling automatic login
# AutomaticLoginEnable = true
# AutomaticLogin = user1

# Enabling timed login
# TimedLoginEnable = true
# TimedLogin = user1
# TimedLoginDelay = 10

[security]

[xdmcp]
# Enable=true <- **This line should be removed or commented out**

[chooser]

[debug]
# Uncomment the line below to turn on debugging
# More verbose logs
# Additionally lets the X server dump core if it crashes
#Enable=true

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

Pass","Edit all files returned by the audit and remove or commend out the Enable=true line in the [xdmcp] block:

Example file:

# GDM configuration storage
#
# See /usr/share/gdm/gdm.schemas for a list of available options.

[daemon]
# Uncomment the line below to force the login screen to use Xorg
#WaylandEnable=false

# Enabling automatic login
# AutomaticLoginEnable = true
# AutomaticLogin = user1

# Enabling timed login
# TimedLoginEnable = true
# TimedLogin = user1
# TimedLoginDelay = 10

[security]

[xdmcp]
# Enable=true <- **This line should be removed or commented out**

[chooser]

[debug]
# Uncomment the line below to turn on debugging
# More verbose logs
# Additionally lets the X server dump core if it crashes
#Enable=true","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.2 Ensure GDM login banner is configured"" : [PASSED]

GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place.

Solution:
- IF - GDM is installed:

Run the following script to set and enable the text banner message on the login screen:

#!/usr/bin/env bash

{
   l_pkgoutput=""""
   if command -v dpkg-query &amp;> /dev/null; then
      l_pq=""dpkg-query -s""
   elif command -v rpm &amp;> /dev/null; then
      l_pq=""rpm -q""
   fi
   l_pcl=""gdm gdm3"" # Space separated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq ""$l_pn"" &amp;> /dev/null &amp;&amp; l_pkgoutput=""$l_pkgoutput
 - Package: \""$l_pn\"" exists on the system
 - checking configuration""
   done
   if [ -n ""$l_pkgoutput"" ]; then

      l_gdmprofile=""gdm"" # Set this to desired profile name IaW Local site policy
      l_bmessage=""'Authorized uses only. All activity may be monitored and reported'"" # Set to desired banner message
      if [ ! -f ""/etc/dconf/profile/$l_gdmprofile"" ]; then
         echo ""Creating profile \""$l_gdmprofile\""""
         echo -e ""user-db:user
system-db:$l_gdmprofile
file-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults"" > /etc/dconf/profile/$l_gdmprofile
      fi
      if [ ! -d ""/etc/dconf/db/$l_gdmprofile.d/"" ]; then
         echo ""Creating dconf database directory \""/etc/dconf/db/$l_gdmprofile.d/\""""
         mkdir /etc/dconf/db/$l_gdmprofile.d/
      fi
      if ! grep -Piq '^h*banner-message-enableh*=h*trueb' /etc/dconf/db/$l_gdmprofile.d/*; then
         echo ""creating gdm keyfile for machine-wide settings""
         if ! grep -Piq -- '^h*banner-message-enableh*=h*' /etc/dconf/db/$l_gdmprofile.d/*; then
            l_kfile=""/etc/dconf/db/$l_gdmprofile.d/01-banner-message""
            echo -e ""
[org/gnome/login-screen]
banner-message-enable=true"" >> ""$l_kfile""
         else
            l_kfile=""$(grep -Pil -- '^h*banner-message-enableh*=h*' /etc/dconf/db/$l_gdmprofile.d/*)""
            ! grep -Pq '^h*[org/gnome/login-screen]' ""$l_kfile"" &amp;&amp; sed -ri '/^s*banner-message-enable/ i[org/gnome/login-screen]' ""$l_kfile""
            ! grep -Pq '^h*banner-message-enableh*=h*trueb' ""$l_kfile"" &amp;&amp; sed -ri 's/^s*(banner-message-enables*=s*)(S+)(s*.*$)/1true 3//' ""$l_kfile""
 # sed -ri '/^s*[org/gnome/login-screen]/ a\nbanner-message-enable=true' ""$l_kfile""
         fi
      fi
      if ! grep -Piq ""^h*banner-message-text=['\""]+S+"" ""$l_kfile""; then
         sed -ri ""/^s*banner-message-enable/ abanner-message-text=$l_bmessage"" ""$l_kfile""
      fi
      dconf update
   else
      echo -e ""

 - GNOME Desktop Manager isn't installed
 - Recommendation is Not Applicable
 - No remediation required
""
   fi
}

Notes:

 - There is no character limit for the banner message. gnome-shell autodetects longer stretches of text and enters two column mode.
 - The banner message cannot be read from an external file.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.9,800-53|AC-8,800-53r5|AC-8,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- GNOME Desktop Manager isn't installed
 - Recommendation is Not Applicable
- Audit result:
  *** PASS ***


- Audit Result:
  ** PASS **","- IF - GDM is installed:

Run the following script to set and enable the text banner message on the login screen:

#!/usr/bin/env bash

{
   l_pkgoutput=""""
   if command -v dpkg-query &amp;> /dev/null; then
      l_pq=""dpkg-query -s""
   elif command -v rpm &amp;> /dev/null; then
      l_pq=""rpm -q""
   fi
   l_pcl=""gdm gdm3"" # Space separated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq ""$l_pn"" &amp;> /dev/null &amp;&amp; l_pkgoutput=""$l_pkgoutput
 - Package: \""$l_pn\"" exists on the system
 - checking configuration""
   done
   if [ -n ""$l_pkgoutput"" ]; then

      l_gdmprofile=""gdm"" # Set this to desired profile name IaW Local site policy
      l_bmessage=""'Authorized uses only. All activity may be monitored and reported'"" # Set to desired banner message
      if [ ! -f ""/etc/dconf/profile/$l_gdmprofile"" ]; then
         echo ""Creating profile \""$l_gdmprofile\""""
         echo -e ""user-db:user
system-db:$l_gdmprofile
file-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults"" > /etc/dconf/profile/$l_gdmprofile
      fi
      if [ ! -d ""/etc/dconf/db/$l_gdmprofile.d/"" ]; then
         echo ""Creating dconf database directory \""/etc/dconf/db/$l_gdmprofile.d/\""""
         mkdir /etc/dconf/db/$l_gdmprofile.d/
      fi
      if ! grep -Piq '^h*banner-message-enableh*=h*trueb' /etc/dconf/db/$l_gdmprofile.d/*; then
         echo ""creating gdm keyfile for machine-wide settings""
         if ! grep -Piq -- '^h*banner-message-enableh*=h*' /etc/dconf/db/$l_gdmprofile.d/*; then
            l_kfile=""/etc/dconf/db/$l_gdmprofile.d/01-banner-message""
            echo -e ""
[org/gnome/login-screen]
banner-message-enable=true"" >> ""$l_kfile""
         else
            l_kfile=""$(grep -Pil -- '^h*banner-message-enableh*=h*' /etc/dconf/db/$l_gdmprofile.d/*)""
            ! grep -Pq '^h*[org/gnome/login-screen]' ""$l_kfile"" &amp;&amp; sed -ri '/^s*banner-message-enable/ i[org/gnome/login-screen]' ""$l_kfile""
            ! grep -Pq '^h*banner-message-enableh*=h*trueb' ""$l_kfile"" &amp;&amp; sed -ri 's/^s*(banner-message-enables*=s*)(S+)(s*.*$)/1true 3//' ""$l_kfile""
 # sed -ri '/^s*[org/gnome/login-screen]/ a\nbanner-message-enable=true' ""$l_kfile""
         fi
      fi
      if ! grep -Piq ""^h*banner-message-text=['\""]+S+"" ""$l_kfile""; then
         sed -ri ""/^s*banner-message-enable/ abanner-message-text=$l_bmessage"" ""$l_kfile""
      fi
      dconf update
   else
      echo -e ""

 - GNOME Desktop Manager isn't installed
 - Recommendation is Not Applicable
 - No remediation required
""
   fi
}

Notes:

 - There is no character limit for the banner message. gnome-shell autodetects longer stretches of text and enters two column mode.
 - The banner message cannot be read from an external file.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.3 Ensure GDM disable-user-list option is enabled"" : [PASSED]

GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.

The disable-user-list option controls if a list of users is displayed on the login screen

Displaying the user list eliminates half of the Userid/Password equation that an unauthorized person would need to log on.

Solution:
- IF - GDM is installed:

Run the following script to enable the disable-user-list option:

Note: the l_gdm_profile variable in the script can be changed if a different profile name is desired in accordance with local site policy.

#!/usr/bin/env bash

{
   l_gdmprofile=""gdm""
   if [ ! -f ""/etc/dconf/profile/$l_gdmprofile"" ]; then
      echo ""Creating profile \""$l_gdmprofile\""""
      echo -e ""user-db:user
system-db:$l_gdmprofile
file-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults"" > /etc/dconf/profile/$l_gdmprofile
   fi
   if [ ! -d ""/etc/dconf/db/$l_gdmprofile.d/"" ]; then
      echo ""Creating dconf database directory \""/etc/dconf/db/$l_gdmprofile.d/\""""
      mkdir /etc/dconf/db/$l_gdmprofile.d/
   fi
   if ! grep -Piq '^h*disable-user-listh*=h*trueb' /etc/dconf/db/$l_gdmprofile.d/*; then
      echo ""creating gdm keyfile for machine-wide settings""
      if ! grep -Piq -- '^h*[org/gnome/login-screen]' /etc/dconf/db/$l_gdmprofile.d/*; then
         echo -e ""
[org/gnome/login-screen]
# Do not show the user list
disable-user-list=true"" >> /etc/dconf/db/$l_gdmprofile.d/00-login-screen
      else
         sed -ri '/^s*[org/gnome/login-screen]/ a# Do not show the user list
disable-user-list=true' $(grep -Pil -- '^h*[org/gnome/login-screen]' /etc/dconf/db/$l_gdmprofile.d/*)
      fi
   fi
   dconf update
}

Note: When the user profile is created or changed, the user will need to log out and log in again before the changes will be applied.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- GNOME Desktop Manager isn't installed
 - Recommendation is Not Applicable
- Audit result:
  *** PASS ***","- IF - GDM is installed:

Run the following script to enable the disable-user-list option:

Note: the l_gdm_profile variable in the script can be changed if a different profile name is desired in accordance with local site policy.

#!/usr/bin/env bash

{
   l_gdmprofile=""gdm""
   if [ ! -f ""/etc/dconf/profile/$l_gdmprofile"" ]; then
      echo ""Creating profile \""$l_gdmprofile\""""
      echo -e ""user-db:user
system-db:$l_gdmprofile
file-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults"" > /etc/dconf/profile/$l_gdmprofile
   fi
   if [ ! -d ""/etc/dconf/db/$l_gdmprofile.d/"" ]; then
      echo ""Creating dconf database directory \""/etc/dconf/db/$l_gdmprofile.d/\""""
      mkdir /etc/dconf/db/$l_gdmprofile.d/
   fi
   if ! grep -Piq '^h*disable-user-listh*=h*trueb' /etc/dconf/db/$l_gdmprofile.d/*; then
      echo ""creating gdm keyfile for machine-wide settings""
      if ! grep -Piq -- '^h*[org/gnome/login-screen]' /etc/dconf/db/$l_gdmprofile.d/*; then
         echo -e ""
[org/gnome/login-screen]
# Do not show the user list
disable-user-list=true"" >> /etc/dconf/db/$l_gdmprofile.d/00-login-screen
      else
         sed -ri '/^s*[org/gnome/login-screen]/ a# Do not show the user list
disable-user-list=true' $(grep -Pil -- '^h*[org/gnome/login-screen]' /etc/dconf/db/$l_gdmprofile.d/*)
      fi
   fi
   dconf update
}

Note: When the user profile is created or changed, the user will need to log out and log in again before the changes will be applied.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.4 Ensure GDM screen locks when the user is idle"" : [PASSED]

GNOME Desktop Manager can make the screen lock automatically whenever the user is idle for some amount of time.

Setting a lock-out value reduces the window of opportunity for unauthorized user access to another user's session that has been left unattended.

Solution:
Run the following commands to enable screen locks when the user is idle:

# gsettings set org.gnome.desktop.screensaver lock-delay 5 # gsettings set org.gnome.desktop.session idle-delay 900

- OR-

 - Create or edit the user profile in the /etc/dconf/profile/ and verify it includes the following:

user-db:user
system-db:{NAME_OF_DCONF_DATABASE}

Note: local is the name of a dconf database used in the examples.

<xhtml:ol start=""2""> -

Create the directory /etc/dconf/db/local.d/ if it doesn't already exist:

 -

Create the key file /etc/dconf/db/local.d/00-screensaver to provide information for the local database:

Example key file:

# Specify the dconf path
[org/gnome/desktop/session]

# Number of seconds of inactivity before the screen goes blank
# Set to 0 seconds if you want to deactivate the screensaver.
idle-delay=uint32 180

# Specify the dconf path
[org/gnome/desktop/screensaver]

# Number of seconds after the screen is blank before locking the screen
lock-delay=uint32 0

Note: You must include the uint32 along with the integer key values as shown.

<xhtml:ol start=""4""> - Run the following command to update the system databases:

# dconf update <xhtml:ol start=""5""> - Users must log out and back in again before the system-wide settings take effect.

Note: Users must log out and back in again before the system-wide settings take effect.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4

Policy Value:
PASSED","Run the following commands to enable screen locks when the user is idle:

# gsettings set org.gnome.desktop.screensaver lock-delay 5 # gsettings set org.gnome.desktop.session idle-delay 900

- OR-

 - Create or edit the user profile in the /etc/dconf/profile/ and verify it includes the following:

user-db:user
system-db:{NAME_OF_DCONF_DATABASE}

Note: local is the name of a dconf database used in the examples.

<xhtml:ol start=""2""> -

Create the directory /etc/dconf/db/local.d/ if it doesn't already exist:

 -

Create the key file /etc/dconf/db/local.d/00-screensaver to provide information for the local database:

Example key file:

# Specify the dconf path
[org/gnome/desktop/session]

# Number of seconds of inactivity before the screen goes blank
# Set to 0 seconds if you want to deactivate the screensaver.
idle-delay=uint32 180

# Specify the dconf path
[org/gnome/desktop/screensaver]

# Number of seconds after the screen is blank before locking the screen
lock-delay=uint32 0

Note: You must include the uint32 along with the integer key values as shown.

<xhtml:ol start=""4""> - Run the following command to update the system databases:

# dconf update <xhtml:ol start=""5""> - Users must log out and back in again before the system-wide settings take effect.

Note: Users must log out and back in again before the system-wide settings take effect.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.5 Ensure GDM screen locks cannot be overridden"" : [PASSED]

GNOME Desktop Manager can lock down specific settings by using the lockdown mode in dconf to prevent users from changing specific settings.

To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.

Setting a lock-out value reduces the window of opportunity for unauthorized user access to another user's session that has been left unattended.

Without locking down the system settings, user settings take precedence over the system settings.

Solution:
- To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/screensaver with the following content:

# Lock desktop screensaver settings
/org/gnome/desktop/session/idle-delay
/org/gnome/desktop/screensaver/lock-delay <xhtml:ol start=""2""> - Update the system databases:

# dconf update

Note: Users must log out and back in again before the system-wide settings take effect.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - GNOME Desktop Manager package is not installed on the system
  - Recommendation is not applicable","- To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/screensaver with the following content:

# Lock desktop screensaver settings
/org/gnome/desktop/session/idle-delay
/org/gnome/desktop/screensaver/lock-delay <xhtml:ol start=""2""> - Update the system databases:

# dconf update

Note: Users must log out and back in again before the system-wide settings take effect.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.6 Ensure GDM automatic mounting of removable media is disabled"" : [PASSED]

By default GNOME automatically mounts removable media when inserted as a convenience to the user.

With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves.

Solution:
- IF - GDM is installed:

Run the following script to disable automatic mounting of media for all GNOME users:

#!/usr/bin/env bash

{
   l_pkgoutput=""""
   l_gpname=""local"" # Set to desired dconf profile name (default is local)
   # Check if GNOME Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable

   # determine system's package manager
   if command -v dpkg-query > /dev/null 2>&amp;1; then
      l_pq=""dpkg-query -s""
   elif command -v rpm > /dev/null 2>&amp;1; then
      l_pq=""rpm -q""
   fi
   # Check if GDM is installed
   l_pcl=""gdm gdm3"" # Space seporated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq ""$l_pn"" > /dev/null 2>&amp;1 &amp;&amp; l_pkgoutput=""$l_pkgoutput
 - Package: \""$l_pn\"" exists on the system
 - checking configuration""
   done
   # Check configuration (If applicable)
   if [ -n ""$l_pkgoutput"" ]; then
      echo -e ""$l_pkgoutput""
      # Look for existing settings and set variables if they exist
      l_kfile=""$(grep -Prils -- '^h*automountb' /etc/dconf/db/*.d)""
      l_kfile2=""$(grep -Prils -- '^h*automount-openb' /etc/dconf/db/*.d)""
      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)
      if [ -f ""$l_kfile"" ]; then
         l_gpname=""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile"")""
         echo "" - updating dconf profile name to \""$l_gpname\""""
      elif [ -f ""$l_kfile2"" ]; then
         l_gpname=""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile2"")""
         echo "" - updating dconf profile name to \""$l_gpname\""""
      fi
      # check for consistency (Clean up configuration if needed)
      if [ -f ""$l_kfile"" ] &amp;&amp; [ ""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile"")"" != ""$l_gpname"" ]; then
         sed -ri ""/^s*automounts*=/s/^/# /"" ""$l_kfile""
         l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-automount""
      fi
      if [ -f ""$l_kfile2"" ] &amp;&amp; [ ""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile2"")"" != ""$l_gpname"" ]; then
         sed -ri ""/^s*automount-opens*=/s/^/# /"" ""$l_kfile2""
      fi
      [ -z ""$l_kfile"" ] &amp;&amp; l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-automount""
      # Check if profile file exists
      if grep -Pq -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*; then
         echo -e ""
 - dconf database profile exists in: \""$(grep -Pl -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*)\""""
      else
         if [ ! -f ""/etc/dconf/profile/user"" ]; then
            l_gpfile=""/etc/dconf/profile/user""
         else
            l_gpfile=""/etc/dconf/profile/user2""
         fi
         echo -e "" - creating dconf database profile""
         {
            echo -e ""
user-db:user""
            echo ""system-db:$l_gpname""
         } >> ""$l_gpfile""
      fi
      # create dconf directory if it doesn't exists
      l_gpdir=""/etc/dconf/db/$l_gpname.d""
      if [ -d ""$l_gpdir"" ]; then
         echo "" - The dconf database directory \""$l_gpdir\"" exists""
      else
         echo "" - creating dconf database directory \""$l_gpdir\""""
         mkdir ""$l_gpdir""
      fi
      # check automount-open setting
      if grep -Pqs -- '^h*automount-openh*=h*falseb' ""$l_kfile""; then
         echo "" - \""automount-open\"" is set to false in: \""$l_kfile\""""
      else
         echo "" - creating \""automount-open\"" entry in \""$l_kfile\""""
         ! grep -Psq -- '^h*[org/gnome/desktop/media-handling]b' ""$l_kfile"" &amp;&amp; echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
         sed -ri '/^s*[org/gnome/desktop/media-handling]/a \nautomount-open=false' ""$l_kfile""
      fi
      # check automount setting
      if grep -Pqs -- '^h*automounth*=h*falseb' ""$l_kfile""; then
         echo "" - \""automount\"" is set to false in: \""$l_kfile\""""
      else
         echo "" - creating \""automount\"" entry in \""$l_kfile\""""
         ! grep -Psq -- '^h*[org/gnome/desktop/media-handling]b' ""$l_kfile"" &amp;&amp; echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
         sed -ri '/^s*[org/gnome/desktop/media-handling]/a \nautomount=false' ""$l_kfile""
      fi
      # update dconf database
      dconf update
   else
      echo -e ""
 - GNOME Desktop Manager package is not installed on the system
 - Recommendation is not applicable""
   fi
}

Impact:

The use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - GNOME Desktop Manager package is not installed on the system
  - Recommendation is not applicable","- IF - GDM is installed:

Run the following script to disable automatic mounting of media for all GNOME users:

#!/usr/bin/env bash

{
   l_pkgoutput=""""
   l_gpname=""local"" # Set to desired dconf profile name (default is local)
   # Check if GNOME Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable

   # determine system's package manager
   if command -v dpkg-query > /dev/null 2>&amp;1; then
      l_pq=""dpkg-query -s""
   elif command -v rpm > /dev/null 2>&amp;1; then
      l_pq=""rpm -q""
   fi
   # Check if GDM is installed
   l_pcl=""gdm gdm3"" # Space seporated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq ""$l_pn"" > /dev/null 2>&amp;1 &amp;&amp; l_pkgoutput=""$l_pkgoutput
 - Package: \""$l_pn\"" exists on the system
 - checking configuration""
   done
   # Check configuration (If applicable)
   if [ -n ""$l_pkgoutput"" ]; then
      echo -e ""$l_pkgoutput""
      # Look for existing settings and set variables if they exist
      l_kfile=""$(grep -Prils -- '^h*automountb' /etc/dconf/db/*.d)""
      l_kfile2=""$(grep -Prils -- '^h*automount-openb' /etc/dconf/db/*.d)""
      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)
      if [ -f ""$l_kfile"" ]; then
         l_gpname=""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile"")""
         echo "" - updating dconf profile name to \""$l_gpname\""""
      elif [ -f ""$l_kfile2"" ]; then
         l_gpname=""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile2"")""
         echo "" - updating dconf profile name to \""$l_gpname\""""
      fi
      # check for consistency (Clean up configuration if needed)
      if [ -f ""$l_kfile"" ] &amp;&amp; [ ""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile"")"" != ""$l_gpname"" ]; then
         sed -ri ""/^s*automounts*=/s/^/# /"" ""$l_kfile""
         l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-automount""
      fi
      if [ -f ""$l_kfile2"" ] &amp;&amp; [ ""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile2"")"" != ""$l_gpname"" ]; then
         sed -ri ""/^s*automount-opens*=/s/^/# /"" ""$l_kfile2""
      fi
      [ -z ""$l_kfile"" ] &amp;&amp; l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-automount""
      # Check if profile file exists
      if grep -Pq -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*; then
         echo -e ""
 - dconf database profile exists in: \""$(grep -Pl -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*)\""""
      else
         if [ ! -f ""/etc/dconf/profile/user"" ]; then
            l_gpfile=""/etc/dconf/profile/user""
         else
            l_gpfile=""/etc/dconf/profile/user2""
         fi
         echo -e "" - creating dconf database profile""
         {
            echo -e ""
user-db:user""
            echo ""system-db:$l_gpname""
         } >> ""$l_gpfile""
      fi
      # create dconf directory if it doesn't exists
      l_gpdir=""/etc/dconf/db/$l_gpname.d""
      if [ -d ""$l_gpdir"" ]; then
         echo "" - The dconf database directory \""$l_gpdir\"" exists""
      else
         echo "" - creating dconf database directory \""$l_gpdir\""""
         mkdir ""$l_gpdir""
      fi
      # check automount-open setting
      if grep -Pqs -- '^h*automount-openh*=h*falseb' ""$l_kfile""; then
         echo "" - \""automount-open\"" is set to false in: \""$l_kfile\""""
      else
         echo "" - creating \""automount-open\"" entry in \""$l_kfile\""""
         ! grep -Psq -- '^h*[org/gnome/desktop/media-handling]b' ""$l_kfile"" &amp;&amp; echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
         sed -ri '/^s*[org/gnome/desktop/media-handling]/a \nautomount-open=false' ""$l_kfile""
      fi
      # check automount setting
      if grep -Pqs -- '^h*automounth*=h*falseb' ""$l_kfile""; then
         echo "" - \""automount\"" is set to false in: \""$l_kfile\""""
      else
         echo "" - creating \""automount\"" entry in \""$l_kfile\""""
         ! grep -Psq -- '^h*[org/gnome/desktop/media-handling]b' ""$l_kfile"" &amp;&amp; echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
         sed -ri '/^s*[org/gnome/desktop/media-handling]/a \nautomount=false' ""$l_kfile""
      fi
      # update dconf database
      dconf update
   else
      echo -e ""
 - GNOME Desktop Manager package is not installed on the system
 - Recommendation is not applicable""
   fi
}

Impact:

The use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.7 Ensure GDM disabling automatic mounting of removable media is not overridden"" : [PASSED]

By default GNOME automatically mounts removable media when inserted as a convenience to the user.

By using the lockdown mode in dconf, you can prevent users from changing specific settings. To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.

With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves.

Solution:
- To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/00-media-automount with the following content:

[org/gnome/desktop/media-handling]
automount=false
automount-open=false <xhtml:ol start=""2""> - Update the systems databases:

# dconf update

Impact:

The use of portable hard drives is very common for workstation users

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|MP-2,800-53r5|MP-2,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - GNOME Desktop Manager package is not installed on the system
  - Recommendation is not applicable","- To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/00-media-automount with the following content:

[org/gnome/desktop/media-handling]
automount=false
automount-open=false <xhtml:ol start=""2""> - Update the systems databases:

# dconf update

Impact:

The use of portable hard drives is very common for workstation users","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.8 Ensure GDM autorun-never is enabled"" : [PASSED]

The autorun-never setting allows the GNOME Desktop Display Manager to disable autorun through GDM.

Malware on removable media may taking advantage of Autorun features when the media is inserted into a system and execute.

Solution:
- IF - GDM is installed:

Run the following script to set autorun-never to true for GDM users:

#!/usr/bin/env bash

{
   l_pkgoutput="""" l_output="""" l_output2=""""
   l_gpname=""local"" # Set to desired dconf profile name (default is local)
   # Check if GNOME Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable

   # determine system's package manager
   if command -v dpkg-query &amp;> /dev/null; then
      l_pq=""dpkg-query -s""
   elif command -v rpm &amp;> /dev/null; then
      l_pq=""rpm -q""
   fi
   # Check if GDM is installed
   l_pcl=""gdm gdm3"" # Space separated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq ""$l_pn"" &amp;> /dev/null &amp;&amp; l_pkgoutput=""$l_pkgoutput
 - Package: \""$l_pn\"" exists on the system
 - checking configuration""
   done
   echo -e ""$l_pkgoutput""
   # Check configuration (If applicable)
   if [ -n ""$l_pkgoutput"" ]; then
      echo -e ""$l_pkgoutput""
      # Look for existing settings and set variables if they exist
      l_kfile=""$(grep -Prils -- '^h*autorun-neverb' /etc/dconf/db/*.d)""
      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)
      if [ -f ""$l_kfile"" ]; then
         l_gpname=""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile"")""
         echo "" - updating dconf profile name to \""$l_gpname\""""
      fi
      [ ! -f ""$l_kfile"" ] &amp;&amp; l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-autorun""
      # Check if profile file exists
      if grep -Pq -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*; then
         echo -e ""
 - dconf database profile exists in: \""$(grep -Pl -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*)\""""
      else
         [ ! -f ""/etc/dconf/profile/user"" ] &amp;&amp; l_gpfile=""/etc/dconf/profile/user"" || l_gpfile=""/etc/dconf/profile/user2""
         echo -e "" - creating dconf database profile""
         {
            echo -e ""
user-db:user""
            echo ""system-db:$l_gpname""
         } >> ""$l_gpfile""
      fi
      # create dconf directory if it doesn't exists
      l_gpdir=""/etc/dconf/db/$l_gpname.d""
      if [ -d ""$l_gpdir"" ]; then
         echo "" - The dconf database directory \""$l_gpdir\"" exists""
      else
         echo "" - creating dconf database directory \""$l_gpdir\""""
         mkdir ""$l_gpdir""
      fi
      # check autorun-never setting
      if grep -Pqs -- '^h*autorun-neverh*=h*trueb' ""$l_kfile""; then
         echo "" - \""autorun-never\"" is set to true in: \""$l_kfile\""""
      else
         echo "" - creating or updating \""autorun-never\"" entry in \""$l_kfile\""""
         if grep -Psq -- '^h*autorun-never' ""$l_kfile""; then
            sed -ri 's/(^s*autorun-nevers*=s*)(S+)(s*.*)$/1true 3/' ""$l_kfile""
         else
            ! grep -Psq -- '^h*[org/gnome/desktop/media-handling]b' ""$l_kfile"" &amp;&amp; echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
            sed -ri '/^s*[org/gnome/desktop/media-handling]/a \nautorun-never=true' ""$l_kfile""
         fi
      fi
   else
      echo -e ""
 - GNOME Desktop Manager package is not installed on the system
 - Recommendation is not applicable""
   fi
   # update dconf database
   dconf update
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - GNOME Desktop Manager package is not installed on the system
  - Recommendation is not applicable","- IF - GDM is installed:

Run the following script to set autorun-never to true for GDM users:

#!/usr/bin/env bash

{
   l_pkgoutput="""" l_output="""" l_output2=""""
   l_gpname=""local"" # Set to desired dconf profile name (default is local)
   # Check if GNOME Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable

   # determine system's package manager
   if command -v dpkg-query &amp;> /dev/null; then
      l_pq=""dpkg-query -s""
   elif command -v rpm &amp;> /dev/null; then
      l_pq=""rpm -q""
   fi
   # Check if GDM is installed
   l_pcl=""gdm gdm3"" # Space separated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq ""$l_pn"" &amp;> /dev/null &amp;&amp; l_pkgoutput=""$l_pkgoutput
 - Package: \""$l_pn\"" exists on the system
 - checking configuration""
   done
   echo -e ""$l_pkgoutput""
   # Check configuration (If applicable)
   if [ -n ""$l_pkgoutput"" ]; then
      echo -e ""$l_pkgoutput""
      # Look for existing settings and set variables if they exist
      l_kfile=""$(grep -Prils -- '^h*autorun-neverb' /etc/dconf/db/*.d)""
      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)
      if [ -f ""$l_kfile"" ]; then
         l_gpname=""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile"")""
         echo "" - updating dconf profile name to \""$l_gpname\""""
      fi
      [ ! -f ""$l_kfile"" ] &amp;&amp; l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-autorun""
      # Check if profile file exists
      if grep -Pq -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*; then
         echo -e ""
 - dconf database profile exists in: \""$(grep -Pl -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*)\""""
      else
         [ ! -f ""/etc/dconf/profile/user"" ] &amp;&amp; l_gpfile=""/etc/dconf/profile/user"" || l_gpfile=""/etc/dconf/profile/user2""
         echo -e "" - creating dconf database profile""
         {
            echo -e ""
user-db:user""
            echo ""system-db:$l_gpname""
         } >> ""$l_gpfile""
      fi
      # create dconf directory if it doesn't exists
      l_gpdir=""/etc/dconf/db/$l_gpname.d""
      if [ -d ""$l_gpdir"" ]; then
         echo "" - The dconf database directory \""$l_gpdir\"" exists""
      else
         echo "" - creating dconf database directory \""$l_gpdir\""""
         mkdir ""$l_gpdir""
      fi
      # check autorun-never setting
      if grep -Pqs -- '^h*autorun-neverh*=h*trueb' ""$l_kfile""; then
         echo "" - \""autorun-never\"" is set to true in: \""$l_kfile\""""
      else
         echo "" - creating or updating \""autorun-never\"" entry in \""$l_kfile\""""
         if grep -Psq -- '^h*autorun-never' ""$l_kfile""; then
            sed -ri 's/(^s*autorun-nevers*=s*)(S+)(s*.*)$/1true 3/' ""$l_kfile""
         else
            ! grep -Psq -- '^h*[org/gnome/desktop/media-handling]b' ""$l_kfile"" &amp;&amp; echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
            sed -ri '/^s*[org/gnome/desktop/media-handling]/a \nautorun-never=true' ""$l_kfile""
         fi
      fi
   else
      echo -e ""
 - GNOME Desktop Manager package is not installed on the system
 - Recommendation is not applicable""
   fi
   # update dconf database
   dconf update
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.9 Ensure GDM autorun-never is not overridden"" : [PASSED]

The autorun-never setting allows the GNOME Desktop Display Manager to disable autorun through GDM.

By using the lockdown mode in dconf, you can prevent users from changing specific settings.

To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.

Malware on removable media may taking advantage of Autorun features when the media is inserted into a system and execute.

Solution:
- To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/00-media-autorun with the following content:

[org/gnome/desktop/media-handling]
autorun-never=true <xhtml:ol start=""2""> - Update the systems databases:

# dconf update

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - [org/gnome/desktop/media-handling] setting not found in /etc/dconf/db/*","- To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/00-media-autorun with the following content:

[org/gnome/desktop/media-handling]
autorun-never=true <xhtml:ol start=""2""> - Update the systems databases:

# dconf update","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.1 Ensure autofs services are not in use"" : [PASSED]

autofs allows automatic mounting of devices, typically including CD/DVDs and USB drives.

With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in the filesystem even if they lacked permissions to mount it themselves.

Solution:
Run the following commands to stop autofs.service and remove the autofs package:

# systemctl stop autofs.service
# apt purge autofs

- OR -

- IF - the autofs package is required as a dependency:

Run the following commands to stop and mask autofs.service :

# systemctl stop autofs.service
# systemctl mask autofs.service

Impact:

The use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting.

There may be packages that are dependent on the autofs package. If the autofs package is removed, these dependent packages will be removed as well. Before removing the autofs package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the autofs.service leaving the autofs package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1

Policy Value:
cmd: /bin/dpkg -s autofs 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s autofs 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'autofs' is not installed and no information is available","Run the following commands to stop autofs.service and remove the autofs package:

# systemctl stop autofs.service
# apt purge autofs

- OR -

- IF - the autofs package is required as a dependency:

Run the following commands to stop and mask autofs.service :

# systemctl stop autofs.service
# systemctl mask autofs.service

Impact:

The use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting.

There may be packages that are dependent on the autofs package. If the autofs package is removed, these dependent packages will be removed as well. Before removing the autofs package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the autofs.service leaving the autofs package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.10 Ensure nis server services are not in use"" : [PASSED]

The Network Information Service (NIS) (formally known as Yellow Pages) is a client-server directory service protocol for distributing system configuration files. The NIS server is a collection of programs that allow for the distribution of configuration files. The NIS client ( ypbind ) was used to bind a machine to an NIS server and receive the distributed configuration files.

ypserv.service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that ypserv.service be removed and other, more secure services be used

Solution:
Run the following commands to stop ypserv.service and remove ypserv package:

# systemctl stop ypserv.service
# apt purge ypserv

- OR -

- IF - the ypserv package is required as a dependency:

Run the following commands to stop and mask ypserv.service :

# systemctl stop ypserv.service
# systemctl mask ypserv.service

Impact:

There may be packages that are dependent on the ypserv package. If the ypserv package is removed, these dependent packages will be removed as well. Before removing the ypserv package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the ypserv.service leaving the ypserv package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s ypserv 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s ypserv 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'ypserv' is not installed and no information is available","Run the following commands to stop ypserv.service and remove ypserv package:

# systemctl stop ypserv.service
# apt purge ypserv

- OR -

- IF - the ypserv package is required as a dependency:

Run the following commands to stop and mask ypserv.service :

# systemctl stop ypserv.service
# systemctl mask ypserv.service

Impact:

There may be packages that are dependent on the ypserv package. If the ypserv package is removed, these dependent packages will be removed as well. Before removing the ypserv package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the ypserv.service leaving the ypserv package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.11 Ensure print server services are not in use"" : [PASSED]

The Common Unix Print System (CUPS) provides the ability to print to both local and network printers. A system running CUPS can also accept print jobs from remote systems and print them to local printers. It also provides a web based remote administration capability.

If the system does not need to print jobs or accept print jobs from other systems, it is recommended that CUPS be removed to reduce the potential attack surface.

Solution:
Run the following commands to stop cups.socket and cups.service and remove the cups package:

# systemctl stop cups.socket cups.service
# apt purge cups

- OR -

- IF - the cups package is required as a dependency:

Run the following commands to stop and mask the cups.socket and cups.service :

# systemctl stop cups.socket cups.service
# systemctl mask cups.socket cups.service

Impact:

Removing the cups package, or disabling cups.socket and/or cups.service will prevent printing from the system, a common task for workstation systems.

There may be packages that are dependent on the cups package. If the cups package is removed, these dependent packages will be removed as well. Before removing the cups package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask cups.socket and cups.service leaving the cups package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s cups 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s cups 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'cups' is not installed and no information is available","Run the following commands to stop cups.socket and cups.service and remove the cups package:

# systemctl stop cups.socket cups.service
# apt purge cups

- OR -

- IF - the cups package is required as a dependency:

Run the following commands to stop and mask the cups.socket and cups.service :

# systemctl stop cups.socket cups.service
# systemctl mask cups.socket cups.service

Impact:

Removing the cups package, or disabling cups.socket and/or cups.service will prevent printing from the system, a common task for workstation systems.

There may be packages that are dependent on the cups package. If the cups package is removed, these dependent packages will be removed as well. Before removing the cups package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask cups.socket and cups.service leaving the cups package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.12 Ensure rpcbind services are not in use"" : [PASSED]

The rpcbind utility maps RPC services to the ports on which they listen. RPC processes notify rpcbind when they start, registering the ports they are listening on and the RPC program numbers they expect to serve. The client system then contacts rpcbind on the server with a particular RPC program number. The rpcbind.service redirects the client to the proper port number so it can communicate with the requested service.

Portmapper is an RPC service, which always listens on tcp and udp 111, and is used to map other RPC services (such as nfs, nlockmgr, quotad, mountd, etc.) to their corresponding port number on the server. When a remote host makes an RPC call to that server, it first consults with portmap to determine where the RPC server is listening.

A small request (~82 bytes via UDP) sent to the Portmapper generates a large response (7x to 28x amplification), which makes it a suitable tool for DDoS attacks. If rpcbind is not required, it is recommended to remove rpcbind package to reduce the potential attack surface.

Solution:
Run the following commands to stop rpcbind.socket and rpcbind.service and remove the rpcbind package:

# systemctl stop rpcbind.socket rpcbind.service
# apt purge rpcbind

- OR -

- IF - the rpcbind package is required as a dependency:

Run the following commands to stop and mask the rpcbind.socket and rpcbind.service :

# systemctl stop rpcbind.socket rpcbind.service
# systemctl mask rpcbind.socket rpcbind.service

Impact:

Many of the libvirt packages used by Enterprise Linux virtualization, and the nfs-utils package used for The Network File System (NFS), are dependent on the rpcbind package. If the rpcbind package is removed, these dependent packages will be removed as well. Before removing the rpcbind package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the rpcbind.socket and rpcbind.service leaving the rpcbind package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s rpcbind 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s rpcbind 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'rpcbind' is not installed and no information is available","Run the following commands to stop rpcbind.socket and rpcbind.service and remove the rpcbind package:

# systemctl stop rpcbind.socket rpcbind.service
# apt purge rpcbind

- OR -

- IF - the rpcbind package is required as a dependency:

Run the following commands to stop and mask the rpcbind.socket and rpcbind.service :

# systemctl stop rpcbind.socket rpcbind.service
# systemctl mask rpcbind.socket rpcbind.service

Impact:

Many of the libvirt packages used by Enterprise Linux virtualization, and the nfs-utils package used for The Network File System (NFS), are dependent on the rpcbind package. If the rpcbind package is removed, these dependent packages will be removed as well. Before removing the rpcbind package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the rpcbind.socket and rpcbind.service leaving the rpcbind package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.13 Ensure rsync services are not in use"" : [PASSED]

The rsync service can be used to synchronize files between systems over network links.

rsync.service presents a security risk as the rsync protocol is unencrypted.

The rsync package should be removed to reduce the attack area of the system.

Solution:
Run the following commands to stop rsync.service and remove the rsync package:

# systemctl stop rsync.service
# apt purge rsync

- OR -

- IF - the rsync package is required as a dependency:

Run the following commands to stop and mask rsync.service :

# systemctl stop rsync.service
# systemctl mask rsync.service

Impact:

There may be packages that are dependent on the rsync package. If the rsync package is removed, these dependent packages will be removed as well. Before removing the rsync package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask rsync.service leaving the rsync package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - active
The command '/bin/systemctl is-active rsync.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print ""pass"" ; else print ""fail""}'' returned : 

pass

-------------------------
PASSED - enabled
The command '/bin/systemctl is-enabled rsync.service 2>/dev/null | /bin/grep '^enabled' | /bin/awk '{print} END {if (NR == 0) print ""pass"" ; else print ""fail""}'' returned : 

pass","Run the following commands to stop rsync.service and remove the rsync package:

# systemctl stop rsync.service
# apt purge rsync

- OR -

- IF - the rsync package is required as a dependency:

Run the following commands to stop and mask rsync.service :

# systemctl stop rsync.service
# systemctl mask rsync.service

Impact:

There may be packages that are dependent on the rsync package. If the rsync package is removed, these dependent packages will be removed as well. Before removing the rsync package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask rsync.service leaving the rsync package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.14 Ensure samba file server services are not in use"" : [PASSED]

The Samba daemon allows system administrators to configure their Linux systems to share file systems and directories with Windows desktops. Samba will advertise the file systems and directories via the Server Message Block (SMB) protocol. Windows desktop users will be able to mount these directories and file systems as letter drives on their systems.

If there is no need to mount directories and file systems to Windows systems, then this service should be deleted to reduce the potential attack surface.

Solution:
Run the following commands to stop smbd.service and remove samba package:

# systemctl stop smbd.service
# apt purge samba

- OR -

- IF - the samba package is required as a dependency:

Run the following commands to stop and mask the smbd.service :

# systemctl stop smbd.service
# systemctl mask smbd.service

Impact:

There may be packages that are dependent on the samba package. If the samba package is removed, these dependent packages will be removed as well. Before removing the samba package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the smbd.service leaving the samba package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s samba 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s samba 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'samba' is not installed and no information is available","Run the following commands to stop smbd.service and remove samba package:

# systemctl stop smbd.service
# apt purge samba

- OR -

- IF - the samba package is required as a dependency:

Run the following commands to stop and mask the smbd.service :

# systemctl stop smbd.service
# systemctl mask smbd.service

Impact:

There may be packages that are dependent on the samba package. If the samba package is removed, these dependent packages will be removed as well. Before removing the samba package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the smbd.service leaving the samba package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.15 Ensure snmp services are not in use"" : [PASSED]

Simple Network Management Protocol (SNMP) is a widely used protocol for monitoring the health and welfare of network equipment, computer equipment and devices like UPSs.

Net-SNMP is a suite of applications used to implement SNMPv1 (RFC 1157), SNMPv2 (RFCs 1901-1908), and SNMPv3 (RFCs 3411-3418) using both IPv4 and IPv6.

Support for SNMPv2 classic (a.k.a. ""SNMPv2 historic"" - RFCs 1441-1452) was dropped with the 4.0 release of the UCD-snmp package.

The Simple Network Management Protocol (SNMP) server is used to listen for SNMP commands from an SNMP management system, execute the commands or collect the information and then send results back to the requesting system.

The SNMP server can communicate using SNMPv1 which transmits data in the clear and does not require authentication to execute commands. SNMPv3 replaces the simple/clear text password sharing used in SNMPv2 with more securely encoded parameters. If the the SNMP service is not required, the snmpd package should be removed to reduce the attack surface of the system.

Note: If SNMP is required:

 - The server should be configured for SNMP v3 only. User Authentication and Message Encryption should be configured.
 - If SNMP v2 is absolutely necessary, modify the community strings' values.

Solution:
Run the following commands to stop snmpd.service and remove the snmpd package:

# systemctl stop snmpd.service
# apt purge snmpd

- OR - If the package is required for dependencies:

Run the following commands to stop and mask the snmpd.service :

# systemctl stop snmpd.service
# systemctl mask snmpd.service

Impact:

There may be packages that are dependent on the snmpd package. If the snmpd package is removed, these packages will be removed as well.

Before removing the snmpd package, review any dependent packages to determine if they are required on the system. If a dependent package is required, stop and mask the snmpd.service leaving the snmpd package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s snmpd 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s snmpd 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'snmpd' is not installed and no information is available","Run the following commands to stop snmpd.service and remove the snmpd package:

# systemctl stop snmpd.service
# apt purge snmpd

- OR - If the package is required for dependencies:

Run the following commands to stop and mask the snmpd.service :

# systemctl stop snmpd.service
# systemctl mask snmpd.service

Impact:

There may be packages that are dependent on the snmpd package. If the snmpd package is removed, these packages will be removed as well.

Before removing the snmpd package, review any dependent packages to determine if they are required on the system. If a dependent package is required, stop and mask the snmpd.service leaving the snmpd package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.16 Ensure tftp server services are not in use"" : [PASSED]

Trivial File Transfer Protocol (TFTP) is a simple protocol for exchanging files between two TCP/IP machines. TFTP servers allow connections from a TFTP Client for sending and receiving files.

Unless there is a need to run the system as a TFTP server, it is recommended that the package be removed to reduce the potential attack surface.

TFTP does not have built-in encryption, access control or authentication. This makes it very easy for an attacker to exploit TFTP to gain access to files

Solution:
Run the following commands to stop tftpd-hpa.service and remove the tftpd-hpa package:

# systemctl stop tftpd-hpa.service
# apt purge tftpd-hpa

- OR -

- IF - the tftpd-hpa package is required as a dependency:

Run the following commands to stop and mask tftpd-hpa.service :

# systemctl stop tftpd-hpa.service
# systemctl mask tftpd-hpa.service

Impact:

TFTP is often used to provide files for network booting such as for PXE based installation of servers.

There may be packages that are dependent on the tftpd-hpa package. If the tftpd-hpa package is removed, these dependent packages will be removed as well. Before removing the tftpd-hpa package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask tftpd-hpa.service leaving the tftpd-hpa package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s tftpd-hpa 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s tftpd-hpa 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'tftpd-hpa' is not installed and no information is available","Run the following commands to stop tftpd-hpa.service and remove the tftpd-hpa package:

# systemctl stop tftpd-hpa.service
# apt purge tftpd-hpa

- OR -

- IF - the tftpd-hpa package is required as a dependency:

Run the following commands to stop and mask tftpd-hpa.service :

# systemctl stop tftpd-hpa.service
# systemctl mask tftpd-hpa.service

Impact:

TFTP is often used to provide files for network booting such as for PXE based installation of servers.

There may be packages that are dependent on the tftpd-hpa package. If the tftpd-hpa package is removed, these dependent packages will be removed as well. Before removing the tftpd-hpa package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask tftpd-hpa.service leaving the tftpd-hpa package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.17 Ensure web proxy server services are not in use"" : [PASSED]

Squid is a standard proxy server used in many distributions and environments.

Unless a system is specifically set up to act as a proxy server, it is recommended that the squid package be removed to reduce the potential attack surface.

Note: Several HTTP proxy servers exist. These should be checked and removed unless required.

Solution:
Run the following commands to stop squid.service and remove the squid package:

# systemctl stop squid.service
# apt purge squid

- OR - If the squid package is required as a dependency:

Run the following commands to stop and mask the squid.service :

# systemctl stop squid.service
# systemctl mask squid.service

Impact:

There may be packages that are dependent on the squid package. If the squid package is removed, these dependent packages will be removed as well. Before removing the squid package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the squid.service leaving the squid package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s squid 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s squid 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'squid' is not installed and no information is available","Run the following commands to stop squid.service and remove the squid package:

# systemctl stop squid.service
# apt purge squid

- OR - If the squid package is required as a dependency:

Run the following commands to stop and mask the squid.service :

# systemctl stop squid.service
# systemctl mask squid.service

Impact:

There may be packages that are dependent on the squid package. If the squid package is removed, these dependent packages will be removed as well. Before removing the squid package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the squid.service leaving the squid package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.18 Ensure web server services are not in use"" : [PASSED]

Web servers provide the ability to host web site content.

Unless there is a local site approved requirement to run a web server service on the system, web server packages should be removed to reduce the potential attack surface.

Solution:
Run the following commands to stop httpd.socket httpd.service and nginx.service and remove httpd and nginx packages:

# systemctl stop apache2.socket httpd.service nginx.service
# apt purge apache2 nginx

- OR -

- IF - a package is installed and is required for dependencies:

Run the following commands to stop and mask apache2.socket apache2.service and nginx.service :

# systemctl stop apache2.socket apache2.service nginx.service
# systemctl mask apache2.socket apache2.service nginx.service

Note: Other web server packages may exist. If not required and authorized by local site policy, they should also be removed. If the package is required for a dependency, the service and socket should be stopped and masked.

Impact:

Removal of web server packages will remove that ability for the server to host web services.

- IF - the web server package is required for a dependency, any related service or socket should be stopped and masked.

Note: If the remediation steps to mask a service are followed and that package is not installed on the system, the service and/or socket will still be masked. If the package is installed due to an approved requirement to host a web server, the associated service and/or socket would need to be unmasked before it could be enabled and/or started.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
PASSED","Run the following commands to stop httpd.socket httpd.service and nginx.service and remove httpd and nginx packages:

# systemctl stop apache2.socket httpd.service nginx.service
# apt purge apache2 nginx

- OR -

- IF - a package is installed and is required for dependencies:

Run the following commands to stop and mask apache2.socket apache2.service and nginx.service :

# systemctl stop apache2.socket apache2.service nginx.service
# systemctl mask apache2.socket apache2.service nginx.service

Note: Other web server packages may exist. If not required and authorized by local site policy, they should also be removed. If the package is required for a dependency, the service and socket should be stopped and masked.

Impact:

Removal of web server packages will remove that ability for the server to host web services.

- IF - the web server package is required for a dependency, any related service or socket should be stopped and masked.

Note: If the remediation steps to mask a service are followed and that package is not installed on the system, the service and/or socket will still be masked. If the package is installed due to an approved requirement to host a web server, the associated service and/or socket would need to be unmasked before it could be enabled and/or started.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.19 Ensure xinetd services are not in use"" : [PASSED]

The X Window System provides a Graphical User Interface (GUI) where users can have multiple windows in which to run programs and various add on. The X Windows system is typically used on workstations where users login, but not on servers where users typically do not login.

Unless your organization specifically requires graphical login access via X Windows, remove it to reduce the potential attack surface.

Solution:
Run the following commands to stop xinetd.service and remove the xinetd package:

# systemctl stop xinetd.service
# apt purge xinetd

-OR-

-IF- the xinetd package is required as a dependency:

Run the following commands to stop and mask the xinetd.service :

# systemctl stop xinetd.service
# systemctl mask xinetd.service

Impact:

There may be packages that are dependent on the xinetd package. If the xinetd package is removed, these dependent packages will be removed as well. Before removing the xinetd package, review any dependent packages to determine if they are required on the system.

-IF- a dependent package is required: stop and mask xinetd.service leaving the xinetd package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s xinetd 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s xinetd 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'xinetd' is not installed and no information is available","Run the following commands to stop xinetd.service and remove the xinetd package:

# systemctl stop xinetd.service
# apt purge xinetd

-OR-

-IF- the xinetd package is required as a dependency:

Run the following commands to stop and mask the xinetd.service :

# systemctl stop xinetd.service
# systemctl mask xinetd.service

Impact:

There may be packages that are dependent on the xinetd package. If the xinetd package is removed, these dependent packages will be removed as well. Before removing the xinetd package, review any dependent packages to determine if they are required on the system.

-IF- a dependent package is required: stop and mask xinetd.service leaving the xinetd package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.2 Ensure avahi daemon services are not in use"" : [PASSED]

Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD service discovery. Avahi allows programs to publish and discover services and hosts running on a local network with no specific configuration. For example, a user can plug a computer into a network and Avahi automatically finds printers to print to, files to look at and people to talk to, as well as network services running on the machine.

Automatic discovery of network services is not normally required for system functionality. It is recommended to remove this package to reduce the potential attack surface.

Solution:
Run the following commands to stop avahi-daemon.socket and avahi-daemon.service and remove the avahi-daemon package:

# systemctl stop avahi-daemon.socket avahi-daemon.service
# apt purge avahi-daemon

- OR -

- IF - the avahi-daemon package is required as a dependency:

Run the following commands to stop and mask the avahi-daemon.socket and avahi-daemon.service :

# systemctl stop avahi-daemon.socket avahi-daemon.service
# systemctl mask avahi-daemon.socket avahi-daemon.service

Impact:

There may be packages that are dependent on the avahi package. If the avahi package is removed, these dependent packages will be removed as well. Before removing the avahi package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the avahi-daemon.socket and avahi-daemon.service leaving the avahi package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s avahi-daemon 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s avahi-daemon 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'avahi-daemon' is not installed and no information is available","Run the following commands to stop avahi-daemon.socket and avahi-daemon.service and remove the avahi-daemon package:

# systemctl stop avahi-daemon.socket avahi-daemon.service
# apt purge avahi-daemon

- OR -

- IF - the avahi-daemon package is required as a dependency:

Run the following commands to stop and mask the avahi-daemon.socket and avahi-daemon.service :

# systemctl stop avahi-daemon.socket avahi-daemon.service
# systemctl mask avahi-daemon.socket avahi-daemon.service

Impact:

There may be packages that are dependent on the avahi package. If the avahi package is removed, these dependent packages will be removed as well. Before removing the avahi package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the avahi-daemon.socket and avahi-daemon.service leaving the avahi package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.21 Ensure mail transfer agent is configured for local-only mode"" : [PASSED]

Mail Transfer Agents (MTA), such as sendmail and Postfix, are used to listen for incoming mail and transfer the messages to the appropriate user or mail server. If the system is not intended to be a mail server, it is recommended that the MTA be configured to only process local mail.

The software for all Mail Transfer Agents is complex and most have a long history of security issues. While it is important to ensure that the system can process local mail messages, it is not necessary to have the MTA's daemon listening on a port unless the server is intended to be a mail server that receives and processes mail from other systems.

Solution:
Edit /etc/postfix/main.cf and add the following line to the RECEIVING MAIL section. If the line already exists, change it to look like the line below:

inet_interfaces = loopback-only

Run the following command to restart postfix :

# systemctl restart postfix

Note:

 - This recommendation is designed around the postfix mail server.
 - Depending on your environment you may have an alternative MTA installed such as exim4. If this is the case consult the documentation for your installed MTA to configure the recommended state.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

/bin/bash: line 9: postconf: command not found

- Audit Result:
  ** PASS **

 - Port ""25"" is not listening on a non-loopback network interface
 - Port ""465"" is not listening on a non-loopback network interface
 - Port ""587"" is not listening on a non-loopback network interface","Edit /etc/postfix/main.cf and add the following line to the RECEIVING MAIL section. If the line already exists, change it to look like the line below:

inet_interfaces = loopback-only

Run the following command to restart postfix :

# systemctl restart postfix

Note:

 - This recommendation is designed around the postfix mail server.
 - Depending on your environment you may have an alternative MTA installed such as exim4. If this is the case consult the documentation for your installed MTA to configure the recommended state.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.22 Ensure only approved services are listening on a network interface"" : [WARNING]

A network port is identified by its number, the associated IP address, and the type of the communication protocol such as TCP or UDP.

A listening port is a network port on which an application or process listens on, acting as a communication endpoint.

Each listening port can be open or closed (filtered) using a firewall. In general terms, an open port is a network port that accepts incoming packets from remote locations.

Services listening on the system pose a potential risk as an attack vector. These services should be reviewed, and if not required, the service should be stopped, and the package containing the service should be removed. If required packages have a dependency, the service should be stopped and masked to reduce the attack surface of the system.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Run the following commands to stop the service and remove the package containing the service:

# systemctl stop <service_name>.socket <service_name>.service
# apt purge <package_name>

- OR - If required packages have a dependency:

Run the following commands to stop and mask the service and socket:

# systemctl stop <service_name>.socket <service_name>.service
# systemctl mask <service_name>.socket <service_name>.service

Note: replace <service_name> with the appropriate service name.

Impact:

There may be packages that are dependent on the service's package. If the service's package is removed, these dependent packages will be removed as well. Before removing the service's package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the <service_name>.socket and <service_name>.service leaving the service's package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/ss -plntu
expect: ^Manual Review Required$

Actual Value:
The command '/bin/ss -plntu' returned : 

Netid State  Recv-Q Send-Q  Local Address:Port  Peer Address:PortProcess                                                              
udp   UNCONN 0      0             0.0.0.0:30041      0.0.0.0:*    users:((""scion-all"",pid=2075830,fd=3))                              
udp   UNCONN 0      0       192.168.110.1:30042      0.0.0.0:*    users:((""vpp_main"",pid=2075848,fd=281))                             
udp   UNCONN 0      0       127.0.0.53%lo:53         0.0.0.0:*    users:((""systemd-resolve"",pid=2002001,fd=13))                       
udp   UNCONN 0      0      217.193.19.214:443        0.0.0.0:*    users:((""caddy"",pid=2003069,fd=14))                                 
udp   UNCONN 0      0         198.18.30.1:443        0.0.0.0:*    users:((""caddy"",pid=2003069,fd=12))                                 
udp   UNCONN 0      0       192.168.110.1:443        0.0.0.0:*    users:((""caddy"",pid=2003069,fd=9))                                  
udp   UNCONN 0      0           127.0.0.1:443        0.0.0.0:*    users:((""caddy"",pid=2003069,fd=8))                                  
udp   UNCONN 0      0             0.0.0.0:51021      0.0.0.0:*                                                                        
udp   UNCONN 0      0             0.0.0.0:51022      0.0.0.0:*                                                                        
udp   UNCONN 0      0                [::]:30041         [::]:*    users:((""scion-all"",pid=2075830,fd=8))                              
udp   UNCONN 0      0                [::]:51021         [::]:*                                                                        
udp   UNCONN 0      0                [::]:51022         [::]:*                                                                        
tcp   LISTEN 0      4096   217.193.19.214:443        0.0.0.0:*    users:((""caddy"",pid=2003069,fd=17))                                 
tcp   LISTEN 0      4096      198.18.30.1:443        0.0.0.0:*    users:((""caddy"",pid=2003069,fd=15))                                 
tcp   LISTEN 0      4096    192.168.110.1:443        0.0.0.0:*    users:((""caddy"",pid=2003069,fd=13))                                 
tcp   LISTEN 0      4096        127.0.0.1:443        0.0.0.0:*    users:((""caddy"",pid=2003069,fd=7))                                  
tcp   LISTEN 0      4096        127.0.0.1:48061      0.0.0.0:*    users:((""debugscraper"",pid=2075087,fd=8))                           
tcp   LISTEN 0      4096        127.0.0.1:48030      0.0.0.0:*    users:((""appliance"",pid=2075882,fd=3))                              
tcp   LISTEN 0      4096        127.0.0.1:48031      0.0.0.0:*    users:((""appliance"",pid=2075882,fd=9))                              
tcp   LISTEN 0      4096        127.0.0.1:41600      0.0.0.0:*    users:((""scion-all"",pid=2076100,fd=10))                             
tcp   LISTEN 0      4096        127.0.0.1:48000      0.0.0.0:*    users:((""appliance-insta"",pid=2074938,fd=8))                        
tcp   LISTEN 0      4096        127.0.0.1:41601      0.0.0.0:*    users:((""scion-all"",pid=2076100,fd=9))                              
tcp   LISTEN 0      4096        127.0.0.1:48001      0.0.0.0:*    users:((""appliance-insta"",pid=2074938,fd=7))                        
tcp   LISTEN 0      4096        127.0.0.1:41000      0.0.0.0:*    users:((""scion-all"",pid=2075867,fd=20))                             
tcp   LISTEN 0      4096        127.0.0.1:41001      0.0.0.0:*    users:((""scion-all"",pid=2075867,fd=19))                             
tcp   LISTEN 0      4096        127.0.0.1:48041      0.0.0.0:*    users:((""otelcol-contrib"",pid=2075840,fd=7))                        
tcp   LISTEN 0      4096        127.0.0.1:19531      0.0.0.0:*    users:((""systemd-journal"",pid=2075503,fd=3),(""systemd"",pid=1,fd=44))
tcp   LISTEN 0      4096        127.0.0.1:41100      0.0.0.0:*    users:((""scion-all"",pid=2075823,fd=9))                              
tcp   LISTEN 0      4096    192.168.110.1:30252      0.0.0.0:*    users:((""scion-all"",pid=2075867,fd=15))                             
tcp   LISTEN 0      4096        127.0.0.1:9100       0.0.0.0:*    users:((""node_exporter"",pid=2075852,fd=3))                          
tcp   LISTEN 0      4096        127.0.0.1:41101      0.0.0.0:*    users:((""scion-all"",pid=2075823,fd=8))                              
tcp   LISTEN 0      4096        127.0.0.1:52749      0.0.0.0:*    users:((""promtail"",pid=2075874,fd=8))                               
tcp   LISTEN 0      4096        127.0.0.1:41200      0.0.0.0:*    users:((""scion-all"",pid=2075866,fd=12))                             
tcp   LISTEN 0      4096   217.193.19.214:80         0.0.0.0:*    users:((""caddy"",pid=2003069,fd=23))                                 
tcp   LISTEN 0      4096      198.18.30.1:80         0.0.0.0:*    users:((""caddy"",pid=2003069,fd=21))                                 
tcp   LISTEN 0      4096    192.168.110.1:80         0.0.0.0:*    users:((""caddy"",pid=2003069,fd=19))                                 
tcp   LISTEN 0      4096        127.0.0.1:41201      0.0.0.0:*    users:((""scion-all"",pid=2075866,fd=10))                             
tcp   LISTEN 0      4096        127.0.0.1:48050      0.0.0.0:*    users:((""caddy"",pid=2003069,fd=11))                                 
tcp   LISTEN 0      4096        127.0.0.1:41300      0.0.0.0:*    users:((""scion-all"",pid=2075838,fd=14))                             
tcp   LISTEN 0      4096        127.0.0.1:48020      0.0.0.0:*    users:((""appliance"",pid=2075034,fd=9))                              
tcp   LISTEN 0      5           127.0.0.1:33333      0.0.0.0:*    users:((""vpp_main"",pid=2075848,fd=35))                              
tcp   LISTEN 0      4096        127.0.0.1:41301      0.0.0.0:*    users:((""scion-all"",pid=2075838,fd=13))                             
tcp   LISTEN 0      4096        127.0.0.1:48021      0.0.0.0:*    users:((""appliance"",pid=2075034,fd=7))                              
tcp   LISTEN 0      4096    127.0.0.53%lo:53         0.0.0.0:*    users:((""systemd-resolve"",pid=2002001,fd=14))                       
tcp   LISTEN 0      4096        127.0.0.1:41302      0.0.0.0:*    users:((""scion-all"",pid=2075838,fd=12))                             
tcp   LISTEN 0      128           0.0.0.0:22         0.0.0.0:*    users:((""sshd"",pid=2075504,fd=3))                                   
tcp   LISTEN 0      4096        127.0.0.1:48022      0.0.0.0:*    users:((""appliance"",pid=2075034,fd=8))                              
tcp   LISTEN 0      4096        127.0.0.1:8888       0.0.0.0:*    users:((""otelcol-contrib"",pid=2075840,fd=3))                        
tcp   LISTEN 0      4096        127.0.0.1:9080       0.0.0.0:*    users:((""promtail"",pid=2075874,fd=7))                               
tcp   LISTEN 0      4096        127.0.0.1:41400      0.0.0.0:*    users:((""scion-all"",pid=2075830,fd=10))                             
tcp   LISTEN 0      4096        127.0.0.1:41401      0.0.0.0:*    users:((""scion-all"",pid=2075830,fd=7))                              
tcp   LISTEN 0      4096                *:80               *:*    users:((""caddy"",pid=2003069,fd=16))                                 
tcp   LISTEN 0      4096                *:42001            *:*    users:((""caddy"",pid=2003069,fd=18))                                 
tcp   LISTEN 0      128              [::]:22            [::]:*    users:((""sshd"",pid=2075504,fd=4))","Run the following commands to stop the service and remove the package containing the service:

# systemctl stop <service_name>.socket <service_name>.service
# apt purge <package_name>

- OR - If required packages have a dependency:

Run the following commands to stop and mask the service and socket:

# systemctl stop <service_name>.socket <service_name>.service
# systemctl mask <service_name>.socket <service_name>.service

Note: replace <service_name> with the appropriate service name.

Impact:

There may be packages that are dependent on the service's package. If the service's package is removed, these dependent packages will be removed as well. Before removing the service's package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the <service_name>.socket and <service_name>.service leaving the service's package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.3 Ensure dhcp server services are not in use"" : [PASSED]

The Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to be dynamically assigned IP addresses. There are two versions of the DHCP protocol DHCPv4 and DHCPv6 At startup the server may be started for one or the other via the -4 or -6 arguments.

Unless a system is specifically set up to act as a DHCP server, it is recommended that this package be removed to reduce the potential attack surface.

Solution:
Run the following commands to stop isc-dhcp-server.service and isc-dhcp-server6.service and remove the isc-dhcp-server package:

# systemctl stop isc-dhcp-server.service isc-dhcp-server6.service
# apt purge isc-dhcp-server

- OR -

- IF - the isc-dhcp-server package is required as a dependency:

Run the following commands to stop and mask isc-dhcp-server.service and isc-dhcp-server6.service :

# systemctl stop isc-dhcp-server.service isc-dhcp-server6.service
# systemctl mask isc-dhcp-server isc-dhcp-server6.service

Impact:

There may be packages that are dependent on the isc-dhcp-server package. If the isc-dhcp-server package is removed, these dependent packages will be removed as well. Before removing the isc-dhcp-server package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the isc-dhcp-server.service and isc-dhcp-server6.service leaving the isc-dhcp-server package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s isc-dhcp-server 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s isc-dhcp-server 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'isc-dhcp-server' is not installed and no information is available","Run the following commands to stop isc-dhcp-server.service and isc-dhcp-server6.service and remove the isc-dhcp-server package:

# systemctl stop isc-dhcp-server.service isc-dhcp-server6.service
# apt purge isc-dhcp-server

- OR -

- IF - the isc-dhcp-server package is required as a dependency:

Run the following commands to stop and mask isc-dhcp-server.service and isc-dhcp-server6.service :

# systemctl stop isc-dhcp-server.service isc-dhcp-server6.service
# systemctl mask isc-dhcp-server isc-dhcp-server6.service

Impact:

There may be packages that are dependent on the isc-dhcp-server package. If the isc-dhcp-server package is removed, these dependent packages will be removed as well. Before removing the isc-dhcp-server package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the isc-dhcp-server.service and isc-dhcp-server6.service leaving the isc-dhcp-server package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.4 Ensure dns server services are not in use"" : [PASSED]

The Domain Name System (DNS) is a hierarchical naming system that maps names to IP addresses for computers, services and other resources connected to a network.

Unless a system is specifically designated to act as a DNS server, it is recommended that the package be deleted to reduce the potential attack surface.

Solution:
Run the following commands to stop bind9.service and remove the bind9 package:

# systemctl stop bind9.service
# apt purge bind9

- OR -

- IF - the bind9 package is required as a dependency:

Run the following commands to stop and mask bind9.service :

# systemctl stop bind9.service
# systemctl mask bind9.service

Impact:

There may be packages that are dependent on the bind9 package. If the bind9 package is removed, these dependent packages will be removed as well. Before removing the bind9 package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the bind9.service leaving the bind9 package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s bind9 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s bind9 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'bind9' is not installed and no information is available","Run the following commands to stop bind9.service and remove the bind9 package:

# systemctl stop bind9.service
# apt purge bind9

- OR -

- IF - the bind9 package is required as a dependency:

Run the following commands to stop and mask bind9.service :

# systemctl stop bind9.service
# systemctl mask bind9.service

Impact:

There may be packages that are dependent on the bind9 package. If the bind9 package is removed, these dependent packages will be removed as well. Before removing the bind9 package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the bind9.service leaving the bind9 package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.5 Ensure dnsmasq services are not in use"" : [PASSED]

dnsmasq is a lightweight tool that provides DNS caching, DNS forwarding and DHCP (Dynamic Host Configuration Protocol) services.

Unless a system is specifically designated to act as a DNS caching, DNS forwarding and/or DHCP server, it is recommended that the package be removed to reduce the potential attack surface.

Solution:
Run the following commands to stop dnsmasq.service and remove dnsmasq package:

# systemctl stop dnsmasq.service
# apt purge dnsmasq

- OR -

- IF - the dnsmasq package is required as a dependency:

Run the following commands to stop and mask the dnsmasq.service :

# systemctl stop dnsmasq.service
# systemctl mask dnsmasq.service

Impact:

There may be packages that are dependent on the dnsmasq package. If the dnsmasq package is removed, these dependent packages will be removed as well. Before removing the dnsmasq package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the dnsmasq.service leaving the dnsmasq package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s dnsmasq 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s dnsmasq 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'dnsmasq' is not installed and no information is available","Run the following commands to stop dnsmasq.service and remove dnsmasq package:

# systemctl stop dnsmasq.service
# apt purge dnsmasq

- OR -

- IF - the dnsmasq package is required as a dependency:

Run the following commands to stop and mask the dnsmasq.service :

# systemctl stop dnsmasq.service
# systemctl mask dnsmasq.service

Impact:

There may be packages that are dependent on the dnsmasq package. If the dnsmasq package is removed, these dependent packages will be removed as well. Before removing the dnsmasq package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the dnsmasq.service leaving the dnsmasq package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.6 Ensure ftp server services are not in use"" : [PASSED]

The File Transfer Protocol (FTP) provides networked computers with the ability to transfer files.

FTP does not protect the confidentiality of data or authentication credentials. It is recommended SFTP be used if file transfer is required. Unless there is a need to run the system as a FTP server (for example, to allow anonymous downloads), it is recommended that the package be deleted to reduce the potential attack surface.

Solution:
Run the following commands to stop vsftpd.service and remove the vsftpd package:

# systemctl stop vsftpd.service
# apt purge vsftpd

- OR -

- IF - the vsftpd package is required as a dependency:

Run the following commands to stop and mask the vsftpd.service :

# systemctl stop vsftpd.service
# systemctl mask vsftpd.service

Note: Other ftp server packages may exist. If not required and authorized by local site policy, they should also be removed. If the package is required for a dependency, the service should be stopped and masked.

Impact:

There may be packages that are dependent on the vsftpd package. If the vsftpd package is removed, these dependent packages will be removed as well. Before removing the vsftpd package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the vsftpd.service leaving the vsftpd package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s vsftpd 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s vsftpd 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'vsftpd' is not installed and no information is available","Run the following commands to stop vsftpd.service and remove the vsftpd package:

# systemctl stop vsftpd.service
# apt purge vsftpd

- OR -

- IF - the vsftpd package is required as a dependency:

Run the following commands to stop and mask the vsftpd.service :

# systemctl stop vsftpd.service
# systemctl mask vsftpd.service

Note: Other ftp server packages may exist. If not required and authorized by local site policy, they should also be removed. If the package is required for a dependency, the service should be stopped and masked.

Impact:

There may be packages that are dependent on the vsftpd package. If the vsftpd package is removed, these dependent packages will be removed as well. Before removing the vsftpd package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the vsftpd.service leaving the vsftpd package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.7 Ensure ldap server services are not in use"" : [PASSED]

The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.

If the system will not need to act as an LDAP server, it is recommended that the software be removed to reduce the potential attack surface.

Solution:
Run the following commands to stop slapd.service and remove the slapd package:

# systemctl stop slapd.service
# apt purge slapd

- OR -

- IF - the slapd package is required as a dependency:

Run the following commands to stop and mask slapd.service :

# systemctl stop slapd.service
# systemctl mask slapd.service

Impact:

There may be packages that are dependent on the slapd package. If the slapd package is removed, these dependent packages will be removed as well. Before removing the slapd package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the slapd.service leaving the slapd package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s slapd 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s slapd 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'slapd' is not installed and no information is available","Run the following commands to stop slapd.service and remove the slapd package:

# systemctl stop slapd.service
# apt purge slapd

- OR -

- IF - the slapd package is required as a dependency:

Run the following commands to stop and mask slapd.service :

# systemctl stop slapd.service
# systemctl mask slapd.service

Impact:

There may be packages that are dependent on the slapd package. If the slapd package is removed, these dependent packages will be removed as well. Before removing the slapd package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the slapd.service leaving the slapd package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.8 Ensure message access server services are not in use"" : [PASSED]

dovecot-imapd and dovecot-pop3d are an open source IMAP and POP3 server for Linux based systems.

Unless POP3 and/or IMAP servers are to be provided by this system, it is recommended that the package be removed to reduce the potential attack surface.

Note: Several IMAP/POP3 servers exist and can use other service names. These should also be audited and the packages removed if not required.

Solution:
Run one of the following commands to remove dovecot-imapd and dovecot-pop3d :

Run the following commands to stop dovecot.socket and dovecot.service and remove the dovecot-imapd and dovecot-pop3d packages:

# systemctl stop dovecot.socket dovecot.service
# apt purge dovecot-imapd dovecot-pop3d

- OR -

- IF - a package is installed and is required for dependencies:

Run the following commands to stop and mask dovecot.socket and dovecot.service :

# systemctl stop dovecot.socket dovecot.service
# systemctl mask dovecot.socket dovecot.service

Impact:

There may be packages that are dependent on dovecot-imapd and/or dovecot-pop3d packages. If dovecot-imapd and dovecot-pop3d packages are removed, these dependent packages will be removed as well. Before removing dovecot-imapd and/or dovecot-pop3d packages, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask dovecot.socket and dovecot.service leaving dovecot-imapd and/or dovecot-pop3d packages installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - dpkg check dovecot-pop3
The command '/bin/dpkg -s dovecot-pop3 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'dovecot-pop3' is not installed and no information is available

-------------------------
PASSED - dpkg check dovecot-imapd
The command '/bin/dpkg -s dovecot-imapd 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'dovecot-imapd' is not installed and no information is available","Run one of the following commands to remove dovecot-imapd and dovecot-pop3d :

Run the following commands to stop dovecot.socket and dovecot.service and remove the dovecot-imapd and dovecot-pop3d packages:

# systemctl stop dovecot.socket dovecot.service
# apt purge dovecot-imapd dovecot-pop3d

- OR -

- IF - a package is installed and is required for dependencies:

Run the following commands to stop and mask dovecot.socket and dovecot.service :

# systemctl stop dovecot.socket dovecot.service
# systemctl mask dovecot.socket dovecot.service

Impact:

There may be packages that are dependent on dovecot-imapd and/or dovecot-pop3d packages. If dovecot-imapd and dovecot-pop3d packages are removed, these dependent packages will be removed as well. Before removing dovecot-imapd and/or dovecot-pop3d packages, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask dovecot.socket and dovecot.service leaving dovecot-imapd and/or dovecot-pop3d packages installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.9 Ensure network file system services are not in use"" : [PASSED]

The Network File System (NFS) is one of the first and most widely distributed file systems in the UNIX environment. It provides the ability for systems to mount file systems of other servers through the network.

If the system does not export NFS shares, it is recommended that the nfs-kernel-server package be removed to reduce the remote attack surface.

Solution:
Run the following command to stop nfs-server.service and remove nfs-kernel-server package:

# systemctl stop nfs-server.service
# apt purge nfs-kernel-server

- OR -

- IF - the nfs-kernel-server package is required as a dependency:

Run the following commands to stop and mask the nfs-server.service :

# systemctl stop nfs-server.service
# systemctl mask nfs-server.service

Impact:

There may be packages that are dependent on the nfs-kernel-server package. If the nfs-kernel-server package is removed, these dependent packages will be removed as well. Before removing the nfs-kernel-server package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the nfs-server.service leaving the nfs-kernel-server package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s nfs-kernel-server 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s nfs-kernel-server 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'nfs-kernel-server' is not installed and no information is available","Run the following command to stop nfs-server.service and remove nfs-kernel-server package:

# systemctl stop nfs-server.service
# apt purge nfs-kernel-server

- OR -

- IF - the nfs-kernel-server package is required as a dependency:

Run the following commands to stop and mask the nfs-server.service :

# systemctl stop nfs-server.service
# systemctl mask nfs-server.service

Impact:

There may be packages that are dependent on the nfs-kernel-server package. If the nfs-kernel-server package is removed, these dependent packages will be removed as well. Before removing the nfs-kernel-server package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the nfs-server.service leaving the nfs-kernel-server package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.2.1 Ensure NIS Client is not installed"" : [PASSED]

The Network Information Service (NIS), formerly known as Yellow Pages, is a client-server directory service protocol used to distribute system configuration files. The NIS client was used to bind a machine to an NIS server and receive the distributed configuration files.

The NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the service be removed.

Solution:
Uninstall nis :

# apt purge nis

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|2.6,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s nis 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s nis 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'nis' is not installed and no information is available","Uninstall nis :

# apt purge nis

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.2.2 Ensure rsh client is not installed"" : [PASSED]

The rsh-client package contains the client commands for the rsh services.

These legacy clients contain numerous security exposures and have been replaced with the more secure SSH package. Even if the server is removed, it is best to ensure the clients are also removed to prevent users from inadvertently attempting to use these commands and therefore exposing their credentials. Note that removing the rsh-client package removes the clients for rsh rcp and rlogin

Solution:
Uninstall rsh :

# apt purge rsh-client

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s rsh-client 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s rsh-client 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'rsh-client' is not installed and no information is available","Uninstall rsh :

# apt purge rsh-client

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.2.3 Ensure talk client is not installed"" : [PASSED]

The talk software makes it possible for users to send and receive messages across systems through a terminal session. The talk client, which allows initialization of talk sessions, is installed by default.

The software presents a security risk as it uses unencrypted protocols for communication.

Solution:
Uninstall talk :

# apt purge talk

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s talk 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s talk 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'talk' is not installed and no information is available","Uninstall talk :

# apt purge talk

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.2.4 Ensure telnet client is not installed"" : [FAILED]

The telnet package contains the telnet client, which allows users to start connections to other systems via the telnet protocol.

The telnet protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow an unauthorized user to steal credentials. The ssh package provides an encrypted session and stronger security and is included in most Linux distributions.

Solution:
Uninstall telnet :

# apt purge telnet

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s telnet 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s telnet 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

Status: install ok installed","Uninstall telnet :

# apt purge telnet

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.2.5 Ensure ldap client is not installed"" : [PASSED]

The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.

If the system will not need to act as an LDAP client, it is recommended that the software be removed to reduce the potential attack surface.

Solution:
Uninstall ldap-utils :

# apt purge ldap-utils

Impact:

Removing the LDAP client will prevent or inhibit using LDAP for authentication in your environment.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s ldap-utils 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s ldap-utils 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'ldap-utils' is not installed and no information is available","Uninstall ldap-utils :

# apt purge ldap-utils

Impact:

Removing the LDAP client will prevent or inhibit using LDAP for authentication in your environment.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.2.6 Ensure ftp client is not installed"" : [PASSED]

FTP (File Transfer Protocol) is a traditional and widely used standard tool for transferring files between a server and clients over a network, especially where no authentication is necessary (permits anonymous users to connect to a server).

FTP does not protect the confidentiality of data or authentication credentials. It is recommended SFTP be used if file transfer is required. Unless there is a need to run the system as a FTP server (for example, to allow anonymous downloads), it is recommended that the package be removed to reduce the potential attack surface.

Solution:
Run the following command to uninstall ftp :

# apt purge ftp

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s ftp 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s ftp 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'ftp' is not installed and no information is available","Run the following command to uninstall ftp :

# apt purge ftp","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.3.1.1 Ensure a single time synchronization daemon is in use"" : [PASSED]

System time should be synchronized between all systems in an environment. This is typically done by establishing an authoritative time server or set of servers and having all systems synchronize their clocks to them.

Notes:

 - On virtual systems where host based time synchronization is available consult your virtualization software documentation and verify that host based synchronization is in use and follows local site policy. In this scenario, this section should be skipped
 - Only one time synchronization method should be in use on the system. Configuring multiple time synchronization methods could lead to unexpected or unreliable results

Time synchronization is important to support time sensitive security mechanisms and ensures log files have consistent time records across the enterprise, which aids in forensic investigations.

Solution:
On physical systems, and virtual systems where host based time synchronization is not available.

Select one of the two time synchronization daemons; chrony (1) or systemd-timesyncd (2) and following the remediation procedure for the selected daemon.

Note: enabling more than one synchronization daemon could lead to unexpected or unreliable results:

 - chrony

Run the following command to install chrony :

# apt install chrony

Run the following commands to stop and mask the systemd-timesyncd daemon:

# systemctl stop systemd-timesyncd.service

# systemctl mask systemd-timesyncd.service

Note:

 - Subsection:

Configure chrony

should be followed
 - Subsection:

Configure systemd-timesyncd

should be skipped

<xhtml:ol start=""2""> - systemd-timesyncd

Run the following command to remove the chrony package:

# apt purge chrony
# apt autoremove chrony

Note:

 - Subsection:

Configure systemd-timesyncd

should be followed
 - Subsection:

Configure chrony

should be skipped

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **
 - Only one time sync daemon is in use on the system
  - Daemon: ""systemd-timesyncd.service"" is enabled on the system
  - Daemon: ""systemd-timesyncd.service"" is active on the system
  - Daemon: ""chrony.service"" is not enabled and not active on the system","On physical systems, and virtual systems where host based time synchronization is not available.

Select one of the two time synchronization daemons; chrony (1) or systemd-timesyncd (2) and following the remediation procedure for the selected daemon.

Note: enabling more than one synchronization daemon could lead to unexpected or unreliable results:

 - chrony

Run the following command to install chrony :

# apt install chrony

Run the following commands to stop and mask the systemd-timesyncd daemon:

# systemctl stop systemd-timesyncd.service

# systemctl mask systemd-timesyncd.service

Note:

 - Subsection:

Configure chrony

should be followed
 - Subsection:

Configure systemd-timesyncd

should be skipped

<xhtml:ol start=""2""> - systemd-timesyncd

Run the following command to remove the chrony package:

# apt purge chrony
# apt autoremove chrony

Note:

 - Subsection:

Configure systemd-timesyncd

should be followed
 - Subsection:

Configure chrony

should be skipped","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.3.2.1 Ensure systemd-timesyncd configured with authorized timeserver"" : [PASSED]

NTP=

 - A space-separated list of NTP server host names or IP addresses. During runtime this list is combined with any per-interface NTP servers acquired from systemd-networkd.service(8). systemd-timesyncd will contact all configured system or per-interface servers in turn, until one responds. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. This setting defaults to an empty list.

FallbackNTP=

 - A space-separated list of NTP server host names or IP addresses to be used as the fallback NTP servers. Any per-interface NTP servers obtained from systemd-networkd.service(8) take precedence over this setting, as do any servers set via NTP= above. This setting is hence only relevant if no other NTP server information is known. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. If this option is not given, a compiled-in list of NTP servers is used.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations

Solution:
Set NTP and/or FallbackNPT parameters to local site approved authoritative time server(s) in /etc/systemd/timesyncd.conf or a file in /etc/systemd/timesyncd.conf.d/ ending inconf in the [Time] section:

Example file:

[Time]
NTP=time.nist.gov # Uses the generic name for NIST's time servers
FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov # Space separated list of NIST time servers

Example script to create systemd drop-in file:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/timesyncd.conf.d/ ] &amp;&amp; mkdir /etc/systemd/timesyncd.conf.d/
   printf '%s
' ""[Time]"" ""NTP=time.nist.gov"" ""FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov"" >> /etc/systemd/timesyncd.conf.d/60-timesyncd.conf
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - ""NTP"" is correctly set to ""time1.keen.fsnets.com"" in ""/etc/systemd/timesyncd.conf""

 - ""FallbackNTP"" is correctly set to ""ntp.ubuntu.com"" in ""/etc/systemd/timesyncd.conf""","Set NTP and/or FallbackNPT parameters to local site approved authoritative time server(s) in /etc/systemd/timesyncd.conf or a file in /etc/systemd/timesyncd.conf.d/ ending inconf in the [Time] section:

Example file:

[Time]
NTP=time.nist.gov # Uses the generic name for NIST's time servers
FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov # Space separated list of NIST time servers

Example script to create systemd drop-in file:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/timesyncd.conf.d/ ] &amp;&amp; mkdir /etc/systemd/timesyncd.conf.d/
   printf '%s
' ""[Time]"" ""NTP=time.nist.gov"" ""FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov"" >> /etc/systemd/timesyncd.conf.d/60-timesyncd.conf
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.3.2.2 Ensure systemd-timesyncd is enabled and running"" : [PASSED]

systemd-timesyncd is a daemon that has been added for synchronizing the system clock across the network

systemd-timesyncd needs to be enabled and running in order to synchronize the system to a timeserver.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations

Solution:
- IF - systemd-timesyncd is in use on the system, run the following commands:

Run the following command to unmask systemd-timesyncd.service :

# systemctl unmask systemd-timesyncd.service

Run the following command to enable and start systemd-timesyncd.service :

# systemctl --now enable systemd-timesyncd.service

- OR -

If another time synchronization service is in use on the system, run the following command to stop and mask systemd-timesyncd :

# systemctl --now mask systemd-timesyncd.service

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1M,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - check if systemd-timesyncd is enabled
The command '/bin/systemctl is-enabled systemd-timesyncd' returned : 

enabled

-------------------------
PASSED - check if systemd-timesyncd is active
The command '/bin/systemctl is-active systemd-timesyncd' returned : 

active","- IF - systemd-timesyncd is in use on the system, run the following commands:

Run the following command to unmask systemd-timesyncd.service :

# systemctl unmask systemd-timesyncd.service

Run the following command to enable and start systemd-timesyncd.service :

# systemctl --now enable systemd-timesyncd.service

- OR -

If another time synchronization service is in use on the system, run the following command to stop and mask systemd-timesyncd :

# systemctl --now mask systemd-timesyncd.service","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.3.3.1 Ensure chrony is configured with authorized timeserver"" : [PASSED]

-

server

 - The server directive specifies an NTP server which can be used as a time source. The client-server relationship is strictly hierarchical: a client might synchronize its system time to that of the server, but the server's system time will never be influenced by that of a client.
 - This directive can be used multiple times to specify multiple servers.
 - The directive is immediately followed by either the name of the server, or its IP address.

 -

pool

 - The syntax of this directive is similar to that for the server directive, except that it is used to specify a pool of NTP servers rather than a single NTP server. The pool name is expected to resolve to multiple addresses which might change over time.
 - This directive can be used multiple times to specify multiple pools.
 - All options valid in the server directive can be used in this directive too.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations

Solution:
Edit /etc/chrony/chrony.conf or a file ending insources in /etc/chrony/sources.d/ and add or edit server or pool lines as appropriate according to local site policy:

<[server|pool]> <[remote-server|remote-pool]>

Examples:

pool directive:

pool time.nist.gov iburst maxsources 4 #The maxsources option is unique to the pool directive

server directive:

server time-a-g.nist.gov iburst
server 132.163.97.3 iburst
server time-d-b.nist.gov iburst

Run one of the following commands to load the updated time sources into chronyd running config:

# systemctl restart chronyd

- OR if sources are in a .sources file -

# chronyc reload sources

- OR -

If another time synchronization service is in use on the system, run the following command to remove chrony from the system:

# apt purge chrony
# apt autoremove chrony

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1M,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4

Policy Value:
PASSED","Edit /etc/chrony/chrony.conf or a file ending insources in /etc/chrony/sources.d/ and add or edit server or pool lines as appropriate according to local site policy:

<[server|pool]> <[remote-server|remote-pool]>

Examples:

pool directive:

pool time.nist.gov iburst maxsources 4 #The maxsources option is unique to the pool directive

server directive:

server time-a-g.nist.gov iburst
server 132.163.97.3 iburst
server time-d-b.nist.gov iburst

Run one of the following commands to load the updated time sources into chronyd running config:

# systemctl restart chronyd

- OR if sources are in a .sources file -

# chronyc reload sources

- OR -

If another time synchronization service is in use on the system, run the following command to remove chrony from the system:

# apt purge chrony
# apt autoremove chrony","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.3.3.2 Ensure chrony is running as user _chrony"" : [PASSED]

The chrony package is installed with a dedicated user account _chrony This account is granted the access required by the chronyd service

The chronyd service should run with only the required privlidges

Solution:
Add or edit the user line to /etc/chrony/chrony.conf or a file ending inconf in /etc/chrony/conf.d/ :

user _chrony

- OR -

If another time synchronization service is in use on the system, run the following command to remove chrony from the system:

# apt purge chrony
# apt autoremove chrony

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4

Policy Value:
PASSED","Add or edit the user line to /etc/chrony/chrony.conf or a file ending inconf in /etc/chrony/conf.d/ :

user _chrony

- OR -

If another time synchronization service is in use on the system, run the following command to remove chrony from the system:

# apt purge chrony
# apt autoremove chrony","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.3.3.3 Ensure chrony is enabled and running"" : [PASSED]

chrony is a daemon for synchronizing the system clock across the network

chrony needs to be enabled and running in order to synchronize the system to a timeserver.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations

Solution:
- IF - chrony is in use on the system, run the following commands:

Run the following command to unmask chrony.service :

# systemctl unmask chrony.service

Run the following command to enable and start chrony.service :

# systemctl --now enable chrony.service

- OR -

If another time synchronization service is in use on the system, run the following command to remove chrony :

# apt purge chrony
# apt autoremove chrony

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4

Policy Value:
PASSED","- IF - chrony is in use on the system, run the following commands:

Run the following command to unmask chrony.service :

# systemctl unmask chrony.service

Run the following command to enable and start chrony.service :

# systemctl --now enable chrony.service

- OR -

If another time synchronization service is in use on the system, run the following command to remove chrony :

# apt purge chrony
# apt autoremove chrony","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.1 Ensure cron daemon is enabled and active"" : [PASSED]

The cron daemon is used to execute batch jobs on the system.

While there may not be user jobs that need to be run on the system, the system does have maintenance jobs that may include security monitoring that have to run, and cron is used to execute them.

Solution:
- IF - cron is installed on the system:

Run the following commands to unmask, enable, and start cron :

# systemctl unmask ""$(systemctl list-unit-files | awk '$1~/^crond?.service/{print $1}')""
# systemctl --now enable ""$(systemctl list-unit-files | awk '$1~/^crond?.service/{print $1}')""

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - enabled
The command '/bin/systemctl list-unit-files | /bin/awk '$1~/^crond?\.service/{print $2}'' returned : 

enabled

-------------------------
PASSED - active
The command '/bin/systemctl list-units | /bin/awk '$1~/^crond?\.service/{print $3}'' returned : 

active","- IF - cron is installed on the system:

Run the following commands to unmask, enable, and start cron :

# systemctl unmask ""$(systemctl list-unit-files | awk '$1~/^crond?.service/{print $1}')""
# systemctl --now enable ""$(systemctl list-unit-files | awk '$1~/^crond?.service/{print $1}')""","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.2 Ensure permissions on /etc/crontab are configured"" : [FAILED]

The /etc/crontab file is used by cron to control its own jobs. The commands in this item make sure that root is the user and group owner of the file and that only the owner can access the file.

This file contains information on what system jobs are run by cron. Write access to these files could provide unprivileged users with the ability to elevate their privileges. Read access to these files could provide users with the ability to gain insight on system jobs that run on the system and could provide them a way to gain unauthorized privileged access.

Solution:
- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on /etc/crontab :

# chown root:root /etc/crontab
# chmod og-rwx /etc/crontab

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/crontab
group: root
mask: 177
owner: root

Actual Value:
The file /etc/crontab with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE  does not match the policy value owner: root group: root mask: 177 uneven permissions : FALSE 

/etc/crontab","- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on /etc/crontab :

# chown root:root /etc/crontab
# chmod og-rwx /etc/crontab","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.3 Ensure permissions on /etc/cron.hourly are configured"" : [FAILED]

This directory contains system cron jobs that need to run on an hourly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.

Solution:
- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.hourly directory:

# chown root:root /etc/cron.hourly/
# chmod og-rwx /etc/cron.hourly/

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/cron.hourly
group: root
mask: 077
owner: root

Actual Value:
The file /etc/cron.hourly with fmode owner: root group: root mode: 0755 uid: 0 gid: 0 uneven permissions : FALSE  does not match the policy value owner: root group: root mask: 077 uneven permissions : FALSE 

/etc/cron.hourly","- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.hourly directory:

# chown root:root /etc/cron.hourly/
# chmod og-rwx /etc/cron.hourly/","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.4 Ensure permissions on /etc/cron.daily are configured"" : [FAILED]

The /etc/cron.daily directory contains system cron jobs that need to run on a daily basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.

Solution:
- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.daily directory:

# chown root:root /etc/cron.daily/
# chmod og-rwx /etc/cron.daily/

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/cron.daily
group: root
mask: 077
owner: root

Actual Value:
The file /etc/cron.daily with fmode owner: root group: root mode: 0755 uid: 0 gid: 0 uneven permissions : FALSE  does not match the policy value owner: root group: root mask: 077 uneven permissions : FALSE 

/etc/cron.daily","- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.daily directory:

# chown root:root /etc/cron.daily/
# chmod og-rwx /etc/cron.daily/","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.5 Ensure permissions on /etc/cron.weekly are configured"" : [FAILED]

The /etc/cron.weekly directory contains system cron jobs that need to run on a weekly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.

Solution:
- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.weekly directory:

# chown root:root /etc/cron.weekly/
# chmod og-rwx /etc/cron.weekly/

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/cron.weekly
group: root
mask: 077
owner: root

Actual Value:
The file /etc/cron.weekly with fmode owner: root group: root mode: 0755 uid: 0 gid: 0 uneven permissions : FALSE  does not match the policy value owner: root group: root mask: 077 uneven permissions : FALSE 

/etc/cron.weekly","- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.weekly directory:

# chown root:root /etc/cron.weekly/
# chmod og-rwx /etc/cron.weekly/","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.6 Ensure permissions on /etc/cron.monthly are configured"" : [FAILED]

The /etc/cron.monthly directory contains system cron jobs that need to run on a monthly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.

Solution:
- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.monthly directory:

# chown root:root /etc/cron.monthly/
# chmod og-rwx /etc/cron.monthly/

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/cron.monthly
group: root
mask: 077
owner: root

Actual Value:
The file /etc/cron.monthly with fmode owner: root group: root mode: 0755 uid: 0 gid: 0 uneven permissions : FALSE  does not match the policy value owner: root group: root mask: 077 uneven permissions : FALSE 

/etc/cron.monthly","- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.monthly directory:

# chown root:root /etc/cron.monthly/
# chmod og-rwx /etc/cron.monthly/","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.7 Ensure permissions on /etc/cron.d are configured"" : [FAILED]

The /etc/cron.d directory contains system cron jobs that need to run in a similar manner to the hourly, daily weekly and monthly jobs from /etc/crontab but require more granular control as to when they run. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.

Solution:
- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.d directory:

# chown root:root /etc/cron.d/
# chmod og-rwx /etc/cron.d/

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/cron.d
group: root
mask: 077
owner: root

Actual Value:
The file /etc/cron.d with fmode owner: root group: root mode: 0755 uid: 0 gid: 0 uneven permissions : FALSE  does not match the policy value owner: root group: root mask: 077 uneven permissions : FALSE 

/etc/cron.d","- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.d directory:

# chown root:root /etc/cron.d/
# chmod og-rwx /etc/cron.d/","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.8 Ensure crontab is restricted to authorized users"" : [FAILED]

crontab is the program used to install, deinstall, or list the tables used to drive the cron daemon. Each user can have their own crontab, and though these are files in /var/spool/cron/crontabs they are not intended to be edited directly.

If the /etc/cron.allow file exists, then you must be listed (one user per line) therein in order to be allowed to use this command. If the /etc/cron.allow file does not exist but the /etc/cron.deny file does exist, then you must not be listed in the /etc/cron.deny file in order to use this command.

If neither of these files exists, then depending on site-dependent configuration parameters, only the super user will be allowed to use this command, or all users will be able to use this command.

If both files exist then /etc/cron.allow takes precedence. Which means that /etc/cron.deny is not considered and your user must be listed in /etc/cron.allow in order to be able to use the crontab.

Regardless of the existence of any of these files, the root administrative user is always allowed to setup a crontab.

The files /etc/cron.allow and /etc/cron.deny if they exist, must be either world-readable, or readable by group crontab If they are not, then cron will deny access to all users until the permissions are fixed.

There is one file for each user's crontab under the /var/spool/cron/crontabs directory. Users are not allowed to edit the files under that directory directly to ensure that only users allowed by the system to run periodic tasks can add them, and only syntactically correct crontabs will be written there. This is enforced by having the directory writable only by the crontab group and configuring crontab command with the setgid bid set for that specific group.

Note:

 - Even though a given user is not listed in cron.allow cron jobs can still be run as that user
 - The files /etc/cron.allow and /etc/cron.deny if they exist, only controls administrative access to the crontab command for scheduling and modifying cron jobs

On many systems, only the system administrator is authorized to schedule cron jobs. Using the cron.allow file to control who can run cron jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files.

Solution:
- IF - cron is installed on the system:

Run the following script to:

 - Create /etc/cron.allow if it doesn't exist
 - Change owner or user root
 - Change group owner to group root
 - Change mode to 640 or more restrictive

#!/usr/bin/env bash

{
   [ ! -e ""/etc/cron.allow"" ] &amp;&amp; touch /etc/cron.allow
   chown root:root /etc/cron.allow
   chmod u-x,g-wx,o-rwx /etc/cron.allow
}

- IF - /etc/cron.deny exists, run the following commands to:

 - Change owner or user root
 - Change group owner to group root
 - Change mode to 640 or more restrictive

# [ -e ""/etc/cron.deny"" ] &amp;&amp; chown root:root /etc/cron.deny
# [ -e ""/etc/cron.deny"" ] &amp;&amp; chmod u-x,g-wx,o-rwx /etc/cron.deny

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - /etc/cron.deny file permissions


-------------------------
FAILED - /etc/cron.allow file permissions
No files found: /etc/cron.allow","- IF - cron is installed on the system:

Run the following script to:

 - Create /etc/cron.allow if it doesn't exist
 - Change owner or user root
 - Change group owner to group root
 - Change mode to 640 or more restrictive

#!/usr/bin/env bash

{
   [ ! -e ""/etc/cron.allow"" ] &amp;&amp; touch /etc/cron.allow
   chown root:root /etc/cron.allow
   chmod u-x,g-wx,o-rwx /etc/cron.allow
}

- IF - /etc/cron.deny exists, run the following commands to:

 - Change owner or user root
 - Change group owner to group root
 - Change mode to 640 or more restrictive

# [ -e ""/etc/cron.deny"" ] &amp;&amp; chown root:root /etc/cron.deny
# [ -e ""/etc/cron.deny"" ] &amp;&amp; chmod u-x,g-wx,o-rwx /etc/cron.deny","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.2.1 Ensure at is restricted to authorized users"" : [PASSED]

at allows fairly complex time specifications, extending the POSIX.2 standard. It accepts times of the form HH:MM to run a job at a specific time of day. (If that time is already past, the next day is assumed.) You may also specify midnight, noon, or teatime (4pm) and you can have a time-of-day suffixed with AM or PM for running in the morning or the evening. You can also say what day the job will be run, by giving a date in the form month-name day with an optional year, or giving a date of the form MMDD[CC]YY, MM/DD/[CC]YY, DD.MM.[CC]YY or [CC]YY-MM-DD. The specification of a date must follow the specification of the time of day. You can also give times like now + count time-units, where the time-units can be minutes, hours, days, or weeks and you can tell at to run the job today by suffixing the time with today and to run the job tomorrow by suffixing the time with tomorrow.

The /etc/at.allow and /etc/at.deny files determine which user can submit commands for later execution via at or batch. The format of the files is a list of usernames, one on each line. Whitespace is not permitted. If the file /etc/at.allow exists, only usernames mentioned in it are allowed to use at. If /etc/at.allow does not exist, /etc/at.deny is checked, every username not mentioned in it is then allowed to use at. An empty /etc/at.deny means that every user may use at. If neither file exists, only the superuser is allowed to use at.

On many systems, only the system administrator is authorized to schedule at jobs. Using the at.allow file to control who can run at jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files.

Solution:
-IF- at is installed on the system:

Run the following script to:

 - /etc/at.allow :
 - Create the file if it doesn't exist
 - Change owner or user root
 - If group daemon exists, change to group daemon else change group to root
 - Change mode to 640 or more restrictive

 - -IF- /etc/at.deny exists:
 - Change owner or user root
 - If group daemon exists, change to group daemon else change group to root
 - Change mode to 640 or more restrictive

#!/usr/bin/env bash

{
   grep -Pq -- '^daemonb' /etc/group &amp;&amp; l_group=""daemon"" || l_group=""root""
   [ ! -e ""/etc/at.allow"" ] &amp;&amp; touch /etc/at.allow
   chown root:""$l_group"" /etc/at.allow
   chmod u-x,g-wx,o-rwx /etc/at.allow
   [ -e ""/etc/at.deny"" ] &amp;&amp; chown root:""$l_group"" /etc/at.deny
   [ -e ""/etc/at.deny"" ] &amp;&amp; chmod u-x,g-wx,o-rwx /etc/at.deny
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
PASSED","-IF- at is installed on the system:

Run the following script to:

 - /etc/at.allow :
 - Create the file if it doesn't exist
 - Change owner or user root
 - If group daemon exists, change to group daemon else change group to root
 - Change mode to 640 or more restrictive

 - -IF- /etc/at.deny exists:
 - Change owner or user root
 - If group daemon exists, change to group daemon else change group to root
 - Change mode to 640 or more restrictive

#!/usr/bin/env bash

{
   grep -Pq -- '^daemonb' /etc/group &amp;&amp; l_group=""daemon"" || l_group=""root""
   [ ! -e ""/etc/at.allow"" ] &amp;&amp; touch /etc/at.allow
   chown root:""$l_group"" /etc/at.allow
   chmod u-x,g-wx,o-rwx /etc/at.allow
   [ -e ""/etc/at.deny"" ] &amp;&amp; chown root:""$l_group"" /etc/at.deny
   [ -e ""/etc/at.deny"" ] &amp;&amp; chmod u-x,g-wx,o-rwx /etc/at.deny
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.1.1 Ensure IPv6 status is identified"" : [WARNING]

Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's designed to supply IP addressing and additional security to support the predicted growth of connected devices. IPv6 is based on 128-bit addressing and can support 340 undecillion, which is 340 trillion3 addresses.

Features of IPv6

 - Hierarchical addressing and routing infrastructure
 - Stateful and Stateless configuration
 - Support for quality of service (QoS)
 - An ideal protocol for neighboring node interaction

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations.

-IF- dual stack and IPv6 are not used in your environment, IPv6 may be disabled to reduce the attack surface of the system, and recommendations pertaining to IPv6 can be skipped.

Note: It is recommended that IPv6 be enabled and configured unless this is against local site policy

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Enable or disable IPv6 in accordance with system requirements and local site policy

Impact:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack.

When enabled, IPv6 will require additional configuration to reduce risk to the system.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/grep -Pqs '^\h*0\b' /sys/module/ipv6/parameters/disable && echo -e ""\n - IPv6 is enabled\n"" || echo -e ""\n - IPv6 is not enabled\n""
expect: Manual Review Required

Actual Value:
The command '/bin/grep -Pqs '^\h*0\b' /sys/module/ipv6/parameters/disable && echo -e ""\n - IPv6 is enabled\n"" || echo -e ""\n - IPv6 is not enabled\n""' returned : 

-e 
 - IPv6 is enabled","Enable or disable IPv6 in accordance with system requirements and local site policy

Impact:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack.

When enabled, IPv6 will require additional configuration to reduce risk to the system.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.1.2 Ensure wireless interfaces are disabled"" : [PASSED]

Wireless networking is used when wired networks are unavailable.

-IF- wireless is not to be used, wireless devices can be disabled to reduce the potential attack surface.

Solution:
Run the following script to disable any wireless interfaces:

#!/usr/bin/env bash

{
   module_fix()
   {
      if ! modprobe -n -v ""$l_mname"" | grep -P -- '^h*install /bin/(true|false)'; then
         echo -e "" - setting module: \""$l_mname\"" to be un-loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mname"".conf
      fi
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e "" - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
      if ! grep -Pq -- ""^h*blacklisth+$l_mnameb"" /etc/modprobe.d/*; then
         echo -e "" - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mname"".conf
      fi
   }
   if [ -n ""$(find /sys/class/net/*/ -type d -name wireless)"" ]; then
      l_dname=$(for driverdir in $(find /sys/class/net/*/ -type d -name wireless | xargs -0 dirname); do basename ""$(readlink -f ""$driverdir""/device/driver/module)"";done | sort -u)
      for l_mname in $l_dname; do
         module_fix
      done
   fi
}

Impact:

Many if not all laptop workstations and some desktop workstations will connect via wireless requiring these interfaces be enabled.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|15.4,CSCv7|15.5,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$
timeout: 7200

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - System has no wireless NICs installed","Run the following script to disable any wireless interfaces:

#!/usr/bin/env bash

{
   module_fix()
   {
      if ! modprobe -n -v ""$l_mname"" | grep -P -- '^h*install /bin/(true|false)'; then
         echo -e "" - setting module: \""$l_mname\"" to be un-loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mname"".conf
      fi
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e "" - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
      if ! grep -Pq -- ""^h*blacklisth+$l_mnameb"" /etc/modprobe.d/*; then
         echo -e "" - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mname"".conf
      fi
   }
   if [ -n ""$(find /sys/class/net/*/ -type d -name wireless)"" ]; then
      l_dname=$(for driverdir in $(find /sys/class/net/*/ -type d -name wireless | xargs -0 dirname); do basename ""$(readlink -f ""$driverdir""/device/driver/module)"";done | sort -u)
      for l_mname in $l_dname; do
         module_fix
      done
   fi
}

Impact:

Many if not all laptop workstations and some desktop workstations will connect via wireless requiring these interfaces be enabled.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.1.3 Ensure bluetooth services are not in use"" : [PASSED]

Bluetooth is a short-range wireless technology standard that is used for exchanging data between devices over short distances. It employs UHF radio waves in the ISM bands, from 2.402 GHz to 2.48 GHz. It is mainly used as an alternative to wire connections.

An attacker may be able to find a way to access or corrupt your data. One example of this type of activity is bluesnarfing which refers to attackers using a Bluetooth connection to steal information off of your Bluetooth device. Also, viruses or other malicious code can take advantage of Bluetooth technology to infect other devices. If you are infected, your data may be corrupted, compromised, stolen, or lost.

Solution:
Run the following commands to stop bluetooth.service and remove the bluez package:

# systemctl stop bluetooth.service
# apt purge bluez

- OR -

- IF - the bluez package is required as a dependency:

Run the following commands to stop and mask bluetooth.service :

# systemctl stop bluetooth.service
# systemctl mask bluetooth.service

Note: A reboot may be required

Impact:

Many personal electronic devices (PEDs) use Bluetooth technology. For example, you may be able to operate your computer with a wireless keyboard. Disabling Bluetooth will prevent these devices from connecting to the system.

There may be packages that are dependent on the bluez package. If the bluez package is removed, these dependent packages will be removed as well. Before removing the bluez package, review any dependent packages to determine if they are required on the system.

-IF- a dependent package is required: stop and mask bluetooth.service leaving the bluez package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s bluez 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s bluez 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'bluez' is not installed and no information is available","Run the following commands to stop bluetooth.service and remove the bluez package:

# systemctl stop bluetooth.service
# apt purge bluez

- OR -

- IF - the bluez package is required as a dependency:

Run the following commands to stop and mask bluetooth.service :

# systemctl stop bluetooth.service
# systemctl mask bluetooth.service

Note: A reboot may be required

Impact:

Many personal electronic devices (PEDs) use Bluetooth technology. For example, you may be able to operate your computer with a wireless keyboard. Disabling Bluetooth will prevent these devices from connecting to the system.

There may be packages that are dependent on the bluez package. If the bluez package is removed, these dependent packages will be removed as well. Before removing the bluez package, review any dependent packages to determine if they are required on the system.

-IF- a dependent package is required: stop and mask bluetooth.service leaving the bluez package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.1 Ensure ip forwarding is disabled"" : [FAILED]

The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.

Setting net.ipv4.ip_forward and net.ipv6.conf.all.forwarding to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router.

Solution:
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.ip_forward = 0

Example:

# printf '%s
' ""net.ipv4.ip_forward = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.ip_forward=0
   sysctl -w net.ipv4.route.flush=1
}

- IF - IPv6 is enabled on the system:

Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.forwarding = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.forwarding = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.forwarding=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

Impact:

IP forwarding is required on systems configured to act as a router. If these parameters are disabled, the system will not be able to perform as a router.

Many Cloud Service Provider (CSP) hosted systems require IP forwarding to be enabled. If the system is running on a CSP platform, this requirement should be reviewed before disabling IP forwarding.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.ip_forward"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv4.ip_forward"" is not set in an included file
   ** Note: ""net.ipv4.ip_forward"" May be set in a file that's ignored by load procedure **

 - ""net.ipv6.conf.all.forwarding"" is not set in an included file
   ** Note: ""net.ipv6.conf.all.forwarding"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""net.ipv6.conf.all.forwarding"" is correctly set to ""0"" in the running configuration","Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.ip_forward = 0

Example:

# printf '%s
' ""net.ipv4.ip_forward = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.ip_forward=0
   sysctl -w net.ipv4.route.flush=1
}

- IF - IPv6 is enabled on the system:

Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.forwarding = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.forwarding = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.forwarding=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

Impact:

IP forwarding is required on systems configured to act as a router. If these parameters are disabled, the system will not be able to perform as a router.

Many Cloud Service Provider (CSP) hosted systems require IP forwarding to be enabled. If the system is running on a CSP platform, this requirement should be reviewed before disabling IP forwarding.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.10 Ensure tcp syn cookies is enabled"" : [PASSED]

When tcp_syncookies is set, the kernel will handle TCP SYN packets normally until the half-open connection queue is full, at which time, the SYN cookie functionality kicks in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply replies to the SYN with a SYN|ACK, but will include a specially crafted TCP sequence number that encodes the source and destination IP address and port number and the time the packet was sent. A legitimate connection would send the ACK packet of the three way handshake with the specially crafted sequence number. This allows the system to verify that it has received a valid response to a SYN cookie and allow the connection, even though there is no corresponding SYN in the queue.

Attackers use SYN flood attacks to perform a denial of service attacked on a system by sending many SYN packets without completing the three way handshake. This will quickly use up slots in the kernel's half-open connection queue and prevent legitimate connections from succeeding. Setting net.ipv4.tcp_syncookies to 1 enables SYN cookies, allowing the system to keep accepting valid connections, even if under a denial of service attack.

Solution:
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.tcp_syncookies = 1

Example:

# printf '%s
' ""net.ipv4.tcp_syncookies = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.tcp_syncookies=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - ""net.ipv4.tcp_syncookies"" is correctly set to ""1"" in the running configuration
 - ""net.ipv4.tcp_syncookies"" is correctly set to ""1"" in ""/etc/sysctl.d/90-anapaya.conf""","Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.tcp_syncookies = 1

Example:

# printf '%s
' ""net.ipv4.tcp_syncookies = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.tcp_syncookies=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.11 Ensure ipv6 router advertisements are not accepted"" : [FAILED]

This setting disables the system's ability to accept IPv6 router advertisements.

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes. Setting net.ipv6.conf.all.accept_ra and net.ipv6.conf.default.accept_ra to 0 disables the system's ability to accept IPv6 router advertisements.

Solution:
- IF - IPv6 is enabled on the system:

Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.accept_ra = 0
 - net.ipv6.conf.default.accept_ra = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.accept_ra = 0"" ""net.ipv6.conf.default.accept_ra = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.accept_ra=0
   sysctl -w net.ipv6.conf.default.accept_ra=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv6.conf.all.accept_ra"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv6.conf.all.accept_ra"" is not set in an included file
   ** Note: ""net.ipv6.conf.all.accept_ra"" May be set in a file that's ignored by load procedure **

 - ""net.ipv6.conf.default.accept_ra"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv6.conf.default.accept_ra"" is not set in an included file
   ** Note: ""net.ipv6.conf.default.accept_ra"" May be set in a file that's ignored by load procedure **","- IF - IPv6 is enabled on the system:

Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.accept_ra = 0
 - net.ipv6.conf.default.accept_ra = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.accept_ra = 0"" ""net.ipv6.conf.default.accept_ra = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.accept_ra=0
   sysctl -w net.ipv6.conf.default.accept_ra=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.2 Ensure packet redirect sending is disabled"" : [FAILED]

ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.

An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system.

Solution:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.send_redirects = 0
 - net.ipv4.conf.default.send_redirects = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.send_redirects = 0"" ""net.ipv4.conf.default.send_redirects = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.send_redirects=0
   sysctl -w net.ipv4.conf.default.send_redirects=0
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

Impact:

IP forwarding is required on systems configured to act as a router. If these parameters are disabled, the system will not be able to perform as a router.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.conf.all.send_redirects"" is not set in an included file
   ** Note: ""net.ipv4.conf.all.send_redirects"" May be set in a file that's ignored by load procedure **

 - ""net.ipv4.conf.default.send_redirects"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv4.conf.default.send_redirects"" is not set in an included file
   ** Note: ""net.ipv4.conf.default.send_redirects"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""net.ipv4.conf.all.send_redirects"" is correctly set to ""0"" in the running configuration","Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.send_redirects = 0
 - net.ipv4.conf.default.send_redirects = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.send_redirects = 0"" ""net.ipv4.conf.default.send_redirects = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.send_redirects=0
   sysctl -w net.ipv4.conf.default.send_redirects=0
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

Impact:

IP forwarding is required on systems configured to act as a router. If these parameters are disabled, the system will not be able to perform as a router.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.3 Ensure bogus icmp responses are ignored"" : [FAILED]

Setting net.ipv4.icmp_ignore_bogus_error_responses to 1 prevents the kernel from logging bogus responses (RFC-1122 non-compliant) from broadcast reframes, keeping file systems from filling up with useless log messages.

Some routers (and some attackers) will send responses that violate RFC-1122 and attempt to fill up a log file system with many useless error messages.

Solution:
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.icmp_ignore_bogus_error_responses = 1

Example:

# printf '%s
' ""net.ipv4.icmp_ignore_bogus_error_responses = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.icmp_ignore_bogus_error_responses"" is not set in an included file
   ** Note: ""net.ipv4.icmp_ignore_bogus_error_responses"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""net.ipv4.icmp_ignore_bogus_error_responses"" is correctly set to ""1"" in the running configuration","Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.icmp_ignore_bogus_error_responses = 1

Example:

# printf '%s
' ""net.ipv4.icmp_ignore_bogus_error_responses = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.4 Ensure broadcast icmp requests are ignored"" : [FAILED]

Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 will cause the system to ignore all ICMP echo and timestamp requests to broadcast and multicast addresses.

Accepting ICMP echo and timestamp requests with broadcast or multicast destinations for your network could be used to trick your host into starting (or participating) in a Smurf attack. A Smurf attack relies on an attacker sending large amounts of ICMP broadcast messages with a spoofed source address. All hosts receiving this message and responding would send echo-reply messages back to the spoofed address, which is probably not routable. If many hosts respond to the packets, the amount of traffic on the network could be significantly multiplied.

Solution:
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.icmp_echo_ignore_broadcasts = 1

Example:

# printf '%s
' ""net.ipv4.icmp_echo_ignore_broadcasts = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.icmp_echo_ignore_broadcasts"" is not set in an included file
   ** Note: ""net.ipv4.icmp_echo_ignore_broadcasts"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""net.ipv4.icmp_echo_ignore_broadcasts"" is correctly set to ""1"" in the running configuration","Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.icmp_echo_ignore_broadcasts = 1

Example:

# printf '%s
' ""net.ipv4.icmp_echo_ignore_broadcasts = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.5 Ensure icmp redirects are not accepted"" : [FAILED]

ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables.

ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects net.ipv4.conf.default.accept_redirects net.ipv6.conf.all.accept_redirects and net.ipv6.conf.default.accept_redirects to 0 the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Solution:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.accept_redirects = 0
 - net.ipv4.conf.default.accept_redirects = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.accept_redirects = 0"" ""net.ipv4.conf.default.accept_redirects = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.accept_redirects=0
   sysctl -w net.ipv4.conf.default.accept_redirects=0
   sysctl -w net.ipv4.route.flush=1
}

- IF - IPv6 is enabled on the system:

Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.accept_redirects = 0
 - net.ipv6.conf.default.accept_redirects = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.accept_redirects = 0"" ""net.ipv6.conf.default.accept_redirects = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.accept_redirects=0
   sysctl -w net.ipv6.conf.default.accept_redirects=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.conf.all.accept_redirects"" is not set in an included file
   ** Note: ""net.ipv4.conf.all.accept_redirects"" May be set in a file that's ignored by load procedure **

 - ""net.ipv4.conf.default.accept_redirects"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv4.conf.default.accept_redirects"" is not set in an included file
   ** Note: ""net.ipv4.conf.default.accept_redirects"" May be set in a file that's ignored by load procedure **

 - ""net.ipv6.conf.all.accept_redirects"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv6.conf.all.accept_redirects"" is not set in an included file
   ** Note: ""net.ipv6.conf.all.accept_redirects"" May be set in a file that's ignored by load procedure **

 - ""net.ipv6.conf.default.accept_redirects"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv6.conf.default.accept_redirects"" is not set in an included file
   ** Note: ""net.ipv6.conf.default.accept_redirects"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""net.ipv4.conf.all.accept_redirects"" is correctly set to ""0"" in the running configuration","Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.accept_redirects = 0
 - net.ipv4.conf.default.accept_redirects = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.accept_redirects = 0"" ""net.ipv4.conf.default.accept_redirects = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.accept_redirects=0
   sysctl -w net.ipv4.conf.default.accept_redirects=0
   sysctl -w net.ipv4.route.flush=1
}

- IF - IPv6 is enabled on the system:

Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.accept_redirects = 0
 - net.ipv6.conf.default.accept_redirects = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.accept_redirects = 0"" ""net.ipv6.conf.default.accept_redirects = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.accept_redirects=0
   sysctl -w net.ipv6.conf.default.accept_redirects=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.6 Ensure secure icmp redirects are not accepted"" : [FAILED]

Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.

It is still possible for even known gateways to be compromised. Setting net.ipv4.conf.all.secure_redirects and net.ipv4.conf.default.secure_redirects to 0 protects the system from routing table updates by possibly compromised known gateways.

Solution:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.secure_redirects = 0
 - net.ipv4.conf.default.secure_redirects = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.secure_redirects = 0"" ""net.ipv4.conf.default.secure_redirects = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.secure_redirects=0
   sysctl -w net.ipv4.conf.default.secure_redirects=0
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.conf.all.secure_redirects"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv4.conf.all.secure_redirects"" is not set in an included file
   ** Note: ""net.ipv4.conf.all.secure_redirects"" May be set in a file that's ignored by load procedure **

 - ""net.ipv4.conf.default.secure_redirects"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv4.conf.default.secure_redirects"" is not set in an included file
   ** Note: ""net.ipv4.conf.default.secure_redirects"" May be set in a file that's ignored by load procedure **","Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.secure_redirects = 0
 - net.ipv4.conf.default.secure_redirects = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.secure_redirects = 0"" ""net.ipv4.conf.default.secure_redirects = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.secure_redirects=0
   sysctl -w net.ipv4.conf.default.secure_redirects=0
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.7 Ensure reverse path filtering is enabled"" : [FAILED]

Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).

Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing.

Solution:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.rp_filter = 1
 - net.ipv4.conf.default.rp_filter = 1

Example:

# printf '%s
' ""net.ipv4.conf.all.rp_filter = 1"" ""net.ipv4.conf.default.rp_filter = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.rp_filter=1
   sysctl -w net.ipv4.conf.default.rp_filter=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

Impact:

If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.conf.all.rp_filter"" is incorrectly set to ""0"" in the running configuration and should have a value of: ""1""
 - ""net.ipv4.conf.all.rp_filter"" is incorrectly set to ""0"" in ""/etc/sysctl.d/90-anapaya.conf"" and should have a value of: ""1""

 - ""net.ipv4.conf.default.rp_filter"" is incorrectly set to ""2"" in the running configuration and should have a value of: ""1""
 - ""net.ipv4.conf.default.rp_filter"" is incorrectly set to ""2"" in ""/usr/lib/sysctl.d/50-default.conf"" and should have a value of: ""1""","Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.rp_filter = 1
 - net.ipv4.conf.default.rp_filter = 1

Example:

# printf '%s
' ""net.ipv4.conf.all.rp_filter = 1"" ""net.ipv4.conf.default.rp_filter = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.rp_filter=1
   sysctl -w net.ipv4.conf.default.rp_filter=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

Impact:

If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.8 Ensure source routed packets are not accepted"" : [FAILED]

In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Setting net.ipv4.conf.all.accept_source_route net.ipv4.conf.default.accept_source_route net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing.

Solution:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.accept_source_route = 0
 - net.ipv4.conf.default.accept_source_route = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.accept_source_route = 0"" ""net.ipv4.conf.default.accept_source_route = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.accept_source_route=0
   sysctl -w net.ipv4.conf.default.accept_source_route=0
   sysctl -w net.ipv4.route.flush=1
}

- IF - IPv6 is enabled on the system:

Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.accept_source_route = 0
 - net.ipv6.conf.default.accept_source_route = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.accept_source_route = 0"" ""net.ipv6.conf.default.accept_source_route = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following command to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.accept_source_route=0
   sysctl -w net.ipv6.conf.default.accept_source_route=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.conf.all.accept_source_route"" is not set in an included file
   ** Note: ""net.ipv4.conf.all.accept_source_route"" May be set in a file that's ignored by load procedure **

 - ""net.ipv6.conf.all.accept_source_route"" is not set in an included file
   ** Note: ""net.ipv6.conf.all.accept_source_route"" May be set in a file that's ignored by load procedure **

 - ""net.ipv6.conf.default.accept_source_route"" is not set in an included file
   ** Note: ""net.ipv6.conf.default.accept_source_route"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""net.ipv4.conf.all.accept_source_route"" is correctly set to ""0"" in the running configuration
 - ""net.ipv4.conf.default.accept_source_route"" is correctly set to ""0"" in the running configuration
 - ""net.ipv4.conf.default.accept_source_route"" is correctly set to ""0"" in ""/usr/lib/sysctl.d/50-default.conf""

 - ""net.ipv6.conf.all.accept_source_route"" is correctly set to ""0"" in the running configuration
 - ""net.ipv6.conf.default.accept_source_route"" is correctly set to ""0"" in the running configuration","Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.accept_source_route = 0
 - net.ipv4.conf.default.accept_source_route = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.accept_source_route = 0"" ""net.ipv4.conf.default.accept_source_route = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.accept_source_route=0
   sysctl -w net.ipv4.conf.default.accept_source_route=0
   sysctl -w net.ipv4.route.flush=1
}

- IF - IPv6 is enabled on the system:

Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.accept_source_route = 0
 - net.ipv6.conf.default.accept_source_route = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.accept_source_route = 0"" ""net.ipv6.conf.default.accept_source_route = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following command to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.accept_source_route=0
   sysctl -w net.ipv6.conf.default.accept_source_route=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.9 Ensure suspicious packets are logged"" : [FAILED]

When enabled, this feature logs packets with un-routable source addresses to the kernel log.

Setting net.ipv4.conf.all.log_martians and net.ipv4.conf.default.log_martians to 1 enables this feature. Logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system.

Solution:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.log_martians = 1
 - net.ipv4.conf.default.log_martians = 1

Example:

# printf '%s
' ""net.ipv4.conf.all.log_martians = 1"" ""net.ipv4.conf.default.log_martians = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.log_martians=1
   sysctl -w net.ipv4.conf.default.log_martians=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.conf.all.log_martians"" is incorrectly set to ""0"" in the running configuration and should have a value of: ""1""
 - ""net.ipv4.conf.all.log_martians"" is not set in an included file
   ** Note: ""net.ipv4.conf.all.log_martians"" May be set in a file that's ignored by load procedure **

 - ""net.ipv4.conf.default.log_martians"" is incorrectly set to ""0"" in the running configuration and should have a value of: ""1""
 - ""net.ipv4.conf.default.log_martians"" is not set in an included file
   ** Note: ""net.ipv4.conf.default.log_martians"" May be set in a file that's ignored by load procedure **","Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.log_martians = 1
 - net.ipv4.conf.default.log_martians = 1

Example:

# printf '%s
' ""net.ipv4.conf.all.log_martians = 1"" ""net.ipv4.conf.default.log_martians = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.log_martians=1
   sysctl -w net.ipv4.conf.default.log_martians=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.1.1 Ensure ufw is installed"" : [FAILED]

The Uncomplicated Firewall (ufw) is a frontend for iptables and is particularly well-suited for host-based firewalls. ufw provides a framework for managing netfilter, as well as a command-line interface for manipulating the firewall

A firewall utility is required to configure the Linux kernel's netfilter framework via the iptables or nftables back-end.

The Linux kernel's netfilter framework host-based firewall can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host.

Note: Only one firewall utility should be installed and configured. UFW is dependent on the iptables package

Solution:
Run the following command to install Uncomplicated Firewall (UFW):

apt install ufw

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
cmd: /bin/dpkg -s ufw 2>&1 | /bin/grep -E '(Status:|not installed)'
expect: ^Status: install ok

Actual Value:
The command '/bin/dpkg -s ufw 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

dpkg-query: package 'ufw' is not installed and no information is available","Run the following command to install Uncomplicated Firewall (UFW):

apt install ufw","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.1.2 Ensure iptables-persistent is not installed with ufw"" : [FAILED]

The iptables-persistent is a boot-time loader for netfilter rules, iptables plugin

Running both ufw and the services included in the iptables-persistent package may lead to conflict

Solution:
Run the following command to remove the iptables-persistent package:

# apt purge iptables-persistent

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
cmd: /bin/dpkg -s iptables-persistent 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s iptables-persistent 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

Status: install ok installed","Run the following command to remove the iptables-persistent package:

# apt purge iptables-persistent","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.1.3 Ensure ufw service is enabled"" : [FAILED]

UncomplicatedFirewall (ufw) is a frontend for iptables. ufw provides a framework for managing netfilter, as well as a command-line and available graphical user interface for manipulating the firewall.

Note:

 - When running ufw enable or starting ufw via its initscript, ufw will flush its chains. This is required so ufw can maintain a consistent state, but it may drop existing connections (eg ssh). ufw does support adding rules before enabling the firewall.
 - Run the following command before running ufw enable

# ufw allow proto tcp from any to any port 22
 - The rules will still be flushed, but the ssh port will be open after enabling the firewall. Please note that once ufw is 'enabled', ufw will not flush the chains when adding or removing rules (but will when modifying a rule or changing the default policy)
 - By default, ufw will prompt when enabling the firewall while running under ssh. This can be disabled by using ufw --force enable

The ufw service must be enabled and running in order for ufw to protect the system

Solution:
Run the following command to unmask the ufw daemon:

# systemctl unmask ufw.service

Run the following command to enable and start the ufw daemon:

# systemctl --now enable ufw.service

active

Run the following command to enable ufw:

# ufw enable

Impact:

Changing firewall settings while connected over network can result in being locked out of the system.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - check if ufw is enabled
The command '/bin/systemctl is-enabled ufw' returned : 

Failed to get unit file state for ufw.service: No such file or directory

-------------------------
PASSED - check if ufw is active
The command '/bin/systemctl is-active ufw' returned : 

active

-------------------------
FAILED - ufw status
The command '/sbin/ufw status | /bin/grep 'Status: active'' returned : 

sh: 1: /sbin/ufw: not found","Run the following command to unmask the ufw daemon:

# systemctl unmask ufw.service

Run the following command to enable and start the ufw daemon:

# systemctl --now enable ufw.service

active

Run the following command to enable ufw:

# ufw enable

Impact:

Changing firewall settings while connected over network can result in being locked out of the system.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.1.4 Ensure ufw loopback traffic is configured"" : [FAILED]

Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6).

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

Solution:
Run the following commands to implement the loopback rules:

# ufw allow in on lo
# ufw allow out on lo
# ufw deny in from 127.0.0.0/8
# ufw deny in from ::1

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - ufw - Anywhere DENY IN ::1
The command '/sbin/ufw status verbose' returned : 

sh: 1: /sbin/ufw: not found

-------------------------
FAILED - ufw - Anywhere DENY IN 127.0.0.0/8
The command '/sbin/ufw status verbose' returned : 

sh: 1: /sbin/ufw: not found","Run the following commands to implement the loopback rules:

# ufw allow in on lo
# ufw allow out on lo
# ufw deny in from 127.0.0.0/8
# ufw deny in from ::1","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.1.5 Ensure ufw outbound connections are configured"" : [WARNING]

Configure the firewall rules for new outbound connections.

Note:

 - Changing firewall settings while connected over network can result in being locked out of the system.
 - Unlike iptables, when a new outbound rule is added, ufw automatically takes care of associated established connections, so no rules for the latter kind are required.

If rules are not in place for new outbound connections all packets will be dropped by the default policy preventing network usage.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Configure ufw in accordance with site policy. The following commands will implement a policy to allow all outbound connections on all interfaces:

# ufw allow out on all

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
cmd: /sbin/ufw status numbered
expect: ^Manual Review Required$

Actual Value:
The command '/sbin/ufw status numbered' returned : 

sh: 1: /sbin/ufw: not found","Configure ufw in accordance with site policy. The following commands will implement a policy to allow all outbound connections on all interfaces:

# ufw allow out on all","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.1.6 Ensure ufw firewall rules exist for all open ports"" : [FAILED]

Services and ports can be accepted or explicitly rejected.

Note:

 - Changing firewall settings while connected over network can result in being locked out of the system
 - The remediation command opens up the port to traffic from all sources. Consult ufw documentation and set any restrictions in compliance with site policy

To reduce the attack surface of a system, all services and ports should be blocked unless required.

 - Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.
 - Without a firewall rule configured for open ports, the default firewall policy will drop all packets to these ports.
 - Required ports should have a firewall rule created to allow approved connections in accordance with local site policy.
 - Unapproved ports should have an explicit deny rule created.

Solution:
For each port identified in the audit which does not have a firewall rule, evaluate the service listening on the port and add a rule for accepting or denying inbound connections in accordance with local site policy:

Examples:

# ufw allow in <port>/<tcp or udp protocol>

# ufw deny in <port>/<tcp or udp protocol>

Note: Examples create rules for from any, to any. More specific rules should be concentered when allowing inbound traffic e.g only traffic from this network.

Example to allow traffic on port 443 using the tcp protocol from the 192.168.1.0 network:

ufw allow from 192.168.1.0/24 to any proto tcp port 443

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^none$

Actual Value:
The command script with multiple lines returned : 

/bin/bash: line 3: ufw: command not found
- Port: """" is missing a firewall rule
- Port: ""22"" is missing a firewall rule
- Port: ""30041"" is missing a firewall rule
- Port: ""30042"" is missing a firewall rule
- Port: ""30252"" is missing a firewall rule
- Port: ""42001"" is missing a firewall rule
- Port: ""443"" is missing a firewall rule
- Port: ""51021"" is missing a firewall rule
- Port: ""51022"" is missing a firewall rule
- Port: ""80"" is missing a firewall rule","For each port identified in the audit which does not have a firewall rule, evaluate the service listening on the port and add a rule for accepting or denying inbound connections in accordance with local site policy:

Examples:

# ufw allow in <port>/<tcp or udp protocol>

# ufw deny in <port>/<tcp or udp protocol>

Note: Examples create rules for from any, to any. More specific rules should be concentered when allowing inbound traffic e.g only traffic from this network.

Example to allow traffic on port 443 using the tcp protocol from the 192.168.1.0 network:

ufw allow from 192.168.1.0/24 to any proto tcp port 443","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.1.7 Ensure ufw default deny firewall policy"" : [FAILED]

A default deny policy on connections ensures that any unconfigured network usage will be rejected.

Note: Any port or protocol without a explicit allow before the default deny will be blocked

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.

Solution:
Run the following commands to implement a default

deny

policy:

# ufw default deny incoming
# ufw default deny outgoing
# ufw default deny routed

Impact:

Any port and protocol not explicitly allowed will be blocked. The following rules should be considered before applying the default deny.

ufw allow out http
  ufw allow out https
  ufw allow out ntp # Network Time Protocol
  ufw allow out to any port 53 # DNS
  ufw allow out to any port 853 # DNS over TLS
  ufw logging on

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
cmd: /sbin/ufw status verbose | /bin/grep 'Default:'
expect: ^Default:[\s]+(deny|reject|disabled)[\s]+\(incoming\),[\s]+(deny|reject|disabled)[\s]+\(outgoing\),[\s]+(deny|reject|disabled)[\s]+\(routed\)

Actual Value:
The command '/sbin/ufw status verbose | /bin/grep 'Default:'' returned : 

sh: 1: /sbin/ufw: not found","Run the following commands to implement a default

deny

policy:

# ufw default deny incoming
# ufw default deny outgoing
# ufw default deny routed

Impact:

Any port and protocol not explicitly allowed will be blocked. The following rules should be considered before applying the default deny.

ufw allow out http
  ufw allow out https
  ufw allow out ntp # Network Time Protocol
  ufw allow out to any port 53 # DNS
  ufw allow out to any port 853 # DNS over TLS
  ufw logging on","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.1 Ensure nftables is installed"" : [PASSED]

nftables provides a new in-kernel packet classification framework that is based on a network-specific Virtual Machine (VM) and a new nft userspace command line tool. nftables reuses the existing Netfilter subsystems such as the existing hook infrastructure, the connection tracking system, NAT, userspace queuing and logging subsystem.

Notes:

 - nftables is available in Linux kernel 3.13 and newer
 - Only one firewall utility should be installed and configured
 - Changing firewall settings while connected over the network can result in being locked out of the system

nftables is a subsystem of the Linux kernel that can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host.

Solution:
Run the following command to install nftables :

# apt install nftables

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command to install nftables :

# apt install nftables","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.10 Ensure nftables rules are permanent"" : [PASSED]

nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames.

The nftables service reads the /etc/nftables.conf file for a nftables file or files to include in the nftables ruleset.

A nftables ruleset containing the input, forward, and output base chains allow network traffic to be filtered.

Changes made to nftables ruleset only affect the live system, you will also need to configure the nftables ruleset to apply on boot

Solution:
Edit the /etc/nftables.conf file and un-comment or add a line with include <Absolute path to nftables rules file> for each nftables file you want included in the nftables ruleset on boot

Example:

# vi /etc/nftables.conf

Add the line:

include ""/etc/nftables.rules""

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Edit the /etc/nftables.conf file and un-comment or add a line with include <Absolute path to nftables rules file> for each nftables file you want included in the nftables ruleset on boot

Example:

# vi /etc/nftables.conf

Add the line:

include ""/etc/nftables.rules""","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.2 Ensure ufw is uninstalled or disabled with nftables"" : [PASSED]

Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to be easy to use.

Running both the nftables service and ufw may lead to conflict and unexpected results.

Solution:
Run one of the following to either remove ufw or disable ufw and mask ufw.service :

Run the following command to remove ufw :

# apt purge ufw

-OR-

Run the following commands to disable ufw and mask ufw.service :

# ufw disable
# systemctl stop ufw.service
# systemctl mask ufw.service

Note: ufw disable needs to be run before systemctl mask ufw.service in order to correctly disable UFW

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run one of the following to either remove ufw or disable ufw and mask ufw.service :

Run the following command to remove ufw :

# apt purge ufw

-OR-

Run the following commands to disable ufw and mask ufw.service :

# ufw disable
# systemctl stop ufw.service
# systemctl mask ufw.service

Note: ufw disable needs to be run before systemctl mask ufw.service in order to correctly disable UFW","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.3 Ensure iptables are flushed with nftables"" : [PASSED]

nftables is a replacement for iptables, ip6tables, ebtables and arptables

It is possible to mix iptables and nftables. However, this increases complexity and also the chance to introduce errors. For simplicity flush out all iptables rules, and ensure it is not loaded

Solution:
Run the following commands to flush iptables:

For iptables:

# iptables -F

For ip6tables:

# ip6tables -F

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following commands to flush iptables:

For iptables:

# iptables -F

For ip6tables:

# ip6tables -F","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.4 Ensure a nftables table exists"" : [PASSED]

Tables hold chains. Each table only has one address family and only applies to packets of this family. Tables can have one of five families.

nftables doesn't have any default tables. Without a table being build, nftables will not filter network traffic.

Solution:
Run the following command to create a table in nftables

# nft create table inet <table name>

Example:

# nft create table inet filter

Impact:

Adding rules to a running nftables can cause loss of connectivity to the system

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command to create a table in nftables

# nft create table inet <table name>

Example:

# nft create table inet filter

Impact:

Adding rules to a running nftables can cause loss of connectivity to the system","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.5 Ensure nftables base chains exist"" : [PASSED]

Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.

If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables.

Solution:
Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 ; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 ; }

# nft create chain inet filter forward { type filter hook forward priority 0 ; }

# nft create chain inet filter output { type filter hook output priority 0 ; }

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 ; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 ; }

# nft create chain inet filter forward { type filter hook forward priority 0 ; }

# nft create chain inet filter output { type filter hook output priority 0 ; }

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.6 Ensure nftables loopback traffic is configured"" : [PASSED]

Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

Solution:
Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept # nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

-IF- IPv6 is enabled on the system:

Run the following command to implement the IPv6 loopback rule:

# nft add rule inet filter input ip6 saddr ::1 counter drop

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept # nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

-IF- IPv6 is enabled on the system:

Run the following command to implement the IPv6 loopback rule:

# nft add rule inet filter input ip6 saddr ::1 counter drop","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.7 Ensure nftables outbound and established connections are configured"" : [PASSED]

Configure the firewall rules for new outbound, and established connections

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.

Solution:
Configure nftables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# nft add rule inet filter input ip protocol tcp ct state established accept

# nft add rule inet filter input ip protocol udp ct state established accept

# nft add rule inet filter input ip protocol icmp ct state established accept

# nft add rule inet filter output ip protocol tcp ct state new,related,established accept

# nft add rule inet filter output ip protocol udp ct state new,related,established accept

# nft add rule inet filter output ip protocol icmp ct state new,related,established accept

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Configure nftables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# nft add rule inet filter input ip protocol tcp ct state established accept

# nft add rule inet filter input ip protocol udp ct state established accept

# nft add rule inet filter input ip protocol icmp ct state established accept

# nft add rule inet filter output ip protocol tcp ct state new,related,established accept

# nft add rule inet filter output ip protocol udp ct state new,related,established accept

# nft add rule inet filter output ip protocol icmp ct state new,related,established accept","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.8 Ensure nftables default deny firewall policy"" : [PASSED]

Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.

There are two policies: accept (Default) and drop. If the policy is set to accept the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack.

It is easier to white list acceptable usage than to black list unacceptable usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system.

Solution:
Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop ; }

Example:

# nft chain inet filter input { policy drop ; }

# nft chain inet filter forward { policy drop ; }

# nft chain inet filter output { policy drop ; }

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop ; }

Example:

# nft chain inet filter input { policy drop ; }

# nft chain inet filter forward { policy drop ; }

# nft chain inet filter output { policy drop ; }

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.9 Ensure nftables service is enabled"" : [PASSED]

The nftables service allows for the loading of nftables rulesets during boot, or starting on the nftables service

The nftables service restores the nftables rules from the rules files referenced in the /etc/nftables.conf file during boot or the starting of the nftables service

Solution:
Run the following command to enable the nftables service:

# systemctl enable nftables

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command to enable the nftables service:

# systemctl enable nftables","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.1.1 Ensure iptables packages are installed"" : [PASSED]

iptables is a utility program that allows a system administrator to configure the tables provided by the Linux kernel firewall, implemented as different Netfilter modules, and the chains and rules it stores. Different kernel modules and programs are used for different protocols; iptables applies to IPv4, ip6tables to IPv6, arptables to ARP, and ebtables to Ethernet frames.

A method of configuring and maintaining firewall rules is necessary to configure a Host Based Firewall.

Solution:
Run the following command to install iptables and iptables-persistent

# apt install iptables iptables-persistent

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command to install iptables and iptables-persistent

# apt install iptables iptables-persistent","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.1.2 Ensure nftables is not installed with iptables"" : [PASSED]

nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.

Running both iptables and nftables may lead to conflict.

Solution:
Run the following command to remove nftables :

# apt purge nftables

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command to remove nftables :

# apt purge nftables","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.1.3 Ensure ufw is uninstalled or disabled with iptables"" : [PASSED]

Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to be easy to use.

 - Uses a command-line interface consisting of a small number of simple commands
 - Uses iptables for configuration

Running iptables.persistent with ufw enabled may lead to conflict and unexpected results.

Solution:
Run one of the following commands to either remove ufw or stop and mask ufw

Run the following command to remove ufw :

# apt purge ufw

- OR -

Run the following commands to disable ufw :

# ufw disable
# systemctl stop ufw
# systemctl mask ufw

Note: ufw disable needs to be run before systemctl mask ufw in order to correctly disable UFW

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run one of the following commands to either remove ufw or stop and mask ufw

Run the following command to remove ufw :

# apt purge ufw

- OR -

Run the following commands to disable ufw :

# ufw disable
# systemctl stop ufw
# systemctl mask ufw

Note: ufw disable needs to be run before systemctl mask ufw in order to correctly disable UFW","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.2.1 Ensure iptables default deny firewall policy"" : [PASSED]

A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Notes:

 -

Changing firewall settings while connected over network can result in being locked out of the system

 -

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.

Solution:
Run the following commands to implement a default DROP policy:

# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following commands to implement a default DROP policy:

# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.2.2 Ensure iptables loopback traffic is configured"" : [PASSED]

Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8).

Notes:

 -

Changing firewall settings while connected over network can result in being locked out of the system

 -

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

Solution:
Run the following commands to implement the loopback rules:

# iptables -A INPUT -i lo -j ACCEPT
# iptables -A OUTPUT -o lo -j ACCEPT
# iptables -A INPUT -s 127.0.0.0/8 -j DROP

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following commands to implement the loopback rules:

# iptables -A INPUT -i lo -j ACCEPT
# iptables -A OUTPUT -o lo -j ACCEPT
# iptables -A INPUT -s 127.0.0.0/8 -j DROP","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.2.3 Ensure iptables outbound and established connections are configured"" : [PASSED]

Configure the firewall rules for new outbound, and established connections.

Notes:

 -

Changing firewall settings while connected over network can result in being locked out of the system

 -

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.

Solution:
Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# iptables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# iptables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.2.4 Ensure iptables firewall rules exist for all open ports"" : [PASSED]

Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Note:

 - Changing firewall settings while connected over network can result in being locked out of the system
 - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well
 - The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports.

Solution:
For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# iptables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# iptables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.3.1 Ensure ip6tables default deny firewall policy"" : [PASSED]

A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Note:

 - Changing firewall settings while connected over network can result in being locked out of the system
 - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.

Solution:
IF IPv6 is enabled on your system:

Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","IF IPv6 is enabled on your system:

Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.3.2 Ensure ip6tables loopback traffic is configured"" : [PASSED]

Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (::1).

Note:

 - Changing firewall settings while connected over network can result in being locked out of the system
 - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (::1) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

Solution:
Run the following commands to implement the loopback rules:

# ip6tables -A INPUT -i lo -j ACCEPT
# ip6tables -A OUTPUT -o lo -j ACCEPT
# ip6tables -A INPUT -s ::1 -j DROP

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following commands to implement the loopback rules:

# ip6tables -A INPUT -i lo -j ACCEPT
# ip6tables -A OUTPUT -o lo -j ACCEPT
# ip6tables -A INPUT -s ::1 -j DROP","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.3.3 Ensure ip6tables outbound and established connections are configured"" : [PASSED]

Configure the firewall rules for new outbound, and established IPv6 connections.

Note:

 - Changing firewall settings while connected over network can result in being locked out of the system
 - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.

Solution:
Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.3.4 Ensure ip6tables firewall rules exist for all open ports"" : [PASSED]

Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Note:

 - Changing firewall settings while connected over network can result in being locked out of the system
 - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well
 - The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports.

Solution:
For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured"" : [FAILED]

The file /etc/ssh/sshd_config and files ending inconf in the /etc/ssh/sshd_config.d directory, contain configuration specifications for sshd

configuration specifications for sshd need to be protected from unauthorized changes by non-privileged users.

Solution:
Run the following script to set ownership and permissions on /etc/ssh/sshd_config and files ending inconf in the /etc/ssh/sshd_config.d directory:

#!/usr/bin/env bash

{
   chmod u-x,og-rwx /etc/ssh/sshd_config
   chown root:root /etc/ssh/sshd_config
   while IFS= read -r -d $'0' l_file; do
      if [ -e ""$l_file"" ]; then
         chmod u-x,og-rwx ""$l_file""
         chown root:root ""$l_file""
      fi
   done < <(find /etc/ssh/sshd_config.d -type f -print0 2>/dev/null)
}

- IF - other locations are listed in an Include statement, *.conf files in these locations access should also be modified.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - * Reasons for audit failure * :

 - File: ""/etc/ssh/sshd_config"":
  - Is mode: ""0644"" should be: ""600"" or more restrictive
 - File: ""/etc/ssh/sshd_config.d/90-anapaya.conf"":
  - Is mode: ""0644"" should be: ""600"" or more restrictive
 - File: ""/etc/ssh/sshd_config.d/30-anapaya-controller-PasswordAuthentication.conf"":
  - Is mode: ""0644"" should be: ""600"" or more restrictive","Run the following script to set ownership and permissions on /etc/ssh/sshd_config and files ending inconf in the /etc/ssh/sshd_config.d directory:

#!/usr/bin/env bash

{
   chmod u-x,og-rwx /etc/ssh/sshd_config
   chown root:root /etc/ssh/sshd_config
   while IFS= read -r -d $'0' l_file; do
      if [ -e ""$l_file"" ]; then
         chmod u-x,og-rwx ""$l_file""
         chown root:root ""$l_file""
      fi
   done < <(find /etc/ssh/sshd_config.d -type f -print0 2>/dev/null)
}

- IF - other locations are listed in an Include statement, *.conf files in these locations access should also be modified.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.10 Ensure sshd HostbasedAuthentication is disabled"" : [PASSED]

The HostbasedAuthentication parameter specifies if authentication is allowed through trusted hosts via the user ofrhosts or /etc/hosts.equiv along with successful public key client host authentication.

Even though therhosts files are ineffective if support is disabled in /etc/pam.conf disabling the ability to userhosts files in SSH provides an additional layer of protection.

Solution:
Edit the /etc/ssh/sshd_config file to set the HostbasedAuthentication parameter to no above any Include and Match entries as follows:

HostbasedAuthentication no

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - sshd hostbasedauthentication setting
The command script with multiple lines returned : 

port 22: hostbasedauthentication no
Pass

-------------------------
PASSED - config file HostbasedAuthentication setting
The file ""/etc/ssh/sshd_config"" does not contain ""^[\s]*(?i)HostbasedAuthentication(?-i)[\s]""","Edit the /etc/ssh/sshd_config file to set the HostbasedAuthentication parameter to no above any Include and Match entries as follows:

HostbasedAuthentication no

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.11 Ensure sshd IgnoreRhosts is enabled"" : [PASSED]

The IgnoreRhosts parameter specifies thatrhosts andshosts files will not be used in RhostsRSAAuthentication or HostbasedAuthentication

Setting this parameter forces users to enter a password when authenticating with SSH.

Solution:
Edit the /etc/ssh/sshd_config file to set the IgnoreRhosts parameter to yes above any Include and Match entries as follows:

IgnoreRhosts yes

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - config file IgnoreRhosts setting
The file ""/etc/ssh/sshd_config"" does not contain ""^[\s]*(?i)IgnoreRhosts(?-i)[\s]""

-------------------------
PASSED - sshd ignorerhosts setting
The command script with multiple lines returned : 

port 22: ignorerhosts yes
Pass","Edit the /etc/ssh/sshd_config file to set the IgnoreRhosts parameter to yes above any Include and Match entries as follows:

IgnoreRhosts yes

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.12 Ensure sshd KexAlgorithms is configured"" : [PASSED]

Key exchange is any method in cryptography by which cryptographic keys are exchanged between two parties, allowing use of a cryptographic algorithm. If the sender and receiver wish to exchange encrypted messages, each must be equipped to encrypt messages to be sent and decrypt messages received

Notes:

 - Kex algorithms have a higher preference the earlier they appear in the list
 - Some organizations may have stricter requirements for approved Key exchange algorithms
 - Ensure that Key exchange algorithms used are in compliance with site policy
 - The only Key Exchange Algorithms currently FIPS 140 approved are:
 - ecdh-sha2-nistp256
 - ecdh-sha2-nistp384
 - ecdh-sha2-nistp521
 - diffie-hellman-group-exchange-sha256
 - diffie-hellman-group16-sha512
 - diffie-hellman-group18-sha512
 - diffie-hellman-group14-sha256

Key exchange methods that are considered weak should be removed. A key exchange method may be weak because too few bits are used, or the hashing algorithm is considered too weak. Using weak algorithms could expose connections to man-in-the-middle attacks

Solution:
Edit the /etc/ssh/sshd_config file and add/modify the KexAlgorithms line to contain a comma separated list of the site unapproved (weak) KexAlgorithms preceded with a - above any Include entries:

Example:

KexAlgorithms -diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

port 22: kexalgorithms curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,sntrup761x25519-sha512@openssh.com,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256
Pass","Edit the /etc/ssh/sshd_config file and add/modify the KexAlgorithms line to contain a comma separated list of the site unapproved (weak) KexAlgorithms preceded with a - above any Include entries:

Example:

KexAlgorithms -diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.13 Ensure sshd LoginGraceTime is configured"" : [FAILED]

The LoginGraceTime parameter specifies the time allowed for successful authentication to the SSH server. The longer the Grace period is the more open unauthenticated connections can exist. Like other session controls in this session the Grace Period should be limited to appropriate organizational limits to ensure the service is available for needed access.

Setting the LoginGraceTime parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. It will also limit the number of concurrent unauthenticated connections While the recommended setting is 60 seconds (1 Minute), set the number based on site policy.

Solution:
Edit the /etc/ssh/sshd_config file to set the LoginGraceTime parameter to 60 seconds or less above any Include entry as follows:

LoginGraceTime 60

Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.11,800-53|AC-10,800-53|AC-12,800-53r5|AC-10,800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-10,ITSG-33|AC-12,LEVEL|1A,NESA|T5.5.1,NIAv2|NS49,QCSC-v1|5.2.1,QCSC-v1|5.2.2

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

port 22: logingracetime 120
Fail","Edit the /etc/ssh/sshd_config file to set the LoginGraceTime parameter to 60 seconds or less above any Include entry as follows:

LoginGraceTime 60

Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.14 Ensure sshd LogLevel is configured"" : [PASSED]

SSH provides several logging levels with varying amounts of verbosity. The DEBUG options are specifically not recommended other than strictly for debugging SSH communications. These levels provide so much data that it is difficult to identify important security information, and may violate the privacy of users.

The INFO level is the basic level that only records login activity of SSH users. In many situations, such as Incident Response, it is important to determine when a particular user was active on a system. The logout record can eliminate those users who disconnected, which helps narrow the field.

The VERBOSE level specifies that login and logout activity as well as the key fingerprint for any SSH key used for login will be logged. This information is important for SSH key management, especially in legacy environments.

Solution:
Edit the /etc/ssh/sshd_config file to set the LogLevel parameter to VERBOSE or INFO above any Include and Match entries as follows:

LogLevel VERBOSE
   - OR -
LogLevel INFO

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - sshd loglevel setting
The command script with multiple lines returned : 

port 22: loglevel INFO
Pass

-------------------------
PASSED - config file loglevel setting
No matching files were found","Edit the /etc/ssh/sshd_config file to set the LogLevel parameter to VERBOSE or INFO above any Include and Match entries as follows:

LogLevel VERBOSE
   - OR -
LogLevel INFO

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.15 Ensure sshd MACs are configured"" : [FAILED]

This variable limits the types of MAC algorithms that SSH can use during communication.

Notes:

 - Some organizations may have stricter requirements for approved MACs.
 - Ensure that MACs used are in compliance with site policy.
 - The only ""strong"" MACs currently FIPS 140 approved are:
 - HMAC-SHA1
 - HMAC-SHA2-256
 - HMAC-SHA2-384
 - HMAC-SHA2-512

MD5 and 96-bit MAC algorithms are considered weak and have been shown to increase exploitability in SSH downgrade attacks. Weak algorithms continue to have a great deal of attention as a weak spot that can be exploited with expanded computing power. An attacker that breaks the algorithm could take advantage of a MiTM position to decrypt the SSH tunnel and capture credentials and information.

Solution:
Edit the /etc/ssh/sshd_config file and add/modify the MACs line to contain a comma separated list of the site unapproved (weak) MACs preceded with a - above any Include entries:

Example:

MACs -hmac-md5,hmac-md5-96,hmac-ripemd160,hmac-sha1-96,umac-64@openssh.com,hmac-md5-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com

- IF - CVE-2023-48795 has not been reviewed and addressed, the following etm MACs should be added to the exclude list:

hmac-sha1-etm@openssh.com

,

hmac-sha2-256-etm@openssh.com

,

hmac-sha2-512-etm@openssh.com

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv7|16.5,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

port 22: macs umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1
Fail","Edit the /etc/ssh/sshd_config file and add/modify the MACs line to contain a comma separated list of the site unapproved (weak) MACs preceded with a - above any Include entries:

Example:

MACs -hmac-md5,hmac-md5-96,hmac-ripemd160,hmac-sha1-96,umac-64@openssh.com,hmac-md5-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com

- IF - CVE-2023-48795 has not been reviewed and addressed, the following etm MACs should be added to the exclude list:

hmac-sha1-etm@openssh.com

,

hmac-sha2-256-etm@openssh.com

,

hmac-sha2-512-etm@openssh.com

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.16 Ensure sshd MaxAuthTries is configured"" : [FAILED]

The MaxAuthTries parameter specifies the maximum number of authentication attempts permitted per connection. When the login failure count reaches half the number, error messages will be written to the syslog file detailing the login failure.

Setting the MaxAuthTries parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. While the recommended setting is 4, set the number based on site policy.

Solution:
Edit the /etc/ssh/sshd_config file to set the MaxAuthTries parameter to 4 or less above any Include and Match entries as follows:

MaxAuthTries 4

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|16.13,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - sshd maxauthtries setting
The command script with multiple lines returned : 

port 22: maxauthtries 6
Fail

-------------------------
PASSED - config file maxauthtries setting
The file ""/etc/ssh/sshd_config"" does not contain ""^[\s]*(?i)MaxAuthTries(?-i)[\s]""","Edit the /etc/ssh/sshd_config file to set the MaxAuthTries parameter to 4 or less above any Include and Match entries as follows:

MaxAuthTries 4

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.17 Ensure sshd MaxSessions is configured"" : [PASSED]

The MaxSessions parameter specifies the maximum number of open sessions permitted from a given connection.

To protect a system from denial of service due to a large number of concurrent sessions, use the rate limiting function of MaxSessions to protect availability of sshd logins and prevent overwhelming the daemon.

Solution:
Edit the /etc/ssh/sshd_config file to set the MaxSessions parameter to 10 or less above any Include and Match entries as follows:

MaxSessions 10

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|AC-10,800-53r5|AC-10,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-10,LEVEL|1A,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - config file MaxSessions setting
The file ""/etc/ssh/sshd_config"" does not contain ""^[\s]*(?i)MaxSessions(?-i)[\s]""

-------------------------
PASSED - sshd maxsessions setting
The command script with multiple lines returned : 

port 22: maxsessions 10
Pass","Edit the /etc/ssh/sshd_config file to set the MaxSessions parameter to 10 or less above any Include and Match entries as follows:

MaxSessions 10

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.18 Ensure sshd MaxStartups is configured"" : [FAILED]

The MaxStartups parameter specifies the maximum number of concurrent unauthenticated connections to the SSH daemon.

To protect a system from denial of service due to a large number of pending authentication connection attempts, use the rate limiting function of MaxStartups to protect availability of sshd logins and prevent overwhelming the daemon.

Solution:
Edit the /etc/ssh/sshd_config file to set the MaxStartups parameter to 10:30:60 or more restrictive above any Include entries as follows:

MaxStartups 10:30:60

Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|AC-10,800-53r5|AC-10,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-10,LEVEL|1A,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

port 22: maxstartups 10:30:100
Fail","Edit the /etc/ssh/sshd_config file to set the MaxStartups parameter to 10:30:60 or more restrictive above any Include entries as follows:

MaxStartups 10:30:60

Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.19 Ensure sshd PermitEmptyPasswords is disabled"" : [PASSED]

The PermitEmptyPasswords parameter specifies if the SSH server allows login to accounts with empty password strings.

Disallowing remote shell access to accounts that have an empty password reduces the probability of unauthorized access to the system.

Solution:
Edit /etc/ssh/sshd_config and set the PermitEmptyPasswords parameter to no above any Include and Match entries as follows:

PermitEmptyPasswords no

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - config file permitemptypasswords setting
Compliant file(s):
      /etc/ssh/sshd_config - regex not found
      /etc/ssh/sshd_config.d/30-anapaya-controller-PasswordAuthentication.conf - regex not found
      /etc/ssh/sshd_config.d/50-cloud-init.conf - regex not found
      /etc/ssh/sshd_config.d/90-anapaya.conf - regex '^[\s]*(?i)PermitEmptyPasswords(?-i)[\s]' found - expect '^[\s]*(?i)PermitEmptyPasswords(?-i)[\s]+""?yes""?[\s]*$' not found in the following lines:
          2: PermitEmptyPasswords no

-------------------------
PASSED - sshd permitemptypasswords setting
The command script with multiple lines returned : 

port 22: permitemptypasswords no
Pass","Edit /etc/ssh/sshd_config and set the PermitEmptyPasswords parameter to no above any Include and Match entries as follows:

PermitEmptyPasswords no

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.2 Ensure permissions on SSH private host key files are configured"" : [PASSED]

An SSH private key is one of two files used in SSH public key authentication. In this authentication method, the possession of the private key is proof of identity. Only a private key that corresponds to a public key will be able to authenticate successfully. The private keys need to be stored and handled carefully, and no copies of the private key should be distributed.

If an unauthorized user obtains the private SSH host key file, the host could be impersonated

Solution:
Run the following script to set mode, ownership, and group on the private SSH host key files:

#!/usr/bin/env bash

{
   l_output="""" l_output2=""""
   l_ssh_group_name=""$(awk -F: '($1 ~ /^(ssh_keys|_?ssh)$/) {print $1}' /etc/group)""
   FILE_ACCESS_FIX()
   {
      while IFS=: read -r l_file_mode l_file_owner l_file_group; do
         echo ""File: \""$l_file\"" mode: \""$l_file_mode\"" owner \""$l_file_own\"" group \""$l_file_group\""""
         l_out2=""""
         [ ""l_file_group"" = ""$l_ssh_group_name"" ] &amp;&amp; l_pmask=""0137"" || l_pmask=""0177""
         l_maxperm=""$( printf '%o' $(( 0777 &amp; ~$l_pmask )) )""
         if [ $(( $l_file_mode &amp; $l_pmask )) -gt 0 ]; then
            l_out2=""$l_out2
 - Mode: \""$l_file_mode\"" should be mode: \""$l_maxperm\"" or more restrictive
 - updating to mode: :$l_maxperm\""""
            [ ""l_file_group"" = ""$l_ssh_group_name"" ] &amp;&amp; chmod u-x,g-wx,o-rwx ""$l_file"" || chmod u-x,go-rwx
         fi
         if [ ""$l_file_owner"" != ""root"" ]; then
            l_out2=""$l_out2
 - Owned by: \""$l_file_owner\"" should be owned by \""root\""
 - Changing ownership to \""root\""""
            chown root ""$l_file""
         fi
         if [[ ! ""$l_file_group"" =~ ($l_ssh_group_name|root) ]]; then
            [ -n ""$l_ssh_group_name"" ] &amp;&amp; l_new_group=""$l_ssh_group_name"" || l_new_group=""root""
            l_out2=""$l_out2
 - Owned by group \""$l_file_group\"" should be group owned by: \""$l_ssh_group_name\"" or \""root\""
 - Changing group ownership to \""$l_new_group\""""
            chgrp ""$l_new_group"" ""$l_file""
         fi
         if [ -n ""$l_out2"" ]; then
            l_output2=""$l_output2
 - File: \""$l_file\""$l_out2""
         else
            l_output=""$l_output
 - File: \""$l_file\""
 - Correct: mode: \""$l_file_mode\"", owner: \""$l_file_owner\"", and group owner: \""$l_file_group\"" configured""
         fi
      done < <(stat -Lc '%#a:%U:%G' ""$l_file"")
   }
   while IFS= read -r -d $'0' l_file; do
      if ssh-keygen -lf &amp;>/dev/null ""$l_file""; then
         file ""$l_file"" | grep -Piq -- 'bopensshh+([^#
r]+h+)?privateh+keyb' &amp;&amp; FILE_ACCESS_FIX
      fi
   done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null)
   if [ -z ""$l_output2"" ]; then
      echo -e ""
- No access changes required
""
   else
      echo -e ""
- Remediation results:
$l_output2
""
   fi
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **
 - * Correctly configured * :
 - File: ""/etc/ssh/ssh_host_ed25519_key""
  - Correct: mode: ""0600"", owner: ""root"", and group owner: ""root"" configured
 - File: ""/etc/ssh/ssh_host_rsa_key""
  - Correct: mode: ""0600"", owner: ""root"", and group owner: ""root"" configured
 - File: ""/etc/ssh/ssh_host_dsa_key""
  - Correct: mode: ""0600"", owner: ""root"", and group owner: ""root"" configured
 - File: ""/etc/ssh/ssh_host_ecdsa_key""
  - Correct: mode: ""0600"", owner: ""root"", and group owner: ""root"" configured","Run the following script to set mode, ownership, and group on the private SSH host key files:

#!/usr/bin/env bash

{
   l_output="""" l_output2=""""
   l_ssh_group_name=""$(awk -F: '($1 ~ /^(ssh_keys|_?ssh)$/) {print $1}' /etc/group)""
   FILE_ACCESS_FIX()
   {
      while IFS=: read -r l_file_mode l_file_owner l_file_group; do
         echo ""File: \""$l_file\"" mode: \""$l_file_mode\"" owner \""$l_file_own\"" group \""$l_file_group\""""
         l_out2=""""
         [ ""l_file_group"" = ""$l_ssh_group_name"" ] &amp;&amp; l_pmask=""0137"" || l_pmask=""0177""
         l_maxperm=""$( printf '%o' $(( 0777 &amp; ~$l_pmask )) )""
         if [ $(( $l_file_mode &amp; $l_pmask )) -gt 0 ]; then
            l_out2=""$l_out2
 - Mode: \""$l_file_mode\"" should be mode: \""$l_maxperm\"" or more restrictive
 - updating to mode: :$l_maxperm\""""
            [ ""l_file_group"" = ""$l_ssh_group_name"" ] &amp;&amp; chmod u-x,g-wx,o-rwx ""$l_file"" || chmod u-x,go-rwx
         fi
         if [ ""$l_file_owner"" != ""root"" ]; then
            l_out2=""$l_out2
 - Owned by: \""$l_file_owner\"" should be owned by \""root\""
 - Changing ownership to \""root\""""
            chown root ""$l_file""
         fi
         if [[ ! ""$l_file_group"" =~ ($l_ssh_group_name|root) ]]; then
            [ -n ""$l_ssh_group_name"" ] &amp;&amp; l_new_group=""$l_ssh_group_name"" || l_new_group=""root""
            l_out2=""$l_out2
 - Owned by group \""$l_file_group\"" should be group owned by: \""$l_ssh_group_name\"" or \""root\""
 - Changing group ownership to \""$l_new_group\""""
            chgrp ""$l_new_group"" ""$l_file""
         fi
         if [ -n ""$l_out2"" ]; then
            l_output2=""$l_output2
 - File: \""$l_file\""$l_out2""
         else
            l_output=""$l_output
 - File: \""$l_file\""
 - Correct: mode: \""$l_file_mode\"", owner: \""$l_file_owner\"", and group owner: \""$l_file_group\"" configured""
         fi
      done < <(stat -Lc '%#a:%U:%G' ""$l_file"")
   }
   while IFS= read -r -d $'0' l_file; do
      if ssh-keygen -lf &amp;>/dev/null ""$l_file""; then
         file ""$l_file"" | grep -Piq -- 'bopensshh+([^#
r]+h+)?privateh+keyb' &amp;&amp; FILE_ACCESS_FIX
      fi
   done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null)
   if [ -z ""$l_output2"" ]; then
      echo -e ""
- No access changes required
""
   else
      echo -e ""
- Remediation results:
$l_output2
""
   fi
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.20 Ensure sshd PermitRootLogin is disabled"" : [FAILED]

The PermitRootLogin parameter specifies if the root user can log in using SSH. The default is prohibit-password

Disallowing root logins over SSH requires system admins to authenticate using their own individual account, then escalating to root This limits opportunity for non-repudiation and provides a clear audit trail in the event of a security incident.

Solution:
Edit the /etc/ssh/sshd_config file to set the PermitRootLogin parameter to no above any Include and Match entries as follows:

PermitRootLogin no

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - sshd -T permitrootlogin
The command script with multiple lines returned : 

port 22: permitrootlogin without-password
Fail

-------------------------
FAILED - config file permitrootlogin setting
Non-compliant file(s):
      /etc/ssh/sshd_config.d/90-anapaya.conf - regex '^[\s]*(?i)PermitRootLogin(?-i)[\s]' found - expect '^[\s]*(?i)PermitRootLogin(?-i)[\s]+""?no""?[\s]*$' not found in the following lines:
          4: PermitRootLogin prohibit-password","Edit the /etc/ssh/sshd_config file to set the PermitRootLogin parameter to no above any Include and Match entries as follows:

PermitRootLogin no

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.21 Ensure sshd PermitUserEnvironment is disabled"" : [PASSED]

The PermitUserEnvironment option allows users to present environment options to the SSH daemon.

Permitting users the ability to set environment variables through the SSH daemon could potentially allow users to bypass security controls (e.g. setting an execution path that has SSH executing trojan'd programs)

Solution:
Edit the /etc/ssh/sshd_config file to set the PermitUserEnvironment parameter to no above any Include entries as follows:

PermitUserEnvironment no

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

port 22: permitemptypasswords no
Pass","Edit the /etc/ssh/sshd_config file to set the PermitUserEnvironment parameter to no above any Include entries as follows:

PermitUserEnvironment no

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.22 Ensure sshd UsePAM is enabled"" : [FAILED]

The UsePAM directive enables the Pluggable Authentication Module (PAM) interface. If set to yes this will enable PAM authentication using ChallengeResponseAuthentication and PasswordAuthentication directives in addition to PAM account and session module processing for all authentication types.

When usePAM is set to yes PAM runs through account and session types properly. This is important if you want to restrict access to services based off of IP, time or other factors of the account. Additionally, you can make sure users inherit certain environment variables on login or disallow access to the server

Solution:
Edit the /etc/ssh/sshd_config file to set the UsePAM parameter to yes above any Include entries as follows:

UsePAM yes

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

port 22: usepam no
Fail","Edit the /etc/ssh/sshd_config file to set the UsePAM parameter to yes above any Include entries as follows:

UsePAM yes

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.3 Ensure permissions on SSH public host key files are configured"" : [PASSED]

An SSH public key is one of two files used in SSH public key authentication. In this authentication method, a public key is a key that can be used for verifying digital signatures generated using a corresponding private key. Only a public key that corresponds to a private key will be able to authenticate successfully.

If a public host key file is modified by an unauthorized user, the SSH service may be compromised.

Solution:
Run the following script to set mode, ownership, and group on the public SSH host key files:

#!/usr/bin/env bash

{
   l_output="""" l_output2=""""
   l_pmask=""0133"" &amp;&amp; l_maxperm=""$( printf '%o' $(( 0777 &amp; ~$l_pmask )) )""
   FILE_ACCESS_FIX()
   {
      while IFS=: read -r l_file_mode l_file_owner l_file_group; do
         l_out2=""""
         if [ $(( $l_file_mode &amp; $l_pmask )) -gt 0 ]; then
            l_out2=""$l_out2
 - Mode: \""$l_file_mode\"" should be mode: \""$l_maxperm\"" or more restrictive
 - updating to mode: :$l_maxperm\""""
            chmod u-x,go-wx
         fi
         if [ ""$l_file_owner"" != ""root"" ]; then
            l_out2=""$l_out2
 - Owned by: \""$l_file_owner\"" should be owned by \""root\""
 - Changing ownership to \""root\""""
            chown root ""$l_file""
         fi
         if [ ""$l_file_group"" != ""root"" ]; then
            l_out2=""$l_out2
 - Owned by group \""$l_file_group\"" should be group owned by: \""root\""
 - Changing group ownership to \""root\""""
            chgrp root ""$l_file""
         fi
         if [ -n ""$l_out2"" ]; then
            l_output2=""$l_output2
 - File: \""$l_file\""$l_out2""
         else
            l_output=""$l_output
 - File: \""$l_file\""
 - Correct: mode: \""$l_file_mode\"", owner: \""$l_file_owner\"", and group owner: \""$l_file_group\"" configured""
         fi
      done < <(stat -Lc '%#a:%U:%G' ""$l_file"")
   }
   while IFS= read -r -d $'0' l_file; do
      if ssh-keygen -lf &amp;>/dev/null ""$l_file""; then
         file ""$l_file"" | grep -Piq -- 'bopensshh+([^#
r]+h+)?publich+keyb' &amp;&amp; FILE_ACCESS_FIX
      fi
   done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null)
   if [ -z ""$l_output2"" ]; then
      echo -e ""
- No access changes required
""
   else
      echo -e ""
- Remediation results:
$l_output2
""
   fi
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **
 - * Correctly configured * :
 - File: ""/etc/ssh/ssh_host_dsa_key.pub""
  - Correct: mode: ""0644"", owner: ""root"", and group owner: ""root"" configured
 - File: ""/etc/ssh/ssh_host_ecdsa_key.pub""
  - Correct: mode: ""0644"", owner: ""root"", and group owner: ""root"" configured
 - File: ""/etc/ssh/ssh_host_rsa_key.pub""
  - Correct: mode: ""0644"", owner: ""root"", and group owner: ""root"" configured
 - File: ""/etc/ssh/ssh_host_ed25519_key.pub""
  - Correct: mode: ""0644"", owner: ""root"", and group owner: ""root"" configured","Run the following script to set mode, ownership, and group on the public SSH host key files:

#!/usr/bin/env bash

{
   l_output="""" l_output2=""""
   l_pmask=""0133"" &amp;&amp; l_maxperm=""$( printf '%o' $(( 0777 &amp; ~$l_pmask )) )""
   FILE_ACCESS_FIX()
   {
      while IFS=: read -r l_file_mode l_file_owner l_file_group; do
         l_out2=""""
         if [ $(( $l_file_mode &amp; $l_pmask )) -gt 0 ]; then
            l_out2=""$l_out2
 - Mode: \""$l_file_mode\"" should be mode: \""$l_maxperm\"" or more restrictive
 - updating to mode: :$l_maxperm\""""
            chmod u-x,go-wx
         fi
         if [ ""$l_file_owner"" != ""root"" ]; then
            l_out2=""$l_out2
 - Owned by: \""$l_file_owner\"" should be owned by \""root\""
 - Changing ownership to \""root\""""
            chown root ""$l_file""
         fi
         if [ ""$l_file_group"" != ""root"" ]; then
            l_out2=""$l_out2
 - Owned by group \""$l_file_group\"" should be group owned by: \""root\""
 - Changing group ownership to \""root\""""
            chgrp root ""$l_file""
         fi
         if [ -n ""$l_out2"" ]; then
            l_output2=""$l_output2
 - File: \""$l_file\""$l_out2""
         else
            l_output=""$l_output
 - File: \""$l_file\""
 - Correct: mode: \""$l_file_mode\"", owner: \""$l_file_owner\"", and group owner: \""$l_file_group\"" configured""
         fi
      done < <(stat -Lc '%#a:%U:%G' ""$l_file"")
   }
   while IFS= read -r -d $'0' l_file; do
      if ssh-keygen -lf &amp;>/dev/null ""$l_file""; then
         file ""$l_file"" | grep -Piq -- 'bopensshh+([^#
r]+h+)?publich+keyb' &amp;&amp; FILE_ACCESS_FIX
      fi
   done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null)
   if [ -z ""$l_output2"" ]; then
      echo -e ""
- No access changes required
""
   else
      echo -e ""
- Remediation results:
$l_output2
""
   fi
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.4 Ensure sshd access is configured"" : [FAILED]

There are several options available to limit which users and group can access the system via SSH. It is recommended that at least one of the following options be leveraged:

 - AllowUsers :
 - The AllowUsers variable gives the system administrator the option of allowing specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by only allowing the allowed users to log in from a particular host, the entry can be specified in the form of user@host.

 - AllowGroups :
 - The AllowGroups variable gives the system administrator the option of allowing specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.

 - DenyUsers :
 - The DenyUsers variable gives the system administrator the option of denying specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by specifically denying a user's access from a particular host, the entry can be specified in the form of user@host.

 - DenyGroups :
 - The DenyGroups variable gives the system administrator the option of denying specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.

Restricting which users can remotely access the system via SSH will help ensure that only authorized users access the system.

Solution:
Edit the /etc/ssh/sshd_config file to set one or more of the parameters above any Include and Match set statements as follows:

AllowUsers <userlist>
 - AND/OR -
AllowGroups <grouplist>

Note:

 - First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in aconf file in a Include directory.
 - It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user or group and forget to add it to the deny list.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|4.3,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

port 22: 
Fail","Edit the /etc/ssh/sshd_config file to set one or more of the parameters above any Include and Match set statements as follows:

AllowUsers <userlist>
 - AND/OR -
AllowGroups <grouplist>

Note:

 - First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in aconf file in a Include directory.
 - It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user or group and forget to add it to the deny list.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.5 Ensure sshd Banner is configured"" : [FAILED]

The Banner parameter specifies a file whose contents must be sent to the remote user before authentication is permitted. By default, no banner is displayed.

Banners are used to warn connecting users of the particular site's policy regarding connection. Presenting a warning message prior to the normal user login may assist the prosecution of trespassers on the computer system.

Solution:
Edit the /etc/ssh/sshd_config file to set the Banner parameter above any Include and Match entries as follows:

Banner /etc/issue.net

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.9,800-53|AC-8,800-53r5|AC-8,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - sshd_config banner
The file ""/etc/ssh/sshd_config"" does not contain ""(?i)^\h*Banner\h+""?none\b""

-------------------------
FAILED - sshd -T banner
The command script with multiple lines returned : 

port 22: banner none
Fail","Edit the /etc/ssh/sshd_config file to set the Banner parameter above any Include and Match entries as follows:

Banner /etc/issue.net

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.6 Ensure sshd Ciphers are configured"" : [PASSED]

This variable limits the ciphers that SSH can use during communication.

Notes:

 - Some organizations may have stricter requirements for approved ciphers.
 - Ensure that ciphers used are in compliance with site policy.
 - The only ""strong"" ciphers currently FIPS 140 compliant are:
 -

aes256-gcm@openssh.com

 -

aes128-gcm@openssh.com

 - aes256-ctr
 - aes192-ctr
 - aes128-ctr

Weak ciphers that are used for authentication to the cryptographic module cannot be relied upon to provide confidentiality or integrity, and system data may be compromised.

 - The Triple DES ciphers, as used in SSH, have a birthday bound of approximately four billion blocks, which makes it easier for remote attackers to obtain clear text data via a birthday attack against a long-duration encrypted session, aka a ""Sweet32"" attack.
 - Error handling in the SSH protocol; Client and Server, when using a block cipher algorithm in Cipher Block Chaining (CBC) mode, makes it easier for remote attackers to recover certain plain text data from an arbitrary block of cipher text in an SSH session via unknown vectors.

Solution:
Edit the /etc/ssh/sshd_config file and add/modify the Ciphers line to contain a comma separated list of the site unapproved (weak) Ciphers preceded with a - above any Include entries:

Example:

Ciphers -3des-cbc,aes128-cbc,aes192-cbc,aes256-cbc,chacha20-poly1305@openssh.com

- IF - CVE-2023-48795 has been addressed, and it meets local site policy, chacha20-poly1305@openssh.com may be removed from the list of excluded ciphers.

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

awk: cmd. line:1: warning: escape sequence `\.' treated as plain `.'
port 22: ciphers chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com
Pass","Edit the /etc/ssh/sshd_config file and add/modify the Ciphers line to contain a comma separated list of the site unapproved (weak) Ciphers preceded with a - above any Include entries:

Example:

Ciphers -3des-cbc,aes128-cbc,aes192-cbc,aes256-cbc,chacha20-poly1305@openssh.com

- IF - CVE-2023-48795 has been addressed, and it meets local site policy, chacha20-poly1305@openssh.com may be removed from the list of excluded ciphers.

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.7 Ensure sshd ClientAliveInterval and ClientAliveCountMax are configured"" : [FAILED]

Note: To clarify, the two settings described below are only meant for idle connections from a protocol perspective and are not meant to check if the user is active or not. An idle user does not mean an idle connection. SSH does not and never had, intentionally, the capability to drop idle users. In SSH versions before 8.2p1 there was a bug that caused these values to behave in such a manner that they were abused to disconnect idle users. This bug has been resolved in 8.2p1 and thus it can no longer be abused disconnect idle users.

The two options ClientAliveInterval and ClientAliveCountMax control the timeout of SSH sessions. Taken directly from man 5 sshd_config :

 -

ClientAliveInterval Sets a timeout interval in seconds after which if no data has been received from the client, sshd(8) will send a message through the encrypted channel to request a response from the client. The default is 0, indicating that these messages will not be sent to the client.

 -

ClientAliveCountMax Sets the number of client alive messages which may be sent without sshd(8) receiving any messages back from the client. If this threshold is reached while client alive messages are being sent, sshd will disconnect the client, terminating the session. It is important to note that the use of client alive messages is very different from TCPKeepAlive. The client alive messages are sent through the encrypted channel and therefore will not be spoofable. The TCP keepalive option en-abled by TCPKeepAlive is spoofable. The client alive mechanism is valuable when the client or server depend on knowing when a connection has become unresponsive.The default value is 3. If ClientAliveInterval is set to 15, and ClientAliveCountMax is left at the default, unresponsive SSH clients will be disconnected after approximately 45 seconds. Setting a zero ClientAliveCountMax disables connection termination.

In order to prevent resource exhaustion, appropriate values should be set for both ClientAliveInterval and ClientAliveCountMax Specifically, looking at the source code, ClientAliveCountMax must be greater than zero in order to utilize the ability of SSH to drop idle connections. If connections are allowed to stay open indefinitely, this can potentially be used as a DDOS attack or simple resource exhaustion could occur over unreliable networks.

The example set here is a 45 second timeout. Consult your site policy for network timeouts and apply as appropriate.

Solution:
Edit the /etc/ssh/sshd_config file to set the ClientAliveInterval and ClientAliveCountMax parameters above any Include and Match entries according to site policy.

Example:

ClientAliveInterval 15
ClientAliveCountMax 3

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.11,800-53|AC-12,800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,LEVEL|1A,NIAv2|NS49

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - ClientAliveCountMax is greater than 0
The command script with multiple lines returned : 

port 22: clientalivecountmax 3
Pass

-------------------------
FAILED - ClientAliveInterval is greater than 0
The command script with multiple lines returned : 

port 22: clientaliveinterval 0
Fail

-------------------------
PASSED - sshd_config ClientAliveCountMax
The file ""/etc/ssh/sshd_config"" does not contain ""(?i)^\h*ClientAliveCountMax\h+""?0\b""

-------------------------
PASSED - sshd_config ClientAliveInterval
The file ""/etc/ssh/sshd_config"" does not contain ""(?i)^\h*ClientAliveInterval\h+""?0\b""","Edit the /etc/ssh/sshd_config file to set the ClientAliveInterval and ClientAliveCountMax parameters above any Include and Match entries according to site policy.

Example:

ClientAliveInterval 15
ClientAliveCountMax 3

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.2.1 Ensure sudo is installed"" : [PASSED]

sudo allows a permitted user to execute a command as the superuser or another user, as specified by the security policy. The invoking user's real (not effective) user ID is used to determine the user name with which to query the security policy.

sudo supports a plug-in architecture for security policies and input/output logging. Third parties can develop and distribute their own policy and I/O logging plug-ins to work seamlessly with the sudo front end. The default security policy is sudoers which is configured via the file /etc/sudoers and any entries in /etc/sudoers.d

The security policy determines what privileges, if any, a user has to run sudo The policy may require that users authenticate themselves with a password or another authentication mechanism. If authentication is required, sudo will exit if the user's password is not entered within a configurable time limit. This limit is policy-specific.

Solution:
First determine is LDAP functionality is required. If so, then install sudo-ldap else install sudo

Example:

# apt install sudo

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /usr/bin/dpkg -s sudo sudo-ldap 2>&1
expect: install[\s]+ok[\s]+installed

Actual Value:
The command '/usr/bin/dpkg -s sudo sudo-ldap 2>&1' returned : 

dpkg-query: package 'sudo-ldap' is not installed and no information is available
Package: sudo
Status: install ok installed
Priority: optional
Section: admin
Installed-Size: 2508
Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
Architecture: amd64
Version: 1.9.9-1ubuntu2.4
Replaces: sudo-ldap
Depends: libaudit1 (>= 1:2.2.1), libc6 (>= 2.34), libpam0g (>= 0.99.7.1), libselinux1 (>= 3.1~), zlib1g (>= 1:1.2.0.2), libpam-modules, lsb-base
Conflicts: sudo-ldap
Conffiles:
 /etc/pam.d/sudo b3a1b916bf62a2cc3280f7f9b94844ff
 /etc/pam.d/sudo-i ce9740f66cedf7716e26950abfe556fa
 /etc/sudo.conf efb56b1b282fa4cad1b6c0f05137bb08
 /etc/sudo_logsrvd.conf 09ceda2c98f43e0fbb79bed7c82dba45
 /etc/sudoers 791aa979aa5e859f9ba0112a9512158c
 /etc/sudoers.d/README 44c75ff004a18eeefdde4c998914d6d3
Description: Provide limited super user privileges to specific users
 Sudo is a program designed to allow a sysadmin to give limited root
 privileges to users and log root activity.  The basic philosophy is to give
 as few privileges as possible but still allow people to get their work done.
 .
 This version is built with minimal shared library dependencies, use the
 sudo-ldap package instead if you need LDAP support for sudoers.
Homepage: https://www.sudo.ws/
Original-Maintainer: Sudo Maintainers <sudo@packages.debian.org>

Use dpkg --info (= dpkg-deb --info) to examine archive files.","First determine is LDAP functionality is required. If so, then install sudo-ldap else install sudo

Example:

# apt install sudo","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.2.2 Ensure sudo commands use pty"" : [PASSED]

sudo can be configured to run only from a pseudo terminal ( pseudo-pty ).

Attackers can run a malicious program using sudo which would fork a background process that remains even when the main program has finished executing.

Solution:
Edit the file /etc/sudoers with visudo or a file in /etc/sudoers.d/ with visudo -f <PATH TO FILE> and add the following line:

Defaults use_pty

Edit the file /etc/sudoers with visudo and any files in /etc/sudoers.d/ with visudo -f <PATH TO FILE> and remove any occurrence of !use_pty

Note:

 - sudo will read each file in /etc/sudoers.d skipping file names that end in ~ or contain a character to avoid causing problems with package manager or editor temporary/backup files.
 - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second
 - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second
 - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.

Impact:

WARNING: Editing the sudo configuration incorrectly can cause sudo to stop functioning. Always use visudo to modify sudo configuration files.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - /etc/sudoers use_pty
The command '/bin/grep -rPi -- '^\h*Defaults\h+([^#\n\r]+,)?use_pty(,\h*\h+\h*)*\h*(#.*)?$' /etc/sudoers*' returned : 

/etc/sudoers:Defaults	use_pty

-------------------------
PASSED - /etc/sudoers !use_pty
The command '/bin/grep -rPi -- '^\h*Defaults\h+([^#\n\r]+,)?!use_pty(,\h*\h+\h*)*\h*(#.*)?$' /etc/sudoers* | /bin/awk '{print} END {if (NR == 0) print ""pass"" ; else print ""fail""}'' returned : 

pass","Edit the file /etc/sudoers with visudo or a file in /etc/sudoers.d/ with visudo -f <PATH TO FILE> and add the following line:

Defaults use_pty

Edit the file /etc/sudoers with visudo and any files in /etc/sudoers.d/ with visudo -f <PATH TO FILE> and remove any occurrence of !use_pty

Note:

 - sudo will read each file in /etc/sudoers.d skipping file names that end in ~ or contain a character to avoid causing problems with package manager or editor temporary/backup files.
 - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second
 - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second
 - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.

Impact:

WARNING: Editing the sudo configuration incorrectly can cause sudo to stop functioning. Always use visudo to modify sudo configuration files.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.2.3 Ensure sudo log file exists"" : [FAILED]

sudo can use a custom log file

A sudo log file simplifies auditing of sudo commands

Solution:
Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo or visudo -f <PATH TO FILE> and add the following line:

Example:

Defaults logfile=""/var/log/sudo.log""

Note:

 - sudo will read each file in /etc/sudoers.d skipping file names that end in ~ or contain a character to avoid causing problems with package manager or editor temporary/backup files.
 - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second
 - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second
 - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.

Impact:

WARNING: Editing the sudo configuration incorrectly can cause sudo to stop functioning. Always use visudo to modify sudo configuration files.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
expect: (?i)^\h*Defaults\h+([^#]+,\h*)?logfile\h*=\h*(\""|\')?\H+(\""|\')?(,\h*\H+\h*)*\h*(#.*)?$
file: /etc/sudoers /etc/sudoers.d/*
min_occurrences: 1
regex: (?i)^\h*Defaults\h+([^#]+,\h*)?logfile\h*=\h*(\""|\')?\H+(\""|\')?(,\h*\H+\h*)*\h*(#.*)?$
string_required: NO

Actual Value:
No matching files were found
Less than 1 matches of regex found","Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo or visudo -f <PATH TO FILE> and add the following line:

Example:

Defaults logfile=""/var/log/sudo.log""

Note:

 - sudo will read each file in /etc/sudoers.d skipping file names that end in ~ or contain a character to avoid causing problems with package manager or editor temporary/backup files.
 - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second
 - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second
 - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.

Impact:

WARNING: Editing the sudo configuration incorrectly can cause sudo to stop functioning. Always use visudo to modify sudo configuration files.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.2.5 Ensure re-authentication for privilege escalation is not disabled globally"" : [PASSED]

The operating system must be configured so that users must re-authenticate for privilege escalation.

Without re-authentication, users may access resources or perform tasks for which they do not have authorization.

When operating systems provide the capability to escalate a functional capability, it is critical the user re-authenticate.

Solution:
Configure the operating system to require users to reauthenticate for privilege escalation.

Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit the relevant sudoers file.

Remove any occurrences of !authenticate tags in the file(s).

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: ^[^#].*!authenticate
file: /etc/sudoers /etc/sudoers.d/*
regex: ^[^#].*!authenticate

Actual Value:
The file ""/etc/sudoers"" does not contain ""^[^#].*!authenticate""","Configure the operating system to require users to reauthenticate for privilege escalation.

Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit the relevant sudoers file.

Remove any occurrences of !authenticate tags in the file(s).","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.2.6 Ensure sudo authentication timeout is configured correctly"" : [PASSED]

sudo caches used credentials for a default of 15 minutes. This is for ease of use when there are multiple administrative tasks to perform. The timeout can be modified to suit local security policies.

This default is distribution specific. See audit section for further information.

Setting a timeout value reduces the window of opportunity for unauthorized privileged access to another user.

Solution:
If the currently configured timeout is larger than 15 minutes, edit the file listed in the audit section with visudo -f <PATH TO FILE> and modify the entry timestamp_timeout= to 15 minutes or less as per your site policy. The value is in minutes. This particular entry may appear on it's own, or on the same line as env_reset See the following two examples:

Defaults env_reset, timestamp_timeout=15 Defaults timestamp_timeout=15
Defaults env_reset

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
PASSED

Actual Value:
One of the following must pass to satisfy this requirement:

-------------------------
PASSED - sudo timeout
The command '/bin/sudo -V | /bin/grep 'Authentication timestamp timeout:'' returned : 

Authentication timestamp timeout: 15.0 minutes

-------------------------
PASSED - On disk timestamp_timeout
No matching files were found","If the currently configured timeout is larger than 15 minutes, edit the file listed in the audit section with visudo -f <PATH TO FILE> and modify the entry timestamp_timeout= to 15 minutes or less as per your site policy. The value is in minutes. This particular entry may appear on it's own, or on the same line as env_reset See the following two examples:

Defaults env_reset, timestamp_timeout=15 Defaults timestamp_timeout=15
Defaults env_reset","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.2.7 Ensure access to the su command is restricted"" : [FAILED]

The su command allows a user to run a command or shell as another user. The program has been superseded by sudo which allows for more granular control over privileged access. Normally, the su command can be executed by any user. By uncommenting the pam_wheel.so statement in /etc/pam.d/su the su command will only allow users in a specific groups to execute su This group should be empty to reinforce the use of sudo for privileged access.

Restricting the use of su and using sudo in its place, provides system administrators better control of the escalation of user privileges to execute privileged commands. The sudo utility also provides a better logging and audit mechanism, as it can log each command executed via sudo whereas su can only record that a user executed the su program.

Solution:
Create an empty group that will be specified for use of the su command. The group should be named according to site policy.

Example:

# groupadd sugroup

Add the following line to the /etc/pam.d/su file, specifying the empty group:

auth required pam_wheel.so use_uid group=sugroup

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: sugroup=$(/bin/grep -Pi '^\h*auth\h+(?:required|requisite)\h+pam_wheel\.so\h+(?:[^#\n\r]+\h+)?((?!\2)(use_uid\b|group=\H+\b))\h+(?:[^#\n\r]+\h+)?((?!\1)(use_uid\b|group=\H+\b))(\h+.*)?$' /etc/pam.d/su | /bin/awk 'BEGIN { FS = ""=""} ; { print $2 }'); if [ ! -z $sugroup ]; then /bin/grep $sugroup /etc/group | /bin/awk 'BEGIN { FS = "":"" }; { print $4 }' | /bin/awk '{print} END {if (NF == 0) print ""pass - group empty""; else print ""fail - group not empty""}'; else echo ""fail - sugroup not found in /etc/pam.d/su""; fi
expect: pass - group empty

Actual Value:
The command 'sugroup=$(/bin/grep -Pi '^\h*auth\h+(?:required|requisite)\h+pam_wheel\.so\h+(?:[^#\n\r]+\h+)?((?!\2)(use_uid\b|group=\H+\b))\h+(?:[^#\n\r]+\h+)?((?!\1)(use_uid\b|group=\H+\b))(\h+.*)?$' /etc/pam.d/su | /bin/awk 'BEGIN { FS = ""=""} ; { print $2 }'); if [ ! -z $sugroup ]; then /bin/grep $sugroup /etc/group | /bin/awk 'BEGIN { FS = "":"" }; { print $4 }' | /bin/awk '{print} END {if (NF == 0) print ""pass - group empty""; else print ""fail - group not empty""}'; else echo ""fail - sugroup not found in /etc/pam.d/su""; fi' returned : 

fail - sugroup not found in /etc/pam.d/su","Create an empty group that will be specified for use of the su command. The group should be named according to site policy.

Example:

# groupadd sugroup

Add the following line to the /etc/pam.d/su file, specifying the empty group:

auth required pam_wheel.so use_uid group=sugroup","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.1.1 Ensure latest version of pam is installed"" : [FAILED]

Updated versions of PAM include additional functionality

To ensure the system has full functionality and access to the options covered by this Benchmark the latest version of libpam-runtime should be installed on the system

Solution:
- IF - the version of libpam-runtime on the system is less that version 1.5.2-6 :

Run the following command to update to the latest version of PAM :

# apt upgrade libpam-runtime

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
cmd: /bin/dpkg -s libpam-runtime | /bin/grep -E '(Status:|Version)'
expect: ^Version: ([1-9]|[1-9][0-9])\.([5-9]|[1-9][0-9])\.([2-9]|[1-9][0-9])-([6-9]|[1-9][0-9])

Actual Value:
The command '/bin/dpkg -s libpam-runtime | /bin/grep -E '(Status:|Version)'' returned : 

Status: install ok installed
Version: 1.4.0-11ubuntu2.4","- IF - the version of libpam-runtime on the system is less that version 1.5.2-6 :

Run the following command to update to the latest version of PAM :

# apt upgrade libpam-runtime","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.1.2 Ensure libpam-modules is installed"" : [FAILED]

Pluggable Authentication Modules for PAM

To ensure the system has full functionality and access to the PAM options covered by this Benchmark

Solution:
- IF - the version of libpam-modules on the system is less that version 1.5.2-6 :

Run the following command to update to the latest version of PAM :

# apt upgrade libpam-modules

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
cmd: /bin/dpkg -s libpam-modules | /bin/grep -E '(Status:|Version)'
expect: ^Version: (1\.5\.([2-9]|[1-9][0-9])-([6-9]|[1-9][0-9])|1\.([6-9]|[1-9][0-9])\.|[2-9]\.|[1-9][0-9]\.)

Actual Value:
The command '/bin/dpkg -s libpam-modules | /bin/grep -E '(Status:|Version)'' returned : 

Status: install ok installed
Version: 1.4.0-11ubuntu2.4","- IF - the version of libpam-modules on the system is less that version 1.5.2-6 :

Run the following command to update to the latest version of PAM :

# apt upgrade libpam-modules","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.1.3 Ensure libpam-pwquality is installed"" : [FAILED]

libpwquality provides common functions for password quality checking and scoring them based on their apparent randomness. The library also provides a function for generating random passwords with good pronounceability.

This module can be plugged into the password stack of a given service to provide some plug-in strength-checking for passwords. The code was originally based on pam_cracklib module and the module is backwards compatible with its options.

Strong passwords reduce the risk of systems being hacked through brute force methods.

Solution:
Run the following command to install libpam-pwquality :

# apt install libpam-pwquality

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
cmd: /bin/dpkg -s libpam-pwquality 2>&1 | /bin/grep -E '(Status:|not installed)'
expect: ^Status: install ok

Actual Value:
The command '/bin/dpkg -s libpam-pwquality 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

dpkg-query: package 'libpam-pwquality' is not installed and no information is available","Run the following command to install libpam-pwquality :

# apt install libpam-pwquality","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.2.1 Ensure pam_unix module is enabled"" : [PASSED]

pam_unix is the standard Unix authentication module. It uses standard calls from the system's libraries to retrieve and set account information as well as authentication. Usually this is obtained from the /etc/passwd and if shadow is enabled, the /etc/shadow file as well.

The account component performs the task of establishing the status of the user's account and password based on the following shadow elements: expire last_change max_change min_change warn_change In the case of the latter, it may offer advice to the user on changing their password or, through the PAM_AUTHTOKEN_REQD return, delay giving service to the user until they have established a new password. The entries listed above are documented in the shadow(5) manual page. Should the user's record not contain one or more of these entries, the corresponding shadow check is not performed.

The authentication component performs the task of checking the users credentials (password). The default action of this module is to not permit the user access to a service if their official password is blank.

The system should only provide access after performing authentication of a user.

Solution:
Run the following command to enable the pam_unix module:

# pam-auth-update --enable unix

Note: If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_faillock module, enable that module instead

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - common-password pam_unix.so
Compliant file(s):
      /etc/pam.d/common-password - regex '^\h*password\h+[^#\n\r]+\h+pam_unix\.so\b' found - expect '^\h*password\h+[^#\n\r]+\h+pam_unix\.so\b' found in the following lines:
          25: password	[success=1 default=ignore]	pam_unix.so obscure yescrypt

-------------------------
PASSED - common-account pam_unix.so
Compliant file(s):
      /etc/pam.d/common-account - regex '^\h*account\h+[^#\n\r]+\h+pam_unix\.so\b' found - expect '^\h*account\h+[^#\n\r]+\h+pam_unix\.so\b' found in the following lines:
          17: account	[success=1 new_authtok_reqd=done default=ignore]	pam_unix.so

-------------------------
PASSED - common-session pam_unix.so
Compliant file(s):
      /etc/pam.d/common-session - regex '^\h*session\h+[^#\n\r]+\h+pam_unix\.so\b' found - expect '^\h*session\h+[^#\n\r]+\h+pam_unix\.so\b' found in the following lines:
          28: session	required	pam_unix.so

-------------------------
PASSED - common-auth pam_unix.so
Compliant file(s):
      /etc/pam.d/common-auth - regex '^\h*auth\h+[^#\n\r]+\h+pam_unix\.so\b' found - expect '^\h*auth\h+[^#\n\r]+\h+pam_unix\.so\b' found in the following lines:
          17: auth	[success=1 default=ignore]	pam_unix.so nullok","Run the following command to enable the pam_unix module:

# pam-auth-update --enable unix

Note: If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_faillock module, enable that module instead","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.2.2 Ensure pam_faillock module is enabled"" : [FAILED]

The pam_faillock.so module maintains a list of failed authentication attempts per user during a specified interval and locks the account in case there were more than the configured number of consecutive failed authentications (this is defined by the deny parameter in the faillock configuration). It stores the failure records into per-user files in the tally directory.

Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.

Solution:
Create two pam-auth-update profiles in /usr/share/pam-configs/ :

Create the first profile with the following lines:

Name: Enable pam_faillock to deny access
Default: yes
Priority: 0
Auth-Type: Primary
Auth:
        [default=die] pam_faillock.so authfail

Example:

#!/usr/bin/env bash

{
   arr=('Name: Enable pam_faillock to deny access' 'Default: yes' 'Priority: 0' 'Auth-Type: Primary' 'Auth:' ' [default=die] pam_faillock.so authfail')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/faillock
}

Create the second profile with the following lines:

Name: Notify of failed login attempts and reset count upon success
Default: yes
Priority: 1024
Auth-Type: Primary
Auth:
        requisite pam_faillock.so preauth
Account-Type: Primary
Account:
        required pam_faillock.so

Example:

#!/usr/bin/env bash

{
   arr=('Name: Notify of failed login attempts and reset count upon success' 'Default: yes' 'Priority: 1024' 'Auth-Type: Primary' 'Auth:' ' requisite pam_faillock.so preauth' 'Account-Type: Primary' 'Account:' ' required pam_faillock.so')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/faillock_notify
}

Run the following command to update the common-auth and common-account PAM files with the new profiles:

# pam-auth-update --enable <profile_filename>

Example:

# pam-auth-update --enable faillock
# pam-auth-update --enable faillock_notify

Note:

 - The name used for the file must be used in the pam-auth-update --enable command
 - The Name: line should be easily recognizable and understood
 - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files
 - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_faillock module, enable that module instead

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.7,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),LEVEL|1A,NESA|M1.2.2,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - account pam_faillock.so
The file ""/etc/pam.d/common-account"" does not contain ""(?i)^\h*account\h+([^#\n\r]+)\h+pam_faillock\.so\b""

-------------------------
FAILED - authfail
The file ""/etc/pam.d/common-auth"" does not contain ""(?i)^\h*auth\h+([^#\n\r]+)\h+pam_faillock\.so\h+([^#\n\r]+\h+)?authfail\b""

-------------------------
FAILED - preauth
The file ""/etc/pam.d/common-auth"" does not contain ""(?i)^\h*auth\h+([^#\n\r]+)\h+pam_faillock\.so\h+([^#\n\r]+\h+)?preauth\b""","Create two pam-auth-update profiles in /usr/share/pam-configs/ :

Create the first profile with the following lines:

Name: Enable pam_faillock to deny access
Default: yes
Priority: 0
Auth-Type: Primary
Auth:
        [default=die] pam_faillock.so authfail

Example:

#!/usr/bin/env bash

{
   arr=('Name: Enable pam_faillock to deny access' 'Default: yes' 'Priority: 0' 'Auth-Type: Primary' 'Auth:' ' [default=die] pam_faillock.so authfail')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/faillock
}

Create the second profile with the following lines:

Name: Notify of failed login attempts and reset count upon success
Default: yes
Priority: 1024
Auth-Type: Primary
Auth:
        requisite pam_faillock.so preauth
Account-Type: Primary
Account:
        required pam_faillock.so

Example:

#!/usr/bin/env bash

{
   arr=('Name: Notify of failed login attempts and reset count upon success' 'Default: yes' 'Priority: 1024' 'Auth-Type: Primary' 'Auth:' ' requisite pam_faillock.so preauth' 'Account-Type: Primary' 'Account:' ' required pam_faillock.so')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/faillock_notify
}

Run the following command to update the common-auth and common-account PAM files with the new profiles:

# pam-auth-update --enable <profile_filename>

Example:

# pam-auth-update --enable faillock
# pam-auth-update --enable faillock_notify

Note:

 - The name used for the file must be used in the pam-auth-update --enable command
 - The Name: line should be easily recognizable and understood
 - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files
 - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_faillock module, enable that module instead","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.2.3 Ensure pam_pwquality module is enabled"" : [FAILED]

The pam_pwquality.so module performs password quality checking. This module can be plugged into the password stack of a given service to provide strength-checking for passwords. The code was originally based on pam_cracklib module and the module is backwards compatible with its options.

The action of this module is to prompt the user for a password and check its strength against a system dictionary and a set of rules for identifying poor choices.

The first action is to prompt for a single password, check its strength and then, if it is considered strong, prompt for the password a second time (to verify that it was typed correctly on the first occasion). All being well, the password is passed on to subsequent modules to be installed as the new authentication token.

Use of a unique, complex passwords helps to increase the time and resources required to compromise the password.

Solution:
Run the following script to verify the pam_pwquality.so line exists in a pam-auth-update profile:

# grep -P -- 'bpam_pwquality.sob' /usr/share/pam-configs/*

Output should be similar to:

/usr/share/pam-configs/pwquality: requisite pam_pwquality.so retry=3
/usr/share/pam-configs/pwquality: requisite pam_pwquality.so retry=3

- IF - similar output is returned:

Run the following command to update /etc/pam.d/common-password with the returned profile:

# pam-auth-update --enable {PROFILE_NAME}

Example:

# pam-auth-update pwquality

- IF - similar output is NOT returned:

Run the following script to create a pam-auth-update profile for pwquality :

!#/usr/bin/env bash

{
   arr=('Name: Pwquality password strength checking' 'Default: yes' 'Priority: 1024' 'Conflicts: cracklib' 'Password-Type: Primary' 'Password:' ' requisite pam_pwquality.so retry=3' 'Password-Initial:' 'requisite')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/pwquality
}

Run the following command to update /etc/pam.d/common-password with the pwquality profile:

# pam-auth-update --enable pwquality

Note:

 - The name used for the file must be used in the pam-auth-update --enable command
 - The Name: line should be easily recognizable and understood
 - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files
 - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_pwquality module, enable that module instead

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
expect: (?i)^\h*password\h+(requisite|required)\h+pam_pwquality\.so\b
file: /etc/pam.d/common-password
regex: (?i)^\h*password\h+(requisite|required)\h+pam_pwquality\.so\b

Actual Value:
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+(requisite|required)\h+pam_pwquality\.so\b""","Run the following script to verify the pam_pwquality.so line exists in a pam-auth-update profile:

# grep -P -- 'bpam_pwquality.sob' /usr/share/pam-configs/*

Output should be similar to:

/usr/share/pam-configs/pwquality: requisite pam_pwquality.so retry=3
/usr/share/pam-configs/pwquality: requisite pam_pwquality.so retry=3

- IF - similar output is returned:

Run the following command to update /etc/pam.d/common-password with the returned profile:

# pam-auth-update --enable {PROFILE_NAME}

Example:

# pam-auth-update pwquality

- IF - similar output is NOT returned:

Run the following script to create a pam-auth-update profile for pwquality :

!#/usr/bin/env bash

{
   arr=('Name: Pwquality password strength checking' 'Default: yes' 'Priority: 1024' 'Conflicts: cracklib' 'Password-Type: Primary' 'Password:' ' requisite pam_pwquality.so retry=3' 'Password-Initial:' 'requisite')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/pwquality
}

Run the following command to update /etc/pam.d/common-password with the pwquality profile:

# pam-auth-update --enable pwquality

Note:

 - The name used for the file must be used in the pam-auth-update --enable command
 - The Name: line should be easily recognizable and understood
 - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files
 - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_pwquality module, enable that module instead","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.2.4 Ensure pam_pwhistory module is enabled"" : [FAILED]

The pam_pwhistory.so module saves the last passwords for each user in order to force password change history and keep the user from alternating between the same password too frequently.

This module does not work together with kerberos. In general, it does not make much sense to use this module in conjunction with NIS or LDAP since the old passwords are stored on the local machine and are not available on another machine for password history checking.

Use of a unique, complex passwords helps to increase the time and resources required to compromise the password.

Solution:
Run the following script to verify the pam_pwquality.so line exists in a pam-auth-update profile:

# grep -P -- 'bpam_pwhistory.sob' /usr/share/pam-configs/*

Output should be similar to:

/usr/share/pam-configs/pwhistory: requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok

- IF - similar output is returned:

Run the following command to update /etc/pam.d/common-password with the returned profile:

# pam-auth-update --enable {PROFILE_NAME}

Example:

# pam-auth-update pwhistory

- IF - similar output is NOT returned:

Run the following script to create a pam-auth-update profile for pwhistory :

!#/usr/bin/env bash

{
   arr=('Name: pwhistory password history checking' 'Default: yes' 'Priority: 1024' 'Password-Type: Primary' 'Password:' ' requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/pwhistory
}

Run the following command to update /etc/pam.d/common-password with the pwhistory profile:

# pam-auth-update --enable pwhistory

Note:

 - The name used for the file must be used in the pam-auth-update --enable command
 - The Name: line should be easily recognizable and understood
 - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files
 - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_pwhistory module, enable that module instead

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
expect: (?i)^\h*password\h+(requisite|required)\h+pam_pwhistory\.so\b
file: /etc/pam.d/common-password
regex: (?i)^\h*password\h+(requisite|required)\h+pam_pwhistory\.so\b

Actual Value:
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+(requisite|required)\h+pam_pwhistory\.so\b""","Run the following script to verify the pam_pwquality.so line exists in a pam-auth-update profile:

# grep -P -- 'bpam_pwhistory.sob' /usr/share/pam-configs/*

Output should be similar to:

/usr/share/pam-configs/pwhistory: requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok

- IF - similar output is returned:

Run the following command to update /etc/pam.d/common-password with the returned profile:

# pam-auth-update --enable {PROFILE_NAME}

Example:

# pam-auth-update pwhistory

- IF - similar output is NOT returned:

Run the following script to create a pam-auth-update profile for pwhistory :

!#/usr/bin/env bash

{
   arr=('Name: pwhistory password history checking' 'Default: yes' 'Priority: 1024' 'Password-Type: Primary' 'Password:' ' requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/pwhistory
}

Run the following command to update /etc/pam.d/common-password with the pwhistory profile:

# pam-auth-update --enable pwhistory

Note:

 - The name used for the file must be used in the pam-auth-update --enable command
 - The Name: line should be easily recognizable and understood
 - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files
 - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_pwhistory module, enable that module instead","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.1.1 Ensure password failed attempts lockout is configured"" : [FAILED]

The deny=<n> option will deny access if the number of consecutive authentication failures for this user during the recent interval exceeds

.

Locking out user IDs after

n

unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.

Solution:
Create or edit the following line in /etc/security/faillock.conf setting the deny option to 5 or less:

deny = 5

Run the following command:

# grep -Pl -- 'bpam_faillock.soh+([^#
r]+h+)?denyb' /usr/share/pam-configs/*

Edit any returned files and remove the deny=<N> arguments from the pam_faillock.so line(s):

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.7,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),LEVEL|1A,NESA|M1.2.2,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - faillock.conf - deny
The file ""/etc/security/faillock.conf"" does not contain ""(?i)^\h*deny\h*=\h*[1-5]\b""

-------------------------
PASSED - common-auth deny
No matching files were found","Create or edit the following line in /etc/security/faillock.conf setting the deny option to 5 or less:

deny = 5

Run the following command:

# grep -Pl -- 'bpam_faillock.soh+([^#
r]+h+)?denyb' /usr/share/pam-configs/*

Edit any returned files and remove the deny=<N> arguments from the pam_faillock.so line(s):","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.1.2 Ensure password unlock time is configured"" : [FAILED]

unlock_time=<n> - The access will be re-enabled after

seconds after the lock out. The value 0 has the same meaning as value never - the access will not be re-enabled without resetting the faillock entries by the faillock(8) command.

Note:

 - The default directory that pam_faillock uses is usually cleared on system boot so the access will be also re-enabled after system reboot. If that is undesirable a different tally directory must be set with the dir option.
 - It is usually undesirable to permanently lock out users as they can become easily a target of denial of service attack unless the usernames are random and kept secret to potential attackers.
 - The maximum configurable value for unlock_time is 604800

Locking out user IDs after

n

unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.

Solution:
Set password unlock time to conform to site policy. unlock_time should be 0 (never), or 900 seconds or greater.

Edit /etc/security/faillock.conf and update or add the following line:

unlock_time = 900

Run the following command: remove the unlock_time argument from the pam_faillock.so module in the PAM files:

# grep -Pl -- 'bpam_faillock.soh+([^#
r]+h+)?unlock_timeb' /usr/share/pam-configs/*

Edit any returned files and remove the unlock_time=<N> argument from the pam_faillock.so line(s):

Impact:

Use of unlock_time=0 may allow an attacker to cause denial of service to legitimate users. This will also require a systems administrator with elevated privileges to unlock the account.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.7,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),LEVEL|1A,NESA|M1.2.2,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - faillock.conf - unlock time
The file ""/etc/security/faillock.conf"" does not contain ""(?i)^\h*unlock_time\h*=""

-------------------------
PASSED - common-auth unlock_time
No matching files were found","Set password unlock time to conform to site policy. unlock_time should be 0 (never), or 900 seconds or greater.

Edit /etc/security/faillock.conf and update or add the following line:

unlock_time = 900

Run the following command: remove the unlock_time argument from the pam_faillock.so module in the PAM files:

# grep -Pl -- 'bpam_faillock.soh+([^#
r]+h+)?unlock_timeb' /usr/share/pam-configs/*

Edit any returned files and remove the unlock_time=<N> argument from the pam_faillock.so line(s):

Impact:

Use of unlock_time=0 may allow an attacker to cause denial of service to legitimate users. This will also require a systems administrator with elevated privileges to unlock the account.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.1 Ensure password number of changed characters is configured"" : [FAILED]

The pwquality difok option sets the number of characters in a password that must not be present in the old password.

Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

Password complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised.

Solution:
Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set difok to 2 or more. Ensure setting conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*difoks*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""difok = 2"" > /etc/security/pwquality.conf.d/50-pwdifok.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?difokb' /usr/share/pam-configs/*

Edit any returned files and remove the difok argument from the pam_pwquality.so line(s):

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - pwquality - difok
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

-------------------------
PASSED - common-password difok
No matching files were found","Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set difok to 2 or more. Ensure setting conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*difoks*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""difok = 2"" > /etc/security/pwquality.conf.d/50-pwdifok.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?difokb' /usr/share/pam-configs/*

Edit any returned files and remove the difok argument from the pam_pwquality.so line(s):","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.2 Ensure minimum password length is configured"" : [FAILED]

The minimum password length setting determines the lowers number of characters that make up a password for a user account. There are many different theories about how to determine the best password length for an organization, but perhaps ""passphrase"" is a better term than ""password"".

The minlen option sets the minimum acceptable size for the new password (plus one if credits are not disabled which is the default). Cannot be set to lower value than 6.

Strong passwords help protect systems from password attacks. Types of password attacks include dictionary attacks, which attempt to use common words and phrases, and brute force attacks, which try every possible combination of characters. Also attackers may try to obtain the account database so they can use tools to discover the accounts and passwords.

Solution:
Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set password length of 14 or more characters. Ensure that password length conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*minlens*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""minlen = 14"" > /etc/security/pwquality.conf.d/50-pwlength.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?minlenb' /usr/share/pam-configs/*

Edit any returned files and remove the minlen argument from the pam_pwquality.so line(s):

Impact:

In general, it is true that longer passwords are better (harder to crack), but it is also true that forced password length requirements can cause user behavior that is predictable and undesirable. For example, requiring users to have a minimum 16-character password may cause them to choose repeating patterns like fourfourfourfour or passwordpassword that meet the requirement but aren't hard to guess. Additionally, length requirements increase the chances that users will adopt other insecure practices, like writing them down, re-using them or storing them unencrypted in their documents.

Having a reasonable minimum length with no maximum character limit increases the resultingaverage password length used (and therefore the strength).6

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - common-password minlen
No matching files were found

-------------------------
FAILED - pwquality - minlen
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf","Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set password length of 14 or more characters. Ensure that password length conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*minlens*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""minlen = 14"" > /etc/security/pwquality.conf.d/50-pwlength.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?minlenb' /usr/share/pam-configs/*

Edit any returned files and remove the minlen argument from the pam_pwquality.so line(s):

Impact:

In general, it is true that longer passwords are better (harder to crack), but it is also true that forced password length requirements can cause user behavior that is predictable and undesirable. For example, requiring users to have a minimum 16-character password may cause them to choose repeating patterns like fourfourfourfour or passwordpassword that meet the requirement but aren't hard to guess. Additionally, length requirements increase the chances that users will adopt other insecure practices, like writing them down, re-using them or storing them unencrypted in their documents.

Having a reasonable minimum length with no maximum character limit increases the resultingaverage password length used (and therefore the strength).6","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.3 Ensure password complexity is configured"" : [FAILED]

Password complexity can be set through:

 - minclass - The minimum number of classes of characters required in a new password. (digits, uppercase, lowercase, others). e.g. minclass = 4 requires digits, uppercase, lower case, and special characters.
 - dcredit - The maximum credit for having digits in the new password. If less than 0 it is the minimum number of digits in the new password. e.g. dcredit = -1 requires at least one digit
 - ucredit - The maximum credit for having uppercase characters in the new password. If less than 0 it is the minimum number of uppercase characters in the new password. e.g. ucredit = -1 requires at least one uppercase character
 - ocredit - The maximum credit for having other characters in the new password. If less than 0 it is the minimum number of other characters in the new password. e.g. ocredit = -1 requires at least one special character
 - lcredit - The maximum credit for having lowercase characters in the new password. If less than 0 it is the minimum number of lowercase characters in the new password. e.g. lcredit = -1 requires at least one lowercase character

Strong passwords protect systems from being hacked through brute force methods.

Requiring at least one non-alphabetic character increases the search space beyond pure dictionary words, which makes the resulting password harder to crack.

Forcing users to choose an excessively complex password, e.g. some combination of upper-case, lower-case, numbers, and special characters, has a negative impact. It places an extra burden on users and many will use predictable patterns (for example, a capital letter in the first position, followed by lowercase letters, then one or two numbers, and a ""special character"" at the end). Attackers know this, so dictionary attacks will often contain these common patterns and use the most common substitutions like, $ for s, @ for a, 1 for l, 0 for o.

Solution:
Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?(minclass|[dulo]credit)b' /usr/share/pam-configs/*

Edit any returned files and remove the minclass dcredit ucredit lcredit and ocredit arguments from the pam_pwquality.so line(s)

Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line(s) to set complexity according to local site policy:

 - minclass = _N_
 - dcredit = _N_ # Value should be either 0 or a number proceeded by a minus ( - ) symbol
 - ucredit = -1 # Value should be either 0 or a number proceeded by a minus ( - ) symbol
 - ocredit = -1 # Value should be either 0 or a number proceeded by a minus ( - ) symbol
 - lcredit = -1 # Value should be either 0 or a number proceeded by a minus ( - ) symbol

Example 1 - Set minclass = 3 :

#!/usr/bin/env bash

{
   sed -ri 's/^s*minclasss*=/# &amp;/' /etc/security/pwquality.conf
   sed -ri 's/^s*[dulo]credits*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""minclass = 3"" > /etc/security/pwquality.conf.d/50-pwcomplexity.conf
}

Example 2 - set dcredit = -1 ucredit = -1 and lcredit = -1 :

#!/usr/bin/env bash

{
   sed -ri 's/^s*minclasss*=/# &amp;/' /etc/security/pwquality.conf
   sed -ri 's/^s*[dulo]credits*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '%s
' ""dcredit = -1"" ""ucredit = -1"" ""lcredit = -1"" > /etc/security/pwquality.conf.d/50-pwcomplexity.conf
}

Impact:

Passwords that are too complex in nature make it harder for users to remember, leading to bad practices. In addition, composition requirements provide no defense against common attack types such as social engineering or insecure storage of passwords

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1M,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - ocredit
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

-------------------------
FAILED - ucredit
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

-------------------------
FAILED - lcredit
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

-------------------------
FAILED - dcredit
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf","Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?(minclass|[dulo]credit)b' /usr/share/pam-configs/*

Edit any returned files and remove the minclass dcredit ucredit lcredit and ocredit arguments from the pam_pwquality.so line(s)

Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line(s) to set complexity according to local site policy:

 - minclass = _N_
 - dcredit = _N_ # Value should be either 0 or a number proceeded by a minus ( - ) symbol
 - ucredit = -1 # Value should be either 0 or a number proceeded by a minus ( - ) symbol
 - ocredit = -1 # Value should be either 0 or a number proceeded by a minus ( - ) symbol
 - lcredit = -1 # Value should be either 0 or a number proceeded by a minus ( - ) symbol

Example 1 - Set minclass = 3 :

#!/usr/bin/env bash

{
   sed -ri 's/^s*minclasss*=/# &amp;/' /etc/security/pwquality.conf
   sed -ri 's/^s*[dulo]credits*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""minclass = 3"" > /etc/security/pwquality.conf.d/50-pwcomplexity.conf
}

Example 2 - set dcredit = -1 ucredit = -1 and lcredit = -1 :

#!/usr/bin/env bash

{
   sed -ri 's/^s*minclasss*=/# &amp;/' /etc/security/pwquality.conf
   sed -ri 's/^s*[dulo]credits*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '%s
' ""dcredit = -1"" ""ucredit = -1"" ""lcredit = -1"" > /etc/security/pwquality.conf.d/50-pwcomplexity.conf
}

Impact:

Passwords that are too complex in nature make it harder for users to remember, leading to bad practices. In addition, composition requirements provide no defense against common attack types such as social engineering or insecure storage of passwords","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.4 Ensure password same consecutive characters is configured"" : [FAILED]

The pwquality maxrepeat option sets the maximum number of allowed same consecutive characters in a new password.

Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

Password complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised.

Solution:
Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set maxrepeat to 3 or less and not 0 Ensure setting conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*maxrepeats*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""maxrepeat = 3"" > /etc/security/pwquality.conf.d/50-pwrepeat.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?maxrepeatb' /usr/share/pam-configs/*

Edit any returned files and remove the maxrepeat argument from the pam_pwquality.so line(s):

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - pwquality - maxrepeat
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

-------------------------
PASSED - common-password maxrepeat
No matching files were found","Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set maxrepeat to 3 or less and not 0 Ensure setting conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*maxrepeats*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""maxrepeat = 3"" > /etc/security/pwquality.conf.d/50-pwrepeat.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?maxrepeatb' /usr/share/pam-configs/*

Edit any returned files and remove the maxrepeat argument from the pam_pwquality.so line(s):","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.5 Ensure password maximum sequential characters is configured"" : [FAILED]

The pwquality maxsequence option sets the maximum length of monotonic character sequences in the new password. Examples of such sequence are 12345 or fedcb The check is disabled if the value is 0

Note: Most such passwords will not pass the simplicity check unless the sequence is only a minor part of the password.

Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

Password complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised.

Solution:
Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set maxsequence to 3 or less and not 0 Ensure setting conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*maxsequences*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""maxsequence = 3"" > /etc/security/pwquality.conf.d/50-pwmaxsequence.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?maxsequenceb' /usr/share/pam-configs/*

Edit any returned files and remove the maxsequence argument from the pam_pwquality.so line(s):

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - pwquality - maxsequence
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

-------------------------
PASSED - common-password maxsequence
No matching files were found","Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set maxsequence to 3 or less and not 0 Ensure setting conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*maxsequences*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""maxsequence = 3"" > /etc/security/pwquality.conf.d/50-pwmaxsequence.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?maxsequenceb' /usr/share/pam-configs/*

Edit any returned files and remove the maxsequence argument from the pam_pwquality.so line(s):","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.6 Ensure password dictionary check is enabled"" : [FAILED]

The pwquality dictcheck option sets whether to check for the words from the cracklib dictionary.

If the operating system allows the user to select passwords based on dictionary words, this increases the chances of password compromise by increasing the opportunity for successful guesses, and brute-force attacks.

Solution:
Edit any file ending inconf in the /etc/security/pwquality.conf.d/ directory and/or the file /etc/security/pwquality.conf and comment out or remove any instance of dictcheck = 0 :

Example:

# sed -ri 's/^s*dictchecks*=/# &amp;/' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?dictcheckb' /usr/share/pam-configs/*

Edit any returned files and remove the dictcheck argument from the pam_pwquality.so line(s)

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - Verify that the dictcheck option is not set to 0 (disabled) in a pwquality configuration file
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

-------------------------
PASSED - dictcheck=0
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwquality\.so\h+([^#\r]+\h+)?dictcheck\h*=\h*0\b""","Edit any file ending inconf in the /etc/security/pwquality.conf.d/ directory and/or the file /etc/security/pwquality.conf and comment out or remove any instance of dictcheck = 0 :

Example:

# sed -ri 's/^s*dictchecks*=/# &amp;/' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?dictcheckb' /usr/share/pam-configs/*

Edit any returned files and remove the dictcheck argument from the pam_pwquality.so line(s)","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.7 Ensure password quality checking is enforced"" : [FAILED]

The pam_pwquality module can be configured to either reject a password if it fails the checks, or only print a warning.

This is configured by setting the enforcing=<N> argument. If nonzero, a password will be rejected if it fails the checks, otherwise only a warning message will be provided.

This setting applies only to the pam_pwquality module and possibly other applications that explicitly change their behavior based on it. It does not affect pwmake(1) and pwscore(1).

Strong passwords help protect systems from password attacks. Types of password attacks include dictionary attacks, which attempt to use common words and phrases, and brute force attacks, which try every possible combination of characters. Also attackers may try to obtain the account database so they can use tools to discover the accounts and passwords.

Solution:
Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?enforcing=0b' /usr/share/pam-configs/*

Edit any returned files and remove the enforcing=0 argument from the pam_pwquality.so line(s)

Edit /etc/security/pwquality.conf and all files ending inconf in the /etc/security/pwquality.conf.d/ directory and remove or comment out any line containing the enforcing = 0 argument:

Example:

# sed -ri 's/^s*enforcings*=s*0/# &amp;/' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - common-password enforcing=0
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwquality\.so\h+([^#\r]+\h+)?enforcing\h*=\h*0\b""

-------------------------
FAILED - pwquality.conf enforcing=0
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf","Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?enforcing=0b' /usr/share/pam-configs/*

Edit any returned files and remove the enforcing=0 argument from the pam_pwquality.so line(s)

Edit /etc/security/pwquality.conf and all files ending inconf in the /etc/security/pwquality.conf.d/ directory and remove or comment out any line containing the enforcing = 0 argument:

Example:

# sed -ri 's/^s*enforcings*=s*0/# &amp;/' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.8 Ensure password quality is enforced for the root user"" : [FAILED]

If the pwquality enforce_for_root option is enabled, the module will return error on failed check even if the user changing the password is root.

This option is off by default which means that just the message about the failed check is printed but root can change the password anyway.

Note: The root is not asked for an old password so the checks that compare the old and new password are not performed.

Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

Password complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised.

Solution:
Edit or add the following line in a *.conf file in /etc/security/pwquality.conf.d or in /etc/security/pwquality.conf :

Example:

#!/urs/bin/env bash

{
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s
' ""enforce_for_root"" > /etc/security/pwquality.conf.d/50-pwroot.conf
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
expect: (?i)^\h*enforce_for_root\b
file: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf
min_occurrences: 1
regex: (?i)^\h*enforce_for_root\b
string_required: NO

Actual Value:
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf","Edit or add the following line in a *.conf file in /etc/security/pwquality.conf.d or in /etc/security/pwquality.conf :

Example:

#!/urs/bin/env bash

{
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s
' ""enforce_for_root"" > /etc/security/pwquality.conf.d/50-pwroot.conf
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.3.1 Ensure password history remember is configured"" : [FAILED]

The /etc/security/opasswd file stores the users' old passwords and can be checked to ensure that users are not recycling recent passwords. The number of passwords remembered is set via the remember argument value in set for the pam_pwhistory module.

 - remember=<N> - <N> is the number of old passwords to remember

Requiring users not to reuse their passwords make it less likely that an attacker will be able to guess the password or use a compromised password.

Note: These change only apply to accounts configured on the local system.

Solution:
Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_pwhistory.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files and edit or add the remember= argument, with a value of 24 or more, that meets local site policy to the pam_pwhistory line in the Password section:

Example File:

Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password:
   requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes remember=<N>**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable pwhistory

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
expect: (?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwhistory\.so\h+([^#\r]+\h+)?remember=(2[4-9]|[3-9][0-9]|[1-9][0-9]{2,})\b
file: /etc/pam.d/common-password
regex: (?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwhistory\.so\h+([^#\r]+\h+)?remember=

Actual Value:
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwhistory\.so\h+([^#\r]+\h+)?remember=""","Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_pwhistory.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files and edit or add the remember= argument, with a value of 24 or more, that meets local site policy to the pam_pwhistory line in the Password section:

Example File:

Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password:
   requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes remember=<N>**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable pwhistory","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.3.2 Ensure password history is enforced for the root user"" : [FAILED]

If the pwhistory enforce_for_root option is enabled, the module will enforce password history for the root user as well

Requiring users not to reuse their passwords make it less likely that an attacker will be able to guess the password or use a compromised password

Note: These change only apply to accounts configured on the local system.

Solution:
Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_pwhistory.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files and add the enforce_for_root argument to the pam_pwhistory line in the Password section:

Example File:

Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password:
   requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes enforce_for_root**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable pwhistory

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
expect: (?i)^\h*password\h+[^#\n\r]+\h+pam_pwhistory\.so\h+([^#\n\r]+\h+)?enforce_for_root\b
file: /etc/pam.d/common-password
regex: (?i)^\h*password\h+[^#\n\r]+\h+pam_pwhistory\.so\h+([^#\n\r]+\h+)?enforce_for_root\b

Actual Value:
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+[^#\n\r]+\h+pam_pwhistory\.so\h+([^#\n\r]+\h+)?enforce_for_root\b""","Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_pwhistory.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files and add the enforce_for_root argument to the pam_pwhistory line in the Password section:

Example File:

Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password:
   requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes enforce_for_root**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable pwhistory","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.3.3 Ensure pam_pwhistory includes use_authtok"" : [FAILED]

use_authtok - When password changing enforce the module to set the new password to the one provided by a previously stacked password module

use_authtok allows multiple pam modules to confirm a new password before it is accepted.

Solution:
Edit any returned files and add the use_authtok argument to the pam_pwhistory line in the Password section:

Example File:

Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password:
   requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes use_authtok**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable pwhistory

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1

Policy Value:
expect: (?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwhistory\.so(\h+[^#\n\r]+)?\h+use_authtok\b
file: /etc/pam.d/common-password
regex: (?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwhistory\.so(\h+[^#\n\r]+)?\h+use_authtok\b

Actual Value:
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwhistory\.so(\h+[^#\n\r]+)?\h+use_authtok\b""","Edit any returned files and add the use_authtok argument to the pam_pwhistory line in the Password section:

Example File:

Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password:
   requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes use_authtok**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable pwhistory","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.4.1 Ensure pam_unix does not include nullok"" : [FAILED]

The nullok argument overrides the default action of pam_unix.so to not permit the user access to a service if their official password is blank.

Using a strong password is essential to helping protect personal and sensitive information from unauthorized access

Solution:
Run the following command:

# grep -PH -- '^h*([^#
r]+h+)?pam_unix.soh+([^#
r]+h+)?nullokb' /usr/share/pam-configs/*

Edit any files returned and remove the nullok argument for the pam_unix lines

Example File:

Name: Unix authentication
Default: yes
Priority: 256
Auth-Type: Primary
Auth:
        [success=end default=ignore] pam_unix.so try_first_pass # <- **ensure line does not include nullok nullok**
Auth-Initial:
        [success=end default=ignore] pam_unix.so # <- **ensure line does not include nullok nullok**
Account-Type: Primary
Account:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Account-Initial:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Session-Type: Additional
Session:
        required pam_unix.so
Session-Initial:
        required pam_unix.so
Password-Type: Primary
Password:
        [success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt
Password-Initial:
        [success=end default=ignore] pam_unix.so obscure yescrypt

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <EDITED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix

Note: If custom files are being used, the corresponding files in /etc/pam.d/ would need to be edited directly, and the pam-auth-update --enable <EDITED_PROFILE_NAME> command skipped

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - common-session-noninteractive nullok
The file ""/etc/pam.d/common-session-noninteractive"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+nullok\b""

-------------------------
PASSED - common-password nullok
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+nullok\b""

-------------------------
FAILED - common-auth nullok
Non-compliant file(s):
      /etc/pam.d/common-auth - regex '(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+nullok\b' found - expect '(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+nullok\b' found in the following lines:
          17: auth	[success=1 default=ignore]	pam_unix.so nullok

-------------------------
PASSED - common-account nullok
The file ""/etc/pam.d/common-account"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+nullok\b""

-------------------------
PASSED - common-session nullok
The file ""/etc/pam.d/common-session"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+nullok\b""","Run the following command:

# grep -PH -- '^h*([^#
r]+h+)?pam_unix.soh+([^#
r]+h+)?nullokb' /usr/share/pam-configs/*

Edit any files returned and remove the nullok argument for the pam_unix lines

Example File:

Name: Unix authentication
Default: yes
Priority: 256
Auth-Type: Primary
Auth:
        [success=end default=ignore] pam_unix.so try_first_pass # <- **ensure line does not include nullok nullok**
Auth-Initial:
        [success=end default=ignore] pam_unix.so # <- **ensure line does not include nullok nullok**
Account-Type: Primary
Account:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Account-Initial:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Session-Type: Additional
Session:
        required pam_unix.so
Session-Initial:
        required pam_unix.so
Password-Type: Primary
Password:
        [success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt
Password-Initial:
        [success=end default=ignore] pam_unix.so obscure yescrypt

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <EDITED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix

Note: If custom files are being used, the corresponding files in /etc/pam.d/ would need to be edited directly, and the pam-auth-update --enable <EDITED_PROFILE_NAME> command skipped","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.4.2 Ensure pam_unix does not include remember"" : [PASSED]

The remember=n argument saves the last n passwords for each user in /etc/security/opasswd in order to force password change history and keep the user from alternating between the same password too frequently. The MD5 password hash algorithm is used for storing the old passwords. Instead of this option the pam_pwhistory module should be used. The pam_pwhistory module saves the last n passwords for each user in /etc/security/opasswd using the password hash algorithm set on the pam_unix module. This allows for the yescrypt or sha512 hash algorithm to be used.

The remember=n argument should be removed to ensure a strong password hashing algorithm is being used. A stronger hash provides additional protection to the system by increasing the level of effort needed for an attacker to successfully determine local user's old passwords stored in /etc/security/opasswd

Solution:
Run the following command:

# grep -PH -- '^h*([^#
r]+h+)?pam_unix.soh+([^#
r]+h+)?rememberb' /usr/share/pam-configs/*

Edit any files returned and remove the remember=_<N>_ argument for the pam_unix lines

Example output:

[success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt remember=5 # **<- remove remember=<N>**
[success=end default=ignore] pam_unix.so obscure yescrypt remember=5 # **<- remove remember=<N>**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <EDITED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix

Note: If custom files are being used, the corresponding files in /etc/pam.d/ would need to be edited directly, and the pam-auth-update --enable <EDITED_PROFILE_NAME> command skipped

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - common-session remember
The file ""/etc/pam.d/common-session"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+remember=\b""

-------------------------
PASSED - common-password remember
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+remember=\b""

-------------------------
PASSED - common-session-noninteractive remember
The file ""/etc/pam.d/common-session-noninteractive"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+remember=\b""

-------------------------
PASSED - common-auth remember
The file ""/etc/pam.d/common-auth"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+remember=\b""

-------------------------
PASSED - common-account remember
The file ""/etc/pam.d/common-account"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+remember=\b""","Run the following command:

# grep -PH -- '^h*([^#
r]+h+)?pam_unix.soh+([^#
r]+h+)?rememberb' /usr/share/pam-configs/*

Edit any files returned and remove the remember=_<N>_ argument for the pam_unix lines

Example output:

[success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt remember=5 # **<- remove remember=<N>**
[success=end default=ignore] pam_unix.so obscure yescrypt remember=5 # **<- remove remember=<N>**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <EDITED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix

Note: If custom files are being used, the corresponding files in /etc/pam.d/ would need to be edited directly, and the pam-auth-update --enable <EDITED_PROFILE_NAME> command skipped","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm"" : [PASSED]

A cryptographic hash function converts an arbitrary-length input into a fixed length output. Password hashing performs a one-way transformation of a password, turning the password into another string, called the hashed password.

The pam_unix module can be configured to use one of the following hashing algorithms for user's passwords:

 - md5 - When a user changes their password next, encrypt it with the MD5 algorithm.
 - bigcrypt - When a user changes their password next, encrypt it with the DEC C2 algorithm.
 - sha256 - When a user changes their password next, encrypt it with the SHA256 algorithm. The SHA256 algorithm must be supported by the crypt(3) function.
 - sha512 - When a user changes their password next, encrypt it with the SHA512 algorithm. The SHA512 algorithm must be supported by the crypt(3) function.
 - blowfish - When a user changes their password next, encrypt it with the blowfish algorithm. The blowfish algorithm must be supported by the crypt(3) function.
 - gost_yescrypt - When a user changes their password next, encrypt it with the gost-yescrypt algorithm. The gost-yescrypt algorithm must be supported by the crypt(3) function.
 - yescrypt - When a user changes their password next, encrypt it with the yescrypt algorithm. The yescrypt algorithm must be supported by the crypt(3) function.

The SHA-512 and yescrypt algorithms provide a stronger hash than other algorithms used by Linux for password hash generation. A stronger hash provides additional protection to the system by increasing the level of effort needed for an attacker to successfully determine local user passwords.

Note: These changes only apply to the local system.

Solution:
Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_unix.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files and edit or add a strong hashing algorithm, either sha512 or yescrypt, that meets local site policy to the pam_unix lines in the Password section:

Example File:

Name: Unix authentication
Default: yes
Priority: 256
Auth-Type: Primary # <- Start of ""Auth"" section
Auth:
        [success=end default=ignore] pam_unix.so try_first_pass
Auth-Initial:
        [success=end default=ignore] pam_unix.so
Account-Type: Primary # <- Start of ""Account"" section
Account:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Account-Initial:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Session-Type: Additional # <- Start of ""Session"" section
Session:
        required pam_unix.so
Session-Initial:
        required pam_unix.so
Password-Type: Primary # <- Start of ""Password"" section
Password:
        [success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt # <- **ensure hashing algorithm is either sha512 or yescrypt**
Password-Initial:
        [success=end default=ignore] pam_unix.so obscure yescrypt # <- **ensure hashing algorithm is either sha512 or yescrypt**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1

Policy Value:
expect: (?i)^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?(SHA512|YESCRYPT)\b
file: /etc/pam.d/common-password
regex: (?i)^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?(SHA512|YESCRYPT)\b

Actual Value:
Compliant file(s):
      /etc/pam.d/common-password - regex '(?i)^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?(SHA512|YESCRYPT)\b' found - expect '(?i)^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?(SHA512|YESCRYPT)\b' found in the following lines:
          25: password	[success=1 default=ignore]	pam_unix.so obscure yescrypt","Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_unix.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files and edit or add a strong hashing algorithm, either sha512 or yescrypt, that meets local site policy to the pam_unix lines in the Password section:

Example File:

Name: Unix authentication
Default: yes
Priority: 256
Auth-Type: Primary # <- Start of ""Auth"" section
Auth:
        [success=end default=ignore] pam_unix.so try_first_pass
Auth-Initial:
        [success=end default=ignore] pam_unix.so
Account-Type: Primary # <- Start of ""Account"" section
Account:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Account-Initial:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Session-Type: Additional # <- Start of ""Session"" section
Session:
        required pam_unix.so
Session-Initial:
        required pam_unix.so
Password-Type: Primary # <- Start of ""Password"" section
Password:
        [success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt # <- **ensure hashing algorithm is either sha512 or yescrypt**
Password-Initial:
        [success=end default=ignore] pam_unix.so obscure yescrypt # <- **ensure hashing algorithm is either sha512 or yescrypt**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.4.4 Ensure pam_unix includes use_authtok"" : [FAILED]

use_authtok - When password changing enforce the module to set the new password to the one provided by a previously stacked password module

use_authtok allows multiple pam modules to confirm a new password before it is accepted.

Solution:
Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_unix.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files add use_authtok to the pam_unix line in the Password section under Password: subsection:

Note: The if the file's Password section includes a Password-Initial: subsection, use_authtok should not be added to the pam_unix line in the Password-Initial: subsection

Example File:

Name: Unix authentication
Default: yes
Priority: 256
Auth-Type: Primary # <- Start of ""Auth"" section
Auth:
        [success=end default=ignore] pam_unix.so try_first_pass
Auth-Initial:
        [success=end default=ignore] pam_unix.so
Account-Type: Primary # <- Start of ""Account"" section
Account:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Account-Initial:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Session-Type: Additional # <- Start of ""Session"" section
Session:
        required pam_unix.so
Session-Initial:
        required pam_unix.so
Password-Type: Primary # <- Start of ""Password"" section
Password:
        [success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt # <- **ensure line includes use_authtok**
Password-Initial:
        [success=end default=ignore] pam_unix.so obscure yescrypt # <- **Password-Initial: subsection does not include use_authtok

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1

Policy Value:
expect: (?i)^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?use_authtok\b
file: /etc/pam.d/common-password
regex: (?i)^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?use_authtok\b

Actual Value:
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?use_authtok\b""","Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_unix.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files add use_authtok to the pam_unix line in the Password section under Password: subsection:

Note: The if the file's Password section includes a Password-Initial: subsection, use_authtok should not be added to the pam_unix line in the Password-Initial: subsection

Example File:

Name: Unix authentication
Default: yes
Priority: 256
Auth-Type: Primary # <- Start of ""Auth"" section
Auth:
        [success=end default=ignore] pam_unix.so try_first_pass
Auth-Initial:
        [success=end default=ignore] pam_unix.so
Account-Type: Primary # <- Start of ""Account"" section
Account:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Account-Initial:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Session-Type: Additional # <- Start of ""Session"" section
Session:
        required pam_unix.so
Session-Initial:
        required pam_unix.so
Password-Type: Primary # <- Start of ""Password"" section
Password:
        [success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt # <- **ensure line includes use_authtok**
Password-Initial:
        [success=end default=ignore] pam_unix.so obscure yescrypt # <- **Password-Initial: subsection does not include use_authtok

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.1.1 Ensure password expiration is configured"" : [FAILED]

The PASS_MAX_DAYS parameter in /etc/login.defs allows an administrator to force passwords to expire once they reach a defined age.

PASS_MAX_DAYS

<N>

- The maximum number of days a password may be used. If the password is older than this, a password change will be forced. If not specified, -1 will be assumed (which disables the restriction).

The window of opportunity for an attacker to leverage compromised credentials or successfully compromise credentials via an online brute force attack is limited by the age of the password. Therefore, reducing the maximum age of a password also reduces an attacker's window of opportunity.

We recommend a yearly password change. This is primarily because for all their good intentions users will share credentials across accounts. Therefore, even if a breach is publicly identified, the user may not see this notification, or forget they have an account on that site. This could leave a shared credential vulnerable indefinitely. Having an organizational policy of a 1-year (annual) password expiration is a reasonable compromise to mitigate this with minimal user burden.

Solution:
Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs :

PASS_MAX_DAYS 365

Modify user parameters for all users with a password set to match:

# chage --maxdays 365 <user>

Edit /etc/login.defs and set PASS_MAX_DAYS to a value greater than 0 that follows local site policy:

Example:

PASS_MAX_DAYS 365

Run the following command to modify user parameters for all users with a password set to a maximum age no greater than 356 or less than 1 that follows local site policy:

# chage --maxdays <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($5 > 365 || $5 < 1)system (""chage --maxdays 365 "" $1)}' /etc/shadow

Impact:

The password expiration must be greater than the minimum days between password changes or users will be unable to change their password.

Excessive password expiration requirements do more harm than good, because these requirements make users select predictable passwords, composed of sequential words and numbers that are closely related to each other. In these cases, the next password can be predicted based on the previous one (incrementing a number used in the password forexample). Also, password expiration requirements offer no containment benefits because attackers will often use credentials as soon as they compromise them. Instead, immediate password changes should be based on key events including, but not limited to:

 - Indication of compromise
 - Change of user roles
 - When a user leaves the organization.

Not only does changing passwords every few weeks or months frustrate the user, it's been suggested that it does more harm than good, because it could lead to bad practices by the user such as adding a character to the end of their existing password.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - shadow password max days
Non-compliant file(s):
      /etc/shadow - regex '^[^:]+:[^!*]' found - expect '^([^:]*:){4}([1-9]|[1-9][0-9]|[12][0-9]{2}|3[0-5][0-9]|36[0-5]):' not found in the following lines:
          31: anapaya:$y$j9T$ld4wFdA6EdhIUxC5QRGFR.$mRDFnnG03qpGMXd785DXjqcUx09.41n97bj3Kthsvv2:19858:0:99999:7:::

-------------------------
FAILED - login.defs
Non-compliant file(s):
      /etc/login.defs - regex '(?i)^[\s]*PASS_MAX_DAYS[\s]' found - expect '(?i)^[\s]*PASS_MAX_DAYS[\s]+([1-9]|[1-9][0-9]|[12][0-9]{2}|3[0-5][0-9]|36[0-5])[\s]*$' not found in the following lines:
          165: PASS_MAX_DAYS	99999","Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs :

PASS_MAX_DAYS 365

Modify user parameters for all users with a password set to match:

# chage --maxdays 365 <user>

Edit /etc/login.defs and set PASS_MAX_DAYS to a value greater than 0 that follows local site policy:

Example:

PASS_MAX_DAYS 365

Run the following command to modify user parameters for all users with a password set to a maximum age no greater than 356 or less than 1 that follows local site policy:

# chage --maxdays <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($5 > 365 || $5 < 1)system (""chage --maxdays 365 "" $1)}' /etc/shadow

Impact:

The password expiration must be greater than the minimum days between password changes or users will be unable to change their password.

Excessive password expiration requirements do more harm than good, because these requirements make users select predictable passwords, composed of sequential words and numbers that are closely related to each other. In these cases, the next password can be predicted based on the previous one (incrementing a number used in the password forexample). Also, password expiration requirements offer no containment benefits because attackers will often use credentials as soon as they compromise them. Instead, immediate password changes should be based on key events including, but not limited to:

 - Indication of compromise
 - Change of user roles
 - When a user leaves the organization.

Not only does changing passwords every few weeks or months frustrate the user, it's been suggested that it does more harm than good, because it could lead to bad practices by the user such as adding a character to the end of their existing password.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.1.3 Ensure password expiration warning days is configured"" : [PASSED]

The PASS_WARN_AGE parameter in /etc/login.defs allows an administrator to notify users that their password will expire in a defined number of days.

PASS_WARN_AGE

<N>

- The number of days warning given before a password expires. A zero means warning is given only upon the day of expiration, a negative value means no warning is given. If not specified, no warning will be provided.

Providing an advance warning that a password will be expiring gives users time to think of a secure password. Users caught unaware may choose a simple password or write it down where it may be discovered.

Solution:
Edit /etc/login.defs and set PASS_WARN_AGE to a value of 7 or more that follows local site policy:

Example:

PASS_WARN_AGE 7

Run the following command to modify user parameters for all users with a password set to a minimum warning to 7 or more days that follows local site policy:

# chage --warndays <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($6 < 7)system (""chage --warndays 7 "" $1)}' /etc/shadow

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|4.4,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - login.defs
Compliant file(s):
      /etc/login.defs - regex '(?i)^[\s]*PASS_WARN_AGE[\s]+' found - expect '(?i)^[\s]*PASS_WARN_AGE[\s]+([7-9]|[1-9][0-9]+)[\s]*$' found in the following lines:
          167: PASS_WARN_AGE	7

-------------------------
PASSED - shadow password warn age
Compliant file(s):
      /etc/shadow - regex '^[^:]+:[^!*]' found - expect '^([^:]*:){5}([7-9]|[1-9][0-9]+):' found in the following lines:
          31: anapaya:$y$j9T$ld4wFdA6EdhIUxC5QRGFR.$mRDFnnG03qpGMXd785DXjqcUx09.41n97bj3Kthsvv2:19858:0:99999:7:::","Edit /etc/login.defs and set PASS_WARN_AGE to a value of 7 or more that follows local site policy:

Example:

PASS_WARN_AGE 7

Run the following command to modify user parameters for all users with a password set to a minimum warning to 7 or more days that follows local site policy:

# chage --warndays <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($6 < 7)system (""chage --warndays 7 "" $1)}' /etc/shadow","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.1.4 Ensure strong password hashing algorithm is configured"" : [PASSED]

A cryptographic hash function converts an arbitrary-length input into a fixed length output. Password hashing performs a one-way transformation of a password, turning the password into another string, called the hashed password.

ENCRYPT_METHOD (string) - This defines the system default encryption algorithm for encrypting passwords (if no algorithm are specified on the command line). It can take one of these values:

 - MD5 - MD5-based algorithm will be used for encrypting password
 - SHA256 - SHA256-based algorithm will be used for encrypting password
 - SHA512 - SHA512-based algorithm will be used for encrypting password
 - BCRYPT - BCRYPT-based algorithm will be used for encrypting password
 - YESCRYPT - YESCRYPT-based algorithm will be used for encrypting password
 - DES - DES-based algorithm will be used for encrypting password (default)

Note:

 - This parameter overrides the deprecated MD5_CRYPT_ENAB variable.
 - This parameter will only affect the generation of group passwords.
 - The generation of user passwords is done by PAM and subject to the PAM configuration.
 - It is recommended to set this variable consistently with the PAM configuration.

The SHA-512 and yescrypt algorithms provide a stronger hash than other algorithms used by Linux for password hash generation. A stronger hash provides additional protection to the system by increasing the level of effort needed for an attacker to successfully determine local group passwords.

Solution:
Edit /etc/login.defs and set the ENCRYPT_METHOD to SHA512 or YESCRYPT :

ENCRYPT_METHOD <HASHING_ALGORITHM>

Example:

ENCRYPT_METHOD YESCRYPT

Note:

 - This only effects local groups' passwords created after updating the file to use sha512 or yescrypt
 - If it is determined that the password algorithm being used is not sha512 or yescrypt once it is changed, it is recommended that all group passwords be updated to use the stronger hashing algorithm.
 - It is recommended that the chosen hashing algorithm is consistent across /etc/login.defs and the PAM configuration

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1

Policy Value:
expect: ^\s*ENCRYPT_METHOD\s+(?i)(SHA512|YESCRYPT)(?-i)\s*$
file: /etc/login.defs
regex: ^\s*ENCRYPT_METHOD\s+

Actual Value:
Compliant file(s):
      /etc/login.defs - regex '^\s*ENCRYPT_METHOD\s+' found - expect '^\s*ENCRYPT_METHOD\s+(?i)(SHA512|YESCRYPT)(?-i)\s*$' found in the following lines:
          284: ENCRYPT_METHOD SHA512","Edit /etc/login.defs and set the ENCRYPT_METHOD to SHA512 or YESCRYPT :

ENCRYPT_METHOD <HASHING_ALGORITHM>

Example:

ENCRYPT_METHOD YESCRYPT

Note:

 - This only effects local groups' passwords created after updating the file to use sha512 or yescrypt
 - If it is determined that the password algorithm being used is not sha512 or yescrypt once it is changed, it is recommended that all group passwords be updated to use the stronger hashing algorithm.
 - It is recommended that the chosen hashing algorithm is consistent across /etc/login.defs and the PAM configuration","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.1.5 Ensure inactive password lock is configured"" : [FAILED]

User accounts that have been inactive for over a given period of time can be automatically disabled.

INACTIVE - Defines the number of days after the password exceeded its maximum age where the user is expected to replace this password.

The value is stored in the shadow password file. An input of 0 will disable an expired password with no delay. An input of -1 will blank the respective field in the shadow password file.

Inactive accounts pose a threat to system security since the users are not logging in to notice failed login attempts or other anomalies.

Solution:
Run the following command to set the default password inactivity period to 45 days or less that meets local site policy:

# useradd -D -f <N>

Example:

# useradd -D -f 45

Run the following command to modify user parameters for all users with a password set to a inactive age of 45 days or less that follows local site policy:

# chage --inactive <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($7 > 45 || $7 < 0)system (""chage --inactive 45 "" $1)}' /etc/shadow

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - useradd
The command '/sbin/useradd -D | /bin/grep 'INACTIVE'' returned : 

INACTIVE=-1

-------------------------
FAILED - shadow inactive password lock
Non-compliant file(s):
      /etc/shadow - regex '^[^:]+:[^!*]' found - expect '^([^:]*:){6}([1-9]|[123][0-9]|4[0-5]):' not found in the following lines:
          31: anapaya:$y$j9T$ld4wFdA6EdhIUxC5QRGFR.$mRDFnnG03qpGMXd785DXjqcUx09.41n97bj3Kthsvv2:19858:0:99999:7:::","Run the following command to set the default password inactivity period to 45 days or less that meets local site policy:

# useradd -D -f <N>

Example:

# useradd -D -f 45

Run the following command to modify user parameters for all users with a password set to a inactive age of 45 days or less that follows local site policy:

# chage --inactive <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($7 > 45 || $7 < 0)system (""chage --inactive 45 "" $1)}' /etc/shadow","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.1.6 Ensure all users last password change date is in the past"" : [PASSED]

All users should have a password change date in the past.

If a user's recorded password change date is in the future, then they could bypass any set password expiration.

Solution:
Investigate any users with a password change date in the future and correct them. Locking the account, expiring the password, or resetting the password manually may be appropriate.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

Pass","Investigate any users with a password change date in the future and correct them. Locking the account, expiring the password, or resetting the password manually may be appropriate.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.1 Ensure root is the only UID 0 account"" : [PASSED]

Any account with UID 0 has superuser privileges on the system.

This access must be limited to only the default root account and only from the system console. Administrative access must be through an unprivileged account using an approved mechanism as noted in Item 5.6 Ensure access to the su command is restricted.

Solution:
Run the following command to change the root account UID to 0 :

# usermod -u 0 root

Modify any users other than root with UID 0 and assign them a new UID.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.5,800-53|AC-6(5),800-53r5|AC-6(5),CN-L3|8.1.10.6(a),CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
name: passwd_zero_uid

Actual Value:
No issues found.","Run the following command to change the root account UID to 0 :

# usermod -u 0 root

Modify any users other than root with UID 0 and assign them a new UID.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.2 Ensure root is the only GID 0 account"" : [PASSED]

The usermod command can be used to specify which group the root account belongs to. This affects permissions of files that are created by the root account.

Using GID 0 for the root account helps prevent root -owned files from accidentally becoming accessible to non-privileged users.

Solution:
Run the following command to set the root user's GID to 0 :

# usermod -g 0 root

Run the following command to set the root group's GID to 0 :

# groupmod -g 0 root

Remove any users other than the root user with GID 0 or assign them a new GID if appropriate.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **
 - * Correctly configured * :
  - No unauthorized user's GID is: ""0""
  - User ""root"" GID is correctly set to: ""0""","Run the following command to set the root user's GID to 0 :

# usermod -g 0 root

Run the following command to set the root group's GID to 0 :

# groupmod -g 0 root

Remove any users other than the root user with GID 0 or assign them a new GID if appropriate.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.3 Ensure group root is the only GID 0 group"" : [PASSED]

The groupmod command can be used to specify which group the root group belongs to. This affects permissions of files that are group owned by the root group.

Using GID 0 for the root group helps prevent root group owned files from accidentally becoming accessible to non-privileged users.

Solution:
Run the following command to set the root group's GID to 0 :

# groupmod -g 0 root

Remove any groups other than the root group with GID 0 or assign them a new GID if appropriate.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
name: group_zero_gid

Actual Value:
No issues found.","Run the following command to set the root group's GID to 0 :

# groupmod -g 0 root

Remove any groups other than the root group with GID 0 or assign them a new GID if appropriate.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.4 Ensure root password is set"" : [FAILED]

There are a number of methods to access the root account directly. Without a password set any user would be able to gain access and thus control over the entire system.

Access to root should be secured at all times.

Solution:
Run the following command to set a password for the root user:

# passwd root

Impact:

If there are any automated processes that relies on access to the root account without authentication, they will fail after remediation.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /bin/passwd -S root | /bin/awk '$2 ~ /^P/ {print ""User: \"""" $1 ""\"" Password is set""}'
expect: (?i)^User: ""root"" Password is set$

Actual Value:
The command '/bin/passwd -S root | /bin/awk '$2 ~ /^P/ {print ""User: \"""" $1 ""\"" Password is set""}'' did not return any result","Run the following command to set a password for the root user:

# passwd root

Impact:

If there are any automated processes that relies on access to the root account without authentication, they will fail after remediation.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.5 Ensure root path integrity"" : [FAILED]

The root user can execute any command on the system and could be fooled into executing programs unintentionally if the PATH is not set correctly.

Including the current working directory (.) or other writable directory in root 's executable path makes it likely that an attacker can gain superuser access by forcing an administrator operating as root to execute a Trojan horse program.

Solution:
Correct or justify any:

 - Locations that are not directories
 - Empty directories ( :: )
 - Trailing ( : )
 - Current working directory ( )
 - Non root owned directories
 - Directories that less restrictive than mode 0755

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.7,800-53|CM-7(2),800-53r5|CM-7(2),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7(2),LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - * Reasons for audit failure * :

 - ""/snap/bin"" is not a directory","Correct or justify any:

 - Locations that are not directories
 - Empty directories ( :: )
 - Trailing ( : )
 - Current working directory ( )
 - Non root owned directories
 - Directories that less restrictive than mode 0755","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.6 Ensure root user umask is configured"" : [PASSED]

The user file-creation mode mask ( umask ) is used to determine the file permission for newly created directories and files. In Linux, the default permissions for any newly created directory is 0777 ( rwxrwxrwx ), and for any newly created file it is 0666 ( rw-rw-rw- ). The umask modifies the default Linux permissions by restricting (masking) these permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in the umask are cleared in the resulting file mode.

umask can be set with either Octal or Symbolic values:

 - Octal (Numeric) Value - Represented by either three or four digits. ie umask 0027 or umask 027 If a four digit umask is used, the first digit is ignored. The remaining three digits effect the resulting permissions for user, group, and world/other respectively.
 - Symbolic Value - Represented by a comma separated list for User u group g and world/other o The permissions listed are not masked by umask ie a umask set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask 027 This umask would set a newly created directory with file mode drwxr-x--- and a newly created file with file mode rw-r-----

root user Shell Configuration Files:

 - /root/.bash_profile - Is executed to configure the root users' shell before the initial command prompt. Is only read by login shells.
 - /root/.bashrc - Is executed for interactive shells. only read by a shell that's both interactive and non-login

umask is set by order of precedence. If umask is set in multiple locations, this order of precedence will determine the system's default umask

Order of precedence:

 - /root/.bash_profile
 - /root/.bashrc
 - The system default umask

Setting a secure value for umask ensures that users make a conscious choice about their file permissions. A permissive umask value could result in directories or files with excessive permissions that can be read and/or written to by unauthorized users.

Solution:
Edit /root/.bash_profile and /root/.bashrc and remove, comment out, or update any line with umask to be 0027 or more restrictive.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: (?i)^\h*umask\h+(([0-7][0-7][01][0-7]\b|[0-7][0-7][0-7][0-6]\b)|([0-7][01][0-7]\b|[0-7][0-7][0-6]\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\b)))
file: /root/.bash_profile /root/.bashrc
regex: (?i)^\h*umask\h+(([0-7][0-7][01][0-7]\b|[0-7][0-7][0-7][0-6]\b)|([0-7][01][0-7]\b|[0-7][0-7][0-6]\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\b)))

Actual Value:
The file ""/root/.bashrc"" does not contain ""(?i)^\h*umask\h+(([0-7][0-7][01][0-7]\b|[0-7][0-7][0-7][0-6]\b)|([0-7][01][0-7]\b|[0-7][0-7][0-6]\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\b)))""","Edit /root/.bash_profile and /root/.bashrc and remove, comment out, or update any line with umask to be 0027 or more restrictive.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.7 Ensure system accounts do not have a valid login shell"" : [FAILED]

There are a number of accounts provided with most distributions that are used to manage applications and are not intended to provide an interactive shell. Furthermore, a user may add special accounts that are not intended to provide an interactive shell.

It is important to make sure that accounts that are not being used by regular users are prevented from being used to provide an interactive shell. By default, most distributions set the password field for these accounts to an invalid string, but it is also recommended that the shell field in the password file be set to the nologin shell. This prevents the account from potentially being used to run any commands.

Solution:
Run the following command to set the shell for any service accounts returned by the audit to nologin :

# usermod -s $(command -v nologin) <user>

Example script:

#!/usr/bin/env bash

{
   l_valid_shells=""^($( awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   awk -v pat=""$l_valid_shells"" -F: '($1!~/^(root|halt|sync|shutdown|nfsnobody)$/ &amp;&amp; ($3<'""$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)""' || $3 == 65534) &amp;&amp; $(NF) ~ pat) {system (""usermod -s '""$(command -v nologin)""' "" $1)}' /etc/passwd
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^pass$

Actual Value:
The command script with multiple lines returned : 

Service account: ""scion"" has a valid shell: /bin/sh","Run the following command to set the shell for any service accounts returned by the audit to nologin :

# usermod -s $(command -v nologin) <user>

Example script:

#!/usr/bin/env bash

{
   l_valid_shells=""^($( awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   awk -v pat=""$l_valid_shells"" -F: '($1!~/^(root|halt|sync|shutdown|nfsnobody)$/ &amp;&amp; ($3<'""$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)""' || $3 == 65534) &amp;&amp; $(NF) ~ pat) {system (""usermod -s '""$(command -v nologin)""' "" $1)}' /etc/passwd
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.8 Ensure accounts without a valid login shell are locked"" : [PASSED]

There are a number of accounts provided with most distributions that are used to manage applications and are not intended to provide an interactive shell. Furthermore, a user may add special accounts that are not intended to provide an interactive shell.

It is important to make sure that accounts that are not being used by regular users are prevented from being used to provide an interactive shell. By default, most distributions set the password field for these accounts to an invalid string, but it is also recommended that the shell field in the password file be set to the nologin shell. This prevents the account from potentially being used to run any commands.

Solution:
Run the following command to lock any non-root accounts without a valid login shell returned by the audit:

# usermod -L <user>

Example script:

:

#!/usr/bin/env bash

{
   l_valid_shells=""^($(awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   while IFS= read -r l_user; do
      passwd -S ""$l_user"" | awk '$2 !~ /^L/ {system (""usermod -L "" $1)}'
   done < <(awk -v pat=""$l_valid_shells"" -F: '($1 != ""root"" &amp;&amp; $(NF) !~ pat) {print $1}' /etc/passwd)
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^pass$

Actual Value:
The command script with multiple lines returned : 

pass","Run the following command to lock any non-root accounts without a valid login shell returned by the audit:

# usermod -L <user>

Example script:

:

#!/usr/bin/env bash

{
   l_valid_shells=""^($(awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   while IFS= read -r l_user; do
      passwd -S ""$l_user"" | awk '$2 !~ /^L/ {system (""usermod -L "" $1)}'
   done < <(awk -v pat=""$l_valid_shells"" -F: '($1 != ""root"" &amp;&amp; $(NF) !~ pat) {print $1}' /etc/passwd)
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.3.2 Ensure default user shell timeout is configured"" : [FAILED]

TMOUT is an environmental setting that determines the timeout of a shell in seconds.

 - TMOUT=

n

- Sets the shell timeout to

n

seconds. A setting of TMOUT=0 disables timeout.
 - readonly TMOUT- Sets the TMOUT environmental variable as readonly, preventing unwanted modification during run-time.
 - export TMOUT - exports the TMOUT variable

System Wide Shell Configuration Files:

 - /etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in thebash_profile however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive

login

shells, or shells executed with the --login parameter.
 - /etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.
 - /etc/bashrc - System wide version ofbashrc In Fedora derived distributions, /etc/bashrc also invokes /etc/profile.d/*.sh if

non-login

shell, but redirects output to /dev/null if

non-interactive.

Is only executed for

interactive

shells or if BASH_ENV is set to /etc/bashrc

Setting a timeout value reduces the window of opportunity for unauthorized user access to another user's shell session that has been left unattended. It also ends the inactive session and releases the resources associated with that session.

Solution:
Review /etc/bashrc /etc/profile and all files ending in *.sh in the /etc/profile.d/ directory and remove or edit all TMOUT=_n_ entries to follow local site policy. TMOUT should not exceed 900 or be equal to 0

Configure TMOUT in one of the following files:

 - A file in the /etc/profile.d/ directory ending insh
 - /etc/profile
 - /etc/bashrc

TMOUT configuration examples:

 - As multiple lines:

TMOUT=900
readonly TMOUT
export TMOUT
 - As a single line:

readonly TMOUT=900 ; export TMOUT

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*passed:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

grep: : No such file or directory
grep: : No such file or directory

FAILED

TMOUT is not configured","Review /etc/bashrc /etc/profile and all files ending in *.sh in the /etc/profile.d/ directory and remove or edit all TMOUT=_n_ entries to follow local site policy. TMOUT should not exceed 900 or be equal to 0

Configure TMOUT in one of the following files:

 - A file in the /etc/profile.d/ directory ending insh
 - /etc/profile
 - /etc/bashrc

TMOUT configuration examples:

 - As multiple lines:

TMOUT=900
readonly TMOUT
export TMOUT
 - As a single line:

readonly TMOUT=900 ; export TMOUT","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.3.3 Ensure default user umask is configured"" : [FAILED]

The user file-creation mode mask ( umask ) is used to determine the file permission for newly created directories and files. In Linux, the default permissions for any newly created directory is 0777 ( rwxrwxrwx ), and for any newly created file it is 0666 ( rw-rw-rw- ). The umask modifies the default Linux permissions by restricting (masking) these permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in the umask are cleared in the resulting file mode.

umask can be set with either Octal or Symbolic values:

 - Octal (Numeric) Value - Represented by either three or four digits. ie umask 0027 or umask 027 If a four digit umask is used, the first digit is ignored. The remaining three digits effect the resulting permissions for user, group, and world/other respectively.
 - Symbolic Value - Represented by a comma separated list for User u group g and world/other o The permissions listed are not masked by umask ie a umask set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask 027 This umask would set a newly created directory with file mode drwxr-x--- and a newly created file with file mode rw-r-----

The default umask can be set to use the pam_umask module or in a System Wide Shell Configuration File The user creating the directories or files has the discretion of changing the permissions via the chmod command, or choosing a different default umask by adding the umask command into a User Shell Configuration File (bash_profile orbashrc ), in their home directory.

Setting the default umask:

 - pam_umask module:
 - will set the umask according to the system default in /etc/login.defs and user settings, solving the problem of different umask settings with different shells, display managers, remote sessions etc.
 - umask=<mask> value in the /etc/login.defs file is interpreted as Octal
 - Setting USERGROUPS_ENAB to yes in /etc/login.defs (default):
 - will enable setting of the umask group bits to be the same as owner bits. (examples: 022 -> 002, 077 -> 007) for non-root users, if the uid is the same as gid and username is the same as the <primary group name>
 - userdel will remove the user's group if it contains no more members, and useradd will create by default a group with the name of the user

 - System Wide Shell Configuration File :
 - /etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in thebash_profile however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive

login

shells, or shells executed with the --login parameter.
 - /etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.
 - /etc/bashrc - System wide version ofbashrc In Fedora derived distributions, etc/bashrc also invokes /etc/profile.d/*.sh if

non-login

shell, but redirects output to /dev/null if

non-interactive.

Is only executed for

interactive

shells or if BASH_ENV is set to /etc/bashrc

User Shell Configuration Files:

 - ~/.bash_profile - Is executed to configure your shell before the initial command prompt. Is only read by login shells.
 - ~/.bashrc - Is executed for interactive shells. only read by a shell that's both interactive and non-login

umask is set by order of precedence. If umask is set in multiple locations, this order of precedence will determine the system's default umask

Order of precedence:

 - A file in /etc/profile.d/ ending insh - This will override any other system-wide umask setting
 - In the file /etc/profile
 - On the pam_umask.so module in /etc/pam.d/postlogin
 - In the file /etc/login.defs
 - In the file /etc/default/login

Setting a secure default value for umask ensures that users make a conscious choice about their file permissions. A permissive umask value could result in directories or files with excessive permissions that can be read and/or written to by unauthorized users.

Solution:
Run the following script and perform the instructions in the output:

#!/usr/bin/env bash

{
   l_output="""" l_output2="""" l_out=""""
   file_umask_chk()
   {
      if grep -Psiq -- '^h*umaskh+(0?[0-7][2-7]7|u(=[rwx]{0,3}),g=([rx]{0,2}),o=)(h*#.*)?$' ""$l_file""; then
         l_out=""$l_out
 - umask is set correctly in \""$l_file\""""
      elif grep -Psiq -- '^h*umaskh+(([0-7][0-7][01][0-7]b|[0-7][0-7][0-7][0-6]b)|([0-7][01][0-7]b|[0-7][0-7][0-6]b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}b)))' ""$l_file""; then
         l_output2=""$l_output2
 - \""$l_file\""""
      fi
   }
   while IFS= read -r -d $'0' l_file; do
      file_umask_chk
   done < <(find /etc/profile.d/ -type f -name '*.sh' -print0)
   [ -n ""$l_out"" ] &amp;&amp; l_output=""$l_out""
   l_file=""/etc/profile"" &amp;&amp; file_umask_chk
   l_file=""/etc/bashrc"" &amp;&amp; file_umask_chk
   l_file=""/etc/bash.bashrc"" &amp;&amp; file_umask_chk
   l_file=""/etc/pam.d/postlogin""
   if grep -Psiq '^h*sessionh+[^#
r]+h+pam_umask.soh+([^#
r]+h+)?umask=(([0-7][0-7][01][0-7]b|[0-7][0-7][0-7][0-6]b)|([0-7][01][0-7]b))' ""$l_file""; then
      l_output2=""$l_output2
 - \""$l_file\""""
   fi
   l_file=""/etc/login.defs"" &amp;&amp; file_umask_chk
   l_file=""/etc/default/login"" &amp;&amp; file_umask_chk
   if [ -z ""$l_output2"" ]; then
      echo -e "" - No files contain a UMASK that is not restrictive enough
 No UMASK updates required to existing files""
   else
      echo -e ""
 - UMASK is not restrictive enough in the following file(s):$l_output2

- Remediation Procedure:
 - Update these files and comment out the UMASK line
 or update umask to be \""0027\"" or more restrictive""
   fi
   if [ -n ""$l_output"" ]; then
      echo -e ""$l_output""
   else
      echo -e "" - Configure UMASK in a file in the \""/etc/profile.d/\"" directory ending in \"".sh\""

 Example Command (Hash to represent being run at a root prompt):

# printf '%s\
' \""umask 027\"" > /etc/profile.d/50-systemwide_umask.sh
""
   fi
}

Notes:

 - This method only applies to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked
 - If the pam_umask.so module is going to be used to set umask ensure that it's not being overridden by another setting. Refer to the PAM_UMASK(8) man page for more information

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - * Reasons for audit failure * :

 - umask is incorrectly set in ""/etc/login.defs""","Run the following script and perform the instructions in the output:

#!/usr/bin/env bash

{
   l_output="""" l_output2="""" l_out=""""
   file_umask_chk()
   {
      if grep -Psiq -- '^h*umaskh+(0?[0-7][2-7]7|u(=[rwx]{0,3}),g=([rx]{0,2}),o=)(h*#.*)?$' ""$l_file""; then
         l_out=""$l_out
 - umask is set correctly in \""$l_file\""""
      elif grep -Psiq -- '^h*umaskh+(([0-7][0-7][01][0-7]b|[0-7][0-7][0-7][0-6]b)|([0-7][01][0-7]b|[0-7][0-7][0-6]b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}b)))' ""$l_file""; then
         l_output2=""$l_output2
 - \""$l_file\""""
      fi
   }
   while IFS= read -r -d $'0' l_file; do
      file_umask_chk
   done < <(find /etc/profile.d/ -type f -name '*.sh' -print0)
   [ -n ""$l_out"" ] &amp;&amp; l_output=""$l_out""
   l_file=""/etc/profile"" &amp;&amp; file_umask_chk
   l_file=""/etc/bashrc"" &amp;&amp; file_umask_chk
   l_file=""/etc/bash.bashrc"" &amp;&amp; file_umask_chk
   l_file=""/etc/pam.d/postlogin""
   if grep -Psiq '^h*sessionh+[^#
r]+h+pam_umask.soh+([^#
r]+h+)?umask=(([0-7][0-7][01][0-7]b|[0-7][0-7][0-7][0-6]b)|([0-7][01][0-7]b))' ""$l_file""; then
      l_output2=""$l_output2
 - \""$l_file\""""
   fi
   l_file=""/etc/login.defs"" &amp;&amp; file_umask_chk
   l_file=""/etc/default/login"" &amp;&amp; file_umask_chk
   if [ -z ""$l_output2"" ]; then
      echo -e "" - No files contain a UMASK that is not restrictive enough
 No UMASK updates required to existing files""
   else
      echo -e ""
 - UMASK is not restrictive enough in the following file(s):$l_output2

- Remediation Procedure:
 - Update these files and comment out the UMASK line
 or update umask to be \""0027\"" or more restrictive""
   fi
   if [ -n ""$l_output"" ]; then
      echo -e ""$l_output""
   else
      echo -e "" - Configure UMASK in a file in the \""/etc/profile.d/\"" directory ending in \"".sh\""

 Example Command (Hash to represent being run at a root prompt):

# printf '%s\
' \""umask 027\"" > /etc/profile.d/50-systemwide_umask.sh
""
   fi
}

Notes:

 - This method only applies to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked
 - If the pam_umask.so module is going to be used to set umask ensure that it's not being overridden by another setting. Refer to the PAM_UMASK(8) man page for more information","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.1.1 Ensure AIDE is installed"" : [FAILED]

AIDE takes a snapshot of filesystem state including modification times, permissions, and file hashes which can then be used to compare against the current state of the filesystem to detect modifications to the system.

By monitoring the filesystem state compromised files can be detected to prevent or limit the exposure of accidental or malicious misconfigurations or modified binaries.

Solution:
Install AIDE using the appropriate package manager or manual installation:

# apt install aide aide-common

Configure AIDE as appropriate for your environment. Consult the AIDE documentation for options.

Run the following commands to initialize AIDE:

# aideinit
# mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.7,800-171|3.3.1,800-171|3.3.2,800-53|AC-6(9),800-53|AU-2,800-53|AU-12,800-53r5|AC-6(9),800-53r5|AU-2,800-53r5|AU-12,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.3(a),CN-L3|8.1.10.6(a),CSCv7|14.9,CSCv8|3.14,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.3,ITSG-33|AC-6,ITSG-33|AU-2,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - dpkg check aide-common
The command '/bin/dpkg -s aide-common 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

dpkg-query: package 'aide-common' is not installed and no information is available

-------------------------
FAILED - dpkg check aide
The command '/bin/dpkg -s aide 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

dpkg-query: package 'aide' is not installed and no information is available","Install AIDE using the appropriate package manager or manual installation:

# apt install aide aide-common

Configure AIDE as appropriate for your environment. Consult the AIDE documentation for options.

Run the following commands to initialize AIDE:

# aideinit
# mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.1.2 Ensure filesystem integrity is regularly checked"" : [FAILED]

Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.

Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion.

Solution:
If cron will be used to schedule and run aide check:

Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/bin/aide.wrapper --config /etc/aide/aide.conf --update

- OR - If aidecheck.service and aidecheck.timer will be used to schedule and run aide check:

Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/bin/aide.wrapper --config /etc/aide/aide.conf --update

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|14.9,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
expect: ^([^#\n\r]+\h+)?(\/usr\/s?bin\/|^\h*)aide(\.wrapper)?\h+(--(check|update)|([^#\n\r]+\h+)?\$AIDEARGS)\b
file: /etc/cron.daily/* /etc/cron.hourly/* /etc/cron.monthly/* /etc/cron.weekly/* /var/spool/cron/crontabs/* /var/spool/cron/* /etc/crontab
min_occurrences: 1
regex: ^([^#\n\r]+\h+)?(\/usr\/s?bin\/|^\h*)aide(\.wrapper)?\h+(--(check|update)|([^#\n\r]+\h+)?\$AIDEARGS)\b
string_required: NO

Actual Value:
No matching files were found
Less than 1 matches of regex found","If cron will be used to schedule and run aide check:

Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/bin/aide.wrapper --config /etc/aide/aide.conf --update

- OR - If aidecheck.service and aidecheck.timer will be used to schedule and run aide check:

Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/bin/aide.wrapper --config /etc/aide/aide.conf --update

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.1.1 Ensure journald service is enabled and active"" : [PASSED]

Ensure that the systemd-journald service is enabled to allow capturing of logging events.

If the systemd-journald service is not enabled to start on boot, the system will not capture logging events.

Solution:
Run the following commands to unmask and start systemd-journald.service

# systemctl unmask systemd-journald.service
# systemctl start systemd-journald.service

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - journald check - active
The command '/bin/systemctl is-active systemd-journald.service' returned : 

active

-------------------------
PASSED - journald check - enabled
The command '/bin/systemctl is-enabled systemd-journald.service' returned : 

static","Run the following commands to unmask and start systemd-journald.service

# systemctl unmask systemd-journald.service
# systemctl start systemd-journald.service","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.1.2 Ensure journald log file access is configured"" : [WARNING]

Journald will create logfiles that do not already exist on the system. This setting controls what permissions will be applied to these newly created files.

It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance.

Solution:
If the default configuration is not appropriate for the site specific requirements, copy /usr/lib/tmpfiles.d/systemd.conf to /etc/tmpfiles.d/systemd.conf and modify as required. Requirements is either 0640 or site policy if that is less restrictive.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
WARNING","If the default configuration is not appropriate for the site specific requirements, copy /usr/lib/tmpfiles.d/systemd.conf to /etc/tmpfiles.d/systemd.conf and modify as required. Requirements is either 0640 or site policy if that is less restrictive.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.1.3 Ensure journald log file rotation is configured"" : [WARNING]

Journald includes the capability of rotating log files regularly to avoid filling up the system with logs or making the logs unmanageably large. The file /etc/systemd/journald.conf is the configuration file used to specify how logs generated by Journald should be rotated.

By keeping the log files smaller and more manageable, a system administrator can easily archive these files to another system and spend less time looking through inordinately large log files.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Edit /etc/systemd/journald.conf or a file ending inconf the /etc/systemd/journald.conf.d/ directory. Set the following parameters in the [Journal] section to ensure logs are rotated according to site policy. The settings should be carefully understood as there are specific edge cases and prioritization of parameters.

The specific parameters for log rotation are:

SystemMaxUse=
SystemKeepFree=
RuntimeMaxUse=
RuntimeKeepFree=
MaxFileSec=

Note: If these settings appear in a canonically later file, or later in the same file, the setting will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
expect: ^Manual Review Required$
file: /etc/systemd/journald.conf /etc/systemd/journald.conf.d/*
min_occurrences: 1
regex: ^[\s]*(SystemMaxUse|SystemKeepFree|RuntimeMaxUse|RuntimeKeepFree|MaxFileSec)[\s]*=
required: NO

Actual Value:
No matching files were found
Less than 1 matches of regex found","Edit /etc/systemd/journald.conf or a file ending inconf the /etc/systemd/journald.conf.d/ directory. Set the following parameters in the [Journal] section to ensure logs are rotated according to site policy. The settings should be carefully understood as there are specific edge cases and prioritization of parameters.

The specific parameters for log rotation are:

SystemMaxUse=
SystemKeepFree=
RuntimeMaxUse=
RuntimeKeepFree=
MaxFileSec=

Note: If these settings appear in a canonically later file, or later in the same file, the setting will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.1.4 Ensure journald ForwardToSyslog is disabled"" : [PASSED]

Data from journald should be kept in the confines of the service and not forwarded to other services.

Logs of the system should be handled by journald and not forwarded to other logging mechanisms.

Solution:
Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending inconf :

ForwardToSyslog=no

Example:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/
   if grep -Psq -- '^h*[Journal] /etc/systemd/journald.conf.d/60-journald.conf; then
      printf '%s
' ""ForwardToSyslog=no"" >> /etc/systemd/journald.conf.d/60-journald.conf
   else
      printf '%s
' ""[Journal]"" ""ForwardToSyslog=no"" >> /etc/systemd/journald.conf.d/60-journald.conf
   fi
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - ""ForwardToSyslog"" is not set in an included file
   ** Note: ""ForwardToSyslog"" May be set in a file that's ignored by load procedure **","Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending inconf :

ForwardToSyslog=no

Example:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/
   if grep -Psq -- '^h*[Journal] /etc/systemd/journald.conf.d/60-journald.conf; then
      printf '%s
' ""ForwardToSyslog=no"" >> /etc/systemd/journald.conf.d/60-journald.conf
   else
      printf '%s
' ""[Journal]"" ""ForwardToSyslog=no"" >> /etc/systemd/journald.conf.d/60-journald.conf
   fi
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.1.5 Ensure journald Storage is configured"" : [FAILED]

Data from journald may be stored in volatile memory or persisted locally on the server. Logs in memory will be lost upon a system reboot. By persisting logs to local disk on the server they are protected from loss due to a reboot.

Writing log data to disk will provide the ability to forensically reconstruct events which may have impacted the operations or security of a system even after a system crash or reboot.

Solution:
Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending inconf :

Storage=persistent

Example:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/
   if grep -Psq -- '^h*[Journal]' /etc/systemd/journald.conf.d/60-journald.conf; then
      printf '%s
' ""Storage=persistent"" >> /etc/systemd/journald.conf.d/60-journald.conf
   else
      printf '%s
' ""[Journal]"" ""Storage=persistent"" >> /etc/systemd/journald.conf.d/60-journald.conf
   fi
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""Storage"" is not set in an included file
   ** Note: ""Storage"" May be set in a file that's ignored by load procedure **","Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending inconf :

Storage=persistent

Example:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/
   if grep -Psq -- '^h*[Journal]' /etc/systemd/journald.conf.d/60-journald.conf; then
      printf '%s
' ""Storage=persistent"" >> /etc/systemd/journald.conf.d/60-journald.conf
   else
      printf '%s
' ""[Journal]"" ""Storage=persistent"" >> /etc/systemd/journald.conf.d/60-journald.conf
   fi
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.1.6 Ensure journald Compress is configured"" : [FAILED]

The journald system includes the capability of compressing overly large files to avoid filling up the system with logs or making the logs unmanageably large.

Uncompressed large files may unexpectedly fill a filesystem leading to resource unavailability. Compressing logs prior to write can prevent sudden, unexpected filesystem impacts.

Solution:
Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending inconf :

Compress=yes

Example:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/
   if grep -Psq -- '^h*[Journal]' /etc/systemd/journald.conf.d/60-journald.conf; then
      printf '%s
' ""Compress=yes"" >> /etc/systemd/journald.conf.d/60-journald.conf
   else
      printf '%s
' ""[Journal]"" ""Compress=yes"" >> /etc/systemd/journald.conf.d/60-journald.conf
   fi
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-4,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-4,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv7|6.4,CSCv8|8.2,CSCv8|8.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.DS-4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-4,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T3.3.1,NESA|T3.6.2,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""Compress"" is not set in an included file
   ** Note: ""Compress"" May be set in a file that's ignored by load procedure **","Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending inconf :

Compress=yes

Example:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/
   if grep -Psq -- '^h*[Journal]' /etc/systemd/journald.conf.d/60-journald.conf; then
      printf '%s
' ""Compress=yes"" >> /etc/systemd/journald.conf.d/60-journald.conf
   else
      printf '%s
' ""[Journal]"" ""Compress=yes"" >> /etc/systemd/journald.conf.d/60-journald.conf
   fi
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.2.1 Ensure systemd-journal-remote is installed"" : [PASSED]

Journald systemd-journal-remote supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralized log management.

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.

Solution:
Run the following command to install systemd-journal-remote :

# apt install systemd-journal-remote

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: /bin/dpkg -s systemd-journal-remote 2>&1 | /bin/grep -E '(Status:|not installed)'
expect: ^Status: install ok

Actual Value:
The command '/bin/dpkg -s systemd-journal-remote 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

Status: install ok installed","Run the following command to install systemd-journal-remote :

# apt install systemd-journal-remote","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.2.2 Ensure systemd-journal-remote authentication is configured"" : [FAILED]

Journald systemd-journal-upload supports the ability to send log events it gathers to a remote log host.

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.

Solution:
Edit the /etc/systemd/journal-upload.conf file or a file in /etc/systemd/journal-upload.conf.d ending inconf and ensure the following lines are set in the [Upload] section per your environment:

[Upload]
URL=192.168.50.42
ServerKeyFile=/etc/ssl/private/journal-upload.pem
ServerCertificateFile=/etc/ssl/certs/journal-upload.pem
TrustedCertificateFile=/etc/ssl/ca/trusted.pem

Restart the service:

# systemctl restart systemd-journal-upload

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - Trusted Cert
The file ""/etc/systemd/journal-upload.conf"" does not contain ""^[\s]*TrustedCertificateFile[\s]*=[\s]*""

-------------------------
FAILED - Cert
The file ""/etc/systemd/journal-upload.conf"" does not contain ""^[\s]*ServerCertificateFile[\s]*=[\s]*""

-------------------------
FAILED - URL
The file ""/etc/systemd/journal-upload.conf"" does not contain ""^[\s]*URL[\s]*=[\s]*""

-------------------------
FAILED - Key
The file ""/etc/systemd/journal-upload.conf"" does not contain ""^[\s]*ServerKeyFile[\s]*=[\s]*""","Edit the /etc/systemd/journal-upload.conf file or a file in /etc/systemd/journal-upload.conf.d ending inconf and ensure the following lines are set in the [Upload] section per your environment:

[Upload]
URL=192.168.50.42
ServerKeyFile=/etc/ssl/private/journal-upload.pem
ServerCertificateFile=/etc/ssl/certs/journal-upload.pem
TrustedCertificateFile=/etc/ssl/ca/trusted.pem

Restart the service:

# systemctl restart systemd-journal-upload","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.2.3 Ensure systemd-journal-upload is enabled and active"" : [FAILED]

Journald systemd-journal-upload supports the ability to send log events it gathers to a remote log host.

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.

Solution:
Run the following commands to unmask, enable and start systemd-journal-upload :

# systemctl unmask systemd-journal-upload.service
# systemctl --now enable systemd-journal-upload.service

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - enabled
The command '/bin/systemctl is-enabled systemd-journal-upload.service' returned : 

disabled

-------------------------
FAILED - active
The command '/bin/systemctl is-active systemd-journal-upload.service' returned : 

inactive","Run the following commands to unmask, enable and start systemd-journal-upload :

# systemctl unmask systemd-journal-upload.service
# systemctl --now enable systemd-journal-upload.service","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.2.4 Ensure systemd-journal-remote service is not in use"" : [PASSED]

Journald systemd-journal-remote supports the ability to receive messages from remote hosts, thus acting as a log server. Clients should not receive data from other hosts.

NOTE:

 - The same package, systemd-journal-remote is used for both sending logs to remote hosts and receiving incoming logs.
 - With regards to receiving logs, there are two services; systemd-journal-remote.socket and systemd-journal-remote.service

If a client is configured to also receive data, thus turning it into a server, the client system is acting outside it's operational boundary.

Solution:
Run the following commands to stop and mask systemd-journal-remote.socket and systemd-journal-remote.service:

# systemctl stop systemd-journal-remote.socket systemd-journal-remote.service
# systemctl mask systemd-journal-remote.socket systemd-journal-remote.service

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - active
The command '/bin/systemctl is-active systemd-journal-remote.socket systemd-journal-remote.service | /bin/grep -P -- '^active' | /bin/awk '{print} END {if(NR==0) print ""pass""}'' returned : 

pass

-------------------------
PASSED - enabled
The command '/bin/systemctl is-enabled systemd-journal-remote.socket systemd-journal-remote.service | /bin/grep -P -- '^enabled' | /bin/awk '{print} END {if(NR==0) print ""pass""}'' returned : 

pass","Run the following commands to stop and mask systemd-journal-remote.socket and systemd-journal-remote.service:

# systemctl stop systemd-journal-remote.socket systemd-journal-remote.service
# systemctl mask systemd-journal-remote.socket systemd-journal-remote.service","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.2.1 Ensure access to all logfiles has been configured"" : [FAILED]

Log files contain information from many services on the the local system, or in the event of a centralized log server, others systems logs as well.

In general log files are found in /var/log/ although application can be configured to store logs elsewhere. Should your application store logs in another, ensure to run the same test on that location.

It is important that log files have the correct permissions to ensure that sensitive data is protected and that only the appropriate users / groups have access to them.

Solution:
Run the following script to update permissions and ownership on files in /var/log

Although the script is not destructive, ensure that the output of the audit procedure is captured in the event that the remediation causes issues.

#!/usr/bin/env bash

{
   l_op2="""" l_output2=""""
   l_uidmin=""$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)""
   file_test_fix()
   {
      l_op2=""""
      l_fuser=""root""
      l_fgroup=""root""
      if [ $(( $l_mode &amp; $perm_mask )) -gt 0 ]; then
         l_op2=""$l_op2
 - Mode: \""$l_mode\"" should be \""$maxperm\"" or more restrictive
 - Removing excess permissions""
         chmod ""$l_rperms"" ""$l_fname""
      fi
      if [[ ! ""$l_user"" =~ $l_auser ]]; then
         l_op2=""$l_op2
 - Owned by: \""$l_user\"" and should be owned by \""${l_auser//|/ or }\""
 - Changing ownership to: \""$l_fuser\""""
         chown ""$l_fuser"" ""$l_fname""
      fi
      if [[ ! ""$l_group"" =~ $l_agroup ]]; then
         l_op2=""$l_op2
 - Group owned by: \""$l_group\"" and should be group owned by \""${l_agroup//|/ or }\""
 - Changing group ownership to: \""$l_fgroup\""""
         chgrp ""$l_fgroup"" ""$l_fname""
      fi
      [ -n ""$l_op2"" ] &amp;&amp; l_output2=""$l_output2
 - File: \""$l_fname\"" is:$l_op2
""
   }
   unset a_file &amp;&amp; a_file=() # clear and initialize array
   # Loop to create array with stat of files that could possibly fail one of the audits
   while IFS= read -r -d $'0' l_file; do
      [ -e ""$l_file"" ] &amp;&amp; a_file+=(""$(stat -Lc '%n^%#a^%U^%u^%G^%g' ""$l_file"")"")
   done < <(find -L /var/log -type f ( -perm /0137 -o ! -user root -o ! -group root ) -print0)
   while IFS=""^"" read -r l_fname l_mode l_user l_uid l_group l_gid; do
      l_bname=""$(basename ""$l_fname"")""
      case ""$l_bname"" in
         lastlog | lastlog.* | wtmp | wtmp.* | wtmp-* | btmp | btmp.* | btmp-* | README)
            perm_mask='0113'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""ug-x,o-wx""
            l_auser=""root""
            l_agroup=""(root|utmp)""
            file_test_fix
            ;;
         secure | auth.log | syslog | messages)
            perm_mask='0137'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""u-x,g-wx,o-rwx""
            l_auser=""(root|syslog)""
            l_agroup=""(root|adm)""
            file_test_fix
            ;;
         SSSD | sssd)
            perm_mask='0117'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""ug-x,o-rwx""
            l_auser=""(root|SSSD)""
            l_agroup=""(root|SSSD)""
            file_test_fix
            ;;
         gdm | gdm3)
            perm_mask='0117'
            l_rperms=""ug-x,o-rwx""
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_auser=""root""
            l_agroup=""(root|gdm|gdm3)""
            file_test_fix
            ;;
         *.journal | *.journal~)
            perm_mask='0137'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""u-x,g-wx,o-rwx""
            l_auser=""root""
            l_agroup=""(root|systemd-journal)""
            file_test_fix
            ;;
         *)
            perm_mask='0137'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""u-x,g-wx,o-rwx""
            l_auser=""(root|syslog)""
            l_agroup=""(root|adm)""
            if [ ""$l_uid"" -lt ""$l_uidmin"" ] &amp;&amp; [ -z ""$(awk -v grp=""$l_group"" -F: '$1==grp {print $4}' /etc/group)"" ]; then
               if [[ ! ""$l_user"" =~ $l_auser ]]; then
                  l_auser=""(root|syslog|$l_user)""
               fi
               if [[ ! ""$l_group"" =~ $l_agroup ]]; then
                  l_tst=""""
                  while l_out3="""" read -r l_duid; do
                     [ ""$l_duid"" -ge ""$l_uidmin"" ] &amp;&amp; l_tst=failed
                  done <<< ""$(awk -F: '$4=='""$l_gid""' {print $3}' /etc/passwd)""
                  [ ""$l_tst"" != ""failed"" ] &amp;&amp; l_agroup=""(root|adm|$l_group)""
               fi
            fi
            file_test_fix
            ;;
      esac
   done <<< ""$(printf '%s
' ""${a_file[@]}"")""
   unset a_file # Clear array
   # If all files passed, then we report no changes
   if [ -z ""$l_output2"" ]; then
      echo -e ""- All files in \""/var/log/\"" have appropriate permissions and ownership
 - No changes required
""
   else
      # print report of changes
      echo -e ""
$l_output2""
   fi
}

Note: You may also need to change the configuration for your logging software or services for any logs that had incorrect permissions.

If there are services that log to other locations, ensure that those log files have the appropriate permissions.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$
timeout: 7200

Actual Value:
The command script with multiple lines returned : 

- Audit Results:
 ** Fail **

 - File: ""/var/log/dpkg.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/alternatives.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/ubuntu-advantage.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/faillog"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/alternatives.log.1"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/bootstrap.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dpkg.log.1"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/unattended-upgrades/unattended-upgrades-dpkg.log.1.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/unattended-upgrades/unattended-upgrades-dpkg.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/unattended-upgrades/unattended-upgrades.log.1.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/unattended-upgrades/unattended-upgrades.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/unattended-upgrades/unattended-upgrades-shutdown.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/installer/curtin-install.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/installer/block/probe-data.json"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/installer/block/discover.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/installer/device-map.json"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/installer/casper-md5check.json"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/installer/cloud-init-output.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/installer/media-info"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/ubuntu-advantage.log.1"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/apt/history.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/apt/history.log.1.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/apt/eipp.log.xz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive","Run the following script to update permissions and ownership on files in /var/log

Although the script is not destructive, ensure that the output of the audit procedure is captured in the event that the remediation causes issues.

#!/usr/bin/env bash

{
   l_op2="""" l_output2=""""
   l_uidmin=""$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)""
   file_test_fix()
   {
      l_op2=""""
      l_fuser=""root""
      l_fgroup=""root""
      if [ $(( $l_mode &amp; $perm_mask )) -gt 0 ]; then
         l_op2=""$l_op2
 - Mode: \""$l_mode\"" should be \""$maxperm\"" or more restrictive
 - Removing excess permissions""
         chmod ""$l_rperms"" ""$l_fname""
      fi
      if [[ ! ""$l_user"" =~ $l_auser ]]; then
         l_op2=""$l_op2
 - Owned by: \""$l_user\"" and should be owned by \""${l_auser//|/ or }\""
 - Changing ownership to: \""$l_fuser\""""
         chown ""$l_fuser"" ""$l_fname""
      fi
      if [[ ! ""$l_group"" =~ $l_agroup ]]; then
         l_op2=""$l_op2
 - Group owned by: \""$l_group\"" and should be group owned by \""${l_agroup//|/ or }\""
 - Changing group ownership to: \""$l_fgroup\""""
         chgrp ""$l_fgroup"" ""$l_fname""
      fi
      [ -n ""$l_op2"" ] &amp;&amp; l_output2=""$l_output2
 - File: \""$l_fname\"" is:$l_op2
""
   }
   unset a_file &amp;&amp; a_file=() # clear and initialize array
   # Loop to create array with stat of files that could possibly fail one of the audits
   while IFS= read -r -d $'0' l_file; do
      [ -e ""$l_file"" ] &amp;&amp; a_file+=(""$(stat -Lc '%n^%#a^%U^%u^%G^%g' ""$l_file"")"")
   done < <(find -L /var/log -type f ( -perm /0137 -o ! -user root -o ! -group root ) -print0)
   while IFS=""^"" read -r l_fname l_mode l_user l_uid l_group l_gid; do
      l_bname=""$(basename ""$l_fname"")""
      case ""$l_bname"" in
         lastlog | lastlog.* | wtmp | wtmp.* | wtmp-* | btmp | btmp.* | btmp-* | README)
            perm_mask='0113'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""ug-x,o-wx""
            l_auser=""root""
            l_agroup=""(root|utmp)""
            file_test_fix
            ;;
         secure | auth.log | syslog | messages)
            perm_mask='0137'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""u-x,g-wx,o-rwx""
            l_auser=""(root|syslog)""
            l_agroup=""(root|adm)""
            file_test_fix
            ;;
         SSSD | sssd)
            perm_mask='0117'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""ug-x,o-rwx""
            l_auser=""(root|SSSD)""
            l_agroup=""(root|SSSD)""
            file_test_fix
            ;;
         gdm | gdm3)
            perm_mask='0117'
            l_rperms=""ug-x,o-rwx""
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_auser=""root""
            l_agroup=""(root|gdm|gdm3)""
            file_test_fix
            ;;
         *.journal | *.journal~)
            perm_mask='0137'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""u-x,g-wx,o-rwx""
            l_auser=""root""
            l_agroup=""(root|systemd-journal)""
            file_test_fix
            ;;
         *)
            perm_mask='0137'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""u-x,g-wx,o-rwx""
            l_auser=""(root|syslog)""
            l_agroup=""(root|adm)""
            if [ ""$l_uid"" -lt ""$l_uidmin"" ] &amp;&amp; [ -z ""$(awk -v grp=""$l_group"" -F: '$1==grp {print $4}' /etc/group)"" ]; then
               if [[ ! ""$l_user"" =~ $l_auser ]]; then
                  l_auser=""(root|syslog|$l_user)""
               fi
               if [[ ! ""$l_group"" =~ $l_agroup ]]; then
                  l_tst=""""
                  while l_out3="""" read -r l_duid; do
                     [ ""$l_duid"" -ge ""$l_uidmin"" ] &amp;&amp; l_tst=failed
                  done <<< ""$(awk -F: '$4=='""$l_gid""' {print $3}' /etc/passwd)""
                  [ ""$l_tst"" != ""failed"" ] &amp;&amp; l_agroup=""(root|adm|$l_group)""
               fi
            fi
            file_test_fix
            ;;
      esac
   done <<< ""$(printf '%s
' ""${a_file[@]}"")""
   unset a_file # Clear array
   # If all files passed, then we report no changes
   if [ -z ""$l_output2"" ]; then
      echo -e ""- All files in \""/var/log/\"" have appropriate permissions and ownership
 - No changes required
""
   else
      # print report of changes
      echo -e ""
$l_output2""
   fi
}

Note: You may also need to change the configuration for your logging software or services for any logs that had incorrect permissions.

If there are services that log to other locations, ensure that those log files have the appropriate permissions.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.1 Ensure permissions on /etc/passwd are configured"" : [PASSED]

The /etc/passwd file contains user account information that is used by many system utilities and therefore must be readable for these utilities to operate.

It is critical to ensure that the /etc/passwd file is protected from unauthorized write access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.

Solution:
Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd :

# chmod u-x,go-wx /etc/passwd
# chown root:root /etc/passwd

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/passwd
group: root
mask: 133
owner: root

Actual Value:
The file /etc/passwd with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/passwd","Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd :

# chmod u-x,go-wx /etc/passwd
# chown root:root /etc/passwd","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.10 Ensure permissions on /etc/security/opasswd are configured"" : [PASSED]

/etc/security/opasswd and it's backup /etc/security/opasswd.old hold user's previous passwords if pam_unix or pam_pwhistory is in use on the system

It is critical to ensure that /etc/security/opasswd is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.

Solution:
Run the following commands to remove excess permissions, set owner, and set group on /etc/security/opasswd and /etc/security/opasswd.old is they exist:

# [ -e ""/etc/security/opasswd"" ] &amp;&amp; chmod u-x,go-rwx /etc/security/opasswd
# [ -e ""/etc/security/opasswd"" ] &amp;&amp; chown root:root /etc/security/opasswd
# [ -e ""/etc/security/opasswd.old"" ] &amp;&amp; chmod u-x,go-rwx /etc/security/opasswd.old
# [ -e ""/etc/security/opasswd.old"" ] &amp;&amp; chown root:root /etc/security/opasswd.old

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - etc/security/opasswd file permissions
The file /etc/security/opasswd with fmode owner: root group: root mode: 0600 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/security/opasswd

-------------------------
PASSED - /etc/security/opasswd.old file permissions","Run the following commands to remove excess permissions, set owner, and set group on /etc/security/opasswd and /etc/security/opasswd.old is they exist:

# [ -e ""/etc/security/opasswd"" ] &amp;&amp; chmod u-x,go-rwx /etc/security/opasswd
# [ -e ""/etc/security/opasswd"" ] &amp;&amp; chown root:root /etc/security/opasswd
# [ -e ""/etc/security/opasswd.old"" ] &amp;&amp; chmod u-x,go-rwx /etc/security/opasswd.old
# [ -e ""/etc/security/opasswd.old"" ] &amp;&amp; chown root:root /etc/security/opasswd.old","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.11 Ensure world writable files and directories are secured"" : [FAILED]

World writable files are the least secure. Data in world-writable files can be modified and compromised by any user on the system. World writable files may also indicate an incorrectly written script or program that could potentially be the cause of a larger compromise to the system's integrity. See the chmod(2) man page for more information.

Setting the sticky bit on world writable directories prevents users from deleting or renaming files in that directory that are not owned by them.

Data in world-writable files can be modified and compromised by any user on the system. World writable files may also indicate an incorrectly written script or program that could potentially be the cause of a larger compromise to the system's integrity.

This feature prevents the ability to delete or rename files in world writable directories (such as /tmp ) that are owned by another user.

Solution:
- World Writable Files:
 - It is recommended that write access is removed from other with the command ( chmod o-w <filename> ), but always consult relevant vendor documentation to avoid breaking any application dependencies on a given file.

 - World Writable Directories:
 - Set the sticky bit on all world writable directories with the command ( chmod a+t <directory_name> )

Run the following script to:

 - Remove other write permission from any world writable files
 - Add the sticky bit to all world writable directories

#!/usr/bin/env bash

{
   l_smask='01000'
   a_file=(); a_dir=() # Initialize arrays
   a_path=(! -path ""/run/user/*"" -a ! -path ""/proc/*"" -a ! -path ""*/containerd/*"" -a ! -path ""*/kubelet/pods/*"" -a ! -path ""*/kubelet/plugins/*"" -a ! -path ""/sys/*"" -a ! -path ""/snap/*"")
   while IFS= read -r l_mount; do
      while IFS= read -r -d $'0' l_file; do
         if [ -e ""$l_file"" ]; then
            l_mode=""$(stat -Lc '%#a' ""$l_file"")""
            if [ -f ""$l_file"" ]; then # Remove excess permissions from WW files
               echo -e "" - File: \""$l_file\"" is mode: \""$l_mode\""
 - removing write permission on \""$l_file\"" from \""other\""""
               chmod o-w ""$l_file""
            fi
            if [ -d ""$l_file"" ]; then # Add sticky bit
               if [ ! $(( $l_mode &amp; $l_smask )) -gt 0 ]; then
                  echo -e "" - Directory: \""$l_file\"" is mode: \""$l_mode\"" and doesn't have the sticky bit set
 - Adding the sticky bit""
                  chmod a+t ""$l_file""
               fi
            fi
         fi
      done < <(find ""$l_mount"" -xdev ( ""${a_path[@]}"" ) ( -type f -o -type d ) -perm -0002 -print0 2> /dev/null)
   done < <(findmnt -Dkerno fstype,target | awk '($1 !~ /^s*(nfs|proc|smb|vfat|iso9660|efivarfs|selinuxfs)/ &amp;&amp; $2 !~ /^(/run/user/|/tmp|/var/tmp)/){print $2}')
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
name: find_world_writeable_files
timeout: 7200

Actual Value:
The following 1 files are world writeable:

  /home/anapaya/test.pcap
     owner: anapaya, group: users, permissions: 0646","- World Writable Files:
 - It is recommended that write access is removed from other with the command ( chmod o-w <filename> ), but always consult relevant vendor documentation to avoid breaking any application dependencies on a given file.

 - World Writable Directories:
 - Set the sticky bit on all world writable directories with the command ( chmod a+t <directory_name> )

Run the following script to:

 - Remove other write permission from any world writable files
 - Add the sticky bit to all world writable directories

#!/usr/bin/env bash

{
   l_smask='01000'
   a_file=(); a_dir=() # Initialize arrays
   a_path=(! -path ""/run/user/*"" -a ! -path ""/proc/*"" -a ! -path ""*/containerd/*"" -a ! -path ""*/kubelet/pods/*"" -a ! -path ""*/kubelet/plugins/*"" -a ! -path ""/sys/*"" -a ! -path ""/snap/*"")
   while IFS= read -r l_mount; do
      while IFS= read -r -d $'0' l_file; do
         if [ -e ""$l_file"" ]; then
            l_mode=""$(stat -Lc '%#a' ""$l_file"")""
            if [ -f ""$l_file"" ]; then # Remove excess permissions from WW files
               echo -e "" - File: \""$l_file\"" is mode: \""$l_mode\""
 - removing write permission on \""$l_file\"" from \""other\""""
               chmod o-w ""$l_file""
            fi
            if [ -d ""$l_file"" ]; then # Add sticky bit
               if [ ! $(( $l_mode &amp; $l_smask )) -gt 0 ]; then
                  echo -e "" - Directory: \""$l_file\"" is mode: \""$l_mode\"" and doesn't have the sticky bit set
 - Adding the sticky bit""
                  chmod a+t ""$l_file""
               fi
            fi
         fi
      done < <(find ""$l_mount"" -xdev ( ""${a_path[@]}"" ) ( -type f -o -type d ) -perm -0002 -print0 2> /dev/null)
   done < <(findmnt -Dkerno fstype,target | awk '($1 !~ /^s*(nfs|proc|smb|vfat|iso9660|efivarfs|selinuxfs)/ &amp;&amp; $2 !~ /^(/run/user/|/tmp|/var/tmp)/){print $2}')
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.12 Ensure no files or directories without an owner and a group exist"" : [FAILED]

Administrators may delete users or groups from the system and neglect to remove all files and/or directories owned by those users or groups.

A new user or group who is assigned a deleted user's user ID or group ID may then end up ""owning"" a deleted user or group's files, and thus have more access on the system than was intended.

Solution:
Remove or set ownership and group ownership of these files and/or directories to an active user on the system as appropriate.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
name: find_orphan_files
timeout: 7200

Actual Value:
The following 11 files are orphaned:

  /var/lib/docker/overlay2/0cb9516de8c869a5bafe0d11627a6fc1f4d6ec3ddccf6629f7950113e1de280f/diff/home
     owner: 65532, group: 65532, permissions: 0755

  /var/lib/docker/overlay2/0cb9516de8c869a5bafe0d11627a6fc1f4d6ec3ddccf6629f7950113e1de280f/diff/home/nonroot
     owner: 65532, group: 65532, permissions: 0700

  /var/lib/docker/overlay2/498ea2e413b2dd85664352cb21f39de0af074d73db197d3f3ac4f3dcf31782f9/diff/pkgs/apk/x86_64
     owner: anapaya, group: 300, permissions: 0755

  /var/lib/docker/overlay2/498ea2e413b2dd85664352cb21f39de0af074d73db197d3f3ac4f3dcf31782f9/diff/pkgs/apk/x86_64/frr-dbg-9.1_git-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/498ea2e413b2dd85664352cb21f39de0af074d73db197d3f3ac4f3dcf31782f9/diff/pkgs/apk/x86_64/frr-9.1_git-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/498ea2e413b2dd85664352cb21f39de0af074d73db197d3f3ac4f3dcf31782f9/diff/pkgs/apk/x86_64/APKINDEX.tar.gz
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/498ea2e413b2dd85664352cb21f39de0af074d73db197d3f3ac4f3dcf31782f9/diff/pkgs/apk/x86_64/frr-doc-9.1_git-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/498ea2e413b2dd85664352cb21f39de0af074d73db197d3f3ac4f3dcf31782f9/diff/pkgs/apk/x86_64/libyang-doc-2.1.80-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/498ea2e413b2dd85664352cb21f39de0af074d73db197d3f3ac4f3dcf31782f9/diff/pkgs/apk/x86_64/libyang-dev-2.1.80-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/498ea2e413b2dd85664352cb21f39de0af074d73db197d3f3ac4f3dcf31782f9/diff/pkgs/apk/x86_64/libyang-2.1.80-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/498ea2e413b2dd85664352cb21f39de0af074d73db197d3f3ac4f3dcf31782f9/diff/pkgs/apk/x86_64/frr-dev-9.1_git-r0.apk
     owner: anapaya, group: 300, permissions: 0644","Remove or set ownership and group ownership of these files and/or directories to an active user on the system as appropriate.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.13 Ensure SUID and SGID files are reviewed"" : [WARNING]

The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common reason for a SUID or SGID program is to enable users to perform functions (such as changing their password) that require root privileges.

There are valid reasons for SUID and SGID programs, but it is important to identify and review such programs to ensure they are legitimate. Review the files returned by the action in the audit section and check to see if system binaries have a different checksum than what from the package. This is an indication that the binary may have been replaced.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Ensure that no rogue SUID or SGID programs have been introduced into the system. Review the files returned by the action in the Audit section and confirm the integrity of these binaries.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
name: find_suid_sgid_files
timeout: 7200

Actual Value:
The following 50 files are SUID or SGID:

  /usr/sbin/pam_extrausers_chkpwd
     owner: root, group: shadow, permissions: 2755

  /usr/sbin/unix_chkpwd
     owner: root, group: shadow, permissions: 2755

  /usr/libexec/polkit-agent-helper-1
     owner: root, group: root, permissions: 4755

  /usr/lib/openssh/ssh-keysign
     owner: root, group: root, permissions: 4755

  /usr/lib/dbus-1.0/dbus-daemon-launch-helper
     owner: root, group: messagebus, permissions: 4754

  /usr/lib/x86_64-linux-gnu/utempter/utempter
     owner: root, group: utmp, permissions: 2755

  /usr/bin/sudo
     owner: root, group: root, permissions: 4755

  /usr/bin/mount
     owner: root, group: root, permissions: 4755

  /usr/bin/chsh
     owner: root, group: root, permissions: 4755

  /usr/bin/ssh-agent
     owner: root, group: _ssh, permissions: 2755

  /usr/bin/chage
     owner: root, group: shadow, permissions: 2755

  /usr/bin/newgrp
     owner: root, group: root, permissions: 4755

  /usr/bin/gpasswd
     owner: root, group: root, permissions: 4755

  /usr/bin/umount
     owner: root, group: root, permissions: 4755

  /usr/bin/chfn
     owner: root, group: root, permissions: 4755

  /usr/bin/crontab
     owner: root, group: crontab, permissions: 2755

  /usr/bin/expiry
     owner: root, group: shadow, permissions: 2755

  /usr/bin/passwd
     owner: root, group: root, permissions: 4755

  /usr/bin/su
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/bin/mount
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/bin/su
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/bin/umount
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/usr/bin/chfn
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/usr/bin/wall
     owner: root, group: tty, permissions: 2755

  /var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/usr/bin/passwd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/usr/bin/newgrp
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/usr/bin/chsh
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/usr/bin/chage
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/usr/bin/gpasswd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/usr/bin/expiry
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/6a0181bf6433cb0787f1211675e09ad050f9d88595a5324e8d6d401cb8cbaee2/diff/sbin/unix_chkpwd
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/4fc489f79dd162280b28f289eb439b70a9ad854fe4cf9f740a8a1817be3e5236/diff/usr/bin/chfn
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/4fc489f79dd162280b28f289eb439b70a9ad854fe4cf9f740a8a1817be3e5236/diff/usr/bin/passwd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/4fc489f79dd162280b28f289eb439b70a9ad854fe4cf9f740a8a1817be3e5236/diff/usr/bin/chsh
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/4fc489f79dd162280b28f289eb439b70a9ad854fe4cf9f740a8a1817be3e5236/diff/usr/bin/chage
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/4fc489f79dd162280b28f289eb439b70a9ad854fe4cf9f740a8a1817be3e5236/diff/usr/bin/gpasswd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/4fc489f79dd162280b28f289eb439b70a9ad854fe4cf9f740a8a1817be3e5236/diff/usr/bin/expiry
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/4fc489f79dd162280b28f289eb439b70a9ad854fe4cf9f740a8a1817be3e5236/diff/sbin/unix_chkpwd
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/bin/mount
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/bin/su
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/bin/umount
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/usr/bin/chfn
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/usr/bin/wall
     owner: root, group: tty, permissions: 2755

  /var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/usr/bin/passwd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/usr/bin/newgrp
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/usr/bin/chsh
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/usr/bin/chage
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/usr/bin/gpasswd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/usr/bin/expiry
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/9301272284e963a05827d23b732de2f67356a9ba0df6817f69ff9d374c6bf502/diff/sbin/unix_chkpwd
     owner: root, group: shadow, permissions: 2755","Ensure that no rogue SUID or SGID programs have been introduced into the system. Review the files returned by the action in the Audit section and confirm the integrity of these binaries.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.2 Ensure permissions on /etc/passwd- are configured"" : [PASSED]

The /etc/passwd- file contains backup user account information.

It is critical to ensure that the /etc/passwd- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.

Solution:
Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd- :

# chmod u-x,go-wx /etc/passwd-
# chown root:root /etc/passwd-

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/passwd-
group: root
mask: 133
owner: root

Actual Value:
The file /etc/passwd- with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/passwd-","Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd- :

# chmod u-x,go-wx /etc/passwd-
# chown root:root /etc/passwd-","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.3 Ensure permissions on /etc/group are configured"" : [PASSED]

The /etc/group file contains a list of all the valid groups defined in the system. The command below allows read/write access for root and read access for everyone else.

The /etc/group file needs to be protected from unauthorized changes by non-privileged users, but needs to be readable as this information is used with many non-privileged programs.

Solution:
Run the following commands to remove excess permissions, set owner, and set group on /etc/group :

# chmod u-x,go-wx /etc/group
# chown root:root /etc/group

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/group
group: root
mask: 133
owner: root

Actual Value:
The file /etc/group with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/group","Run the following commands to remove excess permissions, set owner, and set group on /etc/group :

# chmod u-x,go-wx /etc/group
# chown root:root /etc/group","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.4 Ensure permissions on /etc/group- are configured"" : [PASSED]

The /etc/group- file contains a backup list of all the valid groups defined in the system.

It is critical to ensure that the /etc/group- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.

Solution:
Run the following commands to remove excess permissions, set owner, and set group on /etc/group- :

# chmod u-x,go-wx /etc/group-
# chown root:root /etc/group-

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/group-
group: root
mask: 133
owner: root

Actual Value:
The file /etc/group- with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/group-","Run the following commands to remove excess permissions, set owner, and set group on /etc/group- :

# chmod u-x,go-wx /etc/group-
# chown root:root /etc/group-","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.5 Ensure permissions on /etc/shadow are configured"" : [PASSED]

The /etc/shadow file is used to store the information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.

If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert the user accounts.

Solution:
Run one of the following commands to set ownership of /etc/shadow to root and group to either root or shadow :

# chown root:shadow /etc/shadow
  -OR-
# chown root:root /etc/shadow

Run the following command to remove excess permissions form /etc/shadow :

# chmod u-x,g-wx,o-rwx /etc/shadow

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/shadow
group: shadow
mask: 137
owner: root

Actual Value:
The file /etc/shadow with fmode owner: root group: shadow mode: 0640 uid: 0 gid: 42 uneven permissions : FALSE is compliant with the policy value 

/etc/shadow","Run one of the following commands to set ownership of /etc/shadow to root and group to either root or shadow :

# chown root:shadow /etc/shadow
  -OR-
# chown root:root /etc/shadow

Run the following command to remove excess permissions form /etc/shadow :

# chmod u-x,g-wx,o-rwx /etc/shadow","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.6 Ensure permissions on /etc/shadow- are configured"" : [PASSED]

The /etc/shadow- file is used to store backup information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.

It is critical to ensure that the /etc/shadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.

Solution:
Run one of the following commands to set ownership of /etc/shadow- to root and group to either root or shadow :

# chown root:shadow /etc/shadow-
  -OR-
# chown root:root /etc/shadow-

Run the following command to remove excess permissions form /etc/shadow- :

# chmod u-x,g-wx,o-rwx /etc/shadow-

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/shadow
group: shadow
mask: 137
owner: root

Actual Value:
The file /etc/shadow with fmode owner: root group: shadow mode: 0640 uid: 0 gid: 42 uneven permissions : FALSE is compliant with the policy value 

/etc/shadow","Run one of the following commands to set ownership of /etc/shadow- to root and group to either root or shadow :

# chown root:shadow /etc/shadow-
  -OR-
# chown root:root /etc/shadow-

Run the following command to remove excess permissions form /etc/shadow- :

# chmod u-x,g-wx,o-rwx /etc/shadow-","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.7 Ensure permissions on /etc/gshadow are configured"" : [PASSED]

The /etc/gshadow file is used to store the information about groups that is critical to the security of those accounts, such as the hashed password and other security information.

If attackers can gain read access to the /etc/gshadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/gshadow file (such as group administrators) could also be useful to subvert the group.

Solution:
Run one of the following commands to set ownership of /etc/gshadow to root and group to either root or shadow :

# chown root:shadow /etc/gshadow
  -OR-
# chown root:root /etc/gshadow

Run the following command to remove excess permissions form /etc/gshadow :

# chmod u-x,g-wx,o-rwx /etc/gshadow

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/gshadow
group: root
group: shadow
mask: 137
owner: root

Actual Value:
The file /etc/gshadow with fmode owner: root group: shadow mode: 0640 uid: 0 gid: 42 uneven permissions : FALSE is compliant with the policy value 

/etc/gshadow","Run one of the following commands to set ownership of /etc/gshadow to root and group to either root or shadow :

# chown root:shadow /etc/gshadow
  -OR-
# chown root:root /etc/gshadow

Run the following command to remove excess permissions form /etc/gshadow :

# chmod u-x,g-wx,o-rwx /etc/gshadow","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.8 Ensure permissions on /etc/gshadow- are configured"" : [PASSED]

The /etc/gshadow- file is used to store backup information about groups that is critical to the security of those accounts, such as the hashed password and other security information.

It is critical to ensure that the /etc/gshadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.

Solution:
Run one of the following commands to set ownership of /etc/gshadow- to root and group to either root or shadow :

# chown root:shadow /etc/gshadow-
  -OR-
# chown root:root /etc/gshadow-

Run the following command to remove excess permissions form /etc/gshadow- :

# chmod u-x,g-wx,o-rwx /etc/gshadow-

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/gshadow-
group: root
group: shadow
mask: 137
owner: root

Actual Value:
The file /etc/gshadow- with fmode owner: root group: shadow mode: 0640 uid: 0 gid: 42 uneven permissions : FALSE is compliant with the policy value 

/etc/gshadow-","Run one of the following commands to set ownership of /etc/gshadow- to root and group to either root or shadow :

# chown root:shadow /etc/gshadow-
  -OR-
# chown root:root /etc/gshadow-

Run the following command to remove excess permissions form /etc/gshadow- :

# chmod u-x,g-wx,o-rwx /etc/gshadow-","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.9 Ensure permissions on /etc/shells are configured"" : [PASSED]

/etc/shells is a text file which contains the full pathnames of valid login shells. This file is consulted by chsh and available to be queried by other programs.

It is critical to ensure that the /etc/shells file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.

Solution:
Run the following commands to remove excess permissions, set owner, and set group on /etc/shells :

# chmod u-x,go-wx /etc/shells
# chown root:root /etc/shells

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/shells
group: root
mask: 133
owner: root

Actual Value:
The file /etc/shells with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/shells","Run the following commands to remove excess permissions, set owner, and set group on /etc/shells :

# chmod u-x,go-wx /etc/shells
# chown root:root /etc/shells","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.1 Ensure accounts in /etc/passwd use shadowed passwords"" : [PASSED]

Local accounts can uses shadowed passwords. With shadowed passwords, The passwords are saved in shadow password file, /etc/shadow encrypted by a salted one-way hash. Accounts with a shadowed password have an x in the second field in /etc/passwd

The /etc/passwd file also contains information like user ID's and group ID's that are used by many system programs. Therefore, the /etc/passwd file must remain world readable. In spite of encoding the password with a randomly-generated one-way hash function, an attacker could still break the system if they got access to the /etc/passwd file. This can be mitigated by using shadowed passwords, thus moving the passwords in the /etc/passwd file to /etc/shadow The /etc/shadow file is set so only root will be able to read and write. This helps mitigate the risk of an attacker gaining access to the encoded passwords with which to perform a dictionary attack.

Note:

 - All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.
 - A user account with an empty second field in /etc/passwd allows the account to be logged into by providing only the username.

Solution:
Run the following command to set accounts to use shadowed passwords and migrate passwords in /etc/passwd to /etc/shadow :

# pwconv

Investigate to determine if the account is logged in and what it is being used for, to determine if it needs to be forced off.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1

Policy Value:
cmd: /bin/awk -F: '($2 != ""x"" ) { print $1 "" is not set to shadowed passwords ""}' /etc/passwd | /bin/awk '{print} END {if (NR == 0) print ""none""}'
expect: ^none$

Actual Value:
The command '/bin/awk -F: '($2 != ""x"" ) { print $1 "" is not set to shadowed passwords ""}' /etc/passwd | /bin/awk '{print} END {if (NR == 0) print ""none""}'' returned : 

none","Run the following command to set accounts to use shadowed passwords and migrate passwords in /etc/passwd to /etc/shadow :

# pwconv

Investigate to determine if the account is logged in and what it is being used for, to determine if it needs to be forced off.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.10 Ensure local interactive user dot files access is configured"" : [PASSED]

While the system administrator can establish secure permissions for users' ""dot"" files, the users can easily override these.

 - forward file specifies an email address to forward the user's mail to.
 - rhost file provides the ""remote authentication"" database for the rcp, rlogin, and rsh commands and the rcmd() function. These files bypass the standard password-based user authentication mechanism. They specify remote hosts and users that are considered trusted (i.e. are allowed to access the local system without supplying a password)
 - netrc file contains data for logging into a remote host or passing authentication to an API.
 - bash_history file keeps track of the user's commands.

User configuration files with excessive or incorrect access may enable malicious users to steal or modify other users' data or to gain another user's system privileges.

Solution:
Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user dot file permissions and determine the action to be taken in accordance with site policy.

The following script will:

 - remove excessive permissions on dot files within interactive users' home directories
 - change ownership of dot files within interactive users' home directories to the user
 - change group ownership of dot files within interactive users' home directories to the user's primary group
 - listforward andrhost files to be investigated and manually deleted

#!/usr/bin/env bash

{
   l_valid_shells=""^($( awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   unset a_uarr &amp;&amp; a_uarr=() # Clear and initialize array
   while read -r l_epu l_eph; do # Populate array with users and user home location
      [[ -n ""$l_epu"" &amp;&amp; -n ""$l_eph"" ]] &amp;&amp; a_uarr+=(""$l_epu $l_eph"")
   done <<< ""$(awk -v pat=""$l_valid_shells"" -F: '$(NF) ~ pat { print $1 "" "" $(NF-1) }' /etc/passwd)""
   l_asize=""${#a_uarr[@]}"" # Here if we want to look at number of users before proceeding
   l_maxsize=""1000"" # Maximum number of local interactive users before warning (Default 1,000)
   [ ""$l_asize "" -gt ""$l_maxsize"" ] &amp;&amp; echo -e ""
 ** INFO **
 - \""$l_asize\"" Local interactive users found on the system
 - This may be a long running check
""
   file_access_fix()
   {
      l_facout2=""""
      l_max=""$( printf '%o' $(( 0777 &amp; ~$l_mask)) )""
      if [ $(( $l_mode &amp; $l_mask )) -gt 0 ]; then
         echo -e "" - File: \""$l_hdfile\"" is mode: \""$l_mode\"" and should be mode: \""$l_max\"" or more restrictive
 - Changing to mode \""$l_max\""""
         chmod ""$l_chp"" ""$l_hdfile""
      fi
      if [[ ! ""$l_owner"" =~ ($l_user) ]]; then
         echo -e "" - File: \""$l_hdfile\"" owned by: \""$l_owner\"" and should be owned by \""${l_user//|/ or }\""
 - Changing ownership to \""$l_user\""""
         chown ""$l_user"" ""$l_hdfile""
      fi
      if [[ ! ""$l_gowner"" =~ ($l_group) ]]; then
         echo -e "" - File: \""$l_hdfile\"" group owned by: \""$l_gowner\"" and should be group owned by \""${l_group//|/ or }\""
 - Changing group ownership to \""$l_group\""""
         chgrp ""$l_group"" ""$l_hdfile""
      fi
   }
   while read -r l_user l_home; do
      if [ -d ""$l_home"" ]; then
         echo -e ""
 - Checking user: \""$l_user\"" home directory: \""$l_home\""""
         l_group=""$(id -gn ""$l_user"" | xargs)""
         l_group=""${l_group// /|}""
         while IFS= read -r -d $'0' l_hdfile; do
            while read -r l_mode l_owner l_gowner; do
               case ""$(basename ""$l_hdfile"")"" in
                  .forward | .rhost )
                     echo -e "" - File: \""$l_hdfile\"" exists
 - Please investigate and manually delete \""$l_hdfile\""""
                  ;;
                  .netrc )
                     l_mask='0177'
                     l_chp=""u-x,go-rwx""
                     file_access_fix ;;
                  .bash_history )
                     l_mask='0177'
                     l_chp=""u-x,go-rwx""
                     file_access_fix ;;
                  * )
                     l_mask='0133'
                     l_chp=""u-x,go-wx""
                     file_access_fix ;;
                  esac
            done <<< ""$(stat -Lc '%#a %U %G' ""$l_hdfile"")""
         done < <(find ""$l_home"" -xdev -type f -name '.*' -print0)
      fi
   done <<< ""$(printf '%s
' ""${a_uarr[@]}"")""
   unset a_uarr # Remove array
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$
timeout: 7200

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **
 - * Correctly configured * :
  - No local interactive users home directories contain:
   - "".forward"" or "".rhost"" files
   - "".netrc"" files with incorrect access configured
   - "".bash_history"" files with incorrect access configured
   - ""dot"" files with incorrect access configured","Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user dot file permissions and determine the action to be taken in accordance with site policy.

The following script will:

 - remove excessive permissions on dot files within interactive users' home directories
 - change ownership of dot files within interactive users' home directories to the user
 - change group ownership of dot files within interactive users' home directories to the user's primary group
 - listforward andrhost files to be investigated and manually deleted

#!/usr/bin/env bash

{
   l_valid_shells=""^($( awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   unset a_uarr &amp;&amp; a_uarr=() # Clear and initialize array
   while read -r l_epu l_eph; do # Populate array with users and user home location
      [[ -n ""$l_epu"" &amp;&amp; -n ""$l_eph"" ]] &amp;&amp; a_uarr+=(""$l_epu $l_eph"")
   done <<< ""$(awk -v pat=""$l_valid_shells"" -F: '$(NF) ~ pat { print $1 "" "" $(NF-1) }' /etc/passwd)""
   l_asize=""${#a_uarr[@]}"" # Here if we want to look at number of users before proceeding
   l_maxsize=""1000"" # Maximum number of local interactive users before warning (Default 1,000)
   [ ""$l_asize "" -gt ""$l_maxsize"" ] &amp;&amp; echo -e ""
 ** INFO **
 - \""$l_asize\"" Local interactive users found on the system
 - This may be a long running check
""
   file_access_fix()
   {
      l_facout2=""""
      l_max=""$( printf '%o' $(( 0777 &amp; ~$l_mask)) )""
      if [ $(( $l_mode &amp; $l_mask )) -gt 0 ]; then
         echo -e "" - File: \""$l_hdfile\"" is mode: \""$l_mode\"" and should be mode: \""$l_max\"" or more restrictive
 - Changing to mode \""$l_max\""""
         chmod ""$l_chp"" ""$l_hdfile""
      fi
      if [[ ! ""$l_owner"" =~ ($l_user) ]]; then
         echo -e "" - File: \""$l_hdfile\"" owned by: \""$l_owner\"" and should be owned by \""${l_user//|/ or }\""
 - Changing ownership to \""$l_user\""""
         chown ""$l_user"" ""$l_hdfile""
      fi
      if [[ ! ""$l_gowner"" =~ ($l_group) ]]; then
         echo -e "" - File: \""$l_hdfile\"" group owned by: \""$l_gowner\"" and should be group owned by \""${l_group//|/ or }\""
 - Changing group ownership to \""$l_group\""""
         chgrp ""$l_group"" ""$l_hdfile""
      fi
   }
   while read -r l_user l_home; do
      if [ -d ""$l_home"" ]; then
         echo -e ""
 - Checking user: \""$l_user\"" home directory: \""$l_home\""""
         l_group=""$(id -gn ""$l_user"" | xargs)""
         l_group=""${l_group// /|}""
         while IFS= read -r -d $'0' l_hdfile; do
            while read -r l_mode l_owner l_gowner; do
               case ""$(basename ""$l_hdfile"")"" in
                  .forward | .rhost )
                     echo -e "" - File: \""$l_hdfile\"" exists
 - Please investigate and manually delete \""$l_hdfile\""""
                  ;;
                  .netrc )
                     l_mask='0177'
                     l_chp=""u-x,go-rwx""
                     file_access_fix ;;
                  .bash_history )
                     l_mask='0177'
                     l_chp=""u-x,go-rwx""
                     file_access_fix ;;
                  * )
                     l_mask='0133'
                     l_chp=""u-x,go-wx""
                     file_access_fix ;;
                  esac
            done <<< ""$(stat -Lc '%#a %U %G' ""$l_hdfile"")""
         done < <(find ""$l_home"" -xdev -type f -name '.*' -print0)
      fi
   done <<< ""$(printf '%s
' ""${a_uarr[@]}"")""
   unset a_uarr # Remove array
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.2 Ensure /etc/shadow password fields are not empty"" : [PASSED]

An account with an empty password field means that anybody may log in as that user without providing a password.

All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.

Solution:
If any accounts in the /etc/shadow file do not have a password, run the following command to lock the account until it can be determined why it does not have a password:

# passwd -l <username>

Also, check to see if the account is logged in and investigate what it is being used for to determine if it needs to be forced off.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
cmd: /bin/awk -F : '($2 == """") { print $1 "" does not have a password.""}' /etc/shadow | /bin/awk '{print} END {if (NR == 0) print ""none""}'
expect: ^none$

Actual Value:
The command '/bin/awk -F : '($2 == """") { print $1 "" does not have a password.""}' /etc/shadow | /bin/awk '{print} END {if (NR == 0) print ""none""}'' returned : 

none","If any accounts in the /etc/shadow file do not have a password, run the following command to lock the account until it can be determined why it does not have a password:

# passwd -l <username>

Also, check to see if the account is logged in and investigate what it is being used for to determine if it needs to be forced off.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.3 Ensure all groups in /etc/passwd exist in /etc/group"" : [PASSED]

Over time, system administration errors and changes can lead to groups being defined in /etc/passwd but not in /etc/group

Groups defined in the /etc/passwd file but not in the /etc/group file pose a threat to system security since group permissions are not properly managed.

Solution:
Analyze the output of the Audit step above and perform the appropriate action to correct any discrepancies found.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-2,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv8|3.3,CSCv8|14.6,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
name: passwd_invalid_gid

Actual Value:
No issues found.","Analyze the output of the Audit step above and perform the appropriate action to correct any discrepancies found.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.4 Ensure shadow group is empty"" : [PASSED]

The shadow group allows system programs which require access the ability to read the /etc/shadow file. No users should be assigned to the shadow group.

Any users assigned to the shadow group would be granted read access to the /etc/shadow file. If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed passwords to break them. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert additional user accounts.

Solution:
Run the following command to remove all users from the shadow group

# sed -ri 's/(^shadow:[^:]*:[^:]*:)([^:]+$)/1/' /etc/group

Change the primary group of any users with shadow as their primary group.

# usermod -g <primary group> <user>

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /bin/awk -F: 'FILENAME == ""/etc/group"" && $1 == ""shadow"" { gid=$3; if ($4!="""") { print ""secondary ""$4; f=1 } } FILENAME == ""/etc/passwd"" && $4 == gid { print ""primary ""$1; f=1 } END { if (!f) print ""shadow group empty"" }' /etc/group /etc/passwd
expect: ^shadow group empty$

Actual Value:
The command '/bin/awk -F: 'FILENAME == ""/etc/group"" && $1 == ""shadow"" { gid=$3; if ($4!="""") { print ""secondary ""$4; f=1 } } FILENAME == ""/etc/passwd"" && $4 == gid { print ""primary ""$1; f=1 } END { if (!f) print ""shadow group empty"" }' /etc/group /etc/passwd' returned : 

shadow group empty","Run the following command to remove all users from the shadow group

# sed -ri 's/(^shadow:[^:]*:[^:]*:)([^:]+$)/1/' /etc/group

Change the primary group of any users with shadow as their primary group.

# usermod -g <primary group> <user>","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.5 Ensure no duplicate UIDs exist"" : [PASSED]

Although the useradd program will not let you create a duplicate User ID (UID), it is possible for an administrator to manually edit the /etc/passwd file and change the UID field.

Users must be assigned unique UIDs for accountability and to ensure appropriate access protections.

Solution:
Based on the results of the audit script, establish unique UIDs and review all files owned by the shared UIDs to determine which UID they are supposed to belong to.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5

Policy Value:
name: passwd_duplicate_uid

Actual Value:
No duplicate User IDs detected","Based on the results of the audit script, establish unique UIDs and review all files owned by the shared UIDs to determine which UID they are supposed to belong to.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.6 Ensure no duplicate GIDs exist"" : [PASSED]

Although the groupadd program will not let you create a duplicate Group ID (GID), it is possible for an administrator to manually edit the /etc/group file and change the GID field.

User groups must be assigned unique GIDs for accountability and to ensure appropriate access protections.

Solution:
Based on the results of the audit script, establish unique GIDs and review all files owned by the shared GID to determine which group they are supposed to belong to.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5

Policy Value:
name: group_duplicate_gid

Actual Value:
No duplicate Group IDs detected","Based on the results of the audit script, establish unique GIDs and review all files owned by the shared GID to determine which group they are supposed to belong to.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.7 Ensure no duplicate user names exist"" : [PASSED]

Although the useradd program will not let you create a duplicate user name, it is possible for an administrator to manually edit the /etc/passwd file and change the user name.

If a user is assigned a duplicate user name, it will create and have access to files with the first UID for that username in /etc/passwd For example, if ""test4"" has a UID of 1000 and a subsequent ""test4"" entry has a UID of 2000, logging in as ""test4"" will use UID 1000. Effectively, the UID is shared, which is a security problem.

Solution:
Based on the results of the audit script, establish unique user names for the users. File ownerships will automatically reflect the change as long as the users have unique UIDs.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5

Policy Value:
name: passwd_duplicate_username

Actual Value:
No issues found.","Based on the results of the audit script, establish unique user names for the users. File ownerships will automatically reflect the change as long as the users have unique UIDs.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.8 Ensure no duplicate group names exist"" : [PASSED]

Although the groupadd program will not let you create a duplicate group name, it is possible for an administrator to manually edit the /etc/group file and change the group name.

If a group is assigned a duplicate group name, it will create and have access to files with the first GID for that group in /etc/group Effectively, the GID is shared, which is a security problem.

Solution:
Based on the results of the audit script, establish unique names for the user groups. File group ownerships will automatically reflect the change as long as the groups have unique GIDs.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5

Policy Value:
name: group_duplicate_name

Actual Value:
No issues found.","Based on the results of the audit script, establish unique names for the user groups. File group ownerships will automatically reflect the change as long as the groups have unique GIDs.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.110.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.9 Ensure local interactive user home directories are configured"" : [FAILED]

The user home directory is space defined for the particular user to set local environment variables and to store personal files. While the system administrator can establish secure permissions for users' home directories, the users can easily override these. Users can be defined in /etc/passwd without a home directory or with a home directory that does not actually exist.

Since the user is accountable for files stored in the user home directory, the user must be the owner of the directory. Group or world-writable user home directories may enable malicious users to steal or modify other users' data or to gain another user's system privileges. If the user's home directory does not exist or is unassigned, the user will be placed in ""/"" and will not be able to write any files or have local environment variables set.

Solution:
If a local interactive users' home directory is undefined and/or doesn't exist, follow local site policy and perform one of the following:

 - Lock the user account
 - Remove the user from the system
 - create a directory for the user. If undefined, edit /etc/passwd and add the absolute path to the directory to the last field of the user.

Run the following script to:

 - Remove excessive permissions from local interactive users home directories
 - Update the home directory's owner

#!/usr/bin/env bash

{
   l_output2=""""
   l_valid_shells=""^($( awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   unset a_uarr &amp;&amp; a_uarr=() # Clear and initialize array
   while read -r l_epu l_eph; do # Populate array with users and user home location
      a_uarr+=(""$l_epu $l_eph"")
   done <<< ""$(awk -v pat=""$l_valid_shells"" -F: '$(NF) ~ pat { print $1 "" "" $(NF-1) }' /etc/passwd)""
   l_asize=""${#a_uarr[@]}"" # Here if we want to look at number of users before proceeding
   [ ""$l_asize "" -gt ""10000"" ] &amp;&amp; echo -e ""
 ** INFO **
 - \""$l_asize\"" Local interactive users found on the system
 - This may be a long running process
""
   while read -r l_user l_home; do
      if [ -d ""$l_home"" ]; then
         l_mask='0027'
         l_max=""$( printf '%o' $(( 0777 &amp; ~$l_mask)) )""
         while read -r l_own l_mode; do
            if [ ""$l_user"" != ""$l_own"" ]; then
               l_output2=""$l_output2
 - User: \""$l_user\"" Home \""$l_home\"" is owned by: \""$l_own\""
 - changing ownership to: \""$l_user\""
""
               chown ""$l_user"" ""$l_home""
            fi
            if [ $(( $l_mode &amp; $l_mask )) -gt 0 ]; then
               l_output2=""$l_output2
 - User: \""$l_user\"" Home \""$l_home\"" is mode: \""$l_mode\"" should be mode: \""$l_max\"" or more restrictive
 - removing excess permissions
""
               chmod g-w,o-rwx ""$l_home""
            fi
         done <<< ""$(stat -Lc '%U %#a' ""$l_home"")""
      else
         l_output2=""$l_output2
 - User: \""$l_user\"" Home \""$l_home\"" Doesn't exist
 - Please create a home in accordance with local site policy""
      fi
   done <<< ""$(printf '%s
' ""${a_uarr[@]}"")""
   if [ -z ""$l_output2"" ]; then # If l_output2 is empty, we pass
      echo -e "" - No modification needed to local interactive users home directories""
   else
      echo -e ""
$l_output2""
   fi
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - * Reasons for audit failure * :

  - User: ""scion"" Home ""/home/scion"" Doesn't exist

- * Correctly configured * :
  - All local interactive users:
   - own their home directory
   - home directories are mode: ""750"" or more restrictive","If a local interactive users' home directory is undefined and/or doesn't exist, follow local site policy and perform one of the following:

 - Lock the user account
 - Remove the user from the system
 - create a directory for the user. If undefined, edit /etc/passwd and add the absolute path to the directory to the last field of the user.

Run the following script to:

 - Remove excessive permissions from local interactive users home directories
 - Update the home directory's owner

#!/usr/bin/env bash

{
   l_output2=""""
   l_valid_shells=""^($( awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   unset a_uarr &amp;&amp; a_uarr=() # Clear and initialize array
   while read -r l_epu l_eph; do # Populate array with users and user home location
      a_uarr+=(""$l_epu $l_eph"")
   done <<< ""$(awk -v pat=""$l_valid_shells"" -F: '$(NF) ~ pat { print $1 "" "" $(NF-1) }' /etc/passwd)""
   l_asize=""${#a_uarr[@]}"" # Here if we want to look at number of users before proceeding
   [ ""$l_asize "" -gt ""10000"" ] &amp;&amp; echo -e ""
 ** INFO **
 - \""$l_asize\"" Local interactive users found on the system
 - This may be a long running process
""
   while read -r l_user l_home; do
      if [ -d ""$l_home"" ]; then
         l_mask='0027'
         l_max=""$( printf '%o' $(( 0777 &amp; ~$l_mask)) )""
         while read -r l_own l_mode; do
            if [ ""$l_user"" != ""$l_own"" ]; then
               l_output2=""$l_output2
 - User: \""$l_user\"" Home \""$l_home\"" is owned by: \""$l_own\""
 - changing ownership to: \""$l_user\""
""
               chown ""$l_user"" ""$l_home""
            fi
            if [ $(( $l_mode &amp; $l_mask )) -gt 0 ]; then
               l_output2=""$l_output2
 - User: \""$l_user\"" Home \""$l_home\"" is mode: \""$l_mode\"" should be mode: \""$l_max\"" or more restrictive
 - removing excess permissions
""
               chmod g-w,o-rwx ""$l_home""
            fi
         done <<< ""$(stat -Lc '%U %#a' ""$l_home"")""
      else
         l_output2=""$l_output2
 - User: \""$l_user\"" Home \""$l_home\"" Doesn't exist
 - Please create a home in accordance with local site policy""
      fi
   done <<< ""$(printf '%s
' ""${a_uarr[@]}"")""
   if [ -z ""$l_output2"" ]; then # If l_output2 is empty, we pass
      echo -e "" - No modification needed to local interactive users home directories""
   else
      echo -e ""
$l_output2""
   fi
}","https://workbench.cisecurity.org/benchmarks/17074",""
"25202","","","None","192.168.110.1","tcp","0","Enumerate IPv6 Interfaces via SSH","Nessus was able to enumerate the IPv6 interfaces on the remote host.","Nessus was able to enumerate the network interfaces configured with
IPv6 addresses by connecting to the remote host via SSH using the
supplied credentials.","Disable IPv6 if you are not actually using it. Otherwise, disable any
unused IPv6 interfaces.","","
The following IPv6 interfaces are set on the remote host :

 - fe80::3eec:efff:fede:9ac4 (on interface eno3)
 - fe80::3eec:efff:fede:9ac5 (on interface eno4)
 - fe80::3eec:efff:fede:9d5e (on interface eno7)
 - fe80::3eec:efff:fede:9d5f (on interface eno8)
 - ::1 (on interface lo)
 - fe80::5989:f329:d605:16bc (on interface scion-gateway)
"
"25203","","","None","192.168.110.1","tcp","0","Enumerate IPv4 Interfaces via SSH","Nessus was able to enumerate the IPv4 interfaces on the remote host.","Nessus was able to enumerate the network interfaces configured with
IPv4 addresses by connecting to the remote host via SSH using the
supplied credentials.","Disable any unused IPv4 interfaces.","","
The following IPv4 addresses are set on the remote host :

 - 172.17.0.1 (on interface docker0)
 - 195.144.33.209 (on interface eno3)
 - 10.20.0.102 (on interface eno4)
 - 192.168.110.1 (on interface eno7)
 - 217.193.19.214 (on interface eno8)
 - 127.0.0.1 (on interface lo)
 - 198.18.30.1 (on interface wg0)
 - 198.19.6.4 (on interface wg1)
"
"33276","","","None","192.168.110.1","tcp","0","Enumerate MAC Addresses via SSH","Nessus was able to enumerate MAC addresses on the remote host.","Nessus was able to enumerate MAC addresses by connecting to the remote
host via SSH with the supplied credentials.","Disable any unused interfaces.","","
The following MAC addresses exist on the remote host :

  - 3c:ec:ef:de:9a:c5 (interface eno4)
  - 3c:ec:ef:dd:55:e1 (interface enp22s0f3)
  - 3c:ec:ef:de:9a:c4 (interface eno3)
  - 3c:ec:ef:de:9a:c2 (interface eno1)
  - 3c:ec:ef:de:9d:5f (interface eno8)
  - 3c:ec:ef:dd:55:e0 (interface enp22s0f2)
  - 3c:ec:ef:de:9d:5e (interface eno7)
  - 3c:ec:ef:dd:55:de (interface enp22s0f0)
  - 3c:ec:ef:de:9b:ce (interface eno5)
  - 02:42:1e:55:59:53 (interface docker0)
  - 3c:ec:ef:de:9b:cf (interface eno6)
  - 3c:ec:ef:dd:55:df (interface enp22s0f1)
  - b0:3a:f2:b6:05:9f (interface enxb03af2b6059f)
"
"55472","","","None","192.168.110.1","tcp","0","Device Hostname","It was possible to determine the remote system hostname.","This plugin reports a device's hostname collected via SSH or WMI.","n/a","","
  Hostname : s01.chthu1.arma
    s01.chthu1.arma (hostname command)"
"141118","","","None","192.168.110.1","tcp","22","Target Credential Status by Authentication Protocol - Valid Credentials Provided","Valid credentials were provided for an available authentication protocol.","Nessus was able to determine that valid credentials were provided for
an authentication protocol available on the remote target because it
was able to successfully authenticate directly to the remote target
using that authentication protocol at least once. Authentication was
successful because the authentication protocol service was available
remotely, the service was able to be identified, the authentication
protocol was able to be negotiated successfully, and a set of
credentials provided in the scan policy for that authentication
protocol was accepted by the remote service. See plugin output for
details, including protocol, port, and account.

Please note the following :

- This plugin reports per protocol, so it is possible for
  valid credentials to be provided for one protocol and not
  another. For example, authentication may succeed via SSH
  but fail via SMB, while no credentials were provided for
  an available SNMP service.

- Providing valid credentials for all available
  authentication protocols may improve scan coverage, but
  the value of successful authentication for a given
  protocol may vary from target to target depending upon
  what data (if any) is gathered from the target via that
  protocol. For example, successful authentication via SSH
  is more valuable for Linux targets than for Windows
  targets, and likewise successful authentication via SMB
  is more valuable for Windows targets than for Linux
  targets.","n/a","","
Nessus was able to log in to the remote host via the following :

User:       'anapaya'
Port:       22
Proto:      SSH
Method:     publickey
Escalation: sudo
"
"14272","","","None","192.168.111.1","tcp","22","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 22/tcp was found to be open"
"14272","","","None","192.168.111.1","tcp","80","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 80/tcp was found to be open"
"14272","","","None","192.168.111.1","tcp","443","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 443/tcp was found to be open"
"14272","","","None","192.168.111.1","tcp","30252","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 30252/tcp was found to be open"
"14272","","","None","192.168.111.1","tcp","42001","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 42001/tcp was found to be open"
"14272","","","None","192.168.111.1","udp","443","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 443/udp was found to be open"
"14272","","","None","192.168.111.1","udp","30041","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 30041/udp was found to be open"
"14272","","","None","192.168.111.1","udp","30042","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 30042/udp was found to be open"
"14272","","","None","192.168.111.1","udp","51021","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 51021/udp was found to be open"
"19506","","","None","192.168.111.1","tcp","0","Nessus Scan Information","This plugin displays information about the Nessus scan.","This plugin displays, for each tested host, information about the
scan itself :

  - The version of the plugin set.
  - The type of scanner (Nessus or Nessus Home).
  - The version of the Nessus Engine.
  - The port scanner(s) used.
  - The port range scanned.
  - The ping round trip time 
  - Whether credentialed or third-party patch management
    checks are possible.
  - Whether the display of superseded patches is enabled
  - The date of the scan.
  - The duration of the scan.
  - The number of hosts scanned in parallel.
  - The number of checks done in parallel.","n/a","","Information about this scan : 

Nessus version : 10.8.1
Nessus build : 20004
Plugin feed version : 202408120709
Scanner edition used : Nessus
Scanner OS : LINUX
Scanner distribution : ubuntu1604-x86-64
Scan type : Normal
Scan name : Ubuntu 22.04 Compliance Scan
Scan policy used : Policy Compliance Auditing
Scanner IP : 192.168.110.80
Port scanner(s) : netstat 
Port range : default
Ping RTT : 62.056 ms
Thorough tests : no
Experimental tests : no
Scan for Unpatched Vulnerabilities : no
Plugin debugging enabled : no
Paranoia level : 1
Report verbosity : 1
Safe checks : yes
Optimize the test : no
Credentialed checks : yes, as 'anapaya' via ssh
Attempt Least Privilege : no
Patch management checks : None
Display superseded patches : yes (supersedence plugin did not launch)
CGI scanning : disabled
Web application tests : disabled
Max hosts : 30
Max checks : 4
Recv timeout : 5
Backports : None
Allow post-scan editing : Yes
Nessus Plugin Signature Checking : Enabled
Audit File Signature Checking : Disabled
Scan Start Date : 2024/8/12 15:26 CEST
Scan duration : 217 sec
Scan for malware : no
"
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""CIS_Ubuntu_Linux_22.04_LTS_v2.0.0_L2_Server.audit from CIS Ubuntu Linux 22.04 LTS Benchmark v2.0.0"" : [PASSED]

See Also: https://workbench.cisecurity.org/benchmarks/17074

Policy Value:
PASSED","n/a","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.6 Ensure squashfs kernel module is not available"" : [PASSED]

The squashfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A squashfs image can be used without having to first decompress the image.

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

Solution:
Run the following script to disable the squashfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install squashfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist squashfs in the /etc/modprobe.d/ directory
 - Unload squashfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist squashfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""squashfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

Impact:

As Snap packages utilize squashfs as a compressed filesystem, disabling squashfs will cause Snap packages to fail.

Snap application packages of software are self-contained and work across a range of Linux distributions. This is unlike traditional Linux package management approaches, like APT or RPM, which require specifically adapted packages per Linux distribution on an application update and delay therefore application deployment from developers to their software's end-user. Snaps themselves have no dependency on any external store (""App store""), can be obtained from any source and can be therefore used for upstream software deployment.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - module: ""squashfs"" doesn't exist in ""/lib/modules/5.15.0-116-generic/kernel/fs""
 - module: ""squashfs"" doesn't exist in ""/lib/modules/5.15.0-117-generic/kernel/fs""","Run the following script to disable the squashfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install squashfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist squashfs in the /etc/modprobe.d/ directory
 - Unload squashfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist squashfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""squashfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

Impact:

As Snap packages utilize squashfs as a compressed filesystem, disabling squashfs will cause Snap packages to fail.

Snap application packages of software are self-contained and work across a range of Linux distributions. This is unlike traditional Linux package management approaches, like APT or RPM, which require specifically adapted packages per Linux distribution on an application update and delay therefore application deployment from developers to their software's end-user. Snaps themselves have no dependency on any external store (""App store""), can be obtained from any source and can be therefore used for upstream software deployment.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.7 Ensure udf kernel module is not available"" : [FAILED]

The udf filesystem type is the universal disk format used to implement ISO/IEC 13346 and ECMA-167 specifications. This is an open vendor filesystem type for data storage on a broad range of media. This filesystem type is necessary to support writing DVDs and newer optical disc formats.

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

Solution:
Run the following script to disable the udf module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install udf /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist udf in the /etc/modprobe.d/ directory
 - Unload udf from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist udf in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""udf"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

Impact:

Microsoft Azure requires the usage of udf

udf should not be disabled on systems run on Microsoft Azure.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""udf"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/fs""
  - ""/lib/modules/5.15.0-117-generic/kernel/fs""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""udf"" is not deny listed
 - module: ""udf"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/fs/udf/udf.ko ""


- Correctly set:

 - module: ""udf"" is not loaded","Run the following script to disable the udf module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install udf /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist udf in the /etc/modprobe.d/ directory
 - Unload udf from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist udf in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""udf"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

Impact:

Microsoft Azure requires the usage of udf

udf should not be disabled on systems run on Microsoft Azure.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.3.1 Ensure separate partition exists for /home"" : [FAILED]

The /home directory is used to support disk storage needs of local users.

The default installation only creates a single / partition. Since the /home directory contains user generated data, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /home and impact all local users.

Configuring /home as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev These options limit an attacker's ability to create exploits on the system. In the case of /home options such as usrquota/grpquota may be considered to limit the impact that users can have on each other with regards to disk resource exhaustion. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options.

As /home contains user data, care should be taken to ensure the security and integrity of the data and mount point.

Solution:
For new installations, during installation create a custom partition setup and specify a separate partition for /home

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: [\s]+/home[\s]+
file: /proc/self/mountinfo
regex: [\s]+/home[\s]+

Actual Value:
The file ""/proc/self/mountinfo"" does not contain ""[\s]+/home[\s]+""","For new installations, during installation create a custom partition setup and specify a separate partition for /home

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.4.1 Ensure separate partition exists for /var"" : [FAILED]

The /var directory is used by daemons and other system services to temporarily store dynamic data. Some directories created by these processes may be world-writable.

The reasoning for mounting /var on a separate partition is as follows.

The default installation only creates a single / partition. Since the /var directory may contain world-writable files and directories, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /var and cause unintended behavior across the system as the disk is full. See man auditd.conf for details.

Configuring /var as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev These options limits an attackers ability to create exploits on the system. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options.

An example of exploiting /var may be an attacker establishing a hard-link to a system setuid program and wait for it to be updated. Once the program was updated, the hard-link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.

Solution:
For new installations, during installation create a custom partition setup and specify a separate partition for /var

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: [\s]+/var[\s]+
file: /proc/self/mountinfo
regex: [\s]+/var[\s]+

Actual Value:
The file ""/proc/self/mountinfo"" does not contain ""[\s]+/var[\s]+""","For new installations, during installation create a custom partition setup and specify a separate partition for /var

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.5.1 Ensure separate partition exists for /var/tmp"" : [FAILED]

The /var/tmp directory is a world-writable directory used for temporary storage by all users and some applications. Temporary files residing in /var/tmp are to be preserved between reboots.

The default installation only creates a single / partition. Since the /var/tmp directory is world-writable, there is a risk of resource exhaustion. In addition, other operations on the system could fill up the disk unrelated to /var/tmp and cause potential disruption to daemons as the disk is full.

Configuring /var/tmp as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev These options limits an attackers ability to create exploits on the system.

Solution:
For new installations, during installation create a custom partition setup and specify a separate partition for /var/tmp

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: [\s]+/var/tmp[\s]+
file: /proc/self/mountinfo
regex: [\s]+/var/tmp[\s]+

Actual Value:
The file ""/proc/self/mountinfo"" does not contain ""[\s]+/var/tmp[\s]+""","For new installations, during installation create a custom partition setup and specify a separate partition for /var/tmp

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.6.1 Ensure separate partition exists for /var/log"" : [FAILED]

The /var/log directory is used by system services to store log data.

The default installation only creates a single / partition. Since the /var/log directory contains log files which can grow quite large, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole.

Configuring /var/log as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev These options limit an attackers ability to create exploits on the system. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options.

As /var/log contains log files, care should be taken to ensure the security and integrity of the data and mount point.

Solution:
For new installations, during installation create a custom partition setup and specify a separate partition for /var/log

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2

Policy Value:
expect: [\s]+/var/log[\s]+
file: /proc/self/mountinfo
regex: [\s]+/var/log[\s]+

Actual Value:
The file ""/proc/self/mountinfo"" does not contain ""[\s]+/var/log[\s]+""","For new installations, during installation create a custom partition setup and specify a separate partition for /var/log

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.7.1 Ensure separate partition exists for /var/log/audit"" : [FAILED]

The auditing daemon, auditd stores log data in the /var/log/audit directory.

The default installation only creates a single / partition. Since the /var/log/audit directory contains the audit.log file which can grow quite large, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /var/log/audit and cause auditd to trigger it's space_left_action as the disk is full. See man auditd.conf for details.

Configuring /var/log/audit as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev These options limit an attacker's ability to create exploits on the system. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options.

As /var/log/audit contains audit logs, care should be taken to ensure the security and integrity of the data and mount point.

Solution:
For new installations, during installation create a custom partition setup and specify a separate partition for /var/log/audit

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2

Policy Value:
expect: [\s]+/var/log/audit[\s]+
file: /proc/self/mountinfo
regex: [\s]+/var/log/audit[\s]+

Actual Value:
The file ""/proc/self/mountinfo"" does not contain ""[\s]+/var/log/audit[\s]+""","For new installations, during installation create a custom partition setup and specify a separate partition for /var/log/audit

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.3.1.4 Ensure all AppArmor Profiles are enforcing"" : [PASSED]

AppArmor profiles define what resources applications are able to access.

Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that any policies that exist on the system are activated.

Solution:
Run the following command to set all profiles to enforce mode:

# aa-enforce /etc/apparmor.d/*

Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - apparmor_status - processes are confined
The command '/sbin/apparmor_status' returned : 

apparmor module is loaded.
22 profiles are loaded.
22 profiles are in enforce mode.
   /usr/bin/man
   /usr/lib/NetworkManager/nm-dhcp-client.action
   /usr/lib/NetworkManager/nm-dhcp-helper
   /usr/lib/connman/scripts/dhclient-script
   /{,usr/}sbin/dhclient
   docker-default
   lsb_release
   man_filter
   man_groff
   nvidia_modprobe
   nvidia_modprobe//kmod
   tcpdump
   ubuntu_pro_apt_news
   ubuntu_pro_esm_cache
   ubuntu_pro_esm_cache//apt_methods
   ubuntu_pro_esm_cache//apt_methods_gpgv
   ubuntu_pro_esm_cache//cloud_id
   ubuntu_pro_esm_cache//dpkg
   ubuntu_pro_esm_cache//ps
   ubuntu_pro_esm_cache//ubuntu_distro_info
   ubuntu_pro_esm_cache_systemctl
   ubuntu_pro_esm_cache_systemd_detect_virt
0 profiles are in complain mode.
0 profiles are in kill mode.
0 profiles are in unconfined mode.
5 processes have profiles defined.
5 processes are in enforce mode.
   /app/scion-all (195372) docker-default
   /app/appliance (195480) docker-default
   /app/scion-all (195497) docker-default
   /otelcol-contrib (195616) docker-default
   /app/scion-all (195761) docker-default
0 processes are in complain mode.
0 processes are unconfined but have a profile defined.
0 processes are in mixed mode.
0 processes are in kill mode.

-------------------------
PASSED - apparmor_status - profiles are loaded
The command '/sbin/apparmor_status' returned : 

apparmor module is loaded.
22 profiles are loaded.
22 profiles are in enforce mode.
   /usr/bin/man
   /usr/lib/NetworkManager/nm-dhcp-client.action
   /usr/lib/NetworkManager/nm-dhcp-helper
   /usr/lib/connman/scripts/dhclient-script
   /{,usr/}sbin/dhclient
   docker-default
   lsb_release
   man_filter
   man_groff
   nvidia_modprobe
   nvidia_modprobe//kmod
   tcpdump
   ubuntu_pro_apt_news
   ubuntu_pro_esm_cache
   ubuntu_pro_esm_cache//apt_methods
   ubuntu_pro_esm_cache//apt_methods_gpgv
   ubuntu_pro_esm_cache//cloud_id
   ubuntu_pro_esm_cache//dpkg
   ubuntu_pro_esm_cache//ps
   ubuntu_pro_esm_cache//ubuntu_distro_info
   ubuntu_pro_esm_cache_systemctl
   ubuntu_pro_esm_cache_systemd_detect_virt
0 profiles are in complain mode.
0 profiles are in kill mode.
0 profiles are in unconfined mode.
5 processes have profiles defined.
5 processes are in enforce mode.
   /app/scion-all (195372) docker-default
   /app/appliance (195480) docker-default
   /app/scion-all (195497) docker-default
   /otelcol-contrib (195616) docker-default
   /app/scion-all (195761) docker-default
0 processes are in complain mode.
0 processes are unconfined but have a profile defined.
0 processes are in mixed mode.
0 processes are in kill mode.

-------------------------
PASSED - apparmor_status - profiles in complain mode
The command '/sbin/apparmor_status' returned : 

apparmor module is loaded.
22 profiles are loaded.
22 profiles are in enforce mode.
   /usr/bin/man
   /usr/lib/NetworkManager/nm-dhcp-client.action
   /usr/lib/NetworkManager/nm-dhcp-helper
   /usr/lib/connman/scripts/dhclient-script
   /{,usr/}sbin/dhclient
   docker-default
   lsb_release
   man_filter
   man_groff
   nvidia_modprobe
   nvidia_modprobe//kmod
   tcpdump
   ubuntu_pro_apt_news
   ubuntu_pro_esm_cache
   ubuntu_pro_esm_cache//apt_methods
   ubuntu_pro_esm_cache//apt_methods_gpgv
   ubuntu_pro_esm_cache//cloud_id
   ubuntu_pro_esm_cache//dpkg
   ubuntu_pro_esm_cache//ps
   ubuntu_pro_esm_cache//ubuntu_distro_info
   ubuntu_pro_esm_cache_systemctl
   ubuntu_pro_esm_cache_systemd_detect_virt
0 profiles are in complain mode.
0 profiles are in kill mode.
0 profiles are in unconfined mode.
5 processes have profiles defined.
5 processes are in enforce mode.
   /app/scion-all (195372) docker-default
   /app/appliance (195480) docker-default
   /app/scion-all (195497) docker-default
   /otelcol-contrib (195616) docker-default
   /app/scion-all (195761) docker-default
0 processes are in complain mode.
0 processes are unconfined but have a profile defined.
0 processes are in mixed mode.
0 processes are in kill mode.","Run the following command to set all profiles to enforce mode:

# aa-enforce /etc/apparmor.d/*

Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.1 Ensure GDM is removed"" : [PASSED]

The GNOME Display Manager (GDM) is a program that manages graphical display servers and handles graphical user logins.

If a Graphical User Interface (GUI) is not required, it should be removed to reduce the attack surface of the system.

Solution:
Run the following commands to uninstall gdm3 and remove unused dependencies:

# apt purge gdm3
# apt autoremove gdm3

Impact:

Removing the GNOME Display manager will remove the Graphical User Interface (GUI) from the system.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s gdm3 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s gdm3 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'gdm3' is not installed and no information is available","Run the following commands to uninstall gdm3 and remove unused dependencies:

# apt purge gdm3
# apt autoremove gdm3

Impact:

Removing the GNOME Display manager will remove the Graphical User Interface (GUI) from the system.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.20 Ensure X window server services are not in use"" : [PASSED]

The X Window System provides a Graphical User Interface (GUI) where users can have multiple windows in which to run programs and various add on. The X Windows system is typically used on workstations where users login, but not on servers where users typically do not login.

Unless your organization specifically requires graphical login access via X Windows, remove it to reduce the potential attack surface.

Solution:
- IF - a Graphical Desktop Manager or X-Windows server is not required and approved by local site policy:

Run the following command to remove the X Windows Server package:

# apt purge xserver-common

Impact:

If a Graphical Desktop Manager (GDM) is in use on the system, there may be a dependency on the xorg-x11-server-common package. If the GDM is required and approved by local site policy, the package should not be removed.

Many Linux systems run applications which require a Java runtime. Some Linux Java packages have a dependency on specific X Windows xorg-x11-fonts. One workaround to avoid this dependency is to use the ""headless"" Java packages for your specific Java runtime.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|2.6,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s xserver-common 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s xserver-common 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'xserver-common' is not installed and no information is available","- IF - a Graphical Desktop Manager or X-Windows server is not required and approved by local site policy:

Run the following command to remove the X Windows Server package:

# apt purge xserver-common

Impact:

If a Graphical Desktop Manager (GDM) is in use on the system, there may be a dependency on the xorg-x11-server-common package. If the GDM is required and approved by local site policy, the package should not be removed.

Many Linux systems run applications which require a Java runtime. Some Linux Java packages have a dependency on specific X Windows xorg-x11-fonts. One workaround to avoid this dependency is to use the ""headless"" Java packages for your specific Java runtime.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.2.1 Ensure dccp kernel module is not available"" : [FAILED]

The Datagram Congestion Control Protocol (DCCP) is a transport layer protocol that supports streaming media and telephony. DCCP provides a way to gain access to congestion control, without having to do it at the application layer, but does not provide in-sequence delivery.

-IF- the protocol is not required, it is recommended that the drivers not be installed to reduce the potential attack surface.

Solution:
Run the following script to disable the dccp module:

-IF- the module is available in the running kernel:

 - Create a file with install dccp /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist dccp in the /etc/modprobe.d/ directory
 - Unload dccp from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist dccp in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""dccp"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""dccp"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/net""
  - ""/lib/modules/5.15.0-117-generic/kernel/net""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""dccp"" is not deny listed
 - module: ""dccp"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/net/dccp/dccp.ko ""


- Correctly set:

 - module: ""dccp"" is not loaded","Run the following script to disable the dccp module:

-IF- the module is available in the running kernel:

 - Create a file with install dccp /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist dccp in the /etc/modprobe.d/ directory
 - Unload dccp from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist dccp in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""dccp"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.2.2 Ensure tipc kernel module is not available"" : [FAILED]

The Transparent Inter-Process Communication (TIPC) protocol is designed to provide communication between cluster nodes.

-IF- the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.

Solution:
Run the following script to disable the tipc module:

-IF- the module is available in the running kernel:

 - Create a file with install tipc /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist tipc in the /etc/modprobe.d/ directory
 - Unload tipc from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist tipc in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""tipc"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""tipc"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/net""
  - ""/lib/modules/5.15.0-117-generic/kernel/net""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""tipc"" is not deny listed
 - module: ""tipc"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/net/tipc/tipc.ko ""


- Correctly set:

 - module: ""tipc"" is not loaded","Run the following script to disable the tipc module:

-IF- the module is available in the running kernel:

 - Create a file with install tipc /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist tipc in the /etc/modprobe.d/ directory
 - Unload tipc from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist tipc in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""tipc"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.2.3 Ensure rds kernel module is not available"" : [FAILED]

The Reliable Datagram Sockets (RDS) protocol is a transport layer protocol designed to provide low-latency, high-bandwidth communications between cluster nodes. It was developed by the Oracle Corporation.

-IF- the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.

Solution:
Run the following script to disable the rds module:

-IF- the module is available in the running kernel:

 - Create a file with install rds /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist rds in the /etc/modprobe.d/ directory
 - Unload rds from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist rds in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""rds"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""rds"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/net""
  - ""/lib/modules/5.15.0-117-generic/kernel/net""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""rds"" is not deny listed
 - module: ""rds"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/net/rds/rds.ko ""


- Correctly set:

 - module: ""rds"" is not loaded","Run the following script to disable the rds module:

-IF- the module is available in the running kernel:

 - Create a file with install rds /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist rds in the /etc/modprobe.d/ directory
 - Unload rds from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist rds in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""rds"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.2.4 Ensure sctp kernel module is not available"" : [FAILED]

The Stream Control Transmission Protocol (SCTP) is a transport layer protocol used to support message oriented communication, with several streams of messages in one connection. It serves a similar function as TCP and UDP, incorporating features of both. It is message-oriented like UDP, and ensures reliable in-sequence transport of messages with congestion control like TCP.

-IF- the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.

Solution:
Run the following script to disable the sctp module:

-IF- the module is available in the running kernel:

 - Create a file with install sctp /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist sctp in the /etc/modprobe.d/ directory
 - Unload sctp from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist sctp in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""sctp"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""sctp"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/net""
  - ""/lib/modules/5.15.0-117-generic/kernel/net""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""sctp"" is not deny listed
 - module: ""sctp"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/net/sctp/sctp.ko ""


- Correctly set:

 - module: ""sctp"" is not loaded","Run the following script to disable the sctp module:

-IF- the module is available in the running kernel:

 - Create a file with install sctp /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist sctp in the /etc/modprobe.d/ directory
 - Unload sctp from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist sctp in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""sctp"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.8 Ensure sshd DisableForwarding is enabled"" : [FAILED]

The DisableForwarding parameter disables all forwarding features, including X11, ssh-agent(1), TCP and StreamLocal. This option overrides all other forwarding-related options and may simplify restricted configurations.

 - X11Forwarding provides the ability to tunnel X11 traffic through the connection to enable remote graphic connections.
 - ssh-agent is a program to hold private keys used for public key authentication. Through use of environment variables the agent can be located and automatically used for authentication when logging in to other machines using ssh.
 - SSH port forwarding is a mechanism in SSH for tunneling application ports from the client to the server, or servers to clients. It can be used for adding encryption to legacy applications, going through firewalls, and some system administrators and IT professionals use it for opening backdoors into the internal network from their home machines.

Disable X11 forwarding unless there is an operational requirement to use X11 applications directly. There is a small risk that the remote X11 servers of users who are logged in via SSH with X11 forwarding could be compromised by other users on the X11 server. Note that even if X11 forwarding is disabled, users can always install their own forwarders.

anyone with root privilege on the the intermediate server can make free use of ssh-agent to authenticate them to other servers

Leaving port forwarding enabled can expose the organization to security risks and backdoors. SSH connections are protected with strong encryption. This makes their contents invisible to most deployed network monitoring and traffic filtering solutions. This invisibility carries considerable risk potential if it is used for malicious purposes such as data exfiltration. Cybercriminals or malware could exploit SSH to hide their unauthorized communications, or to exfiltrate stolen data from the target network.

Solution:
Edit the /etc/ssh/sshd_config file to set the DisableForwarding parameter to yes above any Include entry as follows:

DisableForwarding yes

Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

Impact:

SSH tunnels are widely used in many corporate environments. In some environments the applications themselves may have very limited native support for security. By utilizing tunneling, compliance with SOX, HIPAA, PCI-DSS, and other standards can be achieved without having to modify the applications.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

port 22: disableforwarding no
Fail","Edit the /etc/ssh/sshd_config file to set the DisableForwarding parameter to yes above any Include entry as follows:

DisableForwarding yes

Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

Impact:

SSH tunnels are widely used in many corporate environments. In some environments the applications themselves may have very limited native support for security. By utilizing tunneling, compliance with SOX, HIPAA, PCI-DSS, and other standards can be achieved without having to modify the applications.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.9 Ensure sshd GSSAPIAuthentication is disabled"" : [PASSED]

The GSSAPIAuthentication parameter specifies whether user authentication based on GSSAPI is allowed

Allowing GSSAPI authentication through SSH exposes the system's GSSAPI to remote hosts, and should be disabled to reduce the attack surface of the system

Solution:
Edit the /etc/ssh/sshd_config file to set the GSSAPIAuthentication parameter to no above any Include and Match entries as follows:

GSSAPIAuthentication no

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|2A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - sshd_config GSSAPIAuthentication
The file ""/etc/ssh/sshd_config"" does not contain ""(?i)^\h*GSSAPIAuthentication\h+""?yes\b""

-------------------------
PASSED - sshd -T GSSAPIAuthentication
The command script with multiple lines returned : 

port 22: gssapiauthentication no
Pass","Edit the /etc/ssh/sshd_config file to set the GSSAPIAuthentication parameter to no above any Include and Match entries as follows:

GSSAPIAuthentication no

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.2.4 Ensure users must provide password for privilege escalation"" : [FAILED]

The operating system must be configured so that users must provide a password for privilege escalation.

Without (re-)authentication, users may access resources or perform tasks for which they do not have authorization.

When operating systems provide the capability to escalate a functional capability, it is critical the user (re-)authenticate.

Solution:
Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit the relevant sudoers file.

Remove any line with occurrences of NOPASSWD tags in the file.

Impact:

This will prevent automated processes from being able to elevate privileges.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|2A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: ^[^#]*NOPASSWD
file: /etc/sudoers /etc/sudoers.d/*
regex: ^[^#]*NOPASSWD

Actual Value:
Non-compliant file(s):
      /etc/sudoers - regex '^[^#]*NOPASSWD' found - expect '^[^#]*NOPASSWD' found in the following lines:
          26: %sudo	ALL=(ALL) NOPASSWD:ALL
      /etc/sudoers.d/scion - regex '^[^#]*NOPASSWD' found - expect '^[^#]*NOPASSWD' found in the following lines:
          1: scion ALL=(ALL) NOPASSWD:ALL","Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit the relevant sudoers file.

Remove any line with occurrences of NOPASSWD tags in the file.

Impact:

This will prevent automated processes from being able to elevate privileges.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.1.3 Ensure password failed attempts lockout includes root account"" : [FAILED]

even_deny_root - Root account can become locked as well as regular accounts

root_unlock_time=n - This option implies even_deny_root option. Allow access after n seconds to root account after the account is locked. In case the option is not specified the value is the same as of the unlock_time option.

Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.

Solution:
Edit /etc/security/faillock.conf :

 - Remove or update any line containing root_unlock_time - OR - set it to a value of 60 or more
 - Update or add the following line:

even_deny_root

Run the following command:

# grep -Pl -- 'bpam_faillock.soh+([^#
r]+h+)?(even_deny_root|root_unlock_time)' /usr/share/pam-configs/*

Edit any returned files and remove the even_deny_root and root_unlock_time arguments from the pam_faillock.so line(s):

Impact:

Use of unlock_time=0 or root_unlock_time=0 may allow an attacker to cause denial of service to legitimate users.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.7,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),LEVEL|2A,NESA|M1.2.2,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - even_deny_root
The file ""/etc/security/faillock.conf"" does not contain ""(?i)^\h*(even_deny_root|root_unlock_time\h*=\h*\d+)\b""

-------------------------
PASSED - faillock - root_unlock_time
No matching files were found

-------------------------
PASSED - common-auth root_unlock_time
No matching files were found","Edit /etc/security/faillock.conf :

 - Remove or update any line containing root_unlock_time - OR - set it to a value of 60 or more
 - Update or add the following line:

even_deny_root

Run the following command:

# grep -Pl -- 'bpam_faillock.soh+([^#
r]+h+)?(even_deny_root|root_unlock_time)' /usr/share/pam-configs/*

Edit any returned files and remove the even_deny_root and root_unlock_time arguments from the pam_faillock.so line(s):

Impact:

Use of unlock_time=0 or root_unlock_time=0 may allow an attacker to cause denial of service to legitimate users.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.1.2 Ensure minimum password age is configured"" : [FAILED]

The minimum password age determines the number of days that you must use a password before you can change it.

PASS_MIN_DAYS <

N

> - The minimum number of days allowed between password changes. Any password changes attempted sooner than this will be rejected. If not specified, 0 will be assumed (which disables the restriction).

Users may have favorite passwords that they like to use because they are easy to remember and they believe that their password choice is secure from compromise. Unfortunately, passwords are compromised and if an attacker is targeting a specific individual user account, with foreknowledge of data about that user, reuse of old, potentially compromised passwords, may cause a security breach.

By restricting the frequency of password changes, an administrator can prevent users from repeatedly changing their password in an attempt to circumvent password reuse controls

Solution:
Edit /etc/login.defs and set PASS_MIN_DAYS to a value greater than 0 that follows local site policy:

Example:

PASS_MIN_DAYS 1

Run the following command to modify user parameters for all users with a password set to a minimum age greater than zero that follows local site policy:

# chage --mindays <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($4 < 1)system (""chage --mindays 1 "" $1)}' /etc/shadow

Impact:

By enforcing a minimum password age, a user will be unable to change their password if they observe a potential compromise of their password, e.g. ""shoulder surfing"", during the time defined by minimum password age. In this event the user should follow local site policy to report a compromised password.

If a users password is set by other personnel as a procedure in dealing with a lost or expired password, the user should be forced to update this ""set"" password with their own password. e.g. force ""change at next logon"".

If it is not possible to have a user set their own password immediately, and this recommendation or local site procedure may cause a user to continue using a third party generated password, PASS_MIN_DAYS for the effected user should be temporally changed to 0 to allow a user to change their password immediately.

For applications where the user is not using the password at console, the ability to ""change at next logon"" may be limited. This may cause a user to continue to use a password created by other personnel.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|2M,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - shadow - password min days
Non-compliant file(s):
      /etc/shadow - regex '^[^:]+:[^!*]' found - expect '^([^:]*:){3}([1-9]|[1-9][0-9]+):' not found in the following lines:
          1: root:$6$cHxy3rQ.Bf50$uYOrh7oOEHJfdggS.93HTMqhJGmQI/P9c3ecD9IYjRJpirYJmfLY3V6uXDa/cwZDEHp6ltyl7z5yWg1hT1qLG0:19047:0:99999:7:::
          26: anapaya:$6$Ykmswojd$lodHD1eD5i5i4FfSVEY/s/Yywnlw7cr9WTIOA/lnceFgak7Z6c5xs/i/wQkzkh/WDy5R4w4ZFghZrAgOmud02.:19047:0:99999:7:::
          27: scion:$6$cHxy3rQ.Bf50$uYOrh7oOEHJfdggS.93HTMqhJGmQI/P9c3ecD9IYjRJpirYJmfLY3V6uXDa/cwZDEHp6ltyl7z5yWg1hT1qLG0:19361:0:99999:7:::

-------------------------
FAILED - login.defs PASS_MIN_DAYS
Non-compliant file(s):
      /etc/login.defs - regex '(?i)^[\s]*PASS_MIN_DAYS[\s]+' found - expect '(?i)PASS_MIN_DAYS[\s]+([1-9]|[1-9][0-9]+)[\s]*$' not found in the following lines:
          166: PASS_MIN_DAYS	0","Edit /etc/login.defs and set PASS_MIN_DAYS to a value greater than 0 that follows local site policy:

Example:

PASS_MIN_DAYS 1

Run the following command to modify user parameters for all users with a password set to a minimum age greater than zero that follows local site policy:

# chage --mindays <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($4 < 1)system (""chage --mindays 1 "" $1)}' /etc/shadow

Impact:

By enforcing a minimum password age, a user will be unable to change their password if they observe a potential compromise of their password, e.g. ""shoulder surfing"", during the time defined by minimum password age. In this event the user should follow local site policy to report a compromised password.

If a users password is set by other personnel as a procedure in dealing with a lost or expired password, the user should be forced to update this ""set"" password with their own password. e.g. force ""change at next logon"".

If it is not possible to have a user set their own password immediately, and this recommendation or local site procedure may cause a user to continue using a third party generated password, PASS_MIN_DAYS for the effected user should be temporally changed to 0 to allow a user to change their password immediately.

For applications where the user is not using the password at console, the ability to ""change at next logon"" may be limited. This may cause a user to continue to use a password created by other personnel.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.3.1 Ensure nologin is not listed in /etc/shells"" : [PASSED]

/etc/shells is a text file which contains the full pathnames of valid login shells. This file is consulted by chsh and available to be queried by other programs.

Be aware that there are programs which consult this file to find out if a user is a normal user; for example, FTP daemons traditionally disallow access to users with shells not included in this file.

A user can use chsh to change their configured shell.

If a user has a shell configured that isn't in in /etc/shells then the system assumes that they're somehow restricted. In the case of chsh it means that the user cannot change that value.

Other programs might query that list and apply similar restrictions.

By putting nologin in /etc/shells any user that has nologin as its shell is considered a full, unrestricted user. This is not the expected behavior for nologin

Solution:
Edit /etc/shells and remove any lines that include nologin

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5,800-53r5|IA-5,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5,LEVEL|2A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2

Policy Value:
expect: ^.*\/nologin\b
file: /etc/shells
regex: ^.*\/nologin\b

Actual Value:
The file ""/etc/shells"" does not contain ""^.*\/nologin\b""","Edit /etc/shells and remove any lines that include nologin","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.1.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tools"" : [FAILED]

Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.

Protecting the integrity of the tools used for auditing purposes is a critical step toward ensuring the integrity of audit information. Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

Attackers may replace the audit tools or inject code into the existing tools with the purpose of providing the capability to hide or erase system activity from the audit logs.

Audit tools should be cryptographically signed in order to provide the capability to identify when the audit tools have been modified, manipulated, or replaced. An example is a checksum hash of the file or files.

Solution:
Edit /etc/aide/aide.conf and add or update the following selection lines:

# Audit Tools
/sbin/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/auditd p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/aureport p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/autrace p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512

Note: - IF - /etc/aide/aide.conf includes a @@x_include statement:

Example:

@@x_include /etc/aide/aide.conf.d ^[a-zA-Z0-9_-]+$
 - @@x_include FILE
 - @@x_include DIRECTORY REGEX
 - @x_include is identical to @@include except that if a config file is executable it is run and the output is used as config.
 - If the executable file exits with status greater than zero or writes to stderr aide stops with an error.
 - For security reasons DIRECTORY and each executable config file must be owned by the current user and must not be group or world-writable.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|SI-7,800-53r5|SI-7,CSF|PR.DS-6,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(c)(1),HIPAA|164.312(c)(2),HIPAA|164.312(e)(2)(i),ITSG-33|SI-7,ITSG-33|SI-7a.,LEVEL|2A,NESA|T3.4.1,NESA|T7.3.2,NESA|T7.3.3,PCI-DSSv3.2.1|10.5.5,QCSC-v1|3.2

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - * Reasons for audit failure * :
 - AIDE configuration file not found.
  Please verify AIDE is installed on the system","Edit /etc/aide/aide.conf and add or update the following selection lines:

# Audit Tools
/sbin/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/auditd p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/aureport p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/autrace p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512

Note: - IF - /etc/aide/aide.conf includes a @@x_include statement:

Example:

@@x_include /etc/aide/aide.conf.d ^[a-zA-Z0-9_-]+$
 - @@x_include FILE
 - @@x_include DIRECTORY REGEX
 - @x_include is identical to @@include except that if a config file is executable it is run and the output is used as config.
 - If the executable file exits with status greater than zero or writes to stderr aide stops with an error.
 - For security reasons DIRECTORY and each executable config file must be owned by the current user and must not be group or world-writable.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.1.1 Ensure auditd packages are installed"" : [FAILED]

auditd is the userspace component to the Linux Auditing System. It's responsible for writing audit records to the disk

The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.

Solution:
Run the following command to Install auditd and audispd-plugins

# apt install auditd audispd-plugins

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - dpkg check auditd
The command '/bin/dpkg -s auditd 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'auditd' is not installed and no information is available

-------------------------
FAILED - dpkg check audispd-plugins
The command '/bin/dpkg -s audispd-plugins 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'audispd-plugins' is not installed and no information is available","Run the following command to Install auditd and audispd-plugins

# apt install auditd audispd-plugins","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.1.2 Ensure auditd service is enabled and active"" : [FAILED]

Turn on the auditd daemon to record system events.

The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.

Solution:
Run the following commands to unmask, enable and start auditd :

# systemctl unmask auditd
# systemctl enable auditd
# systemctl start auditd

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - check if auditd is active
The command '/bin/systemctl is-active auditd' returned : 

inactive

-------------------------
FAILED - check if auditd is enabled
The command '/bin/systemctl is-enabled auditd' returned : 

Failed to get unit file state for auditd.service: No such file or directory","Run the following commands to unmask, enable and start auditd :

# systemctl unmask auditd
# systemctl enable auditd
# systemctl start auditd","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.1.3 Ensure auditing for processes that start prior to auditd is enabled"" : [FAILED]

Configure grub2 so that processes that are capable of being audited can be audited even if they start up prior to auditd startup.

Audit events need to be captured on processes that start up prior to auditd so that potential malicious activity cannot go undetected.

Solution:
Edit /etc/default/grub and add audit=1 to GRUB_CMDLINE_LINUX :

Example:

GRUB_CMDLINE_LINUX=""audit=1""

Run the following command to update the grub2 configuration:

# update-grub

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$
timeout: 7200

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - Grub parameter: ""audit=1"" is not set","Edit /etc/default/grub and add audit=1 to GRUB_CMDLINE_LINUX :

Example:

GRUB_CMDLINE_LINUX=""audit=1""

Run the following command to update the grub2 configuration:

# update-grub","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.1.4 Ensure audit_backlog_limit is sufficient"" : [FAILED]

In the kernel-level audit subsystem, a socket buffer queue is used to hold audit events. Whenever a new audit event is received, it is logged and prepared to be added to this queue.

The kernel boot parameter audit_backlog_limit=N with N representing the amount of messages, will ensure that a queue cannot grow beyond a certain size. If an audit event is logged which would grow the queue beyond this limit, then a failure occurs and is handled according to the system configuration

If an audit event is logged which would grow the queue beyond the audit_backlog_limit then a failure occurs, auditd records will be lost, and potential malicious activity could go undetected.

Solution:
Edit /etc/default/grub and add audit_backlog_limit=N to GRUB_CMDLINE_LINUX. The recommended size for N is 8192 or larger.

Example:

GRUB_CMDLINE_LINUX=""audit_backlog_limit=8192""

Run the following command to update the grub2 configuration:

# update-grub

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: /bin/find /boot -type f -name 'grub.cfg' -exec /bin/grep -Ph -- '^\h*linux' {} + | /bin/grep -Pv 'audit_backlog_limit=\d+\b' | /bin/awk '{print} END { if (NR==0) print ""pass"" }'
expect: ^pass$
timeout: 7200

Actual Value:
The command '/bin/find /boot -type f -name 'grub.cfg' -exec /bin/grep -Ph -- '^\h*linux' {} + | /bin/grep -Pv 'audit_backlog_limit=\d+\b' | /bin/awk '{print} END { if (NR==0) print ""pass"" }'' returned : 

linux	/boot/vmlinuz-5.15.0-117-generic root=/dev/mapper/anapaya--v3--vg-root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  quiet
		linux	/boot/vmlinuz-5.15.0-117-generic root=/dev/mapper/anapaya--v3--vg-root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  quiet
		linux	/boot/vmlinuz-5.15.0-117-generic root=/dev/mapper/anapaya--v3--vg-root ro recovery nomodeset dis_ucode_ldr noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0 
		linux	/boot/vmlinuz-5.15.0-116-generic root=/dev/mapper/anapaya--v3--vg-root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  quiet
		linux	/boot/vmlinuz-5.15.0-116-generic root=/dev/mapper/anapaya--v3--vg-root ro recovery nomodeset dis_ucode_ldr noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0","Edit /etc/default/grub and add audit_backlog_limit=N to GRUB_CMDLINE_LINUX. The recommended size for N is 8192 or larger.

Example:

GRUB_CMDLINE_LINUX=""audit_backlog_limit=8192""

Run the following command to update the grub2 configuration:

# update-grub","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.2.1 Ensure audit log storage size is configured"" : [FAILED]

Configure the maximum size of the audit log file. Once the log reaches the maximum size, it will be rotated and a new log file will be started.

It is important that an appropriate size is determined for log files so that they do not impact the system and audit data is not lost.

Solution:
Set the following parameter in /etc/audit/auditd.conf in accordance with site policy:

max_log_file = <MB>

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2

Policy Value:
expect: ^[\s]*max_log_file[\s]*=[\s]*32[\s]*$
file: /etc/audit/auditd.conf
regex: ^[\s]*max_log_file[\s]*=

Actual Value:
No files found: /etc/audit/auditd.conf","Set the following parameter in /etc/audit/auditd.conf in accordance with site policy:

max_log_file = <MB>","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.2.2 Ensure audit logs are not automatically deleted"" : [FAILED]

The max_log_file_action setting determines how to handle the audit log file reaching the max file size. A value of keep_logs will rotate the logs but never delete old logs.

In high security contexts, the benefits of maintaining a long audit history exceed the cost of storing the audit history.

Solution:
Set the following parameter in /etc/audit/auditd.conf:

max_log_file_action = keep_logs

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2

Policy Value:
expect: ^[\s]*max_log_file_action[\s]*=[\s]*(?i)keep_logs(?-i)[\s]*$
file: /etc/audit/auditd.conf
regex: ^[\s]*max_log_file_action[\s]*=

Actual Value:
No files found: /etc/audit/auditd.conf","Set the following parameter in /etc/audit/auditd.conf:

max_log_file_action = keep_logs","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.2.3 Ensure system is disabled when audit logs are full"" : [FAILED]

The auditd daemon can be configured to halt the system or put the system in single user mode, if no free space is available or an error is detected on the partition that holds the audit log files.

The disk_full_action parameter tells the system what action to take when no free space is available on the partition that holds the audit log files. Valid values are ignore syslog rotate exec suspend single and halt

 - ignore the audit daemon will issue a syslog message but no other action is taken
 - syslog the audit daemon will issue a warning to syslog
 - rotate the audit daemon will rotate logs, losing the oldest to free up space
 - exec /path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging once its completed its action
 - suspend the audit daemon will stop writing records to the disk
 - single the audit daemon will put the computer system in single user mode
 - halt the audit daemon will shut down the system

The disk_error_action parameter tells the system what action to take when an error is detected on the partition that holds the audit log files. Valid values are ignore syslog exec suspend single and halt

 - ignore the audit daemon will not take any action
 - syslog the audit daemon will issue no more than 5 consecutive warnings to syslog
 - exec /path-to-script will execute the script. You cannot pass parameters to the script
 - suspend the audit daemon will stop writing records to the disk
 - single the audit daemon will put the computer system in single user mode
 - halt the audit daemon will shut down the system

In high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability.

Solution:
Set one of the following parameters in /etc/audit/auditd.conf depending on your local security policies.

disk_full_action = <halt|single>
disk_error_action = <syslog|single|halt>

Example:

disk_full_action = halt
disk_error_action = halt

Impact:

disk_full_action parameter:

 - Set to halt - the auditd daemon will shutdown the system when the disk partition containing the audit logs becomes full.
 - Set to single - the auditd daemon will put the computer system in single user mode when the disk partition containing the audit logs becomes full.

disk_error_action parameter:

 - Set to halt - the auditd daemon will shutdown the system when an error is detected on the partition that holds the audit log files.
 - Set to single - the auditd daemon will put the computer system in single user mode when an error is detected on the partition that holds the audit log files.
 - Set to syslog - the auditd daemon will issue no more than 5 consecutive warnings to syslog when an error is detected on the partition that holds the audit log files.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-4,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-4,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv8|8.2,CSCv8|8.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.DS-4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-4,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NESA|T3.3.1,NESA|T3.6.2,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - disk_full_action
No files found: /etc/audit/auditd.conf

-------------------------
FAILED - disk_error_action = root
No files found: /etc/audit/auditd.conf","Set one of the following parameters in /etc/audit/auditd.conf depending on your local security policies.

disk_full_action = <halt|single>
disk_error_action = <syslog|single|halt>

Example:

disk_full_action = halt
disk_error_action = halt

Impact:

disk_full_action parameter:

 - Set to halt - the auditd daemon will shutdown the system when the disk partition containing the audit logs becomes full.
 - Set to single - the auditd daemon will put the computer system in single user mode when the disk partition containing the audit logs becomes full.

disk_error_action parameter:

 - Set to halt - the auditd daemon will shutdown the system when an error is detected on the partition that holds the audit log files.
 - Set to single - the auditd daemon will put the computer system in single user mode when an error is detected on the partition that holds the audit log files.
 - Set to syslog - the auditd daemon will issue no more than 5 consecutive warnings to syslog when an error is detected on the partition that holds the audit log files.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.2.4 Ensure system warns when audit logs are low on space"" : [FAILED]

The auditd daemon can be configured to halt the system, put the system in single user mode or send a warning message, if the partition that holds the audit log files is low on space.

The space_left_action parameter tells the system what action to take when the system has detected that it is starting to get low on disk space. Valid values are ignore syslog rotate email exec suspend single and halt

 - ignore the audit daemon does nothing
 - syslog the audit daemon will issue a warning to syslog
 - rotate the audit daemon will rotate logs, losing the oldest to free up space
 - email the audit daemon will send a warning to the email account specified in action_mail_acct as well as sending the message to syslog
 - exec /path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging once its completed its action
 - suspend the audit daemon will stop writing records to the disk
 - single the audit daemon will put the computer system in single user mode
 - halt the audit daemon will shut down the system

The admin_space_left_action parameter tells the system what action to take when the system has detected that it is low on disk space. Valid values are ignore syslog rotate email exec suspend single and halt

 - ignore the audit daemon does nothing
 - syslog the audit daemon will issue a warning to syslog
 - rotate the audit daemon will rotate logs, losing the oldest to free up space
 - email the audit daemon will send a warning to the email account specified in action_mail_acct as well as sending the message to syslog
 - exec /path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging once its completed its action
 - suspend the audit daemon will stop writing records to the disk
 - single the audit daemon will put the computer system in single user mode
 - halt the audit daemon will shut down the system

In high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability.

Solution:
Set the space_left_action parameter in /etc/audit/auditd.conf to email exec single or halt :

Example:

space_left_action = email

Set the admin_space_left_action parameter in /etc/audit/auditd.conf to single or halt :

Example:

admin_space_left_action = single

Note: A Mail Transfer Agent (MTA) must be installed and configured properly to set space_left_action = email

Impact:

If the admin_space_left_action is set to single the audit daemon will put the computer system in single user mode.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-4,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-4,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSCv8|8.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.DS-4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-4,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NESA|T3.3.1,NESA|T3.6.2,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - admin_space_left_action
No files found: /etc/audit/auditd.conf

-------------------------
FAILED - space_left_action
No files found: /etc/audit/auditd.conf","Set the space_left_action parameter in /etc/audit/auditd.conf to email exec single or halt :

Example:

space_left_action = email

Set the admin_space_left_action parameter in /etc/audit/auditd.conf to single or halt :

Example:

admin_space_left_action = single

Note: A Mail Transfer Agent (MTA) must be installed and configured properly to set space_left_action = email

Impact:

If the admin_space_left_action is set to single the audit daemon will put the computer system in single user mode.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.1 Ensure changes to system administration scope (sudoers) is collected"" : [FAILED]

Monitor scope changes for system administrators. If the system has been properly configured to force system administrators to log in as themselves first and then use the sudo command to execute privileged commands, it is possible to monitor changes in scope. The file /etc/sudoers or files in /etc/sudoers.d will be written to when the file(s) or related attributes have changed. The audit records will be tagged with the identifier ""scope"".

Changes in the /etc/sudoers and /etc/sudoers.d files can indicate that an unauthorized change has been made to the scope of system administrator activity.

Solution:
Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor scope changes for system administrators.

Example:

# printf '%s
' ""-w /etc/sudoers -p wa -k scope"" ""-w /etc/sudoers.d -p wa -k scope"" >> /etc/audit/rules.d/50-scope.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|4.8,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - auditctl /etc/sudoers
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/sudoers/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - /etc/sudoers.d
The command '/bin/awk '/^ *-w/ &&/\/etc\/sudoers\.d/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - /etc/sudoers
The command '/bin/awk '/^ *-w/ &&/\/etc\/sudoers/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /etc/sudoers.d
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/sudoers\.d/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail","Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor scope changes for system administrators.

Example:

# printf '%s
' ""-w /etc/sudoers -p wa -k scope"" ""-w /etc/sudoers.d -p wa -k scope"" >> /etc/audit/rules.d/50-scope.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.10 Ensure successful file system mounts are collected"" : [FAILED]

Monitor the use of the mount system call. The mount (and umount ) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user

It is highly unusual for a non privileged user to mount file systems to the system. While tracking mount commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful open creat and truncate system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document.

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful file system mounts.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b32 -S mount -F auid>=$UID_MIN -F auid!=unset -k mounts
-a always,exit -F arch=b64 -S mount -F auid>=$UID_MIN -F auid!=unset -k mounts
"" >> /etc/audit/rules.d/50-mounts.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - auditctl b64
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -S/ &&/mount/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b32
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -S/ &&/mount/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b64
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -S/ &&/mount/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -S/ &&/mount/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful file system mounts.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b32 -S mount -F auid>=$UID_MIN -F auid!=unset -k mounts
-a always,exit -F arch=b64 -S mount -F auid>=$UID_MIN -F auid!=unset -k mounts
"" >> /etc/audit/rules.d/50-mounts.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.11 Ensure session initiation information is collected"" : [FAILED]

Monitor session initiation events. The parameters in this section track changes to the files associated with session events.

 - /var/run/utmp - tracks all currently logged in users.
 - /var/log/wtmp - file tracks logins, logouts, shutdown, and reboot events.
 - /var/log/btmp - keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp

All audit records will be tagged with the identifier ""session.""

Monitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in).

Solution:
Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor session initiation information.

Example:

# printf ""
-w /var/run/utmp -p wa -k session
-w /var/log/wtmp -p wa -k session
-w /var/log/btmp -p wa -k session
"" >> /etc/audit/rules.d/50-session.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|16.13,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - auditctl /var/run/utmp
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/  &&/\/var\/run\/utmp/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - utmp
The command '/bin/awk '/^ *-w/  &&/\/var\/run\/utmp/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - btmp
The command '/bin/awk '/^ *-w/  &&/\/var\/log\/btmp/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /var/log/wtmp
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/  &&/\/var\/log\/wtmp/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /var/log/btmp
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/  &&/\/var\/log\/btmp/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - wtmp
The command '/bin/awk '/^ *-w/  &&/\/var\/log\/wtmp/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail","Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor session initiation information.

Example:

# printf ""
-w /var/run/utmp -p wa -k session
-w /var/log/wtmp -p wa -k session
-w /var/log/btmp -p wa -k session
"" >> /etc/audit/rules.d/50-session.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.12 Ensure login and logout events are collected"" : [FAILED]

Monitor login and logout events. The parameters below track changes to files associated with login/logout events.

 - /var/log/lastlog - maintain records of the last time a user successfully logged in.
 - /var/run/faillock - directory maintains records of login failures via the pam_faillock module.

Monitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins.

Solution:
Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor login and logout events.

Example:

# printf ""
-w /var/log/lastlog -p wa -k logins
-w /var/run/faillock -p wa -k logins
"" >> /etc/audit/rules.d/50-login.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - faillock
The command '/bin/awk '/^ *-w/ && /\/var\/run\/faillock/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /var/log/lastlog
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ && /\/var\/log\/lastlog/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /var/run/faillock
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ && /\/var\/run\/faillock/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - lastlog
The command '/bin/awk '/^ *-w/ && /\/var\/log\/lastlog/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail","Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor login and logout events.

Example:

# printf ""
-w /var/log/lastlog -p wa -k logins
-w /var/run/faillock -p wa -k logins
"" >> /etc/audit/rules.d/50-login.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.13 Ensure file deletion events by users are collected"" : [FAILED]

Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for:

 - unlink - remove a file
 - unlinkat - remove a file attribute
 - rename - rename a file
 - renameat rename a file attributesystem calls and tags them with the identifier ""delete"".

Monitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered.

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor file deletion events by users.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S rename,unlink,unlinkat,renameat -F auid>=${UID_MIN} -F auid!=unset -F key=delete
-a always,exit -F arch=b32 -S rename,unlink,unlinkat,renameat -F auid>=${UID_MIN} -F auid!=unset -F key=delete
"" >> /etc/audit/rules.d/50-delete.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - b32 unlink
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/)  &&/ -F *arch=b32/  &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/)  &&/ -F *auid>=${UID_MIN}/  &&/ -S/  &&(/unlink/||/rename/||/unlinkat/||/renameat/)  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules  | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64 unlink
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/)  &&/ -F *arch=b64/  &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/)  &&/ -F *auid>=${UID_MIN}/  &&/ -S/  &&(/unlink/||/rename/||/unlinkat/||/renameat/)  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b32 unlink
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/)  &&/ -F *arch=b32/  &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/)  &&/ -F *auid>=${UID_MIN}/  &&/ -S/  &&(/unlink/||/rename/||/unlinkat/||/renameat/)  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b64 unlink
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/)  &&/ -F *arch=b64/  &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/)  &&/ -F *auid>=${UID_MIN}/  &&/ -S/  &&(/unlink/||/rename/||/unlinkat/||/renameat/)  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules  | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor file deletion events by users.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S rename,unlink,unlinkat,renameat -F auid>=${UID_MIN} -F auid!=unset -F key=delete
-a always,exit -F arch=b32 -S rename,unlink,unlinkat,renameat -F auid>=${UID_MIN} -F auid!=unset -F key=delete
"" >> /etc/audit/rules.d/50-delete.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.14 Ensure events that modify the system's Mandatory Access Controls are collected"" : [FAILED]

Monitor AppArmor, an implementation of mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/apparmor/ and /etc/apparmor.d/ directories.

Note: If a different Mandatory Access Control method is used, changes to the corresponding directories should be audited.

Changes to files in the /etc/apparmor/ and /etc/apparmor.d/ directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system.

Solution:
Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify the system's Mandatory Access Controls.

Example:

# printf ""
-w /etc/apparmor/ -p wa -k MAC-policy
-w /etc/apparmor.d/ -p wa -k MAC-policy
"" >> /etc/audit/rules.d/50-MAC-policy.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|5.5,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - auditctl - /etc/apparmor.d/
The command '/sbin/auditctl -l 2>/dev/null | /bin/awk '/^ *-w/ && /\/etc\/apparmor.d/ && / +-p *wa/ && (/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

fail

-------------------------
FAILED - rules - /etc/apparmor/
The command '/bin/awk '/^ *-w/ && /\/etc\/apparmor/ && / +-p *wa/ && (/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - rules - /etc/apparmor.d/
The command '/bin/awk '/^ *-w/ && /\/etc\/apparmor.d/ && / +-p *wa/ && (/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl - /etc/apparmor/
The command '/sbin/auditctl -l 2>/dev/null | /bin/awk '/^ *-w/ && /\/etc\/apparmor/ && / +-p *wa/ && (/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

fail","Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify the system's Mandatory Access Controls.

Example:

# printf ""
-w /etc/apparmor/ -p wa -k MAC-policy
-w /etc/apparmor.d/ -p wa -k MAC-policy
"" >> /etc/audit/rules.d/50-MAC-policy.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.15 Ensure successful and unsuccessful attempts to use the chcon command are recorded"" : [FAILED]

The operating system must generate audit records for successful/unsuccessful uses of the chcon command.

The chcon command is used to change file security context. Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.

Audit records can be generated from various components within the information system (e.g., module or policy filter).

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the chcon command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - /etc/audit/rules.d/*.rules
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/bin\/chcon/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/bin\/chcon/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

sh: 1: auditctl: not found
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the chcon command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.16 Ensure successful and unsuccessful attempts to use the setfacl command are recorded"" : [FAILED]

The operating system must generate audit records for successful/unsuccessful uses of the setfacl command

This utility sets Access Control Lists (ACLs) of files and directories. Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.

Audit records can be generated from various components within the information system (e.g., module or policy filter).

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the setfacl command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/bin/setfacl -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - /etc/audit/rules.d/*.rules
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/bin\/setfacl/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf  ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/bin\/setfacl/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf  ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the setfacl command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/bin/setfacl -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.17 Ensure successful and unsuccessful attempts to use the chacl command are recorded"" : [FAILED]

The operating system must generate audit records for successful/unsuccessful uses of the chacl command.

chacl is an IRIX-compatibility command, and is maintained for those users who are familiar with its use from either XFS or IRIX.

chacl changes the ACL(s) for a file or directory. Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.

Audit records can be generated from various components within the information system (e.g., module or policy filter).

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the chacl command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/bin/chacl -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - /etc/audit/rules.d/*.rules
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/bin\/chacl/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf  ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/bin\/chacl/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf  ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

sh: 1: auditctl: not found
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the chacl command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/bin/chacl -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.18 Ensure successful and unsuccessful attempts to use the usermod command are recorded"" : [FAILED]

The operating system must generate audit records for successful/unsuccessful uses of the usermod command.

The usermod command modifies the system account files to reflect the changes that are specified on the command line. Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.

Audit records can be generated from various components within the information system (e.g., module or policy filter).

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the usermod command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/sbin/usermod -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k usermod
"" >> /etc/audit/rules.d/50-usermod.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - /etc/audit/rules.d/*.rules
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/sbin\/usermod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf  ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/sbin\/usermod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf  ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the usermod command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/sbin/usermod -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k usermod
"" >> /etc/audit/rules.d/50-usermod.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.19 Ensure kernel module loading unloading and modification is collected"" : [FAILED]

Monitor the loading and unloading of kernel modules. All the loading / listing / dependency checking of modules is done by kmod via symbolic links.

The following system calls control loading and unloading of modules:

 - init_module - load a module
 - finit_module - load a module (used when the overhead of using cryptographically signed modules to determine the authenticity of a module can be avoided)
 - delete_module - delete a module

Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of modules

Monitoring the use of all the various ways to manipulate kernel modules could provide system administrators with evidence that an unauthorized change was made to a kernel module, possibly compromising the security of the system.

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor kernel module modification.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S init_module,finit_module,delete_module -F auid>=${UID_MIN} -F auid!=unset -k kernel_modules
-a always,exit -F path=/usr/bin/kmod -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k kernel_modules
"" >> /etc/audit/rules.d/50-kernel_modules.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - /usr/bin/kmod
The command script with multiple lines returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
ERROR: Variable 'UID_MIN' is unset.
pass

-------------------------
FAILED - auditctl delete_module
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b(32|64)/ &&/ -S/ &&/delete_module/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - on disk init_module
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b(32|64)/ &&/ -S/ &&/init_module/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - on disk finit_module
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b(32|64)/ &&/ -S/ &&/finit_module/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /usr/bin/kmod
The command script with multiple lines returned : 

bash: line 3: auditctl: command not found
fail

-------------------------
FAILED - auditctl init_module
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b(32|64)/ &&/ -S/ &&/init_module/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - on disk delete_module
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b(32|64)/ &&/ -S/ &&/delete_module/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl finit_module
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b(32|64)/ &&/ -S/ &&/finit_module/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
PASSED - symlinks
The command script with multiple lines returned : 

OK","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor kernel module modification.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S init_module,finit_module,delete_module -F auid>=${UID_MIN} -F auid!=unset -k kernel_modules
-a always,exit -F path=/usr/bin/kmod -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k kernel_modules
"" >> /etc/audit/rules.d/50-kernel_modules.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.2 Ensure actions as another user are always logged"" : [FAILED]

sudo provides users with temporary elevated privileges to perform operations, either as the superuser or another user.

Creating an audit log of users with temporary elevated privileges and the operation(s) they performed is essential to reporting. Administrators will want to correlate the events written to the audit trail with the records written to sudo 's logfile to verify if unauthorized commands have been executed.

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor elevated privileges.

Example:

# printf ""
-a always,exit -F arch=b64 -C euid!=uid -F auid!=unset -S execve -k user_emulation
-a always,exit -F arch=b32 -C euid!=uid -F auid!=unset -S execve -k user_emulation
"" >> /etc/audit/rules.d/50-user_emulation.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - /etc/audit/rules.d/*.rules b32
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&(/ -C *euid!=uid/||/ -C *uid!=euid/) &&/ -S *execve/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - /etc/audit/rules.d/*.rules b64
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&(/ -C *euid!=uid/||/ -C *uid!=euid/) &&/ -S *execve/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&(/ -C *euid!=uid/||/ -C *uid!=euid/) &&/ -S *execve/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl b32
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&(/ -C *euid!=uid/||/ -C *uid!=euid/) &&/ -S *execve/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor elevated privileges.

Example:

# printf ""
-a always,exit -F arch=b64 -C euid!=uid -F auid!=unset -S execve -k user_emulation
-a always,exit -F arch=b32 -C euid!=uid -F auid!=unset -S execve -k user_emulation
"" >> /etc/audit/rules.d/50-user_emulation.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.20 Ensure the audit configuration is immutable"" : [FAILED]

Set system audit so that audit rules cannot be modified with auditctl Setting the flag ""-e 2"" forces audit to be put in immutable mode. Audit changes can only be made on system reboot.

Note: This setting will require the system to be rebooted to update the active auditd configuration settings.

In immutable mode, unauthorized users cannot execute changes to the audit system to potentially hide malicious activity and then put the audit rules back. Users would most likely notice a system reboot and that could alert administrators of an attempt to make unauthorized audit changes.

Solution:
Edit or create the file /etc/audit/rules.d/99-finalize.rules and add the line -e 2 at the end of the file:

Example:

# printf -- ""-e 2
"" >> /etc/audit/rules.d/99-finalize.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,800-53r5|MP-2,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(b),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|6.2,CSCv7|6.3,CSCv8|3.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-2,CSF|PR.PT-3,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T3.6.2,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /bin/grep -Ph -- '^\h*-e\h+2\b' /etc/audit/rules.d/*.rules | /bin/tail -1
expect: ^[\s]*-e[\s]+2[\s]*$

Actual Value:
The command '/bin/grep -Ph -- '^\h*-e\h+2\b' /etc/audit/rules.d/*.rules | /bin/tail -1' returned : 

/bin/grep: /etc/audit/rules.d/*.rules: No such file or directory","Edit or create the file /etc/audit/rules.d/99-finalize.rules and add the line -e 2 at the end of the file:

Example:

# printf -- ""-e 2
"" >> /etc/audit/rules.d/99-finalize.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.21 Ensure the running and on disk configuration is the same"" : [FAILED]

The Audit system have both on disk and running configuration. It is possible for these configuration settings to differ.

Note: Due to the limitations of augenrules and auditctl it is not absolutely guaranteed that loading the rule sets via augenrules --load will result in all rules being loaded or even that the user will be informed if there was a problem loading the rules.

Configuration differences between what is currently running and what is on disk could cause unexpected problems or may give a false impression of compliance requirements.

Solution:
If the rules are not aligned across all three () areas, run the following command to merge and load all rules:

# augenrules --load

Check if reboot is required.

if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then echo ""Reboot required to load rules""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2M,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: /sbin/augenrules --check
expect: ^[\s]*/sbin/augenrules:[\s]*No change[\s]*$

Actual Value:
The command '/sbin/augenrules --check' returned : 

sh: 1: /sbin/augenrules: not found","If the rules are not aligned across all three () areas, run the following command to merge and load all rules:

# augenrules --load

Check if reboot is required.

if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then echo ""Reboot required to load rules""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.3 Ensure events that modify the sudo log file are collected"" : [PASSED]

Monitor the sudo log file. If the system has been properly configured to disable the use of the su command and force all administrators to have to log in first and then use sudo to execute privileged commands, then all administrator commands will be logged to /var/log/sudo.log Any time a command is executed, an audit event will be triggered as the /var/log/sudo.log file will be opened for write and the executed administration command will be written to the log.

Changes in /var/log/sudo.log indicate that an administrator has executed a command or the log file itself has been tampered with. Administrators will want to correlate the events written to the audit trail with the records written to /var/log/sudo.log to verify if unauthorized commands have been executed.

Solution:
Note: This recommendation requires that the sudo logfile is configured. See guidance provided in the recommendation ""Ensure sudo log file exists""

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify the sudo log file.

Example:

# {
SUDO_LOG_FILE=$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,? .*//' -e 's/""//g')
[ -n ""${SUDO_LOG_FILE}"" ] &amp;&amp; printf ""
-w ${SUDO_LOG_FILE} -p wa -k sudo_log_file
"" >> /etc/audit/rules.d/50-sudo.rules || printf ""ERROR: Variable 'SUDO_LOG_FILE' is unset.
""
}

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - auditctl sudo log file
The command script with multiple lines returned : 

ERROR: Variable 'SUDO_LOG_FILE' is unset.
pass

-------------------------
PASSED - on disk sudo log file
The command script with multiple lines returned : 

ERROR: Variable 'SUDO_LOG_FILE' is unset.
pass","Note: This recommendation requires that the sudo logfile is configured. See guidance provided in the recommendation ""Ensure sudo log file exists""

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify the sudo log file.

Example:

# {
SUDO_LOG_FILE=$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,? .*//' -e 's/""//g')
[ -n ""${SUDO_LOG_FILE}"" ] &amp;&amp; printf ""
-w ${SUDO_LOG_FILE} -p wa -k sudo_log_file
"" >> /etc/audit/rules.d/50-sudo.rules || printf ""ERROR: Variable 'SUDO_LOG_FILE' is unset.
""
}

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.4 Ensure events that modify date and time information are collected"" : [FAILED]

Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the;

 - adjtimex - tune kernel clock
 - settimeofday - set time using timeval and timezone structures
 - stime - using seconds since 1/1/1970
 - clock_settime - allows for the setting of several internal clocks and timers

system calls have been executed. Further, ensure to write an audit record to the configured audit log file upon exit, tagging the records with a unique identifier such as ""time-change"".

Unexpected changes in system date and/or time could be a sign of malicious activity on the system.

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify date and time information.

Example:

# printf ""
-a always,exit -F arch=b64 -S adjtimex,settimeofday,clock_settime -k time-change
-a always,exit -F arch=b32 -S adjtimex,settimeofday,clock_settime -k time-change
-w /etc/localtime -p wa -k time-change
"" >> /etc/audit/rules.d/50-time-change.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|5.5,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - settimeofday x32
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/settimeofday/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl settimeofday x64
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/settimeofday/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - adjtimex x64
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/adjtimex/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - settimeofday x64
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/settimeofday/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl clock_settime x32
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/clock_settime/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl clock_settime x64
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/clock_settime/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - adjtimex x32
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/adjtimex/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - /etc/localtime
The command '/bin/awk '/^ *-w/ &&/\/etc\/localtime/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - clock_settime x64
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/clock_settime/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - clock_settime x32
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/clock_settime/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl settimeofday x32
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/settimeofday/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/localtime
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/localtime/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl adjtimex x32
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/adjtimex/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl adjtimex x64
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/adjtimex/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify date and time information.

Example:

# printf ""
-a always,exit -F arch=b64 -S adjtimex,settimeofday,clock_settime -k time-change
-a always,exit -F arch=b32 -S adjtimex,settimeofday,clock_settime -k time-change
-w /etc/localtime -p wa -k time-change
"" >> /etc/audit/rules.d/50-time-change.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.5 Ensure events that modify the system's network environment are collected"" : [FAILED]

Record changes to network environment files or system calls. The below parameters monitors the following system calls, and write an audit event on system call exit:

 - sethostname - set the systems host name
 - setdomainname - set the systems domain name

The files being monitored are:

 - /etc/issue and /etc/issue.net - messages displayed pre-login
 - /etc/hosts - file containing host names and associated IP addresses
 - /etc/networks - symbolic names for networks
 - /etc/network/ - directory containing network interface scripts and configurations files
 - /etc/netplan/ - central location for YAML networking configurations files

Monitoring system events that change network environments, such as sethostname and setdomainname helps identify unauthorized alterations to host and domain names, which could compromise security settings reliant on these names. Changes to /etc/hosts can signal unauthorized attempts to alter machine associations with IP addresses, potentially redirecting users and processes to unintended destinations. Surveillance of /etc/issue and /etc/issue.net is crucial to detect intruders inserting false information to deceive users. Monitoring /etc/network/ reveals modifications to network interfaces or scripts that may jeopardize system availability or security. Additionally, tracking changes in the /etc/netplan/ directory ensures swift detection of unauthorized adjustments to network configurations. All audit records should be appropriately tagged for relevance

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify the system's network environment.

Example:

# printf ""
-a always,exit -F arch=b64 -S sethostname,setdomainname -k system-locale
-a always,exit -F arch=b32 -S sethostname,setdomainname -k system-locale
-w /etc/issue -p wa -k system-locale
-w /etc/issue.net -p wa -k system-locale
-w /etc/hosts -p wa -k system-locale
-w /etc/networks -p wa -k system-locale
-w /etc/network/ -p wa -k system-locale
-w /etc/netplan/ -p wa -k system-locale
"" >> /etc/audit/rules.d/50-system_locale.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|5.5,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - on disk /etc/network/
The command '/bin/awk '/^ *-w/ &&/\/etc\/network\// &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - /etc/issue.net
The command '/bin/awk '/^ *-w/ &&/\/etc\/issue.net/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - on disk b32 setdomainname
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/setdomainname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - rules - /etc/networks
The command '/bin/awk '/^ *-w/ &&/\/etc\/networks/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64 setdomainname
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/setdomainname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl b64 sethostname
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/sethostname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - on disk b64 setdomainname
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/setdomainname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 sethostname
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/sethostname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/network
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/network / &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/issue.net
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/issue.net/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/issue
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/issue / &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - b32 sethostname
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/sethostname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl - /etc/networks
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/networks/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/hosts
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/hosts/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - b64 sethostname
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/sethostname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - on disk /etc/issue
The command '/bin/awk '/^ *-w/ &&/\/etc\/issue / &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - on disk /etc/netplan
The command '/bin/awk '/^ *-w/ &&/\/etc\/netplan\// &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 setdomainname
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/setdomainname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - /etc/hosts
The command '/bin/awk '/^ *-w/ &&/\/etc\/hosts/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /etc/netplan
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/netplan/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify the system's network environment.

Example:

# printf ""
-a always,exit -F arch=b64 -S sethostname,setdomainname -k system-locale
-a always,exit -F arch=b32 -S sethostname,setdomainname -k system-locale
-w /etc/issue -p wa -k system-locale
-w /etc/issue.net -p wa -k system-locale
-w /etc/hosts -p wa -k system-locale
-w /etc/networks -p wa -k system-locale
-w /etc/network/ -p wa -k system-locale
-w /etc/netplan/ -p wa -k system-locale
"" >> /etc/audit/rules.d/50-system_locale.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.6 Ensure use of privileged commands are collected"" : [FAILED]

Monitor privileged programs, those that have the setuid and/or setgid bit set on execution, to determine if unprivileged users are running these commands.

Execution of privileged commands by non-privileged users could be an indication of someone trying to gain unauthorized access to the system.

Solution:
Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor the use of privileged commands.

Example script:

#!/usr/bin/env bash

{
  UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
  AUDIT_RULE_FILE=""/etc/audit/rules.d/50-privileged.rules""
  NEW_DATA=()
  for PARTITION in $(findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | grep -Pv ""noexec|nosuid"" | awk '{print $1}'); do
    readarray -t DATA < <(find ""${PARTITION}"" -xdev -perm /6000 -type f | awk -v UID_MIN=${UID_MIN} '{print ""-a always,exit -F path="" $1 "" -F perm=x -F auid>=""UID_MIN"" -F auid!=unset -k privileged"" }')
      for ENTRY in ""${DATA[@]}""; do
        NEW_DATA+=(""${ENTRY}"")
      done
  done
  readarray &amp;> /dev/null -t OLD_DATA < ""${AUDIT_RULE_FILE}""
  COMBINED_DATA=( ""${OLD_DATA[@]}"" ""${NEW_DATA[@]}"" )
  printf '%s
' ""${COMBINED_DATA[@]}"" | sort -u > ""${AUDIT_RULE_FILE}""
}

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

Special mount points

If there are any special mount points that are not visible by default from just scanning / change the PARTITION variable to the appropriate partition and re-run the remediation.

Impact:

Both the audit and remediation section of this recommendation will traverse all mounted file systems that is not mounted with either noexec or nosuid mount options. If there are large file systems without these mount options, such traversal will be significantly detrimental to the performance of the system.

Before running either the audit or remediation section, inspect the output of the following command to determine exactly which file systems will be traversed:

# findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | grep -Pv ""noexec|nosuid""

To exclude a particular file system due to adverse performance impacts, update the audit and remediation sections by adding a sufficiently unique string to the grep statement. The above command can be used to test the modified exclusions.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - auditctl
The command 'RUNNING=$(/sbin/auditctl -l); [ -n ""${RUNNING}"" ] && for PARTITION in $(/bin/findmnt -n -l -k -it $(/bin/awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | /bin/grep -Pv ""noexec|nosuid"" | /bin/awk '{print $1}'); do for PRIVILEGED in $(/bin/find ""${PARTITION}"" -xdev -perm /6000 -type f); do printf -- ""${RUNNING}"" | /bin/grep -q ""${PRIVILEGED}"" && printf ""OK: '${PRIVILEGED}' found in auditing rules.\n"" || printf ""Warning: '${PRIVILEGED}' not found in running configuration.\n""; done; done | /bin/awk '{print} END { if ($1 ~ ""Warning"") print ""Fail - Warnings found""; else print ""Pass - No warning entries found"" }'' returned : 

sh: 1: /sbin/auditctl: not found

-------------------------
FAILED - /etc/audit/rules.d
The command 'for PARTITION in $(/bin/findmnt -n -l -k -it $(/bin/awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | /bin/grep -Pv ""noexec|nosuid"" | /bin/awk '{print $1}'); do for PRIVILEGED in $(/bin/find ""${PARTITION}"" -xdev -perm /6000 -type f); do /bin/grep -qr ""${PRIVILEGED}"" /etc/audit/rules.d && printf ""OK: '${PRIVILEGED}' found in auditing rules.\n"" || printf ""Warning: '${PRIVILEGED}' not found in on disk configuration.\n""; done; done | /bin/awk '{print} END { if ($1 ~ ""Warning"") print ""Fail - Warnings found""; else print ""Pass - No warning entries found"" }'' returned : 

/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
Warning: '/usr/lib/x86_64-linux-gnu/utempter/utempter' not found in on disk configuration.
Warning: '/usr/lib/dbus-1.0/dbus-daemon-launch-helper' not found in on disk configuration.
Warning: '/usr/lib/openssh/ssh-keysign' not found in on disk configuration.
Warning: '/usr/bin/umount' not found in on disk configuration.
Warning: '/usr/bin/chsh' not found in on disk configuration.
Warning: '/usr/bin/chage' not found in on disk configuration.
Warning: '/usr/bin/mount' not found in on disk configuration.
Warning: '/usr/bin/expiry' not found in on disk configuration.
Warning: '/usr/bin/ssh-agent' not found in on disk configuration.
Warning: '/usr/bin/gpasswd' not found in on disk configuration.
Warning: '/usr/bin/newgrp' not found in on disk configuration.
Warning: '/usr/bin/chfn' not found in on disk configuration.
Warning: '/usr/bin/su' not found in on disk configuration.
Warning: '/usr/bin/passwd' not found in on disk configuration.
Warning: '/usr/bin/crontab' not found in on disk configuration.
Warning: '/usr/bin/sudo' not found in on disk configuration.
Warning: '/usr/libexec/polkit-agent-helper-1' not found in on disk configuration.
Warning: '/usr/sbin/pam_extrausers_chkpwd' not found in on disk configuration.
Warning: '/usr/sbin/unix_chkpwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/bin/umount' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/bin/mount' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/bin/su' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/usr/bin/chsh' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/usr/bin/wall' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/usr/bin/chage' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/usr/bin/expiry' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/usr/bin/gpasswd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/usr/bin/newgrp' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/usr/bin/chfn' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/usr/bin/passwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/sbin/unix_chkpwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1d36c7986d9249060758aecb70b3113e7ce67744bbe4c67b054500a4984dd33b/diff/usr/bin/chsh' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1d36c7986d9249060758aecb70b3113e7ce67744bbe4c67b054500a4984dd33b/diff/usr/bin/chage' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1d36c7986d9249060758aecb70b3113e7ce67744bbe4c67b054500a4984dd33b/diff/usr/bin/expiry' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1d36c7986d9249060758aecb70b3113e7ce67744bbe4c67b054500a4984dd33b/diff/usr/bin/gpasswd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1d36c7986d9249060758aecb70b3113e7ce67744bbe4c67b054500a4984dd33b/diff/usr/bin/chfn' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1d36c7986d9249060758aecb70b3113e7ce67744bbe4c67b054500a4984dd33b/diff/usr/bin/passwd' not found in on disk configurat/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
ion.
Warning: '/var/lib/docker/overlay2/1d36c7986d9249060758aecb70b3113e7ce67744bbe4c67b054500a4984dd33b/diff/sbin/unix_chkpwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/bin/umount' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/bin/mount' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/bin/su' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/usr/bin/chsh' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/usr/bin/wall' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/usr/bin/chage' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/usr/bin/expiry' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/usr/bin/gpasswd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/usr/bin/newgrp' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/usr/bin/chfn' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/usr/bin/passwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/sbin/unix_chkpwd' not found in on disk configuration.
Fail - Warnings found","Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor the use of privileged commands.

Example script:

#!/usr/bin/env bash

{
  UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
  AUDIT_RULE_FILE=""/etc/audit/rules.d/50-privileged.rules""
  NEW_DATA=()
  for PARTITION in $(findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | grep -Pv ""noexec|nosuid"" | awk '{print $1}'); do
    readarray -t DATA < <(find ""${PARTITION}"" -xdev -perm /6000 -type f | awk -v UID_MIN=${UID_MIN} '{print ""-a always,exit -F path="" $1 "" -F perm=x -F auid>=""UID_MIN"" -F auid!=unset -k privileged"" }')
      for ENTRY in ""${DATA[@]}""; do
        NEW_DATA+=(""${ENTRY}"")
      done
  done
  readarray &amp;> /dev/null -t OLD_DATA < ""${AUDIT_RULE_FILE}""
  COMBINED_DATA=( ""${OLD_DATA[@]}"" ""${NEW_DATA[@]}"" )
  printf '%s
' ""${COMBINED_DATA[@]}"" | sort -u > ""${AUDIT_RULE_FILE}""
}

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

Special mount points

If there are any special mount points that are not visible by default from just scanning / change the PARTITION variable to the appropriate partition and re-run the remediation.

Impact:

Both the audit and remediation section of this recommendation will traverse all mounted file systems that is not mounted with either noexec or nosuid mount options. If there are large file systems without these mount options, such traversal will be significantly detrimental to the performance of the system.

Before running either the audit or remediation section, inspect the output of the following command to determine exactly which file systems will be traversed:

# findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | grep -Pv ""noexec|nosuid""

To exclude a particular file system due to adverse performance impacts, update the audit and remediation sections by adding a sufficiently unique string to the grep statement. The above command can be used to test the modified exclusions.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.7 Ensure unsuccessful file access attempts are collected"" : [FAILED]

Monitor for unsuccessful attempts to access files. The following parameters are associated with system calls that control files:

 - creation - creat
 - opening - open openat
 - truncation - truncate ftruncate

An audit log record will only be written if all of the following criteria is met for the user when trying to access a file:

 - a non-privileged user (auid>=UID_MIN)
 - is not a Daemon event (auid=4294967295/unset/-1)
 - if the system call returned EACCES (permission denied) or EPERM (some other permanent error associated with the specific system call)

Failed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system.

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor unsuccessful file access attempts.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-EACCES -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-EPERM -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-EACCES -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-EPERM -F auid>=${UID_MIN} -F auid!=unset -k access
"" >> /etc/audit/rules.d/50-access.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|14.9,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - auditctl b32 EPERM
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EPERM/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 EACCES
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EACCES/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 EPERM
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EPERM/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b32 EACCES
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EACCES/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b64 EPERM
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EPERM/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b32 EACCES
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EACCES/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b32 EPERM
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EPERM/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b64 EACCES
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EACCES/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor unsuccessful file access attempts.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-EACCES -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-EPERM -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-EACCES -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-EPERM -F auid>=${UID_MIN} -F auid!=unset -k access
"" >> /etc/audit/rules.d/50-access.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.8 Ensure events that modify user/group information are collected"" : [FAILED]

Record events affecting the modification of user or group information, including that of passwords and old passwords if in use.

 - /etc/group - system groups
 - /etc/passwd - system users
 - /etc/gshadow - encrypted password for each group
 - /etc/shadow - system user passwords
 - /etc/security/opasswd - storage of old passwords if the relevant PAM module is in use
 - /etc/nsswitch.conf - file configures how the system uses various databases and name resolution mechanisms
 - /etc/pam.conf - file determines the authentication services to be used, and the order in which the services are used.
 - /etc/pam.d - directory contains the PAM configuration files for each PAM-aware application.

The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier ""identity"" in the audit log file.

Unexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.

Solution:
Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify user/group information.

Example:

# printf ""
-w /etc/group -p wa -k identity
-w /etc/passwd -p wa -k identity
-w /etc/gshadow -p wa -k identity
-w /etc/shadow -p wa -k identity
-w /etc/security/opasswd -p wa -k identity
-w /etc/nsswitch.conf -p wa -k identity
-w /etc/pam.conf -p wa -k identity
-w /etc/pam.d -p wa -k identity
"" >> /etc/audit/rules.d/50-identity.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|4.8,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - /etc/shadow
The command '/bin/awk '/^ *-w/ &&/\/etc\/shadow/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /etc/nsswitch.cnof
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/nsswitch\.conf/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - on disk /etc/pam.conf
The command '/bin/awk '/^ *-w/ &&/\/etc\/pam\.conf/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - /etc/gshadow
The command '/bin/awk '/^ *-w/ &&/\/etc\/gshadow/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /etc/security/opasswd
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/security\/opasswd/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - /etc/group
The command '/bin/awk '/^ *-w/ &&/\/etc\/group/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - /etc/passwd
The command '/bin/awk '/^ *-w/ &&/\/etc\/passwd/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /etc/pam.d
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/pam\.d/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/shadow
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/shadow/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/gshadow
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/gshadow/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - on disk /etc/nsswitch.conf
The command '/bin/awk '/^ *-w/ &&/\/etc\/nsswitch\.conf/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /etc/passwd
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/passwd/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - /etc/security/opasswd
The command '/bin/awk '/^ *-w/ &&/\/etc\/security\/opasswd/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - on disk /etc/pam.d
The command '/bin/awk '/^ *-w/ &&/\/etc\/pam\.d/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /etc/group
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/group/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/pam.conf
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/pam\.conf/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail","Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify user/group information.

Example:

# printf ""
-w /etc/group -p wa -k identity
-w /etc/passwd -p wa -k identity
-w /etc/gshadow -p wa -k identity
-w /etc/shadow -p wa -k identity
-w /etc/security/opasswd -p wa -k identity
-w /etc/nsswitch.conf -p wa -k identity
-w /etc/pam.conf -p wa -k identity
-w /etc/pam.d -p wa -k identity
"" >> /etc/audit/rules.d/50-identity.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.9 Ensure discretionary access control permission modification events are collected"" : [FAILED]

Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The following commands and system calls effect the permissions, ownership and various attributes of files.

 - chmod
 - fchmod
 - fchmodat
 - chown
 - fchown
 - fchownat
 - lchown
 - setxattr
 - lsetxattr
 - fsetxattr
 - removexattr
 - lremovexattr
 - fremovexattr

In all cases, an audit record will only be written for non-system user ids and will ignore Daemon events. All audit records will be tagged with the identifier ""perm_mod.""

Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor discretionary access control permission modification events.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b64 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
"" >> /etc/audit/rules.d/50-perm_mod.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|5.5,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - auditctl b32 setxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/setxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b64 fchownat
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchownat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 fchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchownat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 chmod
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b32 chmod
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b32 lremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 fremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b64 fsetxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 fchmod
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 fremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 chown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b64 fchmodat
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmodat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b32 fchmodat
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmodat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64 fsetxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b32 fsetxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64 fchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b32 fchmod
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b64 lremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 fchmodat
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmodat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b64 fchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b64 setxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/setxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b64 fremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b64 removexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/removexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b32 lchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64 lsetxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b32 removexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/removexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 fchmod
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b32 setxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/setxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 fchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b32 chown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b32 fchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b64 fchmod
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b32 chown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b32 fremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 lsetxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 removexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/removexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b32 chmod
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64 removexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/removexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 fchmodat
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmodat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 lchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b32 lchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 lremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b32 fchownat
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchownat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64 fchownat
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchownat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b32 lremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b64 chown
The co","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor discretionary access control permission modification events.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b64 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
"" >> /etc/audit/rules.d/50-perm_mod.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.1 Ensure audit log files mode is configured"" : [FAILED]

Audit log files contain information about the system and system activity.

Access to audit records can reveal system and configuration data to attackers, potentially compromising its confidentiality.

Solution:
Run the following command to remove more permissive mode than 0640 from audit log files:

# [ -f /etc/audit/auditd.conf ] &amp;&amp; find ""$(dirname $(awk -F ""="" '/^s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))"" -type f -perm /0137 -exec chmod u-x,g-wx,o-rwx {} +

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
  - File: ""/etc/audit/auditd.conf"" not found.
  - ** Verify auditd is installed **","Run the following command to remove more permissive mode than 0640 from audit log files:

# [ -f /etc/audit/auditd.conf ] &amp;&amp; find ""$(dirname $(awk -F ""="" '/^s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))"" -type f -perm /0137 -exec chmod u-x,g-wx,o-rwx {} +","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.10 Ensure audit tools group owner is configured"" : [FAILED]

Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.

Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.

Solution:
Run the following command to change group ownership to the groop root :

# chgrp root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules
group: root

Actual Value:
No files found: /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules","Run the following command to change group ownership to the groop root :

# chgrp root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.2 Ensure audit log files owner is configured"" : [FAILED]

Audit log files contain information about the system and system activity.

Access to audit records can reveal system and configuration data to attackers, potentially compromising its confidentiality.

Solution:
Run the following command to configure the audit log files to be owned by the root user:

# [ -f /etc/audit/auditd.conf ] &amp;&amp; find ""$(dirname $(awk -F ""="" '/^s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))"" -type f ! -user root -exec chown root {} +

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - * Reasons for audit failure * :
  - File: ""/etc/audit/auditd.conf"" not found.
  - ** Verify auditd is installed **","Run the following command to configure the audit log files to be owned by the root user:

# [ -f /etc/audit/auditd.conf ] &amp;&amp; find ""$(dirname $(awk -F ""="" '/^s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))"" -type f ! -user root -exec chown root {} +","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.3 Ensure audit log files group owner is configured"" : [FAILED]

Audit log files contain information about the system and system activity.

Access to audit records can reveal system and configuration data to attackers, potentially compromising its confidentiality.

Solution:
Run the following command to configure the audit log files to be group owned by adm :

# find $(dirname $(awk -F""="" '/^s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs)) -type f ( ! -group adm -a ! -group root ) -exec chgrp adm {} +

Run the following command to set the log_group parameter in the audit configuration file to log_group = adm :

# sed -ri 's/^s*#?s*log_groups*=s*S+(s*#.*)?.*$/log_group = adm1/' /etc/audit/auditd.conf

Run the following command to restart the audit daemon to reload the configuration file:

# systemctl restart auditd

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - log_group path permissions
The command script with multiple lines returned : 

pass

-------------------------
FAILED - auditd.conf log_group
No files found: /etc/audit/auditd.conf","Run the following command to configure the audit log files to be group owned by adm :

# find $(dirname $(awk -F""="" '/^s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs)) -type f ( ! -group adm -a ! -group root ) -exec chgrp adm {} +

Run the following command to set the log_group parameter in the audit configuration file to log_group = adm :

# sed -ri 's/^s*#?s*log_groups*=s*S+(s*#.*)?.*$/log_group = adm1/' /etc/audit/auditd.conf

Run the following command to restart the audit daemon to reload the configuration file:

# systemctl restart auditd","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.4 Ensure the audit log file directory mode is configured"" : [FAILED]

The audit log directory contains audit log files.

Audit information includes all information including: audit records, audit settings and audit reports. This information is needed to successfully audit system activity. This information must be protected from unauthorized modification or deletion. If this information were to be compromised, forensic analysis and discovery of the true source of potentially malicious system activity is impossible to achieve.

Solution:
Run the following command to configure the audit log directory to have a mode of ""0750"" or less permissive:

# chmod g-w,o-rwx ""$(dirname ""$(awk -F= '/^s*log_files*/{print $2}' /etc/audit/auditd.conf | xargs)"")""

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
  - File: ""/etc/audit/auditd.conf"" not found
  - ** Verify auditd is installed **","Run the following command to configure the audit log directory to have a mode of ""0750"" or less permissive:

# chmod g-w,o-rwx ""$(dirname ""$(awk -F= '/^s*log_files*/{print $2}' /etc/audit/auditd.conf | xargs)"")""","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.5 Ensure audit configuration files mode is configured"" : [PASSED]

Audit configuration files control auditd and what events are audited.

Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events.

Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.

Solution:
Run the following command to remove more permissive mode than 0640 from the audit configuration files:

# find /etc/audit/ -type f ( -name '*.conf' -o -name '*.rules' ) -exec chmod u-x,g-wx,o-rwx {} +

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /bin/find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) -exec /bin/stat -Lc ""%n %a"" {} + | /bin/grep -Pv -- '^\h*\H+\h*([0,2,4,6][0,4]0)\h*$' | /bin/awk '{print} END { if(NR==0) print ""pass"" ; else print ""fail""}'
expect: ^pass$
timeout: 7200

Actual Value:
The command '/bin/find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) -exec /bin/stat -Lc ""%n %a"" {} + | /bin/grep -Pv -- '^\h*\H+\h*([0,2,4,6][0,4]0)\h*$' | /bin/awk '{print} END { if(NR==0) print ""pass"" ; else print ""fail""}'' returned : 

/bin/find: ‘/etc/audit/’: No such file or directory
pass","Run the following command to remove more permissive mode than 0640 from the audit configuration files:

# find /etc/audit/ -type f ( -name '*.conf' -o -name '*.rules' ) -exec chmod u-x,g-wx,o-rwx {} +","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.6 Ensure audit configuration files owner is configured"" : [PASSED]

Audit configuration files control auditd and what events are audited.

Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events.

Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.

Solution:
Run the following command to change ownership to root user:

# find /etc/audit/ -type f ( -name '*.conf' -o -name '*.rules' ) ! -user root -exec chown root {} +

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /bin/find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -user root | /bin/awk '{print} END { if(NR==0) print ""pass"" ; else print ""fail""}'
expect: ^pass$
timeout: 7200

Actual Value:
The command '/bin/find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -user root | /bin/awk '{print} END { if(NR==0) print ""pass"" ; else print ""fail""}'' returned : 

/bin/find: ‘/etc/audit/’: No such file or directory
pass","Run the following command to change ownership to root user:

# find /etc/audit/ -type f ( -name '*.conf' -o -name '*.rules' ) ! -user root -exec chown root {} +","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.7 Ensure audit configuration files group owner is configured"" : [PASSED]

Audit configuration files control auditd and what events are audited.

Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events.

Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.

Solution:
Run the following command to change group to root :

# find /etc/audit/ -type f ( -name '*.conf' -o -name '*.rules' ) ! -group root -exec chgrp root {} +

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /bin/find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -group root | /bin/awk '{print} END { if(NR==0) print ""pass"" ; else print ""fail""}'
expect: ^pass$
timeout: 7200

Actual Value:
The command '/bin/find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -group root | /bin/awk '{print} END { if(NR==0) print ""pass"" ; else print ""fail""}'' returned : 

/bin/find: ‘/etc/audit/’: No such file or directory
pass","Run the following command to change group to root :

# find /etc/audit/ -type f ( -name '*.conf' -o -name '*.rules' ) ! -group root -exec chgrp root {} +","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.8 Ensure audit tools mode is configured"" : [FAILED]

Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.

Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.

Solution:
Run the following command to remove more permissive mode from the audit tools:

# chmod go-w /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules
mask: 022

Actual Value:
No files found: /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules","Run the following command to remove more permissive mode from the audit tools:

# chmod go-w /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.9 Ensure audit tools owner is configured"" : [FAILED]

Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.

Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.

Solution:
Run the following command to change the owner of the audit tools to the root user:

# chown root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules
owner: root

Actual Value:
No files found: /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules","Run the following command to change the owner of the audit tools to the root user:

# chown root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""CIS_Ubuntu_Linux_22.04_LTS_v2.0.0_L1_Server.audit from CIS Ubuntu Linux 22.04 LTS Benchmark v2.0.0"" : [PASSED]

See Also: https://workbench.cisecurity.org/benchmarks/17074

Policy Value:
PASSED","n/a","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.1 Ensure cramfs kernel module is not available"" : [FAILED]

The cramfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A cramfs image can be used without having to first decompress the image.

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

Solution:
Run the following script to disable the cramfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install cramfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist cramfs in the /etc/modprobe.d/ directory
 - Unload cramfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist cramfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""cramfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""cramfs"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/fs""
  - ""/lib/modules/5.15.0-117-generic/kernel/fs""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""cramfs"" is not deny listed
 - module: ""cramfs"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/fs/cramfs/cramfs.ko ""


- Correctly set:

 - module: ""cramfs"" is not loaded","Run the following script to disable the cramfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install cramfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist cramfs in the /etc/modprobe.d/ directory
 - Unload cramfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist cramfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""cramfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.2 Ensure freevxfs kernel module is not available"" : [FAILED]

The freevxfs filesystem type is a free version of the Veritas type filesystem. This is the primary filesystem type for HP-UX operating systems.

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

Solution:
Run the following script to disable the freevxfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install freevxfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist freevxfs in the /etc/modprobe.d/ directory
 - Unload freevxfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist freevxfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""freevxfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""freevxfs"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/fs""
  - ""/lib/modules/5.15.0-117-generic/kernel/fs""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""freevxfs"" is not deny listed
 - module: ""freevxfs"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/fs/freevxfs/freevxfs.ko ""


- Correctly set:

 - module: ""freevxfs"" is not loaded","Run the following script to disable the freevxfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install freevxfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist freevxfs in the /etc/modprobe.d/ directory
 - Unload freevxfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist freevxfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""freevxfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.3 Ensure hfs kernel module is not available"" : [FAILED]

The hfs filesystem type is a hierarchical filesystem that allows you to mount Mac OS filesystems.

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

Solution:
Run the following script to disable the hfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install hfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist hfs in the /etc/modprobe.d/ directory
 - Unload hfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist hfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""hfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""hfs"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/fs""
  - ""/lib/modules/5.15.0-117-generic/kernel/fs""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""hfs"" is not deny listed
 - module: ""hfs"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/fs/hfs/hfs.ko ""


- Correctly set:

 - module: ""hfs"" is not loaded","Run the following script to disable the hfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install hfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist hfs in the /etc/modprobe.d/ directory
 - Unload hfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist hfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""hfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.4 Ensure hfsplus kernel module is not available"" : [FAILED]

The hfsplus filesystem type is a hierarchical filesystem designed to replace hfs that allows you to mount Mac OS filesystems.

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

Solution:
Run the following script to disable the hfsplus module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install hfsplus /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist hfsplus in the /etc/modprobe.d/ directory
 - Unload hfsplus from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist hfsplus in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""hfsplus"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""hfsplus"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/fs""
  - ""/lib/modules/5.15.0-117-generic/kernel/fs""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""hfsplus"" is not deny listed
 - module: ""hfsplus"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/fs/hfsplus/hfsplus.ko ""


- Correctly set:

 - module: ""hfsplus"" is not loaded","Run the following script to disable the hfsplus module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install hfsplus /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist hfsplus in the /etc/modprobe.d/ directory
 - Unload hfsplus from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist hfsplus in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""hfsplus"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.5 Ensure jffs2 kernel module is not available"" : [FAILED]

The jffs2 (journaling flash filesystem 2) filesystem type is a log-structured filesystem used in flash memory devices.

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

Solution:
Run the following script to disable the jffs2 module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install jffs2 /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist jffs2 in the /etc/modprobe.d/ directory
 - Unload jffs2 from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist jffs2 in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""jffs2"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""jffs2"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/fs""
  - ""/lib/modules/5.15.0-117-generic/kernel/fs""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""jffs2"" is not deny listed
 - module: ""jffs2"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/fs/jffs2/jffs2.ko ""


- Correctly set:

 - module: ""jffs2"" is not loaded","Run the following script to disable the jffs2 module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install jffs2 /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist jffs2 in the /etc/modprobe.d/ directory
 - Unload jffs2 from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist jffs2 in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""jffs2"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.8 Ensure usb-storage kernel module is not available"" : [FAILED]

USB storage provides a means to transfer and store files ensuring persistence and availability of the files independent of network connection status. Its popularity and utility has led to USB-based malware being a simple and common means for network infiltration and a first step to establishing a persistent threat within a networked environment.

Restricting USB access on the system will decrease the physical attack surface for a device and diminish the possible vectors to introduce malware.

Solution:
Run the following script to disable the usb-storage module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install usb-storage /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist usb-storage in the /etc/modprobe.d/ directory
 - Unload usb-storage from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist usb-storage in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""usb-storage"" # set module name
   l_mtype=""drivers"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

Impact:

Disabling the usb-storage module will disable any usage of USB storage devices.

If requirements and local site policy allow the use of such devices, other solutions should be configured accordingly instead. One example of a commonly used solution is USBGuard

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|13.7,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""usb-storage"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/drivers""
  - ""/lib/modules/5.15.0-117-generic/kernel/drivers""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""usb-storage"" is not deny listed
 - module: ""usb-storage"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/drivers/usb/storage/usb-storage.ko ""


- Correctly set:

 - module: ""usb-storage"" is not loaded","Run the following script to disable the usb-storage module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install usb-storage /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist usb-storage in the /etc/modprobe.d/ directory
 - Unload usb-storage from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist usb-storage in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""usb-storage"" # set module name
   l_mtype=""drivers"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

Impact:

Disabling the usb-storage module will disable any usage of USB storage devices.

If requirements and local site policy allow the use of such devices, other solutions should be configured accordingly instead. One example of a commonly used solution is USBGuard","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.1.1 Ensure /tmp is a separate partition"" : [FAILED]

The /tmp directory is a world-writable directory used for temporary storage by all users and some applications.

- IF - an entry for /tmp exists in /etc/fstab it will take precedence over entries in systemd default unit file.

Note: In an environment where the main system is diskless and connected to iSCSI, entries in /etc/fstab may not take precedence.

/tmp can be configured to use tmpfs

tmpfs puts everything into the kernel internal caches and grows and shrinks to accommodate the files it contains and is able to swap unneeded pages out to swap space. It has maximum size limits which can be adjusted on the fly via mount -o remount

Since tmpfs lives completely in the page cache and on swap, all tmpfs pages will be shown as ""Shmem"" in /proc/meminfo and ""Shared"" in free Notice that these counters also include shared memory. The most reliable way to get the count is using df and du

tmpfs has three mount options for sizing:

 - size : The limit of allocated bytes for this tmpfs instance. The default is half of your physical RAM without swap. If you oversize your tmpfs instances the machine will deadlock since the OOM handler will not be able to free that memory.
 - nr_blocks : The same as size, but in blocks of PAGE_SIZE.
 - nr_inodes : The maximum number of inodes for this instance. The default is half of the number of your physical RAM pages, or (on a machine with highmem) the number of lowmem RAM pages, whichever is the lower.

These parameters accept a suffix k, m or g and can be changed on remount. The size parameter also accepts a suffix % to limit this tmpfs instance to that percentage of your physical RAM. The default, when neither size nor nr_blocks is specified, is size=50%

Making /tmp its own file system allows an administrator to set additional mount options such as the noexec option on the mount, making /tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hard link to a system setuid program and wait for it to be updated. Once the program was updated, the hard link would be broken, and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.

This can be accomplished by either mounting tmpfs to /tmp or creating a separate partition for /tmp

Solution:
First ensure that systemd is correctly configured to ensure that /tmp will be mounted at boot time.

# systemctl unmask tmp.mount

For specific configuration requirements of the /tmp mount for your environment, modify /etc/fstab

Example of using tmpfs with specific mount options:

tmpfs	/tmp	tmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 0

Note: the size=2G is an example of setting a specific size for tmpfs

Example of using a volume or disk with specific mount options. The source location of the volume or disk will vary depending on your environment:

<device> /tmp <fstype> defaults,nodev,nosuid,noexec 0 0

Impact:

By design files saved to /tmp should have no expectation of surviving a reboot of the system. tmpfs is ram based and all files stored to tmpfs will be lost when the system is rebooted.

If files need to be persistent through a reboot, they should be saved to /var/tmp not /tmp

Since the /tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to tmpfs or a separate partition.

Running out of /tmp space is a problem regardless of what kind of filesystem lies under it, but in a configuration where /tmp is not a separate file system it will essentially have the whole disk available, as the default installation only creates a single / partition. On the other hand, a RAM-based /tmp (as with tmpfs ) will almost certainly be much smaller, which can lead to applications filling up the filesystem much more easily. Another alternative is to create a dedicated partition for /tmp from a separate volume or disk. One of the downsides of a disk-based dedicated partition is that it will be slower than tmpfs which is RAM-based.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/findmnt -nk /tmp
expect: ^[\s]*/tmp[\s]+

Actual Value:
The command '/bin/findmnt -nk /tmp' did not return any result","First ensure that systemd is correctly configured to ensure that /tmp will be mounted at boot time.

# systemctl unmask tmp.mount

For specific configuration requirements of the /tmp mount for your environment, modify /etc/fstab

Example of using tmpfs with specific mount options:

tmpfs	/tmp	tmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 0

Note: the size=2G is an example of setting a specific size for tmpfs

Example of using a volume or disk with specific mount options. The source location of the volume or disk will vary depending on your environment:

<device> /tmp <fstype> defaults,nodev,nosuid,noexec 0 0

Impact:

By design files saved to /tmp should have no expectation of surviving a reboot of the system. tmpfs is ram based and all files stored to tmpfs will be lost when the system is rebooted.

If files need to be persistent through a reboot, they should be saved to /var/tmp not /tmp

Since the /tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to tmpfs or a separate partition.

Running out of /tmp space is a problem regardless of what kind of filesystem lies under it, but in a configuration where /tmp is not a separate file system it will essentially have the whole disk available, as the default installation only creates a single / partition. On the other hand, a RAM-based /tmp (as with tmpfs ) will almost certainly be much smaller, which can lead to applications filling up the filesystem much more easily. Another alternative is to create a dedicated partition for /tmp from a separate volume or disk. One of the downsides of a disk-based dedicated partition is that it will be slower than tmpfs which is RAM-based.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.1.2 Ensure nodev option set on /tmp partition"" : [PASSED]

The nodev mount option specifies that the filesystem cannot contain special devices.

Since the /tmp filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /tmp

Solution:
- IF - a separate partition exists for /tmp

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /tmp partition.

Example:

<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /tmp with the configured options:

# mount -o remount /tmp

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
expect: nodev
file: /proc/self/mountinfo
regex: [\s]+/tmp[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /tmp

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /tmp partition.

Example:

<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /tmp with the configured options:

# mount -o remount /tmp","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.1.3 Ensure nosuid option set on /tmp partition"" : [PASSED]

The nosuid mount option specifies that the filesystem cannot contain setuid files.

Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /tmp

Solution:
- IF - a separate partition exists for /tmp

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /tmp partition.

Example:

<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /tmp with the configured options:

# mount -o remount /tmp

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nosuid
file: /proc/self/mountinfo
regex: [\s]+/tmp[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /tmp

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /tmp partition.

Example:

<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /tmp with the configured options:

# mount -o remount /tmp","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.1.4 Ensure noexec option set on /tmp partition"" : [PASSED]

The noexec mount option specifies that the filesystem cannot contain executable binaries.

Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /tmp

Solution:
- IF - a separate partition exists for /tmp

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /tmp partition.

Example:

<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /tmp with the configured options:

# mount -o remount /tmp

Impact:

Setting the noexec option on /tmp may prevent installation and/or updating of some 3rd party software.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: noexec
file: /proc/self/mountinfo
regex: [\s]+/tmp[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /tmp

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /tmp partition.

Example:

<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /tmp with the configured options:

# mount -o remount /tmp

Impact:

Setting the noexec option on /tmp may prevent installation and/or updating of some 3rd party software.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.2.1 Ensure /dev/shm is a separate partition"" : [PASSED]

The /dev/shm directory is a world-writable directory that can function as shared memory that facilitates inter process communication (IPC).

Making /dev/shm its own file system allows an administrator to set additional mount options such as the noexec option on the mount, making /dev/shm useless for an attacker to install executable code. It would also prevent an attacker from establishing a hard link to a system setuid program and wait for it to be updated. Once the program was updated, the hard link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.

This can be accomplished by mounting tmpfs to /dev/shm

Solution:
For specific configuration requirements of the /dev/shm mount for your environment, modify /etc/fstab

Example:

tmpfs	/dev/shm	tmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 0

Impact:

Since the /dev/shm directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition.

/dev/shm utilizing tmpfs can be resized using the size={size} parameter in the relevant entry in /etc/fstab

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
expect: [\s]+/dev/shm[\s]+
file: /proc/self/mountinfo
regex: [\s]+/dev/shm[\s]+
required: NO

Actual Value:
Compliant file(s):
      /proc/self/mountinfo - regex '[\s]+/dev/shm[\s]+' found - expect '[\s]+/dev/shm[\s]+' found in the following lines:
          8: 31 26 0:26 / /dev/shm rw,nosuid,nodev shared:4 - tmpfs tmpfs rw,inode64","For specific configuration requirements of the /dev/shm mount for your environment, modify /etc/fstab

Example:

tmpfs	/dev/shm	tmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 0

Impact:

Since the /dev/shm directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition.

/dev/shm utilizing tmpfs can be resized using the size={size} parameter in the relevant entry in /etc/fstab","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.2.2 Ensure nodev option set on /dev/shm partition"" : [PASSED]

The nodev mount option specifies that the filesystem cannot contain special devices.

Since the /dev/shm filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create special devices in /dev/shm partitions.

Solution:
- IF - a separate partition exists for /dev/shm

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.

Example:

tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /dev/shm with the configured options:

# mount -o remount /dev/shm

Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nodev
file: /proc/self/mountinfo
regex: [\s]+/dev/shm[\s]+
required: NO

Actual Value:
Compliant file(s):
      /proc/self/mountinfo - regex '[\s]+/dev/shm[\s]+' found - expect 'nodev' found in the following lines:
          8: 31 26 0:26 / /dev/shm rw,nosuid,nodev shared:4 - tmpfs tmpfs rw,inode64","- IF - a separate partition exists for /dev/shm

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.

Example:

tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /dev/shm with the configured options:

# mount -o remount /dev/shm

Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.2.3 Ensure nosuid option set on /dev/shm partition"" : [PASSED]

The nosuid mount option specifies that the filesystem cannot contain setuid files.

Setting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them.

Solution:
- IF - a separate partition exists for /dev/shm

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.

Example:

tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /dev/shm with the configured options:

# mount -o remount /dev/shm

Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nosuid
file: /proc/self/mountinfo
regex: [\s]+/dev/shm[\s]+
required: NO

Actual Value:
Compliant file(s):
      /proc/self/mountinfo - regex '[\s]+/dev/shm[\s]+' found - expect 'nosuid' found in the following lines:
          8: 31 26 0:26 / /dev/shm rw,nosuid,nodev shared:4 - tmpfs tmpfs rw,inode64","- IF - a separate partition exists for /dev/shm

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.

Example:

tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /dev/shm with the configured options:

# mount -o remount /dev/shm

Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.2.4 Ensure noexec option set on /dev/shm partition"" : [FAILED]

The noexec mount option specifies that the filesystem cannot contain executable binaries.

Setting this option on a file system prevents users from executing programs from shared memory. This deters users from introducing potentially malicious software on the system.

Solution:
- IF - a separate partition exists for /dev/shm

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /dev/shm partition.

Example:

tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /dev/shm with the configured options:

# mount -o remount /dev/shm

Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: noexec
file: /proc/self/mountinfo
regex: [\s]+/dev/shm[\s]+
required: NO

Actual Value:
Non-compliant file(s):
      /proc/self/mountinfo - regex '[\s]+/dev/shm[\s]+' found - expect 'noexec' not found in the following lines:
          8: 31 26 0:26 / /dev/shm rw,nosuid,nodev shared:4 - tmpfs tmpfs rw,inode64","- IF - a separate partition exists for /dev/shm

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /dev/shm partition.

Example:

tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /dev/shm with the configured options:

# mount -o remount /dev/shm

Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.3.2 Ensure nodev option set on /home partition"" : [PASSED]

The nodev mount option specifies that the filesystem cannot contain special devices.

Since the /home filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /home

Solution:
- IF - a separate partition exists for /home

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /home partition.

Example:

<device> /home <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /home with the configured options:

# mount -o remount /home

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nodev
file: /proc/self/mountinfo
regex: [\s]+/home[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /home

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /home partition.

Example:

<device> /home <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /home with the configured options:

# mount -o remount /home","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.3.3 Ensure nosuid option set on /home partition"" : [PASSED]

The nosuid mount option specifies that the filesystem cannot contain setuid files.

Since the /home filesystem is only intended for user file storage, set this option to ensure that users cannot create setuid files in /home

Solution:
- IF - a separate partition exists for /home

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /home partition.

Example:

<device> /home <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /home with the configured options:

# mount -o remount /home

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nosuid
file: /proc/self/mountinfo
regex: [\s]+/home[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /home

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /home partition.

Example:

<device> /home <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /home with the configured options:

# mount -o remount /home","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.4.2 Ensure nodev option set on /var partition"" : [PASSED]

The nodev mount option specifies that the filesystem cannot contain special devices.

Since the /var filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var

Solution:
- IF - a separate partition exists for /var

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var partition.

Example:

<device> /var <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var with the configured options:

# mount -o remount /var

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nodev
file: /proc/self/mountinfo
regex: [\s]+/var[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var partition.

Example:

<device> /var <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var with the configured options:

# mount -o remount /var","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.4.3 Ensure nosuid option set on /var partition"" : [PASSED]

The nosuid mount option specifies that the filesystem cannot contain setuid files.

Since the /var filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create setuid files in /var

Solution:
- IF - a separate partition exists for /var

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var partition.

Example:

<device> /var <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var with the configured options:

# mount -o remount /var

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nosuid
file: /proc/self/mountinfo
regex: [\s]+/var[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var partition.

Example:

<device> /var <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var with the configured options:

# mount -o remount /var","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.5.2 Ensure nodev option set on /var/tmp partition"" : [PASSED]

The nodev mount option specifies that the filesystem cannot contain special devices.

Since the /var/tmp filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var/tmp

Solution:
- IF - a separate partition exists for /var/tmp

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/tmp partition.

Example:

<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/tmp with the configured options:

# mount -o remount /var/tmp

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nodev
file: /proc/self/mountinfo
regex: [\s]+/var/tmp[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/tmp

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/tmp partition.

Example:

<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/tmp with the configured options:

# mount -o remount /var/tmp","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.5.3 Ensure nosuid option set on /var/tmp partition"" : [PASSED]

The nosuid mount option specifies that the filesystem cannot contain setuid files.

Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /var/tmp

Solution:
- IF - a separate partition exists for /var/tmp

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/tmp partition.

Example:

<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/tmp with the configured options:

# mount -o remount /var/tmp

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nosuid
file: /proc/self/mountinfo
regex: [\s]+/var/tmp[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/tmp

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/tmp partition.

Example:

<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/tmp with the configured options:

# mount -o remount /var/tmp","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.5.4 Ensure noexec option set on /var/tmp partition"" : [PASSED]

The noexec mount option specifies that the filesystem cannot contain executable binaries.

Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /var/tmp

Solution:
- IF - a separate partition exists for /var/tmp

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/tmp partition.

Example:

<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/tmp with the configured options:

# mount -o remount /var/tmp

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: noexec
file: /proc/self/mountinfo
regex: [\s]+/var/tmp[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/tmp

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/tmp partition.

Example:

<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/tmp with the configured options:

# mount -o remount /var/tmp","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.6.2 Ensure nodev option set on /var/log partition"" : [PASSED]

The nodev mount option specifies that the filesystem cannot contain special devices.

Since the /var/log filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var/log

Solution:
- IF - a separate partition exists for /var/log

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log partition.

Example:

<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log with the configured options:

# mount -o remount /var/log

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nodev
file: /proc/self/mountinfo
regex: [\s]+/var/log[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/log

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log partition.

Example:

<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log with the configured options:

# mount -o remount /var/log","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.6.3 Ensure nosuid option set on /var/log partition"" : [PASSED]

The nosuid mount option specifies that the filesystem cannot contain setuid files.

Since the /var/log filesystem is only intended for log files, set this option to ensure that users cannot create setuid files in /var/log

Solution:
- IF - a separate partition exists for /var/log

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log partition.

Example:

<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log with the configured options:

# mount -o remount /var/log

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nosuid
file: /proc/self/mountinfo
regex: [\s]+/var/log[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/log

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log partition.

Example:

<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log with the configured options:

# mount -o remount /var/log","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.6.4 Ensure noexec option set on /var/log partition"" : [PASSED]

The noexec mount option specifies that the filesystem cannot contain executable binaries.

Since the /var/log filesystem is only intended for log files, set this option to ensure that users cannot run executable binaries from /var/log

Solution:
- IF - a separate partition exists for /var/log

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log partition.

Example:

<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log with the configured options:

# mount -o remount /var/log

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: noexec
file: /proc/self/mountinfo
regex: [\s]+/var/log[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/log

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log partition.

Example:

<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log with the configured options:

# mount -o remount /var/log","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.7.2 Ensure nodev option set on /var/log/audit partition"" : [PASSED]

The nodev mount option specifies that the filesystem cannot contain special devices.

Since the /var/log/audit filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var/log/audit

Solution:
- IF - a separate partition exists for /var/log/audit

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log/audit partition.

Example:

<device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log/audit with the configured options:

# mount -o remount /var/log/audit

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nodev
file: /proc/self/mountinfo
regex: [\s]+/var/log/audit[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/log/audit

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log/audit partition.

Example:

<device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log/audit with the configured options:

# mount -o remount /var/log/audit","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition"" : [PASSED]

The nosuid mount option specifies that the filesystem cannot contain setuid files.

Since the /var/log/audit filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create setuid files in /var/log/audit

Solution:
- IF - a separate partition exists for /var/log/audit

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log/audit partition.

Example:

<device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log/audit with the configured options:

# mount -o remount /var/log/audit

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nosuid
file: /proc/self/mountinfo
regex: [\s]+/var/log/audit[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/log/audit

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log/audit partition.

Example:

<device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log/audit with the configured options:

# mount -o remount /var/log/audit","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.7.4 Ensure noexec option set on /var/log/audit partition"" : [PASSED]

The noexec mount option specifies that the filesystem cannot contain executable binaries.

Since the /var/log/audit filesystem is only intended for audit logs, set this option to ensure that users cannot run executable binaries from /var/log/audit

Solution:
- IF - a separate partition exists for /var/log/audit

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log/audit partition.

Example:

<device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log/audit with the configured options:

# mount -o remount /var/log/audit

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: noexec
file: /proc/self/mountinfo
regex: [\s]+/var/log/audit[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/log/audit

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log/audit partition.

Example:

<device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log/audit with the configured options:

# mount -o remount /var/log/audit","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.2.1.1 Ensure GPG keys are configured"" : [WARNING]

Most package managers implement GPG key signing to verify package integrity during installation.

It is important to ensure that updates are obtained from a valid source to protect against spoofing that could lead to the inadvertent installation of malware on the system.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Update your package manager GPG keys in accordance with site policy.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.11.2,800-171|3.11.3,800-171|3.14.1,800-53|RA-5,800-53|SI-2,800-53|SI-2(2),800-53r5|RA-5,800-53r5|SI-2,800-53r5|SI-2(2),CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSCv7|3.5,CSCv8|7.3,CSCv8|7.4,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,ITSG-33|SI-2,ITSG-33|SI-2(2),LEVEL|1M,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.1,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,PCI-DSSv4.0|6.3.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.7

Policy Value:
cmd: /bin/apt-key list
expect: ^Manual Review Required$

Actual Value:
The command '/bin/apt-key list' returned : 

Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
/etc/apt/trusted.gpg.d/ubuntu-keyring-2012-cdimage.gpg
------------------------------------------------------
pub   rsa4096 2012-05-11 [SC]
      8439 38DF 228D 22F7 B374  2BC0 D94A A3F0 EFE2 1092
uid           [ unknown] Ubuntu CD Image Automatic Signing Key (2012) <cdimage@ubuntu.com>

/etc/apt/trusted.gpg.d/ubuntu-keyring-2018-archive.gpg
------------------------------------------------------
pub   rsa4096 2018-09-17 [SC]
      F6EC B376 2474 EDA9 D21B  7022 8719 20D1 991B C93C
uid           [ unknown] Ubuntu Archive Automatic Signing Key (2018) <ftpmaster@ubuntu.com>","Update your package manager GPG keys in accordance with site policy.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.2.1.2 Ensure package manager repositories are configured"" : [WARNING]

Systems need to have package manager repositories configured to ensure they receive the latest patches and updates.

If a system's package repositories are misconfigured important patches may not be identified or a rogue repository could introduce compromised software.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Configure your package manager repositories according to site policy.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.11.2,800-171|3.11.3,800-171|3.14.1,800-53|RA-5,800-53|SI-2,800-53|SI-2(2),800-53r5|RA-5,800-53r5|SI-2,800-53r5|SI-2(2),CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSCv7|3.5,CSCv8|7.3,CSCv8|7.4,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,ITSG-33|SI-2,ITSG-33|SI-2(2),LEVEL|1M,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.1,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,PCI-DSSv4.0|6.3.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.7

Policy Value:
cmd: /bin/apt-cache policy
expect: ^Manual Review Required$

Actual Value:
The command '/bin/apt-cache policy' returned : 

Package files:
 100 /var/lib/dpkg/status
     release a=now
Pinned packages:","Configure your package manager repositories according to site policy.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.2.2.1 Ensure updates, patches, and additional security software are installed"" : [PASSED]

Periodically patches are released for included software either due to security flaws or to include additional functionality.

Newer patches may contain security enhancements that would not be available through the latest full update. As a result, it is recommended that the latest software patches be used to take advantage of the latest functionality. As with any software installation, organizations need to determine if a given update meets their requirements and verify the compatibility and supportability of any additional software against the update revision that is selected.

Solution:
Run the following command to update all packages following local site policy guidance on applying updates and patches:

# apt update

# apt upgrade
  - OR -
# apt dist-upgrade

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.11.2,800-171|3.11.3,800-171|3.14.1,800-53|RA-5,800-53|SI-2,800-53|SI-2(2),800-53r5|RA-5,800-53r5|SI-2,800-53r5|SI-2(2),CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSCv7|3.5,CSCv8|7.3,CSCv8|7.4,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,ITSG-33|SI-2,ITSG-33|SI-2(2),LEVEL|1M,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.1,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,PCI-DSSv4.0|6.3.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.7

Policy Value:
cmd: /bin/apt-get -s upgrade | /bin/grep -Ev '(Reading|Building|Calculating)'
expect: ^[\s]*0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded

Actual Value:
The command '/bin/apt-get -s upgrade | /bin/grep -Ev '(Reading|Building|Calculating)'' returned : 

0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.","Run the following command to update all packages following local site policy guidance on applying updates and patches:

# apt update

# apt upgrade
  - OR -
# apt dist-upgrade","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.3.1.1 Ensure AppArmor is installed"" : [FAILED]

AppArmor provides Mandatory Access Controls.

Without a Mandatory Access Control system installed only the default Discretionary Access Control system will be available.

Solution:
Install AppArmor.

# apt install apparmor apparmor-utils

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - dpkg check apparmor-utils
The command '/bin/dpkg -s apparmor-utils 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

dpkg-query: package 'apparmor-utils' is not installed and no information is available

-------------------------
PASSED - dpkg check apparmor
The command '/bin/dpkg -s apparmor 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

Status: install ok installed","Install AppArmor.

# apt install apparmor apparmor-utils","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration"" : [FAILED]

Configure AppArmor to be enabled at boot time and verify that it has not been overwritten by the bootloader boot parameters.

Note: This recommendation is designed around the grub bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings.

AppArmor must be enabled at boot time in your bootloader configuration to ensure that the controls it provides are not overridden.

Solution:
Edit /etc/default/grub and add the apparmor=1 and security=apparmor parameters to the GRUB_CMDLINE_LINUX= line

GRUB_CMDLINE_LINUX=""apparmor=1 security=apparmor""

Run the following command to update the grub2 configuration:

# update-grub

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - grub.cfg security=apparmor
Non-compliant file(s):
      /boot/grub/grub.cfg - regex '^[\s]*linux[\s]*' found - expect '(?i)security=apparmor(?-i)' not found in the following lines:
          155: 	linux	/boot/vmlinuz-5.15.0-117-generic root=/dev/mapper/anapaya--v3--vg-root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  quiet
          175: 		linux	/boot/vmlinuz-5.15.0-117-generic root=/dev/mapper/anapaya--v3--vg-root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  quiet
          194: 		linux	/boot/vmlinuz-5.15.0-117-generic root=/dev/mapper/anapaya--v3--vg-root ro recovery nomodeset dis_ucode_ldr noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0 
          214: 		linux	/boot/vmlinuz-5.15.0-116-generic root=/dev/mapper/anapaya--v3--vg-root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  quiet
          233: 		linux	/boot/vmlinuz-5.15.0-116-generic root=/dev/mapper/anapaya--v3--vg-root ro recovery nomodeset dis_ucode_ldr noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0

-------------------------
FAILED - grub.cfg apparmor=1
Non-compliant file(s):
      /boot/grub/grub.cfg - regex '^[\s]*linux[\s]*' found - expect '(?i)apparmor=1(?-i)' not found in the following lines:
          155: 	linux	/boot/vmlinuz-5.15.0-117-generic root=/dev/mapper/anapaya--v3--vg-root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  quiet
          175: 		linux	/boot/vmlinuz-5.15.0-117-generic root=/dev/mapper/anapaya--v3--vg-root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  quiet
          194: 		linux	/boot/vmlinuz-5.15.0-117-generic root=/dev/mapper/anapaya--v3--vg-root ro recovery nomodeset dis_ucode_ldr noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0 
          214: 		linux	/boot/vmlinuz-5.15.0-116-generic root=/dev/mapper/anapaya--v3--vg-root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  quiet
          233: 		linux	/boot/vmlinuz-5.15.0-116-generic root=/dev/mapper/anapaya--v3--vg-root ro recovery nomodeset dis_ucode_ldr noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0","Edit /etc/default/grub and add the apparmor=1 and security=apparmor parameters to the GRUB_CMDLINE_LINUX= line

GRUB_CMDLINE_LINUX=""apparmor=1 security=apparmor""

Run the following command to update the grub2 configuration:

# update-grub","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.3.1.3 Ensure all AppArmor Profiles are in enforce or complain mode"" : [PASSED]

AppArmor profiles define what resources applications are able to access.

Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that any policies that exist on the system are activated.

Solution:
Run the following command to set all profiles to enforce mode:

# aa-enforce /etc/apparmor.d/*

OR

Run the following command to set all profiles to complain mode:

# aa-complain /etc/apparmor.d/*

Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - apparmor_status - processes are confined
The command '/sbin/apparmor_status' returned : 

apparmor module is loaded.
22 profiles are loaded.
22 profiles are in enforce mode.
   /usr/bin/man
   /usr/lib/NetworkManager/nm-dhcp-client.action
   /usr/lib/NetworkManager/nm-dhcp-helper
   /usr/lib/connman/scripts/dhclient-script
   /{,usr/}sbin/dhclient
   docker-default
   lsb_release
   man_filter
   man_groff
   nvidia_modprobe
   nvidia_modprobe//kmod
   tcpdump
   ubuntu_pro_apt_news
   ubuntu_pro_esm_cache
   ubuntu_pro_esm_cache//apt_methods
   ubuntu_pro_esm_cache//apt_methods_gpgv
   ubuntu_pro_esm_cache//cloud_id
   ubuntu_pro_esm_cache//dpkg
   ubuntu_pro_esm_cache//ps
   ubuntu_pro_esm_cache//ubuntu_distro_info
   ubuntu_pro_esm_cache_systemctl
   ubuntu_pro_esm_cache_systemd_detect_virt
0 profiles are in complain mode.
0 profiles are in kill mode.
0 profiles are in unconfined mode.
5 processes have profiles defined.
5 processes are in enforce mode.
   /app/scion-all (195372) docker-default
   /app/appliance (195480) docker-default
   /app/scion-all (195497) docker-default
   /otelcol-contrib (195616) docker-default
   /app/scion-all (195761) docker-default
0 processes are in complain mode.
0 processes are unconfined but have a profile defined.
0 processes are in mixed mode.
0 processes are in kill mode.

-------------------------
PASSED - apparmor_status - profiles are loaded
The command '/sbin/apparmor_status' returned : 

apparmor module is loaded.
22 profiles are loaded.
22 profiles are in enforce mode.
   /usr/bin/man
   /usr/lib/NetworkManager/nm-dhcp-client.action
   /usr/lib/NetworkManager/nm-dhcp-helper
   /usr/lib/connman/scripts/dhclient-script
   /{,usr/}sbin/dhclient
   docker-default
   lsb_release
   man_filter
   man_groff
   nvidia_modprobe
   nvidia_modprobe//kmod
   tcpdump
   ubuntu_pro_apt_news
   ubuntu_pro_esm_cache
   ubuntu_pro_esm_cache//apt_methods
   ubuntu_pro_esm_cache//apt_methods_gpgv
   ubuntu_pro_esm_cache//cloud_id
   ubuntu_pro_esm_cache//dpkg
   ubuntu_pro_esm_cache//ps
   ubuntu_pro_esm_cache//ubuntu_distro_info
   ubuntu_pro_esm_cache_systemctl
   ubuntu_pro_esm_cache_systemd_detect_virt
0 profiles are in complain mode.
0 profiles are in kill mode.
0 profiles are in unconfined mode.
5 processes have profiles defined.
5 processes are in enforce mode.
   /app/scion-all (195372) docker-default
   /app/appliance (195480) docker-default
   /app/scion-all (195497) docker-default
   /otelcol-contrib (195616) docker-default
   /app/scion-all (195761) docker-default
0 processes are in complain mode.
0 processes are unconfined but have a profile defined.
0 processes are in mixed mode.
0 processes are in kill mode.","Run the following command to set all profiles to enforce mode:

# aa-enforce /etc/apparmor.d/*

OR

Run the following command to set all profiles to complain mode:

# aa-complain /etc/apparmor.d/*

Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.4.1 Ensure bootloader password is set"" : [FAILED]

Setting the boot loader password will require that anyone rebooting the system must enter a password before being able to set command line boot parameters

Requiring a boot password upon execution of the boot loader will prevent an unauthorized user from entering boot parameters or changing the boot partition. This prevents users from weakening security (e.g. turning off AppArmor at boot time).

Solution:
Create an encrypted password with grub-mkpasswd-pbkdf2 :

# grub-mkpasswd-pbkdf2 --iteration-count=600000 --salt=64

Enter password: <password>
Reenter password: <password>
PBKDF2 hash of your password is <encrypted-password>

Add the following into a custom /etc/grub.d configuration file:

cat <<EOF
exec tail -n +2 $0
set superusers=""<username>""
password_pbkdf2 <username> <encrypted-password>
EOF

The superuser/user information and password should not be contained in the /etc/grub.d/00_header file as this file could be overwritten in a package update.

If there is a requirement to be able to boot/reboot without entering the password, edit /etc/grub.d/10_linux and add --unrestricted to the line CLASS=

Example:

CLASS=""--class gnu-linux --class gnu --class os --unrestricted""

Run the following command to update the grub2 configuration:

# update-grub

Impact:

If password protection is enabled, only the designated superuser can edit a GRUB 2 menu item by pressing ""e"" or access the GRUB 2 command line by pressing ""c""

If GRUB 2 is set up to boot automatically to a password-protected menu entry the user has no option to back out of the password prompt to select another menu entry. Holding the SHIFT key will not display the menu in this case. The user must enter the correct username and password. If unable to do so, the configuration files will have to be edited via a LiveCD or other means to fix the problem

You can add --unrestricted to the menu entries to allow the system to boot without entering a password. A password will still be required to edit menu items.

More Information:

https://help.ubuntu.com/community/Grub2/Passwords

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - grub.cfg superusers
The file ""/boot/grub/grub.cfg"" does not contain ""^[\s]*set[\s]*superusers[\s]*=""

-------------------------
FAILED - grub.cfg password
The file ""/boot/grub/grub.cfg"" does not contain ""^[\s]*password""","Create an encrypted password with grub-mkpasswd-pbkdf2 :

# grub-mkpasswd-pbkdf2 --iteration-count=600000 --salt=64

Enter password: <password>
Reenter password: <password>
PBKDF2 hash of your password is <encrypted-password>

Add the following into a custom /etc/grub.d configuration file:

cat <<EOF
exec tail -n +2 $0
set superusers=""<username>""
password_pbkdf2 <username> <encrypted-password>
EOF

The superuser/user information and password should not be contained in the /etc/grub.d/00_header file as this file could be overwritten in a package update.

If there is a requirement to be able to boot/reboot without entering the password, edit /etc/grub.d/10_linux and add --unrestricted to the line CLASS=

Example:

CLASS=""--class gnu-linux --class gnu --class os --unrestricted""

Run the following command to update the grub2 configuration:

# update-grub

Impact:

If password protection is enabled, only the designated superuser can edit a GRUB 2 menu item by pressing ""e"" or access the GRUB 2 command line by pressing ""c""

If GRUB 2 is set up to boot automatically to a password-protected menu entry the user has no option to back out of the password prompt to select another menu entry. Holding the SHIFT key will not display the menu in this case. The user must enter the correct username and password. If unable to do so, the configuration files will have to be edited via a LiveCD or other means to fix the problem

You can add --unrestricted to the menu entries to allow the system to boot without entering a password. A password will still be required to edit menu items.

More Information:

https://help.ubuntu.com/community/Grub2/Passwords","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.4.2 Ensure access to bootloader config is configured"" : [FAILED]

The grub configuration file contains information on boot settings and passwords for unlocking boot options.

Setting the permissions to read and write for root only prevents non-root users from seeing the boot parameters or changing them. Non-root users who read the boot parameters may be able to identify weaknesses in security upon boot and be able to exploit them.

Solution:
Run the following commands to set permissions on your grub configuration:

# chown root:root /boot/grub/grub.cfg
# chmod u-x,go-rwx /boot/grub/grub.cfg

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /boot/grub/grub.cfg
group: root
mask: 7177
owner: root

Actual Value:
The file /boot/grub/grub.cfg with fmode owner: root group: root mode: 0444 uid: 0 gid: 0 uneven permissions : FALSE  does not match the policy value owner: root group: root mask: 7177 uneven permissions : FALSE 

/boot/grub/grub.cfg","Run the following commands to set permissions on your grub configuration:

# chown root:root /boot/grub/grub.cfg
# chmod u-x,go-rwx /boot/grub/grub.cfg","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.5.1 Ensure address space layout randomization is enabled"" : [FAILED]

Address space layout randomization (ASLR) is an exploit mitigation technique which randomly arranges the address space of key data areas of a process.

Randomly placing virtual memory regions will make it difficult to write memory page exploits as the memory placement will be consistently shifting.

Solution:
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - kernel.randomize_va_space = 2

Example:

# printf ""%s
"" ""kernel.randomize_va_space = 2"" >> /etc/sysctl.d/60-kernel_sysctl.conf

Run the following command to set the active kernel parameter:

# sysctl -w kernel.randomize_va_space=2

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|SI-16,800-53r5|SI-16,CSCv7|8.3,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|1A

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""kernel.randomize_va_space"" is not set in an included file
   ** Note: ""kernel.randomize_va_space"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""kernel.randomize_va_space"" is correctly set to ""2"" in the running configuration","Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - kernel.randomize_va_space = 2

Example:

# printf ""%s
"" ""kernel.randomize_va_space = 2"" >> /etc/sysctl.d/60-kernel_sysctl.conf

Run the following command to set the active kernel parameter:

# sysctl -w kernel.randomize_va_space=2

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.5.2 Ensure ptrace_scope is restricted"" : [PASSED]

The ptrace() system call provides a means by which one process (the ""tracer"") may observe and control the execution of another process (the ""tracee""), and examine and change the tracee's memory and registers.

If one application is compromised, it would be possible for an attacker to attach to other running processes (e.g. Bash, Firefox, SSH sessions, GPG agent, etc) to extract additional credentials and continue to expand the scope of their attack.

Enabling restricted mode will limit the ability of a compromised process to PTRACE_ATTACH on other processes running under the same user. With restricted mode, ptrace will continue to work with root user.

Solution:
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - kernel.yama.ptrace_scope = 1

Example:

# printf ""%s
"" ""kernel.yama.ptrace_scope = 1"" >> /etc/sysctl.d/60-kernel_sysctl.conf

Run the following command to set the active kernel parameter:

# sysctl -w kernel.yama.ptrace_scope=1

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - ""kernel.yama.ptrace_scope"" is correctly set to ""1"" in the running configuration
 - ""kernel.yama.ptrace_scope"" is correctly set to ""1"" in ""/etc/sysctl.d/10-ptrace.conf""","Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - kernel.yama.ptrace_scope = 1

Example:

# printf ""%s
"" ""kernel.yama.ptrace_scope = 1"" >> /etc/sysctl.d/60-kernel_sysctl.conf

Run the following command to set the active kernel parameter:

# sysctl -w kernel.yama.ptrace_scope=1

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.5.3 Ensure core dumps are restricted"" : [FAILED]

A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core.

Solution:
Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - fs.suid_dumpable = 0

Example:

# printf ""%s
"" ""fs.suid_dumpable = 0"" >> /etc/sysctl.d/60-fs_sysctl.conf

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

-IF- systemd-coredump is installed:

edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.7,800-53|AC-6(10),800-53r5|AC-6(10),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - hard core 0
No matching files were found
Less than 1 matches of regex found

-------------------------
PASSED - check if coredump.service is enabled
The command '/bin/systemctl is-enabled coredump.service | /bin/awk '{print} END { if(NR==0) print ""disabled"" }'' returned : 

Failed to get unit file state for coredump.service: No such file or directory
disabled

-------------------------
FAILED - fs.suid_dumpable
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""fs.suid_dumpable"" is not set in an included file
   ** Note: ""fs.suid_dumpable"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""fs.suid_dumpable"" is correctly set to ""0"" in the running configuration","Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - fs.suid_dumpable = 0

Example:

# printf ""%s
"" ""fs.suid_dumpable = 0"" >> /etc/sysctl.d/60-fs_sysctl.conf

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

-IF- systemd-coredump is installed:

edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.5.4 Ensure prelink is not installed"" : [PASSED]

prelink is a program that modifies ELF shared libraries and ELF dynamically linked binaries in such a way that the time needed for the dynamic linker to perform relocations at startup significantly decreases.

The prelinking feature can interfere with the operation of AIDE, because it changes binaries. Prelinking can also increase the vulnerability of the system if a malicious user is able to compromise a common library such as libc.

Solution:
Run the following command to restore binaries to normal:

# prelink -ua

Uninstall prelink using the appropriate package manager or manual installation:

# apt purge prelink

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.7,800-171|3.3.1,800-171|3.3.2,800-53|AC-6(9),800-53|AU-2,800-53|AU-12,800-53r5|AC-6(9),800-53r5|AU-2,800-53r5|AU-12,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.3(a),CN-L3|8.1.10.6(a),CSCv7|14.9,CSCv8|3.14,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.3,ITSG-33|AC-6,ITSG-33|AU-2,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /bin/dpkg -s prelink 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s prelink 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'prelink' is not installed and no information is available","Run the following command to restore binaries to normal:

# prelink -ua

Uninstall prelink using the appropriate package manager or manual installation:

# apt purge prelink","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.5.5 Ensure Automatic Error Reporting is not enabled"" : [PASSED]

The Apport Error Reporting Service automatically generates crash reports for debugging

Apport collects potentially sensitive data, such as core dumps, stack traces, and log files. They can contain passwords, credit card numbers, serial numbers, and other private material.

Solution:
Edit /etc/default/apport and add or edit the enabled parameter to equal 0 :

enabled=0

Run the following commands to stop and mask the apport service

# systemctl stop apport.service
# systemctl mask apport.service

- OR -

Run the following command to remove the apport package:

# apt purge apport

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - check if apport.service is active
The command '/bin/systemctl is-active apport.service | /bin/grep '^active' | /bin/awk '{print} END {if(NR==0) print ""pass""}'' returned : 

pass

-------------------------
PASSED - /etc/default/apport - enabled
No matching files were found","Edit /etc/default/apport and add or edit the enabled parameter to equal 0 :

enabled=0

Run the following commands to stop and mask the apport service

# systemctl stop apport.service
# systemctl mask apport.service

- OR -

Run the following command to remove the apport package:

# apt purge apport","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.6.1 Ensure message of the day is configured properly"" : [PASSED]

The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: m - machine architecture r - operating system release s - operating system name v - operating system version

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the "" uname -a "" command once they have logged in.

Solution:
Edit the /etc/motd file with the appropriate contents according to your site policy, remove any instances of m r s v or references to the OS platform

- OR -

- IF - the motd is not used, this file can be removed.

Run the following command to remove the motd file:

# rm /etc/motd

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.9,800-53|AC-8a.,800-53r5|AC-8a.,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8a.,LEVEL|1A,NESA|M5.2.5,NESA|T5.5.1,NIAv2|AM10a,NIAv2|AM10b,NIAv2|AM10c,NIAv2|AM10d,NIAv2|AM10e,TBA-FIISB|45.2.4

Policy Value:
PASSED","Edit the /etc/motd file with the appropriate contents according to your site policy, remove any instances of m r s v or references to the OS platform

- OR -

- IF - the motd is not used, this file can be removed.

Run the following command to remove the motd file:

# rm /etc/motd","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.6.2 Ensure local login warning banner is configured properly"" : [FAILED]

The contents of the /etc/issue file are displayed to users prior to login for local terminals.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: m - machine architecture r - operating system release s - operating system name v - operating system version - or the operating system's name

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the "" uname -a "" command once they have logged in.

Solution:
Edit the /etc/issue file with the appropriate contents according to your site policy, remove any instances of m r s v or references to the OS platform

Example:

# echo ""Authorized users only. All activity may be monitored and reported."" > /etc/issue

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.9,800-53|AC-8,800-53r5|AC-8,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - banner text
First ERROR: Ubuntu 22.04.4 != All activities
Ubuntu 22.04.4 LTS \n \l

-------------------------
PASSED - mrsv not included in /etc/issue
The file ""/etc/issue"" does not contain ""\\[mrsv]""","Edit the /etc/issue file with the appropriate contents according to your site policy, remove any instances of m r s v or references to the OS platform

Example:

# echo ""Authorized users only. All activity may be monitored and reported."" > /etc/issue","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.6.3 Ensure remote login warning banner is configured properly"" : [FAILED]

The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: m - machine architecture r - operating system release s - operating system name v - operating system version

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the "" uname -a "" command once they have logged in.

Solution:
Edit the /etc/issue.net file with the appropriate contents according to your site policy, remove any instances of m r s v or references to the OS platform

Example:

# echo ""Authorized users only. All activity may be monitored and reported."" > /etc/issue.net

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.9,800-53|AC-8,800-53r5|AC-8,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - mrsv not included in /etc/issue.net
The file ""/etc/issue.net"" does not contain ""\\[mrsv]""

-------------------------
FAILED - banner text
First ERROR: Ubuntu 22.04.4 != All activities
Ubuntu 22.04.4 LTS","Edit the /etc/issue.net file with the appropriate contents according to your site policy, remove any instances of m r s v or references to the OS platform

Example:

# echo ""Authorized users only. All activity may be monitored and reported."" > /etc/issue.net","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.6.4 Ensure access to /etc/motd is configured"" : [PASSED]

The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.

- IF - the /etc/motd file does not have the correct access configured, it could be modified by unauthorized users with incorrect or misleading information.

Solution:
Run the following commands to set mode, owner, and group on /etc/motd :

# chown root:root $(readlink -e /etc/motd)
# chmod u-x,go-wx $(readlink -e /etc/motd)

- OR -

Run the following command to remove the /etc/motd file:

# rm /etc/motd

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/motd
group: root
mask: 133
owner: root
required: NO

Actual Value:
","Run the following commands to set mode, owner, and group on /etc/motd :

# chown root:root $(readlink -e /etc/motd)
# chmod u-x,go-wx $(readlink -e /etc/motd)

- OR -

Run the following command to remove the /etc/motd file:

# rm /etc/motd","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.6.5 Ensure access to /etc/issue is configured"" : [PASSED]

The contents of the /etc/issue file are displayed to users prior to login for local terminals.

- IF - the /etc/issue file does not have the correct access configured, it could be modified by unauthorized users with incorrect or misleading information.

Solution:
Run the following commands to set mode, owner, and group on /etc/issue :

# chown root:root $(readlink -e /etc/issue)
# chmod u-x,go-wx $(readlink -e /etc/issue)

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/issue
group: root
mask: 133
owner: root

Actual Value:
The file /etc/issue with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/issue","Run the following commands to set mode, owner, and group on /etc/issue :

# chown root:root $(readlink -e /etc/issue)
# chmod u-x,go-wx $(readlink -e /etc/issue)","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.6.6 Ensure access to /etc/issue.net is configured"" : [PASSED]

The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.

- IF - the /etc/issue.net file does not have the correct access configured, it could be modified by unauthorized users with incorrect or misleading information.

Solution:
Run the following commands to set mode, owner, and group on /etc/issue.net :

# chown root:root $(readlink -e /etc/issue.net)
# chmod u-x,go-wx $(readlink -e /etc/issue.net)

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/issue.net
group: root
mask: 133
owner: root

Actual Value:
The file /etc/issue.net with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/issue.net","Run the following commands to set mode, owner, and group on /etc/issue.net :

# chown root:root $(readlink -e /etc/issue.net)
# chmod u-x,go-wx $(readlink -e /etc/issue.net)","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.10 Ensure XDCMP is not enabled"" : [PASSED]

X Display Manager Control Protocol (XDMCP) is designed to provide authenticated access to display management services for remote displays

XDMCP is inherently insecure.

 - XDMCP is not a ciphered protocol. This may allow an attacker to capture keystrokes entered by a user
 - XDMCP is vulnerable to man-in-the-middle attacks. This may allow an attacker to steal the credentials of legitimate users by impersonating the XDMCP server.

Solution:
Edit all files returned by the audit and remove or commend out the Enable=true line in the [xdmcp] block:

Example file:

# GDM configuration storage
#
# See /usr/share/gdm/gdm.schemas for a list of available options.

[daemon]
# Uncomment the line below to force the login screen to use Xorg
#WaylandEnable=false

# Enabling automatic login
# AutomaticLoginEnable = true
# AutomaticLogin = user1

# Enabling timed login
# TimedLoginEnable = true
# TimedLogin = user1
# TimedLoginDelay = 10

[security]

[xdmcp]
# Enable=true <- **This line should be removed or commented out**

[chooser]

[debug]
# Uncomment the line below to turn on debugging
# More verbose logs
# Additionally lets the X server dump core if it crashes
#Enable=true

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

Pass","Edit all files returned by the audit and remove or commend out the Enable=true line in the [xdmcp] block:

Example file:

# GDM configuration storage
#
# See /usr/share/gdm/gdm.schemas for a list of available options.

[daemon]
# Uncomment the line below to force the login screen to use Xorg
#WaylandEnable=false

# Enabling automatic login
# AutomaticLoginEnable = true
# AutomaticLogin = user1

# Enabling timed login
# TimedLoginEnable = true
# TimedLogin = user1
# TimedLoginDelay = 10

[security]

[xdmcp]
# Enable=true <- **This line should be removed or commented out**

[chooser]

[debug]
# Uncomment the line below to turn on debugging
# More verbose logs
# Additionally lets the X server dump core if it crashes
#Enable=true","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.2 Ensure GDM login banner is configured"" : [PASSED]

GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place.

Solution:
- IF - GDM is installed:

Run the following script to set and enable the text banner message on the login screen:

#!/usr/bin/env bash

{
   l_pkgoutput=""""
   if command -v dpkg-query &amp;> /dev/null; then
      l_pq=""dpkg-query -s""
   elif command -v rpm &amp;> /dev/null; then
      l_pq=""rpm -q""
   fi
   l_pcl=""gdm gdm3"" # Space separated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq ""$l_pn"" &amp;> /dev/null &amp;&amp; l_pkgoutput=""$l_pkgoutput
 - Package: \""$l_pn\"" exists on the system
 - checking configuration""
   done
   if [ -n ""$l_pkgoutput"" ]; then

      l_gdmprofile=""gdm"" # Set this to desired profile name IaW Local site policy
      l_bmessage=""'Authorized uses only. All activity may be monitored and reported'"" # Set to desired banner message
      if [ ! -f ""/etc/dconf/profile/$l_gdmprofile"" ]; then
         echo ""Creating profile \""$l_gdmprofile\""""
         echo -e ""user-db:user
system-db:$l_gdmprofile
file-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults"" > /etc/dconf/profile/$l_gdmprofile
      fi
      if [ ! -d ""/etc/dconf/db/$l_gdmprofile.d/"" ]; then
         echo ""Creating dconf database directory \""/etc/dconf/db/$l_gdmprofile.d/\""""
         mkdir /etc/dconf/db/$l_gdmprofile.d/
      fi
      if ! grep -Piq '^h*banner-message-enableh*=h*trueb' /etc/dconf/db/$l_gdmprofile.d/*; then
         echo ""creating gdm keyfile for machine-wide settings""
         if ! grep -Piq -- '^h*banner-message-enableh*=h*' /etc/dconf/db/$l_gdmprofile.d/*; then
            l_kfile=""/etc/dconf/db/$l_gdmprofile.d/01-banner-message""
            echo -e ""
[org/gnome/login-screen]
banner-message-enable=true"" >> ""$l_kfile""
         else
            l_kfile=""$(grep -Pil -- '^h*banner-message-enableh*=h*' /etc/dconf/db/$l_gdmprofile.d/*)""
            ! grep -Pq '^h*[org/gnome/login-screen]' ""$l_kfile"" &amp;&amp; sed -ri '/^s*banner-message-enable/ i[org/gnome/login-screen]' ""$l_kfile""
            ! grep -Pq '^h*banner-message-enableh*=h*trueb' ""$l_kfile"" &amp;&amp; sed -ri 's/^s*(banner-message-enables*=s*)(S+)(s*.*$)/1true 3//' ""$l_kfile""
 # sed -ri '/^s*[org/gnome/login-screen]/ a\nbanner-message-enable=true' ""$l_kfile""
         fi
      fi
      if ! grep -Piq ""^h*banner-message-text=['\""]+S+"" ""$l_kfile""; then
         sed -ri ""/^s*banner-message-enable/ abanner-message-text=$l_bmessage"" ""$l_kfile""
      fi
      dconf update
   else
      echo -e ""

 - GNOME Desktop Manager isn't installed
 - Recommendation is Not Applicable
 - No remediation required
""
   fi
}

Notes:

 - There is no character limit for the banner message. gnome-shell autodetects longer stretches of text and enters two column mode.
 - The banner message cannot be read from an external file.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.9,800-53|AC-8,800-53r5|AC-8,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- GNOME Desktop Manager isn't installed
 - Recommendation is Not Applicable
- Audit result:
  *** PASS ***


- Audit Result:
  ** PASS **","- IF - GDM is installed:

Run the following script to set and enable the text banner message on the login screen:

#!/usr/bin/env bash

{
   l_pkgoutput=""""
   if command -v dpkg-query &amp;> /dev/null; then
      l_pq=""dpkg-query -s""
   elif command -v rpm &amp;> /dev/null; then
      l_pq=""rpm -q""
   fi
   l_pcl=""gdm gdm3"" # Space separated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq ""$l_pn"" &amp;> /dev/null &amp;&amp; l_pkgoutput=""$l_pkgoutput
 - Package: \""$l_pn\"" exists on the system
 - checking configuration""
   done
   if [ -n ""$l_pkgoutput"" ]; then

      l_gdmprofile=""gdm"" # Set this to desired profile name IaW Local site policy
      l_bmessage=""'Authorized uses only. All activity may be monitored and reported'"" # Set to desired banner message
      if [ ! -f ""/etc/dconf/profile/$l_gdmprofile"" ]; then
         echo ""Creating profile \""$l_gdmprofile\""""
         echo -e ""user-db:user
system-db:$l_gdmprofile
file-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults"" > /etc/dconf/profile/$l_gdmprofile
      fi
      if [ ! -d ""/etc/dconf/db/$l_gdmprofile.d/"" ]; then
         echo ""Creating dconf database directory \""/etc/dconf/db/$l_gdmprofile.d/\""""
         mkdir /etc/dconf/db/$l_gdmprofile.d/
      fi
      if ! grep -Piq '^h*banner-message-enableh*=h*trueb' /etc/dconf/db/$l_gdmprofile.d/*; then
         echo ""creating gdm keyfile for machine-wide settings""
         if ! grep -Piq -- '^h*banner-message-enableh*=h*' /etc/dconf/db/$l_gdmprofile.d/*; then
            l_kfile=""/etc/dconf/db/$l_gdmprofile.d/01-banner-message""
            echo -e ""
[org/gnome/login-screen]
banner-message-enable=true"" >> ""$l_kfile""
         else
            l_kfile=""$(grep -Pil -- '^h*banner-message-enableh*=h*' /etc/dconf/db/$l_gdmprofile.d/*)""
            ! grep -Pq '^h*[org/gnome/login-screen]' ""$l_kfile"" &amp;&amp; sed -ri '/^s*banner-message-enable/ i[org/gnome/login-screen]' ""$l_kfile""
            ! grep -Pq '^h*banner-message-enableh*=h*trueb' ""$l_kfile"" &amp;&amp; sed -ri 's/^s*(banner-message-enables*=s*)(S+)(s*.*$)/1true 3//' ""$l_kfile""
 # sed -ri '/^s*[org/gnome/login-screen]/ a\nbanner-message-enable=true' ""$l_kfile""
         fi
      fi
      if ! grep -Piq ""^h*banner-message-text=['\""]+S+"" ""$l_kfile""; then
         sed -ri ""/^s*banner-message-enable/ abanner-message-text=$l_bmessage"" ""$l_kfile""
      fi
      dconf update
   else
      echo -e ""

 - GNOME Desktop Manager isn't installed
 - Recommendation is Not Applicable
 - No remediation required
""
   fi
}

Notes:

 - There is no character limit for the banner message. gnome-shell autodetects longer stretches of text and enters two column mode.
 - The banner message cannot be read from an external file.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.3 Ensure GDM disable-user-list option is enabled"" : [PASSED]

GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.

The disable-user-list option controls if a list of users is displayed on the login screen

Displaying the user list eliminates half of the Userid/Password equation that an unauthorized person would need to log on.

Solution:
- IF - GDM is installed:

Run the following script to enable the disable-user-list option:

Note: the l_gdm_profile variable in the script can be changed if a different profile name is desired in accordance with local site policy.

#!/usr/bin/env bash

{
   l_gdmprofile=""gdm""
   if [ ! -f ""/etc/dconf/profile/$l_gdmprofile"" ]; then
      echo ""Creating profile \""$l_gdmprofile\""""
      echo -e ""user-db:user
system-db:$l_gdmprofile
file-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults"" > /etc/dconf/profile/$l_gdmprofile
   fi
   if [ ! -d ""/etc/dconf/db/$l_gdmprofile.d/"" ]; then
      echo ""Creating dconf database directory \""/etc/dconf/db/$l_gdmprofile.d/\""""
      mkdir /etc/dconf/db/$l_gdmprofile.d/
   fi
   if ! grep -Piq '^h*disable-user-listh*=h*trueb' /etc/dconf/db/$l_gdmprofile.d/*; then
      echo ""creating gdm keyfile for machine-wide settings""
      if ! grep -Piq -- '^h*[org/gnome/login-screen]' /etc/dconf/db/$l_gdmprofile.d/*; then
         echo -e ""
[org/gnome/login-screen]
# Do not show the user list
disable-user-list=true"" >> /etc/dconf/db/$l_gdmprofile.d/00-login-screen
      else
         sed -ri '/^s*[org/gnome/login-screen]/ a# Do not show the user list
disable-user-list=true' $(grep -Pil -- '^h*[org/gnome/login-screen]' /etc/dconf/db/$l_gdmprofile.d/*)
      fi
   fi
   dconf update
}

Note: When the user profile is created or changed, the user will need to log out and log in again before the changes will be applied.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- GNOME Desktop Manager isn't installed
 - Recommendation is Not Applicable
- Audit result:
  *** PASS ***","- IF - GDM is installed:

Run the following script to enable the disable-user-list option:

Note: the l_gdm_profile variable in the script can be changed if a different profile name is desired in accordance with local site policy.

#!/usr/bin/env bash

{
   l_gdmprofile=""gdm""
   if [ ! -f ""/etc/dconf/profile/$l_gdmprofile"" ]; then
      echo ""Creating profile \""$l_gdmprofile\""""
      echo -e ""user-db:user
system-db:$l_gdmprofile
file-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults"" > /etc/dconf/profile/$l_gdmprofile
   fi
   if [ ! -d ""/etc/dconf/db/$l_gdmprofile.d/"" ]; then
      echo ""Creating dconf database directory \""/etc/dconf/db/$l_gdmprofile.d/\""""
      mkdir /etc/dconf/db/$l_gdmprofile.d/
   fi
   if ! grep -Piq '^h*disable-user-listh*=h*trueb' /etc/dconf/db/$l_gdmprofile.d/*; then
      echo ""creating gdm keyfile for machine-wide settings""
      if ! grep -Piq -- '^h*[org/gnome/login-screen]' /etc/dconf/db/$l_gdmprofile.d/*; then
         echo -e ""
[org/gnome/login-screen]
# Do not show the user list
disable-user-list=true"" >> /etc/dconf/db/$l_gdmprofile.d/00-login-screen
      else
         sed -ri '/^s*[org/gnome/login-screen]/ a# Do not show the user list
disable-user-list=true' $(grep -Pil -- '^h*[org/gnome/login-screen]' /etc/dconf/db/$l_gdmprofile.d/*)
      fi
   fi
   dconf update
}

Note: When the user profile is created or changed, the user will need to log out and log in again before the changes will be applied.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.4 Ensure GDM screen locks when the user is idle"" : [PASSED]

GNOME Desktop Manager can make the screen lock automatically whenever the user is idle for some amount of time.

Setting a lock-out value reduces the window of opportunity for unauthorized user access to another user's session that has been left unattended.

Solution:
Run the following commands to enable screen locks when the user is idle:

# gsettings set org.gnome.desktop.screensaver lock-delay 5 # gsettings set org.gnome.desktop.session idle-delay 900

- OR-

 - Create or edit the user profile in the /etc/dconf/profile/ and verify it includes the following:

user-db:user
system-db:{NAME_OF_DCONF_DATABASE}

Note: local is the name of a dconf database used in the examples.

<xhtml:ol start=""2""> -

Create the directory /etc/dconf/db/local.d/ if it doesn't already exist:

 -

Create the key file /etc/dconf/db/local.d/00-screensaver to provide information for the local database:

Example key file:

# Specify the dconf path
[org/gnome/desktop/session]

# Number of seconds of inactivity before the screen goes blank
# Set to 0 seconds if you want to deactivate the screensaver.
idle-delay=uint32 180

# Specify the dconf path
[org/gnome/desktop/screensaver]

# Number of seconds after the screen is blank before locking the screen
lock-delay=uint32 0

Note: You must include the uint32 along with the integer key values as shown.

<xhtml:ol start=""4""> - Run the following command to update the system databases:

# dconf update <xhtml:ol start=""5""> - Users must log out and back in again before the system-wide settings take effect.

Note: Users must log out and back in again before the system-wide settings take effect.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4

Policy Value:
PASSED","Run the following commands to enable screen locks when the user is idle:

# gsettings set org.gnome.desktop.screensaver lock-delay 5 # gsettings set org.gnome.desktop.session idle-delay 900

- OR-

 - Create or edit the user profile in the /etc/dconf/profile/ and verify it includes the following:

user-db:user
system-db:{NAME_OF_DCONF_DATABASE}

Note: local is the name of a dconf database used in the examples.

<xhtml:ol start=""2""> -

Create the directory /etc/dconf/db/local.d/ if it doesn't already exist:

 -

Create the key file /etc/dconf/db/local.d/00-screensaver to provide information for the local database:

Example key file:

# Specify the dconf path
[org/gnome/desktop/session]

# Number of seconds of inactivity before the screen goes blank
# Set to 0 seconds if you want to deactivate the screensaver.
idle-delay=uint32 180

# Specify the dconf path
[org/gnome/desktop/screensaver]

# Number of seconds after the screen is blank before locking the screen
lock-delay=uint32 0

Note: You must include the uint32 along with the integer key values as shown.

<xhtml:ol start=""4""> - Run the following command to update the system databases:

# dconf update <xhtml:ol start=""5""> - Users must log out and back in again before the system-wide settings take effect.

Note: Users must log out and back in again before the system-wide settings take effect.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.5 Ensure GDM screen locks cannot be overridden"" : [PASSED]

GNOME Desktop Manager can lock down specific settings by using the lockdown mode in dconf to prevent users from changing specific settings.

To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.

Setting a lock-out value reduces the window of opportunity for unauthorized user access to another user's session that has been left unattended.

Without locking down the system settings, user settings take precedence over the system settings.

Solution:
- To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/screensaver with the following content:

# Lock desktop screensaver settings
/org/gnome/desktop/session/idle-delay
/org/gnome/desktop/screensaver/lock-delay <xhtml:ol start=""2""> - Update the system databases:

# dconf update

Note: Users must log out and back in again before the system-wide settings take effect.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - GNOME Desktop Manager package is not installed on the system
  - Recommendation is not applicable","- To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/screensaver with the following content:

# Lock desktop screensaver settings
/org/gnome/desktop/session/idle-delay
/org/gnome/desktop/screensaver/lock-delay <xhtml:ol start=""2""> - Update the system databases:

# dconf update

Note: Users must log out and back in again before the system-wide settings take effect.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.6 Ensure GDM automatic mounting of removable media is disabled"" : [PASSED]

By default GNOME automatically mounts removable media when inserted as a convenience to the user.

With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves.

Solution:
- IF - GDM is installed:

Run the following script to disable automatic mounting of media for all GNOME users:

#!/usr/bin/env bash

{
   l_pkgoutput=""""
   l_gpname=""local"" # Set to desired dconf profile name (default is local)
   # Check if GNOME Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable

   # determine system's package manager
   if command -v dpkg-query > /dev/null 2>&amp;1; then
      l_pq=""dpkg-query -s""
   elif command -v rpm > /dev/null 2>&amp;1; then
      l_pq=""rpm -q""
   fi
   # Check if GDM is installed
   l_pcl=""gdm gdm3"" # Space seporated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq ""$l_pn"" > /dev/null 2>&amp;1 &amp;&amp; l_pkgoutput=""$l_pkgoutput
 - Package: \""$l_pn\"" exists on the system
 - checking configuration""
   done
   # Check configuration (If applicable)
   if [ -n ""$l_pkgoutput"" ]; then
      echo -e ""$l_pkgoutput""
      # Look for existing settings and set variables if they exist
      l_kfile=""$(grep -Prils -- '^h*automountb' /etc/dconf/db/*.d)""
      l_kfile2=""$(grep -Prils -- '^h*automount-openb' /etc/dconf/db/*.d)""
      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)
      if [ -f ""$l_kfile"" ]; then
         l_gpname=""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile"")""
         echo "" - updating dconf profile name to \""$l_gpname\""""
      elif [ -f ""$l_kfile2"" ]; then
         l_gpname=""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile2"")""
         echo "" - updating dconf profile name to \""$l_gpname\""""
      fi
      # check for consistency (Clean up configuration if needed)
      if [ -f ""$l_kfile"" ] &amp;&amp; [ ""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile"")"" != ""$l_gpname"" ]; then
         sed -ri ""/^s*automounts*=/s/^/# /"" ""$l_kfile""
         l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-automount""
      fi
      if [ -f ""$l_kfile2"" ] &amp;&amp; [ ""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile2"")"" != ""$l_gpname"" ]; then
         sed -ri ""/^s*automount-opens*=/s/^/# /"" ""$l_kfile2""
      fi
      [ -z ""$l_kfile"" ] &amp;&amp; l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-automount""
      # Check if profile file exists
      if grep -Pq -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*; then
         echo -e ""
 - dconf database profile exists in: \""$(grep -Pl -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*)\""""
      else
         if [ ! -f ""/etc/dconf/profile/user"" ]; then
            l_gpfile=""/etc/dconf/profile/user""
         else
            l_gpfile=""/etc/dconf/profile/user2""
         fi
         echo -e "" - creating dconf database profile""
         {
            echo -e ""
user-db:user""
            echo ""system-db:$l_gpname""
         } >> ""$l_gpfile""
      fi
      # create dconf directory if it doesn't exists
      l_gpdir=""/etc/dconf/db/$l_gpname.d""
      if [ -d ""$l_gpdir"" ]; then
         echo "" - The dconf database directory \""$l_gpdir\"" exists""
      else
         echo "" - creating dconf database directory \""$l_gpdir\""""
         mkdir ""$l_gpdir""
      fi
      # check automount-open setting
      if grep -Pqs -- '^h*automount-openh*=h*falseb' ""$l_kfile""; then
         echo "" - \""automount-open\"" is set to false in: \""$l_kfile\""""
      else
         echo "" - creating \""automount-open\"" entry in \""$l_kfile\""""
         ! grep -Psq -- '^h*[org/gnome/desktop/media-handling]b' ""$l_kfile"" &amp;&amp; echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
         sed -ri '/^s*[org/gnome/desktop/media-handling]/a \nautomount-open=false' ""$l_kfile""
      fi
      # check automount setting
      if grep -Pqs -- '^h*automounth*=h*falseb' ""$l_kfile""; then
         echo "" - \""automount\"" is set to false in: \""$l_kfile\""""
      else
         echo "" - creating \""automount\"" entry in \""$l_kfile\""""
         ! grep -Psq -- '^h*[org/gnome/desktop/media-handling]b' ""$l_kfile"" &amp;&amp; echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
         sed -ri '/^s*[org/gnome/desktop/media-handling]/a \nautomount=false' ""$l_kfile""
      fi
      # update dconf database
      dconf update
   else
      echo -e ""
 - GNOME Desktop Manager package is not installed on the system
 - Recommendation is not applicable""
   fi
}

Impact:

The use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - GNOME Desktop Manager package is not installed on the system
  - Recommendation is not applicable","- IF - GDM is installed:

Run the following script to disable automatic mounting of media for all GNOME users:

#!/usr/bin/env bash

{
   l_pkgoutput=""""
   l_gpname=""local"" # Set to desired dconf profile name (default is local)
   # Check if GNOME Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable

   # determine system's package manager
   if command -v dpkg-query > /dev/null 2>&amp;1; then
      l_pq=""dpkg-query -s""
   elif command -v rpm > /dev/null 2>&amp;1; then
      l_pq=""rpm -q""
   fi
   # Check if GDM is installed
   l_pcl=""gdm gdm3"" # Space seporated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq ""$l_pn"" > /dev/null 2>&amp;1 &amp;&amp; l_pkgoutput=""$l_pkgoutput
 - Package: \""$l_pn\"" exists on the system
 - checking configuration""
   done
   # Check configuration (If applicable)
   if [ -n ""$l_pkgoutput"" ]; then
      echo -e ""$l_pkgoutput""
      # Look for existing settings and set variables if they exist
      l_kfile=""$(grep -Prils -- '^h*automountb' /etc/dconf/db/*.d)""
      l_kfile2=""$(grep -Prils -- '^h*automount-openb' /etc/dconf/db/*.d)""
      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)
      if [ -f ""$l_kfile"" ]; then
         l_gpname=""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile"")""
         echo "" - updating dconf profile name to \""$l_gpname\""""
      elif [ -f ""$l_kfile2"" ]; then
         l_gpname=""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile2"")""
         echo "" - updating dconf profile name to \""$l_gpname\""""
      fi
      # check for consistency (Clean up configuration if needed)
      if [ -f ""$l_kfile"" ] &amp;&amp; [ ""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile"")"" != ""$l_gpname"" ]; then
         sed -ri ""/^s*automounts*=/s/^/# /"" ""$l_kfile""
         l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-automount""
      fi
      if [ -f ""$l_kfile2"" ] &amp;&amp; [ ""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile2"")"" != ""$l_gpname"" ]; then
         sed -ri ""/^s*automount-opens*=/s/^/# /"" ""$l_kfile2""
      fi
      [ -z ""$l_kfile"" ] &amp;&amp; l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-automount""
      # Check if profile file exists
      if grep -Pq -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*; then
         echo -e ""
 - dconf database profile exists in: \""$(grep -Pl -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*)\""""
      else
         if [ ! -f ""/etc/dconf/profile/user"" ]; then
            l_gpfile=""/etc/dconf/profile/user""
         else
            l_gpfile=""/etc/dconf/profile/user2""
         fi
         echo -e "" - creating dconf database profile""
         {
            echo -e ""
user-db:user""
            echo ""system-db:$l_gpname""
         } >> ""$l_gpfile""
      fi
      # create dconf directory if it doesn't exists
      l_gpdir=""/etc/dconf/db/$l_gpname.d""
      if [ -d ""$l_gpdir"" ]; then
         echo "" - The dconf database directory \""$l_gpdir\"" exists""
      else
         echo "" - creating dconf database directory \""$l_gpdir\""""
         mkdir ""$l_gpdir""
      fi
      # check automount-open setting
      if grep -Pqs -- '^h*automount-openh*=h*falseb' ""$l_kfile""; then
         echo "" - \""automount-open\"" is set to false in: \""$l_kfile\""""
      else
         echo "" - creating \""automount-open\"" entry in \""$l_kfile\""""
         ! grep -Psq -- '^h*[org/gnome/desktop/media-handling]b' ""$l_kfile"" &amp;&amp; echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
         sed -ri '/^s*[org/gnome/desktop/media-handling]/a \nautomount-open=false' ""$l_kfile""
      fi
      # check automount setting
      if grep -Pqs -- '^h*automounth*=h*falseb' ""$l_kfile""; then
         echo "" - \""automount\"" is set to false in: \""$l_kfile\""""
      else
         echo "" - creating \""automount\"" entry in \""$l_kfile\""""
         ! grep -Psq -- '^h*[org/gnome/desktop/media-handling]b' ""$l_kfile"" &amp;&amp; echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
         sed -ri '/^s*[org/gnome/desktop/media-handling]/a \nautomount=false' ""$l_kfile""
      fi
      # update dconf database
      dconf update
   else
      echo -e ""
 - GNOME Desktop Manager package is not installed on the system
 - Recommendation is not applicable""
   fi
}

Impact:

The use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.7 Ensure GDM disabling automatic mounting of removable media is not overridden"" : [PASSED]

By default GNOME automatically mounts removable media when inserted as a convenience to the user.

By using the lockdown mode in dconf, you can prevent users from changing specific settings. To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.

With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves.

Solution:
- To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/00-media-automount with the following content:

[org/gnome/desktop/media-handling]
automount=false
automount-open=false <xhtml:ol start=""2""> - Update the systems databases:

# dconf update

Impact:

The use of portable hard drives is very common for workstation users

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|MP-2,800-53r5|MP-2,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - GNOME Desktop Manager package is not installed on the system
  - Recommendation is not applicable","- To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/00-media-automount with the following content:

[org/gnome/desktop/media-handling]
automount=false
automount-open=false <xhtml:ol start=""2""> - Update the systems databases:

# dconf update

Impact:

The use of portable hard drives is very common for workstation users","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.8 Ensure GDM autorun-never is enabled"" : [PASSED]

The autorun-never setting allows the GNOME Desktop Display Manager to disable autorun through GDM.

Malware on removable media may taking advantage of Autorun features when the media is inserted into a system and execute.

Solution:
- IF - GDM is installed:

Run the following script to set autorun-never to true for GDM users:

#!/usr/bin/env bash

{
   l_pkgoutput="""" l_output="""" l_output2=""""
   l_gpname=""local"" # Set to desired dconf profile name (default is local)
   # Check if GNOME Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable

   # determine system's package manager
   if command -v dpkg-query &amp;> /dev/null; then
      l_pq=""dpkg-query -s""
   elif command -v rpm &amp;> /dev/null; then
      l_pq=""rpm -q""
   fi
   # Check if GDM is installed
   l_pcl=""gdm gdm3"" # Space separated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq ""$l_pn"" &amp;> /dev/null &amp;&amp; l_pkgoutput=""$l_pkgoutput
 - Package: \""$l_pn\"" exists on the system
 - checking configuration""
   done
   echo -e ""$l_pkgoutput""
   # Check configuration (If applicable)
   if [ -n ""$l_pkgoutput"" ]; then
      echo -e ""$l_pkgoutput""
      # Look for existing settings and set variables if they exist
      l_kfile=""$(grep -Prils -- '^h*autorun-neverb' /etc/dconf/db/*.d)""
      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)
      if [ -f ""$l_kfile"" ]; then
         l_gpname=""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile"")""
         echo "" - updating dconf profile name to \""$l_gpname\""""
      fi
      [ ! -f ""$l_kfile"" ] &amp;&amp; l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-autorun""
      # Check if profile file exists
      if grep -Pq -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*; then
         echo -e ""
 - dconf database profile exists in: \""$(grep -Pl -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*)\""""
      else
         [ ! -f ""/etc/dconf/profile/user"" ] &amp;&amp; l_gpfile=""/etc/dconf/profile/user"" || l_gpfile=""/etc/dconf/profile/user2""
         echo -e "" - creating dconf database profile""
         {
            echo -e ""
user-db:user""
            echo ""system-db:$l_gpname""
         } >> ""$l_gpfile""
      fi
      # create dconf directory if it doesn't exists
      l_gpdir=""/etc/dconf/db/$l_gpname.d""
      if [ -d ""$l_gpdir"" ]; then
         echo "" - The dconf database directory \""$l_gpdir\"" exists""
      else
         echo "" - creating dconf database directory \""$l_gpdir\""""
         mkdir ""$l_gpdir""
      fi
      # check autorun-never setting
      if grep -Pqs -- '^h*autorun-neverh*=h*trueb' ""$l_kfile""; then
         echo "" - \""autorun-never\"" is set to true in: \""$l_kfile\""""
      else
         echo "" - creating or updating \""autorun-never\"" entry in \""$l_kfile\""""
         if grep -Psq -- '^h*autorun-never' ""$l_kfile""; then
            sed -ri 's/(^s*autorun-nevers*=s*)(S+)(s*.*)$/1true 3/' ""$l_kfile""
         else
            ! grep -Psq -- '^h*[org/gnome/desktop/media-handling]b' ""$l_kfile"" &amp;&amp; echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
            sed -ri '/^s*[org/gnome/desktop/media-handling]/a \nautorun-never=true' ""$l_kfile""
         fi
      fi
   else
      echo -e ""
 - GNOME Desktop Manager package is not installed on the system
 - Recommendation is not applicable""
   fi
   # update dconf database
   dconf update
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - GNOME Desktop Manager package is not installed on the system
  - Recommendation is not applicable","- IF - GDM is installed:

Run the following script to set autorun-never to true for GDM users:

#!/usr/bin/env bash

{
   l_pkgoutput="""" l_output="""" l_output2=""""
   l_gpname=""local"" # Set to desired dconf profile name (default is local)
   # Check if GNOME Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable

   # determine system's package manager
   if command -v dpkg-query &amp;> /dev/null; then
      l_pq=""dpkg-query -s""
   elif command -v rpm &amp;> /dev/null; then
      l_pq=""rpm -q""
   fi
   # Check if GDM is installed
   l_pcl=""gdm gdm3"" # Space separated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq ""$l_pn"" &amp;> /dev/null &amp;&amp; l_pkgoutput=""$l_pkgoutput
 - Package: \""$l_pn\"" exists on the system
 - checking configuration""
   done
   echo -e ""$l_pkgoutput""
   # Check configuration (If applicable)
   if [ -n ""$l_pkgoutput"" ]; then
      echo -e ""$l_pkgoutput""
      # Look for existing settings and set variables if they exist
      l_kfile=""$(grep -Prils -- '^h*autorun-neverb' /etc/dconf/db/*.d)""
      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)
      if [ -f ""$l_kfile"" ]; then
         l_gpname=""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile"")""
         echo "" - updating dconf profile name to \""$l_gpname\""""
      fi
      [ ! -f ""$l_kfile"" ] &amp;&amp; l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-autorun""
      # Check if profile file exists
      if grep -Pq -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*; then
         echo -e ""
 - dconf database profile exists in: \""$(grep -Pl -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*)\""""
      else
         [ ! -f ""/etc/dconf/profile/user"" ] &amp;&amp; l_gpfile=""/etc/dconf/profile/user"" || l_gpfile=""/etc/dconf/profile/user2""
         echo -e "" - creating dconf database profile""
         {
            echo -e ""
user-db:user""
            echo ""system-db:$l_gpname""
         } >> ""$l_gpfile""
      fi
      # create dconf directory if it doesn't exists
      l_gpdir=""/etc/dconf/db/$l_gpname.d""
      if [ -d ""$l_gpdir"" ]; then
         echo "" - The dconf database directory \""$l_gpdir\"" exists""
      else
         echo "" - creating dconf database directory \""$l_gpdir\""""
         mkdir ""$l_gpdir""
      fi
      # check autorun-never setting
      if grep -Pqs -- '^h*autorun-neverh*=h*trueb' ""$l_kfile""; then
         echo "" - \""autorun-never\"" is set to true in: \""$l_kfile\""""
      else
         echo "" - creating or updating \""autorun-never\"" entry in \""$l_kfile\""""
         if grep -Psq -- '^h*autorun-never' ""$l_kfile""; then
            sed -ri 's/(^s*autorun-nevers*=s*)(S+)(s*.*)$/1true 3/' ""$l_kfile""
         else
            ! grep -Psq -- '^h*[org/gnome/desktop/media-handling]b' ""$l_kfile"" &amp;&amp; echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
            sed -ri '/^s*[org/gnome/desktop/media-handling]/a \nautorun-never=true' ""$l_kfile""
         fi
      fi
   else
      echo -e ""
 - GNOME Desktop Manager package is not installed on the system
 - Recommendation is not applicable""
   fi
   # update dconf database
   dconf update
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.9 Ensure GDM autorun-never is not overridden"" : [PASSED]

The autorun-never setting allows the GNOME Desktop Display Manager to disable autorun through GDM.

By using the lockdown mode in dconf, you can prevent users from changing specific settings.

To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.

Malware on removable media may taking advantage of Autorun features when the media is inserted into a system and execute.

Solution:
- To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/00-media-autorun with the following content:

[org/gnome/desktop/media-handling]
autorun-never=true <xhtml:ol start=""2""> - Update the systems databases:

# dconf update

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - [org/gnome/desktop/media-handling] setting not found in /etc/dconf/db/*","- To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/00-media-autorun with the following content:

[org/gnome/desktop/media-handling]
autorun-never=true <xhtml:ol start=""2""> - Update the systems databases:

# dconf update","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.1 Ensure autofs services are not in use"" : [PASSED]

autofs allows automatic mounting of devices, typically including CD/DVDs and USB drives.

With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in the filesystem even if they lacked permissions to mount it themselves.

Solution:
Run the following commands to stop autofs.service and remove the autofs package:

# systemctl stop autofs.service
# apt purge autofs

- OR -

- IF - the autofs package is required as a dependency:

Run the following commands to stop and mask autofs.service :

# systemctl stop autofs.service
# systemctl mask autofs.service

Impact:

The use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting.

There may be packages that are dependent on the autofs package. If the autofs package is removed, these dependent packages will be removed as well. Before removing the autofs package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the autofs.service leaving the autofs package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1

Policy Value:
cmd: /bin/dpkg -s autofs 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s autofs 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'autofs' is not installed and no information is available","Run the following commands to stop autofs.service and remove the autofs package:

# systemctl stop autofs.service
# apt purge autofs

- OR -

- IF - the autofs package is required as a dependency:

Run the following commands to stop and mask autofs.service :

# systemctl stop autofs.service
# systemctl mask autofs.service

Impact:

The use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting.

There may be packages that are dependent on the autofs package. If the autofs package is removed, these dependent packages will be removed as well. Before removing the autofs package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the autofs.service leaving the autofs package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.10 Ensure nis server services are not in use"" : [PASSED]

The Network Information Service (NIS) (formally known as Yellow Pages) is a client-server directory service protocol for distributing system configuration files. The NIS server is a collection of programs that allow for the distribution of configuration files. The NIS client ( ypbind ) was used to bind a machine to an NIS server and receive the distributed configuration files.

ypserv.service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that ypserv.service be removed and other, more secure services be used

Solution:
Run the following commands to stop ypserv.service and remove ypserv package:

# systemctl stop ypserv.service
# apt purge ypserv

- OR -

- IF - the ypserv package is required as a dependency:

Run the following commands to stop and mask ypserv.service :

# systemctl stop ypserv.service
# systemctl mask ypserv.service

Impact:

There may be packages that are dependent on the ypserv package. If the ypserv package is removed, these dependent packages will be removed as well. Before removing the ypserv package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the ypserv.service leaving the ypserv package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s ypserv 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s ypserv 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'ypserv' is not installed and no information is available","Run the following commands to stop ypserv.service and remove ypserv package:

# systemctl stop ypserv.service
# apt purge ypserv

- OR -

- IF - the ypserv package is required as a dependency:

Run the following commands to stop and mask ypserv.service :

# systemctl stop ypserv.service
# systemctl mask ypserv.service

Impact:

There may be packages that are dependent on the ypserv package. If the ypserv package is removed, these dependent packages will be removed as well. Before removing the ypserv package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the ypserv.service leaving the ypserv package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.11 Ensure print server services are not in use"" : [PASSED]

The Common Unix Print System (CUPS) provides the ability to print to both local and network printers. A system running CUPS can also accept print jobs from remote systems and print them to local printers. It also provides a web based remote administration capability.

If the system does not need to print jobs or accept print jobs from other systems, it is recommended that CUPS be removed to reduce the potential attack surface.

Solution:
Run the following commands to stop cups.socket and cups.service and remove the cups package:

# systemctl stop cups.socket cups.service
# apt purge cups

- OR -

- IF - the cups package is required as a dependency:

Run the following commands to stop and mask the cups.socket and cups.service :

# systemctl stop cups.socket cups.service
# systemctl mask cups.socket cups.service

Impact:

Removing the cups package, or disabling cups.socket and/or cups.service will prevent printing from the system, a common task for workstation systems.

There may be packages that are dependent on the cups package. If the cups package is removed, these dependent packages will be removed as well. Before removing the cups package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask cups.socket and cups.service leaving the cups package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s cups 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s cups 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'cups' is not installed and no information is available","Run the following commands to stop cups.socket and cups.service and remove the cups package:

# systemctl stop cups.socket cups.service
# apt purge cups

- OR -

- IF - the cups package is required as a dependency:

Run the following commands to stop and mask the cups.socket and cups.service :

# systemctl stop cups.socket cups.service
# systemctl mask cups.socket cups.service

Impact:

Removing the cups package, or disabling cups.socket and/or cups.service will prevent printing from the system, a common task for workstation systems.

There may be packages that are dependent on the cups package. If the cups package is removed, these dependent packages will be removed as well. Before removing the cups package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask cups.socket and cups.service leaving the cups package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.12 Ensure rpcbind services are not in use"" : [PASSED]

The rpcbind utility maps RPC services to the ports on which they listen. RPC processes notify rpcbind when they start, registering the ports they are listening on and the RPC program numbers they expect to serve. The client system then contacts rpcbind on the server with a particular RPC program number. The rpcbind.service redirects the client to the proper port number so it can communicate with the requested service.

Portmapper is an RPC service, which always listens on tcp and udp 111, and is used to map other RPC services (such as nfs, nlockmgr, quotad, mountd, etc.) to their corresponding port number on the server. When a remote host makes an RPC call to that server, it first consults with portmap to determine where the RPC server is listening.

A small request (~82 bytes via UDP) sent to the Portmapper generates a large response (7x to 28x amplification), which makes it a suitable tool for DDoS attacks. If rpcbind is not required, it is recommended to remove rpcbind package to reduce the potential attack surface.

Solution:
Run the following commands to stop rpcbind.socket and rpcbind.service and remove the rpcbind package:

# systemctl stop rpcbind.socket rpcbind.service
# apt purge rpcbind

- OR -

- IF - the rpcbind package is required as a dependency:

Run the following commands to stop and mask the rpcbind.socket and rpcbind.service :

# systemctl stop rpcbind.socket rpcbind.service
# systemctl mask rpcbind.socket rpcbind.service

Impact:

Many of the libvirt packages used by Enterprise Linux virtualization, and the nfs-utils package used for The Network File System (NFS), are dependent on the rpcbind package. If the rpcbind package is removed, these dependent packages will be removed as well. Before removing the rpcbind package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the rpcbind.socket and rpcbind.service leaving the rpcbind package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s rpcbind 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s rpcbind 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'rpcbind' is not installed and no information is available","Run the following commands to stop rpcbind.socket and rpcbind.service and remove the rpcbind package:

# systemctl stop rpcbind.socket rpcbind.service
# apt purge rpcbind

- OR -

- IF - the rpcbind package is required as a dependency:

Run the following commands to stop and mask the rpcbind.socket and rpcbind.service :

# systemctl stop rpcbind.socket rpcbind.service
# systemctl mask rpcbind.socket rpcbind.service

Impact:

Many of the libvirt packages used by Enterprise Linux virtualization, and the nfs-utils package used for The Network File System (NFS), are dependent on the rpcbind package. If the rpcbind package is removed, these dependent packages will be removed as well. Before removing the rpcbind package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the rpcbind.socket and rpcbind.service leaving the rpcbind package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.13 Ensure rsync services are not in use"" : [FAILED]

The rsync service can be used to synchronize files between systems over network links.

rsync.service presents a security risk as the rsync protocol is unencrypted.

The rsync package should be removed to reduce the attack area of the system.

Solution:
Run the following commands to stop rsync.service and remove the rsync package:

# systemctl stop rsync.service
# apt purge rsync

- OR -

- IF - the rsync package is required as a dependency:

Run the following commands to stop and mask rsync.service :

# systemctl stop rsync.service
# systemctl mask rsync.service

Impact:

There may be packages that are dependent on the rsync package. If the rsync package is removed, these dependent packages will be removed as well. Before removing the rsync package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask rsync.service leaving the rsync package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - active
The command '/bin/systemctl is-active rsync.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print ""pass"" ; else print ""fail""}'' returned : 

pass

-------------------------
FAILED - enabled
The command '/bin/systemctl is-enabled rsync.service 2>/dev/null | /bin/grep '^enabled' | /bin/awk '{print} END {if (NR == 0) print ""pass"" ; else print ""fail""}'' returned : 

enabled
fail","Run the following commands to stop rsync.service and remove the rsync package:

# systemctl stop rsync.service
# apt purge rsync

- OR -

- IF - the rsync package is required as a dependency:

Run the following commands to stop and mask rsync.service :

# systemctl stop rsync.service
# systemctl mask rsync.service

Impact:

There may be packages that are dependent on the rsync package. If the rsync package is removed, these dependent packages will be removed as well. Before removing the rsync package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask rsync.service leaving the rsync package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.14 Ensure samba file server services are not in use"" : [PASSED]

The Samba daemon allows system administrators to configure their Linux systems to share file systems and directories with Windows desktops. Samba will advertise the file systems and directories via the Server Message Block (SMB) protocol. Windows desktop users will be able to mount these directories and file systems as letter drives on their systems.

If there is no need to mount directories and file systems to Windows systems, then this service should be deleted to reduce the potential attack surface.

Solution:
Run the following commands to stop smbd.service and remove samba package:

# systemctl stop smbd.service
# apt purge samba

- OR -

- IF - the samba package is required as a dependency:

Run the following commands to stop and mask the smbd.service :

# systemctl stop smbd.service
# systemctl mask smbd.service

Impact:

There may be packages that are dependent on the samba package. If the samba package is removed, these dependent packages will be removed as well. Before removing the samba package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the smbd.service leaving the samba package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s samba 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s samba 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'samba' is not installed and no information is available","Run the following commands to stop smbd.service and remove samba package:

# systemctl stop smbd.service
# apt purge samba

- OR -

- IF - the samba package is required as a dependency:

Run the following commands to stop and mask the smbd.service :

# systemctl stop smbd.service
# systemctl mask smbd.service

Impact:

There may be packages that are dependent on the samba package. If the samba package is removed, these dependent packages will be removed as well. Before removing the samba package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the smbd.service leaving the samba package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.15 Ensure snmp services are not in use"" : [PASSED]

Simple Network Management Protocol (SNMP) is a widely used protocol for monitoring the health and welfare of network equipment, computer equipment and devices like UPSs.

Net-SNMP is a suite of applications used to implement SNMPv1 (RFC 1157), SNMPv2 (RFCs 1901-1908), and SNMPv3 (RFCs 3411-3418) using both IPv4 and IPv6.

Support for SNMPv2 classic (a.k.a. ""SNMPv2 historic"" - RFCs 1441-1452) was dropped with the 4.0 release of the UCD-snmp package.

The Simple Network Management Protocol (SNMP) server is used to listen for SNMP commands from an SNMP management system, execute the commands or collect the information and then send results back to the requesting system.

The SNMP server can communicate using SNMPv1 which transmits data in the clear and does not require authentication to execute commands. SNMPv3 replaces the simple/clear text password sharing used in SNMPv2 with more securely encoded parameters. If the the SNMP service is not required, the snmpd package should be removed to reduce the attack surface of the system.

Note: If SNMP is required:

 - The server should be configured for SNMP v3 only. User Authentication and Message Encryption should be configured.
 - If SNMP v2 is absolutely necessary, modify the community strings' values.

Solution:
Run the following commands to stop snmpd.service and remove the snmpd package:

# systemctl stop snmpd.service
# apt purge snmpd

- OR - If the package is required for dependencies:

Run the following commands to stop and mask the snmpd.service :

# systemctl stop snmpd.service
# systemctl mask snmpd.service

Impact:

There may be packages that are dependent on the snmpd package. If the snmpd package is removed, these packages will be removed as well.

Before removing the snmpd package, review any dependent packages to determine if they are required on the system. If a dependent package is required, stop and mask the snmpd.service leaving the snmpd package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s snmpd 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s snmpd 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'snmpd' is not installed and no information is available","Run the following commands to stop snmpd.service and remove the snmpd package:

# systemctl stop snmpd.service
# apt purge snmpd

- OR - If the package is required for dependencies:

Run the following commands to stop and mask the snmpd.service :

# systemctl stop snmpd.service
# systemctl mask snmpd.service

Impact:

There may be packages that are dependent on the snmpd package. If the snmpd package is removed, these packages will be removed as well.

Before removing the snmpd package, review any dependent packages to determine if they are required on the system. If a dependent package is required, stop and mask the snmpd.service leaving the snmpd package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.16 Ensure tftp server services are not in use"" : [PASSED]

Trivial File Transfer Protocol (TFTP) is a simple protocol for exchanging files between two TCP/IP machines. TFTP servers allow connections from a TFTP Client for sending and receiving files.

Unless there is a need to run the system as a TFTP server, it is recommended that the package be removed to reduce the potential attack surface.

TFTP does not have built-in encryption, access control or authentication. This makes it very easy for an attacker to exploit TFTP to gain access to files

Solution:
Run the following commands to stop tftpd-hpa.service and remove the tftpd-hpa package:

# systemctl stop tftpd-hpa.service
# apt purge tftpd-hpa

- OR -

- IF - the tftpd-hpa package is required as a dependency:

Run the following commands to stop and mask tftpd-hpa.service :

# systemctl stop tftpd-hpa.service
# systemctl mask tftpd-hpa.service

Impact:

TFTP is often used to provide files for network booting such as for PXE based installation of servers.

There may be packages that are dependent on the tftpd-hpa package. If the tftpd-hpa package is removed, these dependent packages will be removed as well. Before removing the tftpd-hpa package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask tftpd-hpa.service leaving the tftpd-hpa package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s tftpd-hpa 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s tftpd-hpa 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'tftpd-hpa' is not installed and no information is available","Run the following commands to stop tftpd-hpa.service and remove the tftpd-hpa package:

# systemctl stop tftpd-hpa.service
# apt purge tftpd-hpa

- OR -

- IF - the tftpd-hpa package is required as a dependency:

Run the following commands to stop and mask tftpd-hpa.service :

# systemctl stop tftpd-hpa.service
# systemctl mask tftpd-hpa.service

Impact:

TFTP is often used to provide files for network booting such as for PXE based installation of servers.

There may be packages that are dependent on the tftpd-hpa package. If the tftpd-hpa package is removed, these dependent packages will be removed as well. Before removing the tftpd-hpa package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask tftpd-hpa.service leaving the tftpd-hpa package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.17 Ensure web proxy server services are not in use"" : [PASSED]

Squid is a standard proxy server used in many distributions and environments.

Unless a system is specifically set up to act as a proxy server, it is recommended that the squid package be removed to reduce the potential attack surface.

Note: Several HTTP proxy servers exist. These should be checked and removed unless required.

Solution:
Run the following commands to stop squid.service and remove the squid package:

# systemctl stop squid.service
# apt purge squid

- OR - If the squid package is required as a dependency:

Run the following commands to stop and mask the squid.service :

# systemctl stop squid.service
# systemctl mask squid.service

Impact:

There may be packages that are dependent on the squid package. If the squid package is removed, these dependent packages will be removed as well. Before removing the squid package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the squid.service leaving the squid package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s squid 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s squid 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'squid' is not installed and no information is available","Run the following commands to stop squid.service and remove the squid package:

# systemctl stop squid.service
# apt purge squid

- OR - If the squid package is required as a dependency:

Run the following commands to stop and mask the squid.service :

# systemctl stop squid.service
# systemctl mask squid.service

Impact:

There may be packages that are dependent on the squid package. If the squid package is removed, these dependent packages will be removed as well. Before removing the squid package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the squid.service leaving the squid package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.18 Ensure web server services are not in use"" : [PASSED]

Web servers provide the ability to host web site content.

Unless there is a local site approved requirement to run a web server service on the system, web server packages should be removed to reduce the potential attack surface.

Solution:
Run the following commands to stop httpd.socket httpd.service and nginx.service and remove httpd and nginx packages:

# systemctl stop apache2.socket httpd.service nginx.service
# apt purge apache2 nginx

- OR -

- IF - a package is installed and is required for dependencies:

Run the following commands to stop and mask apache2.socket apache2.service and nginx.service :

# systemctl stop apache2.socket apache2.service nginx.service
# systemctl mask apache2.socket apache2.service nginx.service

Note: Other web server packages may exist. If not required and authorized by local site policy, they should also be removed. If the package is required for a dependency, the service and socket should be stopped and masked.

Impact:

Removal of web server packages will remove that ability for the server to host web services.

- IF - the web server package is required for a dependency, any related service or socket should be stopped and masked.

Note: If the remediation steps to mask a service are followed and that package is not installed on the system, the service and/or socket will still be masked. If the package is installed due to an approved requirement to host a web server, the associated service and/or socket would need to be unmasked before it could be enabled and/or started.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
PASSED","Run the following commands to stop httpd.socket httpd.service and nginx.service and remove httpd and nginx packages:

# systemctl stop apache2.socket httpd.service nginx.service
# apt purge apache2 nginx

- OR -

- IF - a package is installed and is required for dependencies:

Run the following commands to stop and mask apache2.socket apache2.service and nginx.service :

# systemctl stop apache2.socket apache2.service nginx.service
# systemctl mask apache2.socket apache2.service nginx.service

Note: Other web server packages may exist. If not required and authorized by local site policy, they should also be removed. If the package is required for a dependency, the service and socket should be stopped and masked.

Impact:

Removal of web server packages will remove that ability for the server to host web services.

- IF - the web server package is required for a dependency, any related service or socket should be stopped and masked.

Note: If the remediation steps to mask a service are followed and that package is not installed on the system, the service and/or socket will still be masked. If the package is installed due to an approved requirement to host a web server, the associated service and/or socket would need to be unmasked before it could be enabled and/or started.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.19 Ensure xinetd services are not in use"" : [PASSED]

The X Window System provides a Graphical User Interface (GUI) where users can have multiple windows in which to run programs and various add on. The X Windows system is typically used on workstations where users login, but not on servers where users typically do not login.

Unless your organization specifically requires graphical login access via X Windows, remove it to reduce the potential attack surface.

Solution:
Run the following commands to stop xinetd.service and remove the xinetd package:

# systemctl stop xinetd.service
# apt purge xinetd

-OR-

-IF- the xinetd package is required as a dependency:

Run the following commands to stop and mask the xinetd.service :

# systemctl stop xinetd.service
# systemctl mask xinetd.service

Impact:

There may be packages that are dependent on the xinetd package. If the xinetd package is removed, these dependent packages will be removed as well. Before removing the xinetd package, review any dependent packages to determine if they are required on the system.

-IF- a dependent package is required: stop and mask xinetd.service leaving the xinetd package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s xinetd 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s xinetd 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'xinetd' is not installed and no information is available","Run the following commands to stop xinetd.service and remove the xinetd package:

# systemctl stop xinetd.service
# apt purge xinetd

-OR-

-IF- the xinetd package is required as a dependency:

Run the following commands to stop and mask the xinetd.service :

# systemctl stop xinetd.service
# systemctl mask xinetd.service

Impact:

There may be packages that are dependent on the xinetd package. If the xinetd package is removed, these dependent packages will be removed as well. Before removing the xinetd package, review any dependent packages to determine if they are required on the system.

-IF- a dependent package is required: stop and mask xinetd.service leaving the xinetd package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.2 Ensure avahi daemon services are not in use"" : [PASSED]

Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD service discovery. Avahi allows programs to publish and discover services and hosts running on a local network with no specific configuration. For example, a user can plug a computer into a network and Avahi automatically finds printers to print to, files to look at and people to talk to, as well as network services running on the machine.

Automatic discovery of network services is not normally required for system functionality. It is recommended to remove this package to reduce the potential attack surface.

Solution:
Run the following commands to stop avahi-daemon.socket and avahi-daemon.service and remove the avahi-daemon package:

# systemctl stop avahi-daemon.socket avahi-daemon.service
# apt purge avahi-daemon

- OR -

- IF - the avahi-daemon package is required as a dependency:

Run the following commands to stop and mask the avahi-daemon.socket and avahi-daemon.service :

# systemctl stop avahi-daemon.socket avahi-daemon.service
# systemctl mask avahi-daemon.socket avahi-daemon.service

Impact:

There may be packages that are dependent on the avahi package. If the avahi package is removed, these dependent packages will be removed as well. Before removing the avahi package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the avahi-daemon.socket and avahi-daemon.service leaving the avahi package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s avahi-daemon 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s avahi-daemon 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'avahi-daemon' is not installed and no information is available","Run the following commands to stop avahi-daemon.socket and avahi-daemon.service and remove the avahi-daemon package:

# systemctl stop avahi-daemon.socket avahi-daemon.service
# apt purge avahi-daemon

- OR -

- IF - the avahi-daemon package is required as a dependency:

Run the following commands to stop and mask the avahi-daemon.socket and avahi-daemon.service :

# systemctl stop avahi-daemon.socket avahi-daemon.service
# systemctl mask avahi-daemon.socket avahi-daemon.service

Impact:

There may be packages that are dependent on the avahi package. If the avahi package is removed, these dependent packages will be removed as well. Before removing the avahi package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the avahi-daemon.socket and avahi-daemon.service leaving the avahi package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.21 Ensure mail transfer agent is configured for local-only mode"" : [PASSED]

Mail Transfer Agents (MTA), such as sendmail and Postfix, are used to listen for incoming mail and transfer the messages to the appropriate user or mail server. If the system is not intended to be a mail server, it is recommended that the MTA be configured to only process local mail.

The software for all Mail Transfer Agents is complex and most have a long history of security issues. While it is important to ensure that the system can process local mail messages, it is not necessary to have the MTA's daemon listening on a port unless the server is intended to be a mail server that receives and processes mail from other systems.

Solution:
Edit /etc/postfix/main.cf and add the following line to the RECEIVING MAIL section. If the line already exists, change it to look like the line below:

inet_interfaces = loopback-only

Run the following command to restart postfix :

# systemctl restart postfix

Note:

 - This recommendation is designed around the postfix mail server.
 - Depending on your environment you may have an alternative MTA installed such as exim4. If this is the case consult the documentation for your installed MTA to configure the recommended state.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

/bin/bash: line 9: postconf: command not found

- Audit Result:
  ** PASS **

 - Port ""25"" is not listening on a non-loopback network interface
 - Port ""465"" is not listening on a non-loopback network interface
 - Port ""587"" is not listening on a non-loopback network interface","Edit /etc/postfix/main.cf and add the following line to the RECEIVING MAIL section. If the line already exists, change it to look like the line below:

inet_interfaces = loopback-only

Run the following command to restart postfix :

# systemctl restart postfix

Note:

 - This recommendation is designed around the postfix mail server.
 - Depending on your environment you may have an alternative MTA installed such as exim4. If this is the case consult the documentation for your installed MTA to configure the recommended state.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.22 Ensure only approved services are listening on a network interface"" : [WARNING]

A network port is identified by its number, the associated IP address, and the type of the communication protocol such as TCP or UDP.

A listening port is a network port on which an application or process listens on, acting as a communication endpoint.

Each listening port can be open or closed (filtered) using a firewall. In general terms, an open port is a network port that accepts incoming packets from remote locations.

Services listening on the system pose a potential risk as an attack vector. These services should be reviewed, and if not required, the service should be stopped, and the package containing the service should be removed. If required packages have a dependency, the service should be stopped and masked to reduce the attack surface of the system.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Run the following commands to stop the service and remove the package containing the service:

# systemctl stop <service_name>.socket <service_name>.service
# apt purge <package_name>

- OR - If required packages have a dependency:

Run the following commands to stop and mask the service and socket:

# systemctl stop <service_name>.socket <service_name>.service
# systemctl mask <service_name>.socket <service_name>.service

Note: replace <service_name> with the appropriate service name.

Impact:

There may be packages that are dependent on the service's package. If the service's package is removed, these dependent packages will be removed as well. Before removing the service's package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the <service_name>.socket and <service_name>.service leaving the service's package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/ss -plntu
expect: ^Manual Review Required$

Actual Value:
The command '/bin/ss -plntu' returned : 

Netid State  Recv-Q Send-Q Local Address:Port  Peer Address:PortProcess                                     
udp   UNCONN 0      0            0.0.0.0:51021      0.0.0.0:*                                               
udp   UNCONN 0      0            0.0.0.0:30041      0.0.0.0:*    users:((""scion-all"",pid=195372,fd=3))      
udp   UNCONN 0      0      192.168.111.1:30042      0.0.0.0:*    users:((""vpp_main"",pid=195788,fd=133))     
udp   UNCONN 0      0      127.0.0.53%lo:53         0.0.0.0:*    users:((""systemd-resolve"",pid=482,fd=13))  
udp   UNCONN 0      0      192.168.111.1:443        0.0.0.0:*    users:((""caddy"",pid=187660,fd=24))         
udp   UNCONN 0      0        198.18.30.2:443        0.0.0.0:*    users:((""caddy"",pid=187660,fd=10))         
udp   UNCONN 0      0          127.0.0.1:443        0.0.0.0:*    users:((""caddy"",pid=187660,fd=8))          
udp   UNCONN 0      0               [::]:51021         [::]:*                                               
udp   UNCONN 0      0               [::]:30041         [::]:*    users:((""scion-all"",pid=195372,fd=7))      
tcp   LISTEN 0      5          127.0.0.1:33333      0.0.0.0:*    users:((""vpp_main"",pid=195788,fd=28))      
tcp   LISTEN 0      4096   192.168.111.1:443        0.0.0.0:*    users:((""caddy"",pid=187660,fd=20))         
tcp   LISTEN 0      4096   192.168.111.1:80         0.0.0.0:*    users:((""caddy"",pid=187660,fd=38))         
tcp   LISTEN 0      4096       127.0.0.1:443        0.0.0.0:*    users:((""caddy"",pid=187660,fd=9))          
tcp   LISTEN 0      4096       127.0.0.1:48001      0.0.0.0:*    users:((""appliance-insta"",pid=172613,fd=7))
tcp   LISTEN 0      4096       127.0.0.1:48000      0.0.0.0:*    users:((""appliance-insta"",pid=172613,fd=9))
tcp   LISTEN 0      4096       127.0.0.1:48022      0.0.0.0:*    users:((""appliance"",pid=590,fd=8))         
tcp   LISTEN 0      4096       127.0.0.1:48021      0.0.0.0:*    users:((""appliance"",pid=590,fd=7))         
tcp   LISTEN 0      4096       127.0.0.1:48020      0.0.0.0:*    users:((""appliance"",pid=590,fd=9))         
tcp   LISTEN 0      4096       127.0.0.1:48031      0.0.0.0:*    users:((""appliance"",pid=195480,fd=8))      
tcp   LISTEN 0      4096       127.0.0.1:48030      0.0.0.0:*    users:((""appliance"",pid=195480,fd=7))      
tcp   LISTEN 0      4096       127.0.0.1:48041      0.0.0.0:*    users:((""otelcol-contrib"",pid=195616,fd=7))
tcp   LISTEN 0      4096       127.0.0.1:48050      0.0.0.0:*    users:((""caddy"",pid=187660,fd=33))         
tcp   LISTEN 0      4096       127.0.0.1:48061      0.0.0.0:*    users:((""debugscraper"",pid=594,fd=26))     
tcp   LISTEN 0      4096       127.0.0.1:41601      0.0.0.0:*    users:((""scion-all"",pid=195850,fd=10))     
tcp   LISTEN 0      4096       127.0.0.1:41600      0.0.0.0:*    users:((""scion-all"",pid=195850,fd=9))      
tcp   LISTEN 0      4096       127.0.0.1:8888       0.0.0.0:*    users:((""otelcol-contrib"",pid=195616,fd=3))
tcp   LISTEN 0      4096       127.0.0.1:9100       0.0.0.0:*    users:((""node_exporter"",pid=195537,fd=3))  
tcp   LISTEN 0      4096       127.0.0.1:9080       0.0.0.0:*    users:((""promtail"",pid=195679,fd=7))       
tcp   LISTEN 0      4096       127.0.0.1:41201      0.0.0.0:*    users:((""scion-all"",pid=195666,fd=10))     
tcp   LISTEN 0      4096       127.0.0.1:41200      0.0.0.0:*    users:((""scion-all"",pid=195666,fd=11))     
tcp   LISTEN 0      4096       127.0.0.1:41101      0.0.0.0:*    users:((""scion-all"",pid=195388,fd=8))      
tcp   LISTEN 0      4096       127.0.0.1:41100      0.0.0.0:*    users:((""scion-all"",pid=195388,fd=9))      
tcp   LISTEN 0      4096       127.0.0.1:41001      0.0.0.0:*    users:((""scion-all"",pid=195497,fd=19))     
tcp   LISTEN 0      4096       127.0.0.1:41000      0.0.0.0:*    users:((""scion-all"",pid=195497,fd=20))     
tcp   LISTEN 0      4096       127.0.0.1:41401      0.0.0.0:*    users:((""scion-all"",pid=195372,fd=9))      
tcp   LISTEN 0      4096       127.0.0.1:41400      0.0.0.0:*    users:((""scion-all"",pid=195372,fd=10))     
tcp   LISTEN 0      4096       127.0.0.1:41302      0.0.0.0:*    users:((""scion-all"",pid=195761,fd=12))     
tcp   LISTEN 0      4096       127.0.0.1:41301      0.0.0.0:*    users:((""scion-all"",pid=195761,fd=14))     
tcp   LISTEN 0      4096       127.0.0.1:41300      0.0.0.0:*    users:((""scion-all"",pid=195761,fd=13))     
tcp   LISTEN 0      128          0.0.0.0:22         0.0.0.0:*    users:((""sshd"",pid=12772,fd=3))            
tcp   LISTEN 0      4096       127.0.0.1:53077      0.0.0.0:*    users:((""promtail"",pid=195679,fd=8))       
tcp   LISTEN 0      4096       127.0.0.1:19531      0.0.0.0:*    users:((""systemd"",pid=1,fd=114))           
tcp   LISTEN 0      4096     198.18.30.2:443        0.0.0.0:*    users:((""caddy"",pid=187660,fd=34))         
tcp   LISTEN 0      4096     198.18.30.2:80         0.0.0.0:*    users:((""caddy"",pid=187660,fd=37))         
tcp   LISTEN 0      4096   192.168.111.1:30252      0.0.0.0:*    users:((""scion-all"",pid=195497,fd=15))     
tcp   LISTEN 0      4096   127.0.0.53%lo:53         0.0.0.0:*    users:((""systemd-resolve"",pid=482,fd=14))  
tcp   LISTEN 0      4096               *:42001            *:*    users:((""caddy"",pid=187660,fd=36))         
tcp   LISTEN 0      4096               *:80               *:*    users:((""caddy"",pid=187660,fd=35))         
tcp   LISTEN 0      128             [::]:22            [::]:*    users:((""sshd"",pid=12772,fd=4))","Run the following commands to stop the service and remove the package containing the service:

# systemctl stop <service_name>.socket <service_name>.service
# apt purge <package_name>

- OR - If required packages have a dependency:

Run the following commands to stop and mask the service and socket:

# systemctl stop <service_name>.socket <service_name>.service
# systemctl mask <service_name>.socket <service_name>.service

Note: replace <service_name> with the appropriate service name.

Impact:

There may be packages that are dependent on the service's package. If the service's package is removed, these dependent packages will be removed as well. Before removing the service's package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the <service_name>.socket and <service_name>.service leaving the service's package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.3 Ensure dhcp server services are not in use"" : [PASSED]

The Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to be dynamically assigned IP addresses. There are two versions of the DHCP protocol DHCPv4 and DHCPv6 At startup the server may be started for one or the other via the -4 or -6 arguments.

Unless a system is specifically set up to act as a DHCP server, it is recommended that this package be removed to reduce the potential attack surface.

Solution:
Run the following commands to stop isc-dhcp-server.service and isc-dhcp-server6.service and remove the isc-dhcp-server package:

# systemctl stop isc-dhcp-server.service isc-dhcp-server6.service
# apt purge isc-dhcp-server

- OR -

- IF - the isc-dhcp-server package is required as a dependency:

Run the following commands to stop and mask isc-dhcp-server.service and isc-dhcp-server6.service :

# systemctl stop isc-dhcp-server.service isc-dhcp-server6.service
# systemctl mask isc-dhcp-server isc-dhcp-server6.service

Impact:

There may be packages that are dependent on the isc-dhcp-server package. If the isc-dhcp-server package is removed, these dependent packages will be removed as well. Before removing the isc-dhcp-server package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the isc-dhcp-server.service and isc-dhcp-server6.service leaving the isc-dhcp-server package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s isc-dhcp-server 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s isc-dhcp-server 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'isc-dhcp-server' is not installed and no information is available","Run the following commands to stop isc-dhcp-server.service and isc-dhcp-server6.service and remove the isc-dhcp-server package:

# systemctl stop isc-dhcp-server.service isc-dhcp-server6.service
# apt purge isc-dhcp-server

- OR -

- IF - the isc-dhcp-server package is required as a dependency:

Run the following commands to stop and mask isc-dhcp-server.service and isc-dhcp-server6.service :

# systemctl stop isc-dhcp-server.service isc-dhcp-server6.service
# systemctl mask isc-dhcp-server isc-dhcp-server6.service

Impact:

There may be packages that are dependent on the isc-dhcp-server package. If the isc-dhcp-server package is removed, these dependent packages will be removed as well. Before removing the isc-dhcp-server package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the isc-dhcp-server.service and isc-dhcp-server6.service leaving the isc-dhcp-server package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.4 Ensure dns server services are not in use"" : [PASSED]

The Domain Name System (DNS) is a hierarchical naming system that maps names to IP addresses for computers, services and other resources connected to a network.

Unless a system is specifically designated to act as a DNS server, it is recommended that the package be deleted to reduce the potential attack surface.

Solution:
Run the following commands to stop bind9.service and remove the bind9 package:

# systemctl stop bind9.service
# apt purge bind9

- OR -

- IF - the bind9 package is required as a dependency:

Run the following commands to stop and mask bind9.service :

# systemctl stop bind9.service
# systemctl mask bind9.service

Impact:

There may be packages that are dependent on the bind9 package. If the bind9 package is removed, these dependent packages will be removed as well. Before removing the bind9 package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the bind9.service leaving the bind9 package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s bind9 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s bind9 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'bind9' is not installed and no information is available","Run the following commands to stop bind9.service and remove the bind9 package:

# systemctl stop bind9.service
# apt purge bind9

- OR -

- IF - the bind9 package is required as a dependency:

Run the following commands to stop and mask bind9.service :

# systemctl stop bind9.service
# systemctl mask bind9.service

Impact:

There may be packages that are dependent on the bind9 package. If the bind9 package is removed, these dependent packages will be removed as well. Before removing the bind9 package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the bind9.service leaving the bind9 package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.5 Ensure dnsmasq services are not in use"" : [PASSED]

dnsmasq is a lightweight tool that provides DNS caching, DNS forwarding and DHCP (Dynamic Host Configuration Protocol) services.

Unless a system is specifically designated to act as a DNS caching, DNS forwarding and/or DHCP server, it is recommended that the package be removed to reduce the potential attack surface.

Solution:
Run the following commands to stop dnsmasq.service and remove dnsmasq package:

# systemctl stop dnsmasq.service
# apt purge dnsmasq

- OR -

- IF - the dnsmasq package is required as a dependency:

Run the following commands to stop and mask the dnsmasq.service :

# systemctl stop dnsmasq.service
# systemctl mask dnsmasq.service

Impact:

There may be packages that are dependent on the dnsmasq package. If the dnsmasq package is removed, these dependent packages will be removed as well. Before removing the dnsmasq package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the dnsmasq.service leaving the dnsmasq package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s dnsmasq 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s dnsmasq 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'dnsmasq' is not installed and no information is available","Run the following commands to stop dnsmasq.service and remove dnsmasq package:

# systemctl stop dnsmasq.service
# apt purge dnsmasq

- OR -

- IF - the dnsmasq package is required as a dependency:

Run the following commands to stop and mask the dnsmasq.service :

# systemctl stop dnsmasq.service
# systemctl mask dnsmasq.service

Impact:

There may be packages that are dependent on the dnsmasq package. If the dnsmasq package is removed, these dependent packages will be removed as well. Before removing the dnsmasq package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the dnsmasq.service leaving the dnsmasq package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.6 Ensure ftp server services are not in use"" : [PASSED]

The File Transfer Protocol (FTP) provides networked computers with the ability to transfer files.

FTP does not protect the confidentiality of data or authentication credentials. It is recommended SFTP be used if file transfer is required. Unless there is a need to run the system as a FTP server (for example, to allow anonymous downloads), it is recommended that the package be deleted to reduce the potential attack surface.

Solution:
Run the following commands to stop vsftpd.service and remove the vsftpd package:

# systemctl stop vsftpd.service
# apt purge vsftpd

- OR -

- IF - the vsftpd package is required as a dependency:

Run the following commands to stop and mask the vsftpd.service :

# systemctl stop vsftpd.service
# systemctl mask vsftpd.service

Note: Other ftp server packages may exist. If not required and authorized by local site policy, they should also be removed. If the package is required for a dependency, the service should be stopped and masked.

Impact:

There may be packages that are dependent on the vsftpd package. If the vsftpd package is removed, these dependent packages will be removed as well. Before removing the vsftpd package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the vsftpd.service leaving the vsftpd package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s vsftpd 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s vsftpd 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'vsftpd' is not installed and no information is available","Run the following commands to stop vsftpd.service and remove the vsftpd package:

# systemctl stop vsftpd.service
# apt purge vsftpd

- OR -

- IF - the vsftpd package is required as a dependency:

Run the following commands to stop and mask the vsftpd.service :

# systemctl stop vsftpd.service
# systemctl mask vsftpd.service

Note: Other ftp server packages may exist. If not required and authorized by local site policy, they should also be removed. If the package is required for a dependency, the service should be stopped and masked.

Impact:

There may be packages that are dependent on the vsftpd package. If the vsftpd package is removed, these dependent packages will be removed as well. Before removing the vsftpd package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the vsftpd.service leaving the vsftpd package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.7 Ensure ldap server services are not in use"" : [PASSED]

The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.

If the system will not need to act as an LDAP server, it is recommended that the software be removed to reduce the potential attack surface.

Solution:
Run the following commands to stop slapd.service and remove the slapd package:

# systemctl stop slapd.service
# apt purge slapd

- OR -

- IF - the slapd package is required as a dependency:

Run the following commands to stop and mask slapd.service :

# systemctl stop slapd.service
# systemctl mask slapd.service

Impact:

There may be packages that are dependent on the slapd package. If the slapd package is removed, these dependent packages will be removed as well. Before removing the slapd package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the slapd.service leaving the slapd package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s slapd 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s slapd 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'slapd' is not installed and no information is available","Run the following commands to stop slapd.service and remove the slapd package:

# systemctl stop slapd.service
# apt purge slapd

- OR -

- IF - the slapd package is required as a dependency:

Run the following commands to stop and mask slapd.service :

# systemctl stop slapd.service
# systemctl mask slapd.service

Impact:

There may be packages that are dependent on the slapd package. If the slapd package is removed, these dependent packages will be removed as well. Before removing the slapd package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the slapd.service leaving the slapd package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.8 Ensure message access server services are not in use"" : [PASSED]

dovecot-imapd and dovecot-pop3d are an open source IMAP and POP3 server for Linux based systems.

Unless POP3 and/or IMAP servers are to be provided by this system, it is recommended that the package be removed to reduce the potential attack surface.

Note: Several IMAP/POP3 servers exist and can use other service names. These should also be audited and the packages removed if not required.

Solution:
Run one of the following commands to remove dovecot-imapd and dovecot-pop3d :

Run the following commands to stop dovecot.socket and dovecot.service and remove the dovecot-imapd and dovecot-pop3d packages:

# systemctl stop dovecot.socket dovecot.service
# apt purge dovecot-imapd dovecot-pop3d

- OR -

- IF - a package is installed and is required for dependencies:

Run the following commands to stop and mask dovecot.socket and dovecot.service :

# systemctl stop dovecot.socket dovecot.service
# systemctl mask dovecot.socket dovecot.service

Impact:

There may be packages that are dependent on dovecot-imapd and/or dovecot-pop3d packages. If dovecot-imapd and dovecot-pop3d packages are removed, these dependent packages will be removed as well. Before removing dovecot-imapd and/or dovecot-pop3d packages, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask dovecot.socket and dovecot.service leaving dovecot-imapd and/or dovecot-pop3d packages installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - dpkg check dovecot-pop3
The command '/bin/dpkg -s dovecot-pop3 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'dovecot-pop3' is not installed and no information is available

-------------------------
PASSED - dpkg check dovecot-imapd
The command '/bin/dpkg -s dovecot-imapd 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'dovecot-imapd' is not installed and no information is available","Run one of the following commands to remove dovecot-imapd and dovecot-pop3d :

Run the following commands to stop dovecot.socket and dovecot.service and remove the dovecot-imapd and dovecot-pop3d packages:

# systemctl stop dovecot.socket dovecot.service
# apt purge dovecot-imapd dovecot-pop3d

- OR -

- IF - a package is installed and is required for dependencies:

Run the following commands to stop and mask dovecot.socket and dovecot.service :

# systemctl stop dovecot.socket dovecot.service
# systemctl mask dovecot.socket dovecot.service

Impact:

There may be packages that are dependent on dovecot-imapd and/or dovecot-pop3d packages. If dovecot-imapd and dovecot-pop3d packages are removed, these dependent packages will be removed as well. Before removing dovecot-imapd and/or dovecot-pop3d packages, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask dovecot.socket and dovecot.service leaving dovecot-imapd and/or dovecot-pop3d packages installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.9 Ensure network file system services are not in use"" : [PASSED]

The Network File System (NFS) is one of the first and most widely distributed file systems in the UNIX environment. It provides the ability for systems to mount file systems of other servers through the network.

If the system does not export NFS shares, it is recommended that the nfs-kernel-server package be removed to reduce the remote attack surface.

Solution:
Run the following command to stop nfs-server.service and remove nfs-kernel-server package:

# systemctl stop nfs-server.service
# apt purge nfs-kernel-server

- OR -

- IF - the nfs-kernel-server package is required as a dependency:

Run the following commands to stop and mask the nfs-server.service :

# systemctl stop nfs-server.service
# systemctl mask nfs-server.service

Impact:

There may be packages that are dependent on the nfs-kernel-server package. If the nfs-kernel-server package is removed, these dependent packages will be removed as well. Before removing the nfs-kernel-server package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the nfs-server.service leaving the nfs-kernel-server package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s nfs-kernel-server 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s nfs-kernel-server 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'nfs-kernel-server' is not installed and no information is available","Run the following command to stop nfs-server.service and remove nfs-kernel-server package:

# systemctl stop nfs-server.service
# apt purge nfs-kernel-server

- OR -

- IF - the nfs-kernel-server package is required as a dependency:

Run the following commands to stop and mask the nfs-server.service :

# systemctl stop nfs-server.service
# systemctl mask nfs-server.service

Impact:

There may be packages that are dependent on the nfs-kernel-server package. If the nfs-kernel-server package is removed, these dependent packages will be removed as well. Before removing the nfs-kernel-server package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the nfs-server.service leaving the nfs-kernel-server package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.2.1 Ensure NIS Client is not installed"" : [PASSED]

The Network Information Service (NIS), formerly known as Yellow Pages, is a client-server directory service protocol used to distribute system configuration files. The NIS client was used to bind a machine to an NIS server and receive the distributed configuration files.

The NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the service be removed.

Solution:
Uninstall nis :

# apt purge nis

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|2.6,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s nis 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s nis 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'nis' is not installed and no information is available","Uninstall nis :

# apt purge nis

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.2.2 Ensure rsh client is not installed"" : [PASSED]

The rsh-client package contains the client commands for the rsh services.

These legacy clients contain numerous security exposures and have been replaced with the more secure SSH package. Even if the server is removed, it is best to ensure the clients are also removed to prevent users from inadvertently attempting to use these commands and therefore exposing their credentials. Note that removing the rsh-client package removes the clients for rsh rcp and rlogin

Solution:
Uninstall rsh :

# apt purge rsh-client

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s rsh-client 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s rsh-client 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'rsh-client' is not installed and no information is available","Uninstall rsh :

# apt purge rsh-client

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.2.3 Ensure talk client is not installed"" : [PASSED]

The talk software makes it possible for users to send and receive messages across systems through a terminal session. The talk client, which allows initialization of talk sessions, is installed by default.

The software presents a security risk as it uses unencrypted protocols for communication.

Solution:
Uninstall talk :

# apt purge talk

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s talk 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s talk 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'talk' is not installed and no information is available","Uninstall talk :

# apt purge talk

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.2.4 Ensure telnet client is not installed"" : [FAILED]

The telnet package contains the telnet client, which allows users to start connections to other systems via the telnet protocol.

The telnet protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow an unauthorized user to steal credentials. The ssh package provides an encrypted session and stronger security and is included in most Linux distributions.

Solution:
Uninstall telnet :

# apt purge telnet

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s telnet 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s telnet 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

Status: install ok installed","Uninstall telnet :

# apt purge telnet

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.2.5 Ensure ldap client is not installed"" : [PASSED]

The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.

If the system will not need to act as an LDAP client, it is recommended that the software be removed to reduce the potential attack surface.

Solution:
Uninstall ldap-utils :

# apt purge ldap-utils

Impact:

Removing the LDAP client will prevent or inhibit using LDAP for authentication in your environment.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s ldap-utils 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s ldap-utils 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'ldap-utils' is not installed and no information is available","Uninstall ldap-utils :

# apt purge ldap-utils

Impact:

Removing the LDAP client will prevent or inhibit using LDAP for authentication in your environment.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.2.6 Ensure ftp client is not installed"" : [PASSED]

FTP (File Transfer Protocol) is a traditional and widely used standard tool for transferring files between a server and clients over a network, especially where no authentication is necessary (permits anonymous users to connect to a server).

FTP does not protect the confidentiality of data or authentication credentials. It is recommended SFTP be used if file transfer is required. Unless there is a need to run the system as a FTP server (for example, to allow anonymous downloads), it is recommended that the package be removed to reduce the potential attack surface.

Solution:
Run the following command to uninstall ftp :

# apt purge ftp

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s ftp 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s ftp 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'ftp' is not installed and no information is available","Run the following command to uninstall ftp :

# apt purge ftp","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.3.1.1 Ensure a single time synchronization daemon is in use"" : [PASSED]

System time should be synchronized between all systems in an environment. This is typically done by establishing an authoritative time server or set of servers and having all systems synchronize their clocks to them.

Notes:

 - On virtual systems where host based time synchronization is available consult your virtualization software documentation and verify that host based synchronization is in use and follows local site policy. In this scenario, this section should be skipped
 - Only one time synchronization method should be in use on the system. Configuring multiple time synchronization methods could lead to unexpected or unreliable results

Time synchronization is important to support time sensitive security mechanisms and ensures log files have consistent time records across the enterprise, which aids in forensic investigations.

Solution:
On physical systems, and virtual systems where host based time synchronization is not available.

Select one of the two time synchronization daemons; chrony (1) or systemd-timesyncd (2) and following the remediation procedure for the selected daemon.

Note: enabling more than one synchronization daemon could lead to unexpected or unreliable results:

 - chrony

Run the following command to install chrony :

# apt install chrony

Run the following commands to stop and mask the systemd-timesyncd daemon:

# systemctl stop systemd-timesyncd.service

# systemctl mask systemd-timesyncd.service

Note:

 - Subsection:

Configure chrony

should be followed
 - Subsection:

Configure systemd-timesyncd

should be skipped

<xhtml:ol start=""2""> - systemd-timesyncd

Run the following command to remove the chrony package:

# apt purge chrony
# apt autoremove chrony

Note:

 - Subsection:

Configure systemd-timesyncd

should be followed
 - Subsection:

Configure chrony

should be skipped

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **
 - Only one time sync daemon is in use on the system
  - Daemon: ""systemd-timesyncd.service"" is enabled on the system
  - Daemon: ""systemd-timesyncd.service"" is active on the system
  - Daemon: ""chrony.service"" is not enabled and not active on the system","On physical systems, and virtual systems where host based time synchronization is not available.

Select one of the two time synchronization daemons; chrony (1) or systemd-timesyncd (2) and following the remediation procedure for the selected daemon.

Note: enabling more than one synchronization daemon could lead to unexpected or unreliable results:

 - chrony

Run the following command to install chrony :

# apt install chrony

Run the following commands to stop and mask the systemd-timesyncd daemon:

# systemctl stop systemd-timesyncd.service

# systemctl mask systemd-timesyncd.service

Note:

 - Subsection:

Configure chrony

should be followed
 - Subsection:

Configure systemd-timesyncd

should be skipped

<xhtml:ol start=""2""> - systemd-timesyncd

Run the following command to remove the chrony package:

# apt purge chrony
# apt autoremove chrony

Note:

 - Subsection:

Configure systemd-timesyncd

should be followed
 - Subsection:

Configure chrony

should be skipped","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.3.2.1 Ensure systemd-timesyncd configured with authorized timeserver"" : [PASSED]

NTP=

 - A space-separated list of NTP server host names or IP addresses. During runtime this list is combined with any per-interface NTP servers acquired from systemd-networkd.service(8). systemd-timesyncd will contact all configured system or per-interface servers in turn, until one responds. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. This setting defaults to an empty list.

FallbackNTP=

 - A space-separated list of NTP server host names or IP addresses to be used as the fallback NTP servers. Any per-interface NTP servers obtained from systemd-networkd.service(8) take precedence over this setting, as do any servers set via NTP= above. This setting is hence only relevant if no other NTP server information is known. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. If this option is not given, a compiled-in list of NTP servers is used.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations

Solution:
Set NTP and/or FallbackNPT parameters to local site approved authoritative time server(s) in /etc/systemd/timesyncd.conf or a file in /etc/systemd/timesyncd.conf.d/ ending inconf in the [Time] section:

Example file:

[Time]
NTP=time.nist.gov # Uses the generic name for NIST's time servers
FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov # Space separated list of NIST time servers

Example script to create systemd drop-in file:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/timesyncd.conf.d/ ] &amp;&amp; mkdir /etc/systemd/timesyncd.conf.d/
   printf '%s
' ""[Time]"" ""NTP=time.nist.gov"" ""FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov"" >> /etc/systemd/timesyncd.conf.d/60-timesyncd.conf
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - ""NTP"" is correctly set to ""time1.keen.fsnets.com"" in ""/etc/systemd/timesyncd.conf""

 - ""FallbackNTP"" is correctly set to ""ntp.ubuntu.com"" in ""/etc/systemd/timesyncd.conf""","Set NTP and/or FallbackNPT parameters to local site approved authoritative time server(s) in /etc/systemd/timesyncd.conf or a file in /etc/systemd/timesyncd.conf.d/ ending inconf in the [Time] section:

Example file:

[Time]
NTP=time.nist.gov # Uses the generic name for NIST's time servers
FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov # Space separated list of NIST time servers

Example script to create systemd drop-in file:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/timesyncd.conf.d/ ] &amp;&amp; mkdir /etc/systemd/timesyncd.conf.d/
   printf '%s
' ""[Time]"" ""NTP=time.nist.gov"" ""FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov"" >> /etc/systemd/timesyncd.conf.d/60-timesyncd.conf
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.3.2.2 Ensure systemd-timesyncd is enabled and running"" : [PASSED]

systemd-timesyncd is a daemon that has been added for synchronizing the system clock across the network

systemd-timesyncd needs to be enabled and running in order to synchronize the system to a timeserver.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations

Solution:
- IF - systemd-timesyncd is in use on the system, run the following commands:

Run the following command to unmask systemd-timesyncd.service :

# systemctl unmask systemd-timesyncd.service

Run the following command to enable and start systemd-timesyncd.service :

# systemctl --now enable systemd-timesyncd.service

- OR -

If another time synchronization service is in use on the system, run the following command to stop and mask systemd-timesyncd :

# systemctl --now mask systemd-timesyncd.service

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1M,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - check if systemd-timesyncd is enabled
The command '/bin/systemctl is-enabled systemd-timesyncd' returned : 

enabled

-------------------------
PASSED - check if systemd-timesyncd is active
The command '/bin/systemctl is-active systemd-timesyncd' returned : 

active","- IF - systemd-timesyncd is in use on the system, run the following commands:

Run the following command to unmask systemd-timesyncd.service :

# systemctl unmask systemd-timesyncd.service

Run the following command to enable and start systemd-timesyncd.service :

# systemctl --now enable systemd-timesyncd.service

- OR -

If another time synchronization service is in use on the system, run the following command to stop and mask systemd-timesyncd :

# systemctl --now mask systemd-timesyncd.service","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.3.3.1 Ensure chrony is configured with authorized timeserver"" : [PASSED]

-

server

 - The server directive specifies an NTP server which can be used as a time source. The client-server relationship is strictly hierarchical: a client might synchronize its system time to that of the server, but the server's system time will never be influenced by that of a client.
 - This directive can be used multiple times to specify multiple servers.
 - The directive is immediately followed by either the name of the server, or its IP address.

 -

pool

 - The syntax of this directive is similar to that for the server directive, except that it is used to specify a pool of NTP servers rather than a single NTP server. The pool name is expected to resolve to multiple addresses which might change over time.
 - This directive can be used multiple times to specify multiple pools.
 - All options valid in the server directive can be used in this directive too.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations

Solution:
Edit /etc/chrony/chrony.conf or a file ending insources in /etc/chrony/sources.d/ and add or edit server or pool lines as appropriate according to local site policy:

<[server|pool]> <[remote-server|remote-pool]>

Examples:

pool directive:

pool time.nist.gov iburst maxsources 4 #The maxsources option is unique to the pool directive

server directive:

server time-a-g.nist.gov iburst
server 132.163.97.3 iburst
server time-d-b.nist.gov iburst

Run one of the following commands to load the updated time sources into chronyd running config:

# systemctl restart chronyd

- OR if sources are in a .sources file -

# chronyc reload sources

- OR -

If another time synchronization service is in use on the system, run the following command to remove chrony from the system:

# apt purge chrony
# apt autoremove chrony

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1M,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4

Policy Value:
PASSED","Edit /etc/chrony/chrony.conf or a file ending insources in /etc/chrony/sources.d/ and add or edit server or pool lines as appropriate according to local site policy:

<[server|pool]> <[remote-server|remote-pool]>

Examples:

pool directive:

pool time.nist.gov iburst maxsources 4 #The maxsources option is unique to the pool directive

server directive:

server time-a-g.nist.gov iburst
server 132.163.97.3 iburst
server time-d-b.nist.gov iburst

Run one of the following commands to load the updated time sources into chronyd running config:

# systemctl restart chronyd

- OR if sources are in a .sources file -

# chronyc reload sources

- OR -

If another time synchronization service is in use on the system, run the following command to remove chrony from the system:

# apt purge chrony
# apt autoremove chrony","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.3.3.2 Ensure chrony is running as user _chrony"" : [PASSED]

The chrony package is installed with a dedicated user account _chrony This account is granted the access required by the chronyd service

The chronyd service should run with only the required privlidges

Solution:
Add or edit the user line to /etc/chrony/chrony.conf or a file ending inconf in /etc/chrony/conf.d/ :

user _chrony

- OR -

If another time synchronization service is in use on the system, run the following command to remove chrony from the system:

# apt purge chrony
# apt autoremove chrony

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4

Policy Value:
PASSED","Add or edit the user line to /etc/chrony/chrony.conf or a file ending inconf in /etc/chrony/conf.d/ :

user _chrony

- OR -

If another time synchronization service is in use on the system, run the following command to remove chrony from the system:

# apt purge chrony
# apt autoremove chrony","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.3.3.3 Ensure chrony is enabled and running"" : [PASSED]

chrony is a daemon for synchronizing the system clock across the network

chrony needs to be enabled and running in order to synchronize the system to a timeserver.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations

Solution:
- IF - chrony is in use on the system, run the following commands:

Run the following command to unmask chrony.service :

# systemctl unmask chrony.service

Run the following command to enable and start chrony.service :

# systemctl --now enable chrony.service

- OR -

If another time synchronization service is in use on the system, run the following command to remove chrony :

# apt purge chrony
# apt autoremove chrony

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4

Policy Value:
PASSED","- IF - chrony is in use on the system, run the following commands:

Run the following command to unmask chrony.service :

# systemctl unmask chrony.service

Run the following command to enable and start chrony.service :

# systemctl --now enable chrony.service

- OR -

If another time synchronization service is in use on the system, run the following command to remove chrony :

# apt purge chrony
# apt autoremove chrony","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.1 Ensure cron daemon is enabled and active"" : [PASSED]

The cron daemon is used to execute batch jobs on the system.

While there may not be user jobs that need to be run on the system, the system does have maintenance jobs that may include security monitoring that have to run, and cron is used to execute them.

Solution:
- IF - cron is installed on the system:

Run the following commands to unmask, enable, and start cron :

# systemctl unmask ""$(systemctl list-unit-files | awk '$1~/^crond?.service/{print $1}')""
# systemctl --now enable ""$(systemctl list-unit-files | awk '$1~/^crond?.service/{print $1}')""

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - enabled
The command '/bin/systemctl list-unit-files | /bin/awk '$1~/^crond?\.service/{print $2}'' returned : 

enabled

-------------------------
PASSED - active
The command '/bin/systemctl list-units | /bin/awk '$1~/^crond?\.service/{print $3}'' returned : 

active","- IF - cron is installed on the system:

Run the following commands to unmask, enable, and start cron :

# systemctl unmask ""$(systemctl list-unit-files | awk '$1~/^crond?.service/{print $1}')""
# systemctl --now enable ""$(systemctl list-unit-files | awk '$1~/^crond?.service/{print $1}')""","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.2 Ensure permissions on /etc/crontab are configured"" : [FAILED]

The /etc/crontab file is used by cron to control its own jobs. The commands in this item make sure that root is the user and group owner of the file and that only the owner can access the file.

This file contains information on what system jobs are run by cron. Write access to these files could provide unprivileged users with the ability to elevate their privileges. Read access to these files could provide users with the ability to gain insight on system jobs that run on the system and could provide them a way to gain unauthorized privileged access.

Solution:
- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on /etc/crontab :

# chown root:root /etc/crontab
# chmod og-rwx /etc/crontab

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/crontab
group: root
mask: 177
owner: root

Actual Value:
The file /etc/crontab with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE  does not match the policy value owner: root group: root mask: 177 uneven permissions : FALSE 

/etc/crontab","- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on /etc/crontab :

# chown root:root /etc/crontab
# chmod og-rwx /etc/crontab","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.3 Ensure permissions on /etc/cron.hourly are configured"" : [FAILED]

This directory contains system cron jobs that need to run on an hourly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.

Solution:
- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.hourly directory:

# chown root:root /etc/cron.hourly/
# chmod og-rwx /etc/cron.hourly/

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/cron.hourly
group: root
mask: 077
owner: root

Actual Value:
The file /etc/cron.hourly with fmode owner: root group: root mode: 0755 uid: 0 gid: 0 uneven permissions : FALSE  does not match the policy value owner: root group: root mask: 077 uneven permissions : FALSE 

/etc/cron.hourly","- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.hourly directory:

# chown root:root /etc/cron.hourly/
# chmod og-rwx /etc/cron.hourly/","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.4 Ensure permissions on /etc/cron.daily are configured"" : [FAILED]

The /etc/cron.daily directory contains system cron jobs that need to run on a daily basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.

Solution:
- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.daily directory:

# chown root:root /etc/cron.daily/
# chmod og-rwx /etc/cron.daily/

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/cron.daily
group: root
mask: 077
owner: root

Actual Value:
The file /etc/cron.daily with fmode owner: root group: root mode: 0755 uid: 0 gid: 0 uneven permissions : FALSE  does not match the policy value owner: root group: root mask: 077 uneven permissions : FALSE 

/etc/cron.daily","- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.daily directory:

# chown root:root /etc/cron.daily/
# chmod og-rwx /etc/cron.daily/","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.5 Ensure permissions on /etc/cron.weekly are configured"" : [FAILED]

The /etc/cron.weekly directory contains system cron jobs that need to run on a weekly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.

Solution:
- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.weekly directory:

# chown root:root /etc/cron.weekly/
# chmod og-rwx /etc/cron.weekly/

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/cron.weekly
group: root
mask: 077
owner: root

Actual Value:
The file /etc/cron.weekly with fmode owner: root group: root mode: 0755 uid: 0 gid: 0 uneven permissions : FALSE  does not match the policy value owner: root group: root mask: 077 uneven permissions : FALSE 

/etc/cron.weekly","- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.weekly directory:

# chown root:root /etc/cron.weekly/
# chmod og-rwx /etc/cron.weekly/","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.6 Ensure permissions on /etc/cron.monthly are configured"" : [FAILED]

The /etc/cron.monthly directory contains system cron jobs that need to run on a monthly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.

Solution:
- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.monthly directory:

# chown root:root /etc/cron.monthly/
# chmod og-rwx /etc/cron.monthly/

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/cron.monthly
group: root
mask: 077
owner: root

Actual Value:
The file /etc/cron.monthly with fmode owner: root group: root mode: 0755 uid: 0 gid: 0 uneven permissions : FALSE  does not match the policy value owner: root group: root mask: 077 uneven permissions : FALSE 

/etc/cron.monthly","- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.monthly directory:

# chown root:root /etc/cron.monthly/
# chmod og-rwx /etc/cron.monthly/","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.7 Ensure permissions on /etc/cron.d are configured"" : [FAILED]

The /etc/cron.d directory contains system cron jobs that need to run in a similar manner to the hourly, daily weekly and monthly jobs from /etc/crontab but require more granular control as to when they run. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.

Solution:
- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.d directory:

# chown root:root /etc/cron.d/
# chmod og-rwx /etc/cron.d/

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/cron.d
group: root
mask: 077
owner: root

Actual Value:
The file /etc/cron.d with fmode owner: root group: root mode: 0755 uid: 0 gid: 0 uneven permissions : FALSE  does not match the policy value owner: root group: root mask: 077 uneven permissions : FALSE 

/etc/cron.d","- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.d directory:

# chown root:root /etc/cron.d/
# chmod og-rwx /etc/cron.d/","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.8 Ensure crontab is restricted to authorized users"" : [FAILED]

crontab is the program used to install, deinstall, or list the tables used to drive the cron daemon. Each user can have their own crontab, and though these are files in /var/spool/cron/crontabs they are not intended to be edited directly.

If the /etc/cron.allow file exists, then you must be listed (one user per line) therein in order to be allowed to use this command. If the /etc/cron.allow file does not exist but the /etc/cron.deny file does exist, then you must not be listed in the /etc/cron.deny file in order to use this command.

If neither of these files exists, then depending on site-dependent configuration parameters, only the super user will be allowed to use this command, or all users will be able to use this command.

If both files exist then /etc/cron.allow takes precedence. Which means that /etc/cron.deny is not considered and your user must be listed in /etc/cron.allow in order to be able to use the crontab.

Regardless of the existence of any of these files, the root administrative user is always allowed to setup a crontab.

The files /etc/cron.allow and /etc/cron.deny if they exist, must be either world-readable, or readable by group crontab If they are not, then cron will deny access to all users until the permissions are fixed.

There is one file for each user's crontab under the /var/spool/cron/crontabs directory. Users are not allowed to edit the files under that directory directly to ensure that only users allowed by the system to run periodic tasks can add them, and only syntactically correct crontabs will be written there. This is enforced by having the directory writable only by the crontab group and configuring crontab command with the setgid bid set for that specific group.

Note:

 - Even though a given user is not listed in cron.allow cron jobs can still be run as that user
 - The files /etc/cron.allow and /etc/cron.deny if they exist, only controls administrative access to the crontab command for scheduling and modifying cron jobs

On many systems, only the system administrator is authorized to schedule cron jobs. Using the cron.allow file to control who can run cron jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files.

Solution:
- IF - cron is installed on the system:

Run the following script to:

 - Create /etc/cron.allow if it doesn't exist
 - Change owner or user root
 - Change group owner to group root
 - Change mode to 640 or more restrictive

#!/usr/bin/env bash

{
   [ ! -e ""/etc/cron.allow"" ] &amp;&amp; touch /etc/cron.allow
   chown root:root /etc/cron.allow
   chmod u-x,g-wx,o-rwx /etc/cron.allow
}

- IF - /etc/cron.deny exists, run the following commands to:

 - Change owner or user root
 - Change group owner to group root
 - Change mode to 640 or more restrictive

# [ -e ""/etc/cron.deny"" ] &amp;&amp; chown root:root /etc/cron.deny
# [ -e ""/etc/cron.deny"" ] &amp;&amp; chmod u-x,g-wx,o-rwx /etc/cron.deny

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - /etc/cron.deny file permissions


-------------------------
FAILED - /etc/cron.allow file permissions
No files found: /etc/cron.allow","- IF - cron is installed on the system:

Run the following script to:

 - Create /etc/cron.allow if it doesn't exist
 - Change owner or user root
 - Change group owner to group root
 - Change mode to 640 or more restrictive

#!/usr/bin/env bash

{
   [ ! -e ""/etc/cron.allow"" ] &amp;&amp; touch /etc/cron.allow
   chown root:root /etc/cron.allow
   chmod u-x,g-wx,o-rwx /etc/cron.allow
}

- IF - /etc/cron.deny exists, run the following commands to:

 - Change owner or user root
 - Change group owner to group root
 - Change mode to 640 or more restrictive

# [ -e ""/etc/cron.deny"" ] &amp;&amp; chown root:root /etc/cron.deny
# [ -e ""/etc/cron.deny"" ] &amp;&amp; chmod u-x,g-wx,o-rwx /etc/cron.deny","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.2.1 Ensure at is restricted to authorized users"" : [PASSED]

at allows fairly complex time specifications, extending the POSIX.2 standard. It accepts times of the form HH:MM to run a job at a specific time of day. (If that time is already past, the next day is assumed.) You may also specify midnight, noon, or teatime (4pm) and you can have a time-of-day suffixed with AM or PM for running in the morning or the evening. You can also say what day the job will be run, by giving a date in the form month-name day with an optional year, or giving a date of the form MMDD[CC]YY, MM/DD/[CC]YY, DD.MM.[CC]YY or [CC]YY-MM-DD. The specification of a date must follow the specification of the time of day. You can also give times like now + count time-units, where the time-units can be minutes, hours, days, or weeks and you can tell at to run the job today by suffixing the time with today and to run the job tomorrow by suffixing the time with tomorrow.

The /etc/at.allow and /etc/at.deny files determine which user can submit commands for later execution via at or batch. The format of the files is a list of usernames, one on each line. Whitespace is not permitted. If the file /etc/at.allow exists, only usernames mentioned in it are allowed to use at. If /etc/at.allow does not exist, /etc/at.deny is checked, every username not mentioned in it is then allowed to use at. An empty /etc/at.deny means that every user may use at. If neither file exists, only the superuser is allowed to use at.

On many systems, only the system administrator is authorized to schedule at jobs. Using the at.allow file to control who can run at jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files.

Solution:
-IF- at is installed on the system:

Run the following script to:

 - /etc/at.allow :
 - Create the file if it doesn't exist
 - Change owner or user root
 - If group daemon exists, change to group daemon else change group to root
 - Change mode to 640 or more restrictive

 - -IF- /etc/at.deny exists:
 - Change owner or user root
 - If group daemon exists, change to group daemon else change group to root
 - Change mode to 640 or more restrictive

#!/usr/bin/env bash

{
   grep -Pq -- '^daemonb' /etc/group &amp;&amp; l_group=""daemon"" || l_group=""root""
   [ ! -e ""/etc/at.allow"" ] &amp;&amp; touch /etc/at.allow
   chown root:""$l_group"" /etc/at.allow
   chmod u-x,g-wx,o-rwx /etc/at.allow
   [ -e ""/etc/at.deny"" ] &amp;&amp; chown root:""$l_group"" /etc/at.deny
   [ -e ""/etc/at.deny"" ] &amp;&amp; chmod u-x,g-wx,o-rwx /etc/at.deny
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
PASSED","-IF- at is installed on the system:

Run the following script to:

 - /etc/at.allow :
 - Create the file if it doesn't exist
 - Change owner or user root
 - If group daemon exists, change to group daemon else change group to root
 - Change mode to 640 or more restrictive

 - -IF- /etc/at.deny exists:
 - Change owner or user root
 - If group daemon exists, change to group daemon else change group to root
 - Change mode to 640 or more restrictive

#!/usr/bin/env bash

{
   grep -Pq -- '^daemonb' /etc/group &amp;&amp; l_group=""daemon"" || l_group=""root""
   [ ! -e ""/etc/at.allow"" ] &amp;&amp; touch /etc/at.allow
   chown root:""$l_group"" /etc/at.allow
   chmod u-x,g-wx,o-rwx /etc/at.allow
   [ -e ""/etc/at.deny"" ] &amp;&amp; chown root:""$l_group"" /etc/at.deny
   [ -e ""/etc/at.deny"" ] &amp;&amp; chmod u-x,g-wx,o-rwx /etc/at.deny
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.1.1 Ensure IPv6 status is identified"" : [WARNING]

Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's designed to supply IP addressing and additional security to support the predicted growth of connected devices. IPv6 is based on 128-bit addressing and can support 340 undecillion, which is 340 trillion3 addresses.

Features of IPv6

 - Hierarchical addressing and routing infrastructure
 - Stateful and Stateless configuration
 - Support for quality of service (QoS)
 - An ideal protocol for neighboring node interaction

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations.

-IF- dual stack and IPv6 are not used in your environment, IPv6 may be disabled to reduce the attack surface of the system, and recommendations pertaining to IPv6 can be skipped.

Note: It is recommended that IPv6 be enabled and configured unless this is against local site policy

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Enable or disable IPv6 in accordance with system requirements and local site policy

Impact:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack.

When enabled, IPv6 will require additional configuration to reduce risk to the system.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/grep -Pqs '^\h*0\b' /sys/module/ipv6/parameters/disable && echo -e ""\n - IPv6 is enabled\n"" || echo -e ""\n - IPv6 is not enabled\n""
expect: Manual Review Required

Actual Value:
The command '/bin/grep -Pqs '^\h*0\b' /sys/module/ipv6/parameters/disable && echo -e ""\n - IPv6 is enabled\n"" || echo -e ""\n - IPv6 is not enabled\n""' returned : 

-e 
 - IPv6 is enabled","Enable or disable IPv6 in accordance with system requirements and local site policy

Impact:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack.

When enabled, IPv6 will require additional configuration to reduce risk to the system.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.1.2 Ensure wireless interfaces are disabled"" : [PASSED]

Wireless networking is used when wired networks are unavailable.

-IF- wireless is not to be used, wireless devices can be disabled to reduce the potential attack surface.

Solution:
Run the following script to disable any wireless interfaces:

#!/usr/bin/env bash

{
   module_fix()
   {
      if ! modprobe -n -v ""$l_mname"" | grep -P -- '^h*install /bin/(true|false)'; then
         echo -e "" - setting module: \""$l_mname\"" to be un-loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mname"".conf
      fi
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e "" - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
      if ! grep -Pq -- ""^h*blacklisth+$l_mnameb"" /etc/modprobe.d/*; then
         echo -e "" - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mname"".conf
      fi
   }
   if [ -n ""$(find /sys/class/net/*/ -type d -name wireless)"" ]; then
      l_dname=$(for driverdir in $(find /sys/class/net/*/ -type d -name wireless | xargs -0 dirname); do basename ""$(readlink -f ""$driverdir""/device/driver/module)"";done | sort -u)
      for l_mname in $l_dname; do
         module_fix
      done
   fi
}

Impact:

Many if not all laptop workstations and some desktop workstations will connect via wireless requiring these interfaces be enabled.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|15.4,CSCv7|15.5,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$
timeout: 7200

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - System has no wireless NICs installed","Run the following script to disable any wireless interfaces:

#!/usr/bin/env bash

{
   module_fix()
   {
      if ! modprobe -n -v ""$l_mname"" | grep -P -- '^h*install /bin/(true|false)'; then
         echo -e "" - setting module: \""$l_mname\"" to be un-loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mname"".conf
      fi
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e "" - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
      if ! grep -Pq -- ""^h*blacklisth+$l_mnameb"" /etc/modprobe.d/*; then
         echo -e "" - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mname"".conf
      fi
   }
   if [ -n ""$(find /sys/class/net/*/ -type d -name wireless)"" ]; then
      l_dname=$(for driverdir in $(find /sys/class/net/*/ -type d -name wireless | xargs -0 dirname); do basename ""$(readlink -f ""$driverdir""/device/driver/module)"";done | sort -u)
      for l_mname in $l_dname; do
         module_fix
      done
   fi
}

Impact:

Many if not all laptop workstations and some desktop workstations will connect via wireless requiring these interfaces be enabled.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.1.3 Ensure bluetooth services are not in use"" : [PASSED]

Bluetooth is a short-range wireless technology standard that is used for exchanging data between devices over short distances. It employs UHF radio waves in the ISM bands, from 2.402 GHz to 2.48 GHz. It is mainly used as an alternative to wire connections.

An attacker may be able to find a way to access or corrupt your data. One example of this type of activity is bluesnarfing which refers to attackers using a Bluetooth connection to steal information off of your Bluetooth device. Also, viruses or other malicious code can take advantage of Bluetooth technology to infect other devices. If you are infected, your data may be corrupted, compromised, stolen, or lost.

Solution:
Run the following commands to stop bluetooth.service and remove the bluez package:

# systemctl stop bluetooth.service
# apt purge bluez

- OR -

- IF - the bluez package is required as a dependency:

Run the following commands to stop and mask bluetooth.service :

# systemctl stop bluetooth.service
# systemctl mask bluetooth.service

Note: A reboot may be required

Impact:

Many personal electronic devices (PEDs) use Bluetooth technology. For example, you may be able to operate your computer with a wireless keyboard. Disabling Bluetooth will prevent these devices from connecting to the system.

There may be packages that are dependent on the bluez package. If the bluez package is removed, these dependent packages will be removed as well. Before removing the bluez package, review any dependent packages to determine if they are required on the system.

-IF- a dependent package is required: stop and mask bluetooth.service leaving the bluez package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s bluez 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s bluez 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'bluez' is not installed and no information is available","Run the following commands to stop bluetooth.service and remove the bluez package:

# systemctl stop bluetooth.service
# apt purge bluez

- OR -

- IF - the bluez package is required as a dependency:

Run the following commands to stop and mask bluetooth.service :

# systemctl stop bluetooth.service
# systemctl mask bluetooth.service

Note: A reboot may be required

Impact:

Many personal electronic devices (PEDs) use Bluetooth technology. For example, you may be able to operate your computer with a wireless keyboard. Disabling Bluetooth will prevent these devices from connecting to the system.

There may be packages that are dependent on the bluez package. If the bluez package is removed, these dependent packages will be removed as well. Before removing the bluez package, review any dependent packages to determine if they are required on the system.

-IF- a dependent package is required: stop and mask bluetooth.service leaving the bluez package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.1 Ensure ip forwarding is disabled"" : [FAILED]

The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.

Setting net.ipv4.ip_forward and net.ipv6.conf.all.forwarding to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router.

Solution:
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.ip_forward = 0

Example:

# printf '%s
' ""net.ipv4.ip_forward = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.ip_forward=0
   sysctl -w net.ipv4.route.flush=1
}

- IF - IPv6 is enabled on the system:

Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.forwarding = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.forwarding = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.forwarding=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

Impact:

IP forwarding is required on systems configured to act as a router. If these parameters are disabled, the system will not be able to perform as a router.

Many Cloud Service Provider (CSP) hosted systems require IP forwarding to be enabled. If the system is running on a CSP platform, this requirement should be reviewed before disabling IP forwarding.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.ip_forward"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv4.ip_forward"" is not set in an included file
   ** Note: ""net.ipv4.ip_forward"" May be set in a file that's ignored by load procedure **

 - ""net.ipv6.conf.all.forwarding"" is not set in an included file
   ** Note: ""net.ipv6.conf.all.forwarding"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""net.ipv6.conf.all.forwarding"" is correctly set to ""0"" in the running configuration","Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.ip_forward = 0

Example:

# printf '%s
' ""net.ipv4.ip_forward = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.ip_forward=0
   sysctl -w net.ipv4.route.flush=1
}

- IF - IPv6 is enabled on the system:

Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.forwarding = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.forwarding = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.forwarding=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

Impact:

IP forwarding is required on systems configured to act as a router. If these parameters are disabled, the system will not be able to perform as a router.

Many Cloud Service Provider (CSP) hosted systems require IP forwarding to be enabled. If the system is running on a CSP platform, this requirement should be reviewed before disabling IP forwarding.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.10 Ensure tcp syn cookies is enabled"" : [PASSED]

When tcp_syncookies is set, the kernel will handle TCP SYN packets normally until the half-open connection queue is full, at which time, the SYN cookie functionality kicks in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply replies to the SYN with a SYN|ACK, but will include a specially crafted TCP sequence number that encodes the source and destination IP address and port number and the time the packet was sent. A legitimate connection would send the ACK packet of the three way handshake with the specially crafted sequence number. This allows the system to verify that it has received a valid response to a SYN cookie and allow the connection, even though there is no corresponding SYN in the queue.

Attackers use SYN flood attacks to perform a denial of service attacked on a system by sending many SYN packets without completing the three way handshake. This will quickly use up slots in the kernel's half-open connection queue and prevent legitimate connections from succeeding. Setting net.ipv4.tcp_syncookies to 1 enables SYN cookies, allowing the system to keep accepting valid connections, even if under a denial of service attack.

Solution:
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.tcp_syncookies = 1

Example:

# printf '%s
' ""net.ipv4.tcp_syncookies = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.tcp_syncookies=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - ""net.ipv4.tcp_syncookies"" is correctly set to ""1"" in the running configuration
 - ""net.ipv4.tcp_syncookies"" is correctly set to ""1"" in ""/etc/sysctl.d/90-anapaya.conf""","Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.tcp_syncookies = 1

Example:

# printf '%s
' ""net.ipv4.tcp_syncookies = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.tcp_syncookies=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.11 Ensure ipv6 router advertisements are not accepted"" : [FAILED]

This setting disables the system's ability to accept IPv6 router advertisements.

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes. Setting net.ipv6.conf.all.accept_ra and net.ipv6.conf.default.accept_ra to 0 disables the system's ability to accept IPv6 router advertisements.

Solution:
- IF - IPv6 is enabled on the system:

Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.accept_ra = 0
 - net.ipv6.conf.default.accept_ra = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.accept_ra = 0"" ""net.ipv6.conf.default.accept_ra = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.accept_ra=0
   sysctl -w net.ipv6.conf.default.accept_ra=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv6.conf.all.accept_ra"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv6.conf.all.accept_ra"" is not set in an included file
   ** Note: ""net.ipv6.conf.all.accept_ra"" May be set in a file that's ignored by load procedure **

 - ""net.ipv6.conf.default.accept_ra"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv6.conf.default.accept_ra"" is not set in an included file
   ** Note: ""net.ipv6.conf.default.accept_ra"" May be set in a file that's ignored by load procedure **","- IF - IPv6 is enabled on the system:

Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.accept_ra = 0
 - net.ipv6.conf.default.accept_ra = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.accept_ra = 0"" ""net.ipv6.conf.default.accept_ra = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.accept_ra=0
   sysctl -w net.ipv6.conf.default.accept_ra=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.2 Ensure packet redirect sending is disabled"" : [FAILED]

ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.

An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system.

Solution:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.send_redirects = 0
 - net.ipv4.conf.default.send_redirects = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.send_redirects = 0"" ""net.ipv4.conf.default.send_redirects = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.send_redirects=0
   sysctl -w net.ipv4.conf.default.send_redirects=0
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

Impact:

IP forwarding is required on systems configured to act as a router. If these parameters are disabled, the system will not be able to perform as a router.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.conf.all.send_redirects"" is not set in an included file
   ** Note: ""net.ipv4.conf.all.send_redirects"" May be set in a file that's ignored by load procedure **

 - ""net.ipv4.conf.default.send_redirects"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv4.conf.default.send_redirects"" is not set in an included file
   ** Note: ""net.ipv4.conf.default.send_redirects"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""net.ipv4.conf.all.send_redirects"" is correctly set to ""0"" in the running configuration","Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.send_redirects = 0
 - net.ipv4.conf.default.send_redirects = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.send_redirects = 0"" ""net.ipv4.conf.default.send_redirects = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.send_redirects=0
   sysctl -w net.ipv4.conf.default.send_redirects=0
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

Impact:

IP forwarding is required on systems configured to act as a router. If these parameters are disabled, the system will not be able to perform as a router.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.3 Ensure bogus icmp responses are ignored"" : [FAILED]

Setting net.ipv4.icmp_ignore_bogus_error_responses to 1 prevents the kernel from logging bogus responses (RFC-1122 non-compliant) from broadcast reframes, keeping file systems from filling up with useless log messages.

Some routers (and some attackers) will send responses that violate RFC-1122 and attempt to fill up a log file system with many useless error messages.

Solution:
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.icmp_ignore_bogus_error_responses = 1

Example:

# printf '%s
' ""net.ipv4.icmp_ignore_bogus_error_responses = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.icmp_ignore_bogus_error_responses"" is not set in an included file
   ** Note: ""net.ipv4.icmp_ignore_bogus_error_responses"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""net.ipv4.icmp_ignore_bogus_error_responses"" is correctly set to ""1"" in the running configuration","Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.icmp_ignore_bogus_error_responses = 1

Example:

# printf '%s
' ""net.ipv4.icmp_ignore_bogus_error_responses = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.4 Ensure broadcast icmp requests are ignored"" : [FAILED]

Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 will cause the system to ignore all ICMP echo and timestamp requests to broadcast and multicast addresses.

Accepting ICMP echo and timestamp requests with broadcast or multicast destinations for your network could be used to trick your host into starting (or participating) in a Smurf attack. A Smurf attack relies on an attacker sending large amounts of ICMP broadcast messages with a spoofed source address. All hosts receiving this message and responding would send echo-reply messages back to the spoofed address, which is probably not routable. If many hosts respond to the packets, the amount of traffic on the network could be significantly multiplied.

Solution:
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.icmp_echo_ignore_broadcasts = 1

Example:

# printf '%s
' ""net.ipv4.icmp_echo_ignore_broadcasts = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.icmp_echo_ignore_broadcasts"" is not set in an included file
   ** Note: ""net.ipv4.icmp_echo_ignore_broadcasts"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""net.ipv4.icmp_echo_ignore_broadcasts"" is correctly set to ""1"" in the running configuration","Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.icmp_echo_ignore_broadcasts = 1

Example:

# printf '%s
' ""net.ipv4.icmp_echo_ignore_broadcasts = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.5 Ensure icmp redirects are not accepted"" : [FAILED]

ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables.

ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects net.ipv4.conf.default.accept_redirects net.ipv6.conf.all.accept_redirects and net.ipv6.conf.default.accept_redirects to 0 the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Solution:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.accept_redirects = 0
 - net.ipv4.conf.default.accept_redirects = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.accept_redirects = 0"" ""net.ipv4.conf.default.accept_redirects = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.accept_redirects=0
   sysctl -w net.ipv4.conf.default.accept_redirects=0
   sysctl -w net.ipv4.route.flush=1
}

- IF - IPv6 is enabled on the system:

Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.accept_redirects = 0
 - net.ipv6.conf.default.accept_redirects = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.accept_redirects = 0"" ""net.ipv6.conf.default.accept_redirects = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.accept_redirects=0
   sysctl -w net.ipv6.conf.default.accept_redirects=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.conf.all.accept_redirects"" is not set in an included file
   ** Note: ""net.ipv4.conf.all.accept_redirects"" May be set in a file that's ignored by load procedure **

 - ""net.ipv4.conf.default.accept_redirects"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv4.conf.default.accept_redirects"" is not set in an included file
   ** Note: ""net.ipv4.conf.default.accept_redirects"" May be set in a file that's ignored by load procedure **

 - ""net.ipv6.conf.all.accept_redirects"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv6.conf.all.accept_redirects"" is not set in an included file
   ** Note: ""net.ipv6.conf.all.accept_redirects"" May be set in a file that's ignored by load procedure **

 - ""net.ipv6.conf.default.accept_redirects"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv6.conf.default.accept_redirects"" is not set in an included file
   ** Note: ""net.ipv6.conf.default.accept_redirects"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""net.ipv4.conf.all.accept_redirects"" is correctly set to ""0"" in the running configuration","Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.accept_redirects = 0
 - net.ipv4.conf.default.accept_redirects = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.accept_redirects = 0"" ""net.ipv4.conf.default.accept_redirects = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.accept_redirects=0
   sysctl -w net.ipv4.conf.default.accept_redirects=0
   sysctl -w net.ipv4.route.flush=1
}

- IF - IPv6 is enabled on the system:

Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.accept_redirects = 0
 - net.ipv6.conf.default.accept_redirects = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.accept_redirects = 0"" ""net.ipv6.conf.default.accept_redirects = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.accept_redirects=0
   sysctl -w net.ipv6.conf.default.accept_redirects=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.6 Ensure secure icmp redirects are not accepted"" : [FAILED]

Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.

It is still possible for even known gateways to be compromised. Setting net.ipv4.conf.all.secure_redirects and net.ipv4.conf.default.secure_redirects to 0 protects the system from routing table updates by possibly compromised known gateways.

Solution:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.secure_redirects = 0
 - net.ipv4.conf.default.secure_redirects = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.secure_redirects = 0"" ""net.ipv4.conf.default.secure_redirects = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.secure_redirects=0
   sysctl -w net.ipv4.conf.default.secure_redirects=0
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.conf.all.secure_redirects"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv4.conf.all.secure_redirects"" is not set in an included file
   ** Note: ""net.ipv4.conf.all.secure_redirects"" May be set in a file that's ignored by load procedure **

 - ""net.ipv4.conf.default.secure_redirects"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv4.conf.default.secure_redirects"" is not set in an included file
   ** Note: ""net.ipv4.conf.default.secure_redirects"" May be set in a file that's ignored by load procedure **","Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.secure_redirects = 0
 - net.ipv4.conf.default.secure_redirects = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.secure_redirects = 0"" ""net.ipv4.conf.default.secure_redirects = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.secure_redirects=0
   sysctl -w net.ipv4.conf.default.secure_redirects=0
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.7 Ensure reverse path filtering is enabled"" : [FAILED]

Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).

Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing.

Solution:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.rp_filter = 1
 - net.ipv4.conf.default.rp_filter = 1

Example:

# printf '%s
' ""net.ipv4.conf.all.rp_filter = 1"" ""net.ipv4.conf.default.rp_filter = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.rp_filter=1
   sysctl -w net.ipv4.conf.default.rp_filter=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

Impact:

If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.conf.all.rp_filter"" is incorrectly set to ""0"" in the running configuration and should have a value of: ""1""
 - ""net.ipv4.conf.all.rp_filter"" is incorrectly set to ""0"" in ""/etc/sysctl.conf"" and should have a value of: ""1""

 - ""net.ipv4.conf.default.rp_filter"" is incorrectly set to ""2"" in the running configuration and should have a value of: ""1""
 - ""net.ipv4.conf.default.rp_filter"" is incorrectly set to ""2"" in ""/usr/lib/sysctl.d/50-default.conf"" and should have a value of: ""1""","Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.rp_filter = 1
 - net.ipv4.conf.default.rp_filter = 1

Example:

# printf '%s
' ""net.ipv4.conf.all.rp_filter = 1"" ""net.ipv4.conf.default.rp_filter = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.rp_filter=1
   sysctl -w net.ipv4.conf.default.rp_filter=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

Impact:

If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.8 Ensure source routed packets are not accepted"" : [FAILED]

In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Setting net.ipv4.conf.all.accept_source_route net.ipv4.conf.default.accept_source_route net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing.

Solution:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.accept_source_route = 0
 - net.ipv4.conf.default.accept_source_route = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.accept_source_route = 0"" ""net.ipv4.conf.default.accept_source_route = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.accept_source_route=0
   sysctl -w net.ipv4.conf.default.accept_source_route=0
   sysctl -w net.ipv4.route.flush=1
}

- IF - IPv6 is enabled on the system:

Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.accept_source_route = 0
 - net.ipv6.conf.default.accept_source_route = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.accept_source_route = 0"" ""net.ipv6.conf.default.accept_source_route = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following command to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.accept_source_route=0
   sysctl -w net.ipv6.conf.default.accept_source_route=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.conf.all.accept_source_route"" is not set in an included file
   ** Note: ""net.ipv4.conf.all.accept_source_route"" May be set in a file that's ignored by load procedure **

 - ""net.ipv6.conf.all.accept_source_route"" is not set in an included file
   ** Note: ""net.ipv6.conf.all.accept_source_route"" May be set in a file that's ignored by load procedure **

 - ""net.ipv6.conf.default.accept_source_route"" is not set in an included file
   ** Note: ""net.ipv6.conf.default.accept_source_route"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""net.ipv4.conf.all.accept_source_route"" is correctly set to ""0"" in the running configuration
 - ""net.ipv4.conf.default.accept_source_route"" is correctly set to ""0"" in the running configuration
 - ""net.ipv4.conf.default.accept_source_route"" is correctly set to ""0"" in ""/usr/lib/sysctl.d/50-default.conf""

 - ""net.ipv6.conf.all.accept_source_route"" is correctly set to ""0"" in the running configuration
 - ""net.ipv6.conf.default.accept_source_route"" is correctly set to ""0"" in the running configuration","Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.accept_source_route = 0
 - net.ipv4.conf.default.accept_source_route = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.accept_source_route = 0"" ""net.ipv4.conf.default.accept_source_route = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.accept_source_route=0
   sysctl -w net.ipv4.conf.default.accept_source_route=0
   sysctl -w net.ipv4.route.flush=1
}

- IF - IPv6 is enabled on the system:

Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.accept_source_route = 0
 - net.ipv6.conf.default.accept_source_route = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.accept_source_route = 0"" ""net.ipv6.conf.default.accept_source_route = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following command to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.accept_source_route=0
   sysctl -w net.ipv6.conf.default.accept_source_route=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.9 Ensure suspicious packets are logged"" : [FAILED]

When enabled, this feature logs packets with un-routable source addresses to the kernel log.

Setting net.ipv4.conf.all.log_martians and net.ipv4.conf.default.log_martians to 1 enables this feature. Logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system.

Solution:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.log_martians = 1
 - net.ipv4.conf.default.log_martians = 1

Example:

# printf '%s
' ""net.ipv4.conf.all.log_martians = 1"" ""net.ipv4.conf.default.log_martians = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.log_martians=1
   sysctl -w net.ipv4.conf.default.log_martians=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.conf.all.log_martians"" is incorrectly set to ""0"" in the running configuration and should have a value of: ""1""
 - ""net.ipv4.conf.all.log_martians"" is not set in an included file
   ** Note: ""net.ipv4.conf.all.log_martians"" May be set in a file that's ignored by load procedure **

 - ""net.ipv4.conf.default.log_martians"" is incorrectly set to ""0"" in the running configuration and should have a value of: ""1""
 - ""net.ipv4.conf.default.log_martians"" is not set in an included file
   ** Note: ""net.ipv4.conf.default.log_martians"" May be set in a file that's ignored by load procedure **","Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.log_martians = 1
 - net.ipv4.conf.default.log_martians = 1

Example:

# printf '%s
' ""net.ipv4.conf.all.log_martians = 1"" ""net.ipv4.conf.default.log_martians = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.log_martians=1
   sysctl -w net.ipv4.conf.default.log_martians=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.1.1 Ensure ufw is installed"" : [PASSED]

The Uncomplicated Firewall (ufw) is a frontend for iptables and is particularly well-suited for host-based firewalls. ufw provides a framework for managing netfilter, as well as a command-line interface for manipulating the firewall

A firewall utility is required to configure the Linux kernel's netfilter framework via the iptables or nftables back-end.

The Linux kernel's netfilter framework host-based firewall can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host.

Note: Only one firewall utility should be installed and configured. UFW is dependent on the iptables package

Solution:
Run the following command to install Uncomplicated Firewall (UFW):

apt install ufw

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command to install Uncomplicated Firewall (UFW):

apt install ufw","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.1.2 Ensure iptables-persistent is not installed with ufw"" : [PASSED]

The iptables-persistent is a boot-time loader for netfilter rules, iptables plugin

Running both ufw and the services included in the iptables-persistent package may lead to conflict

Solution:
Run the following command to remove the iptables-persistent package:

# apt purge iptables-persistent

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command to remove the iptables-persistent package:

# apt purge iptables-persistent","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.1.3 Ensure ufw service is enabled"" : [PASSED]

UncomplicatedFirewall (ufw) is a frontend for iptables. ufw provides a framework for managing netfilter, as well as a command-line and available graphical user interface for manipulating the firewall.

Note:

 - When running ufw enable or starting ufw via its initscript, ufw will flush its chains. This is required so ufw can maintain a consistent state, but it may drop existing connections (eg ssh). ufw does support adding rules before enabling the firewall.
 - Run the following command before running ufw enable

# ufw allow proto tcp from any to any port 22
 - The rules will still be flushed, but the ssh port will be open after enabling the firewall. Please note that once ufw is 'enabled', ufw will not flush the chains when adding or removing rules (but will when modifying a rule or changing the default policy)
 - By default, ufw will prompt when enabling the firewall while running under ssh. This can be disabled by using ufw --force enable

The ufw service must be enabled and running in order for ufw to protect the system

Solution:
Run the following command to unmask the ufw daemon:

# systemctl unmask ufw.service

Run the following command to enable and start the ufw daemon:

# systemctl --now enable ufw.service

active

Run the following command to enable ufw:

# ufw enable

Impact:

Changing firewall settings while connected over network can result in being locked out of the system.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command to unmask the ufw daemon:

# systemctl unmask ufw.service

Run the following command to enable and start the ufw daemon:

# systemctl --now enable ufw.service

active

Run the following command to enable ufw:

# ufw enable

Impact:

Changing firewall settings while connected over network can result in being locked out of the system.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.1.4 Ensure ufw loopback traffic is configured"" : [PASSED]

Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6).

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

Solution:
Run the following commands to implement the loopback rules:

# ufw allow in on lo
# ufw allow out on lo
# ufw deny in from 127.0.0.0/8
# ufw deny in from ::1

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following commands to implement the loopback rules:

# ufw allow in on lo
# ufw allow out on lo
# ufw deny in from 127.0.0.0/8
# ufw deny in from ::1","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.1.5 Ensure ufw outbound connections are configured"" : [PASSED]

Configure the firewall rules for new outbound connections.

Note:

 - Changing firewall settings while connected over network can result in being locked out of the system.
 - Unlike iptables, when a new outbound rule is added, ufw automatically takes care of associated established connections, so no rules for the latter kind are required.

If rules are not in place for new outbound connections all packets will be dropped by the default policy preventing network usage.

Solution:
Configure ufw in accordance with site policy. The following commands will implement a policy to allow all outbound connections on all interfaces:

# ufw allow out on all

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Configure ufw in accordance with site policy. The following commands will implement a policy to allow all outbound connections on all interfaces:

# ufw allow out on all","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.1.6 Ensure ufw firewall rules exist for all open ports"" : [PASSED]

Services and ports can be accepted or explicitly rejected.

Note:

 - Changing firewall settings while connected over network can result in being locked out of the system
 - The remediation command opens up the port to traffic from all sources. Consult ufw documentation and set any restrictions in compliance with site policy

To reduce the attack surface of a system, all services and ports should be blocked unless required.

 - Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.
 - Without a firewall rule configured for open ports, the default firewall policy will drop all packets to these ports.
 - Required ports should have a firewall rule created to allow approved connections in accordance with local site policy.
 - Unapproved ports should have an explicit deny rule created.

Solution:
For each port identified in the audit which does not have a firewall rule, evaluate the service listening on the port and add a rule for accepting or denying inbound connections in accordance with local site policy:

Examples:

# ufw allow in <port>/<tcp or udp protocol>

# ufw deny in <port>/<tcp or udp protocol>

Note: Examples create rules for from any, to any. More specific rules should be concentered when allowing inbound traffic e.g only traffic from this network.

Example to allow traffic on port 443 using the tcp protocol from the 192.168.1.0 network:

ufw allow from 192.168.1.0/24 to any proto tcp port 443

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","For each port identified in the audit which does not have a firewall rule, evaluate the service listening on the port and add a rule for accepting or denying inbound connections in accordance with local site policy:

Examples:

# ufw allow in <port>/<tcp or udp protocol>

# ufw deny in <port>/<tcp or udp protocol>

Note: Examples create rules for from any, to any. More specific rules should be concentered when allowing inbound traffic e.g only traffic from this network.

Example to allow traffic on port 443 using the tcp protocol from the 192.168.1.0 network:

ufw allow from 192.168.1.0/24 to any proto tcp port 443","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.1.7 Ensure ufw default deny firewall policy"" : [PASSED]

A default deny policy on connections ensures that any unconfigured network usage will be rejected.

Note: Any port or protocol without a explicit allow before the default deny will be blocked

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.

Solution:
Run the following commands to implement a default

deny

policy:

# ufw default deny incoming
# ufw default deny outgoing
# ufw default deny routed

Impact:

Any port and protocol not explicitly allowed will be blocked. The following rules should be considered before applying the default deny.

ufw allow out http
  ufw allow out https
  ufw allow out ntp # Network Time Protocol
  ufw allow out to any port 53 # DNS
  ufw allow out to any port 853 # DNS over TLS
  ufw logging on

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following commands to implement a default

deny

policy:

# ufw default deny incoming
# ufw default deny outgoing
# ufw default deny routed

Impact:

Any port and protocol not explicitly allowed will be blocked. The following rules should be considered before applying the default deny.

ufw allow out http
  ufw allow out https
  ufw allow out ntp # Network Time Protocol
  ufw allow out to any port 53 # DNS
  ufw allow out to any port 853 # DNS over TLS
  ufw logging on","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.1 Ensure nftables is installed"" : [PASSED]

nftables provides a new in-kernel packet classification framework that is based on a network-specific Virtual Machine (VM) and a new nft userspace command line tool. nftables reuses the existing Netfilter subsystems such as the existing hook infrastructure, the connection tracking system, NAT, userspace queuing and logging subsystem.

Notes:

 - nftables is available in Linux kernel 3.13 and newer
 - Only one firewall utility should be installed and configured
 - Changing firewall settings while connected over the network can result in being locked out of the system

nftables is a subsystem of the Linux kernel that can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host.

Solution:
Run the following command to install nftables :

# apt install nftables

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command to install nftables :

# apt install nftables","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.10 Ensure nftables rules are permanent"" : [PASSED]

nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames.

The nftables service reads the /etc/nftables.conf file for a nftables file or files to include in the nftables ruleset.

A nftables ruleset containing the input, forward, and output base chains allow network traffic to be filtered.

Changes made to nftables ruleset only affect the live system, you will also need to configure the nftables ruleset to apply on boot

Solution:
Edit the /etc/nftables.conf file and un-comment or add a line with include <Absolute path to nftables rules file> for each nftables file you want included in the nftables ruleset on boot

Example:

# vi /etc/nftables.conf

Add the line:

include ""/etc/nftables.rules""

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Edit the /etc/nftables.conf file and un-comment or add a line with include <Absolute path to nftables rules file> for each nftables file you want included in the nftables ruleset on boot

Example:

# vi /etc/nftables.conf

Add the line:

include ""/etc/nftables.rules""","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.2 Ensure ufw is uninstalled or disabled with nftables"" : [PASSED]

Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to be easy to use.

Running both the nftables service and ufw may lead to conflict and unexpected results.

Solution:
Run one of the following to either remove ufw or disable ufw and mask ufw.service :

Run the following command to remove ufw :

# apt purge ufw

-OR-

Run the following commands to disable ufw and mask ufw.service :

# ufw disable
# systemctl stop ufw.service
# systemctl mask ufw.service

Note: ufw disable needs to be run before systemctl mask ufw.service in order to correctly disable UFW

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run one of the following to either remove ufw or disable ufw and mask ufw.service :

Run the following command to remove ufw :

# apt purge ufw

-OR-

Run the following commands to disable ufw and mask ufw.service :

# ufw disable
# systemctl stop ufw.service
# systemctl mask ufw.service

Note: ufw disable needs to be run before systemctl mask ufw.service in order to correctly disable UFW","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.3 Ensure iptables are flushed with nftables"" : [PASSED]

nftables is a replacement for iptables, ip6tables, ebtables and arptables

It is possible to mix iptables and nftables. However, this increases complexity and also the chance to introduce errors. For simplicity flush out all iptables rules, and ensure it is not loaded

Solution:
Run the following commands to flush iptables:

For iptables:

# iptables -F

For ip6tables:

# ip6tables -F

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following commands to flush iptables:

For iptables:

# iptables -F

For ip6tables:

# ip6tables -F","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.4 Ensure a nftables table exists"" : [PASSED]

Tables hold chains. Each table only has one address family and only applies to packets of this family. Tables can have one of five families.

nftables doesn't have any default tables. Without a table being build, nftables will not filter network traffic.

Solution:
Run the following command to create a table in nftables

# nft create table inet <table name>

Example:

# nft create table inet filter

Impact:

Adding rules to a running nftables can cause loss of connectivity to the system

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command to create a table in nftables

# nft create table inet <table name>

Example:

# nft create table inet filter

Impact:

Adding rules to a running nftables can cause loss of connectivity to the system","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.5 Ensure nftables base chains exist"" : [PASSED]

Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.

If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables.

Solution:
Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 ; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 ; }

# nft create chain inet filter forward { type filter hook forward priority 0 ; }

# nft create chain inet filter output { type filter hook output priority 0 ; }

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 ; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 ; }

# nft create chain inet filter forward { type filter hook forward priority 0 ; }

# nft create chain inet filter output { type filter hook output priority 0 ; }

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.6 Ensure nftables loopback traffic is configured"" : [PASSED]

Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

Solution:
Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept # nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

-IF- IPv6 is enabled on the system:

Run the following command to implement the IPv6 loopback rule:

# nft add rule inet filter input ip6 saddr ::1 counter drop

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept # nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

-IF- IPv6 is enabled on the system:

Run the following command to implement the IPv6 loopback rule:

# nft add rule inet filter input ip6 saddr ::1 counter drop","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.7 Ensure nftables outbound and established connections are configured"" : [PASSED]

Configure the firewall rules for new outbound, and established connections

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.

Solution:
Configure nftables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# nft add rule inet filter input ip protocol tcp ct state established accept

# nft add rule inet filter input ip protocol udp ct state established accept

# nft add rule inet filter input ip protocol icmp ct state established accept

# nft add rule inet filter output ip protocol tcp ct state new,related,established accept

# nft add rule inet filter output ip protocol udp ct state new,related,established accept

# nft add rule inet filter output ip protocol icmp ct state new,related,established accept

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Configure nftables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# nft add rule inet filter input ip protocol tcp ct state established accept

# nft add rule inet filter input ip protocol udp ct state established accept

# nft add rule inet filter input ip protocol icmp ct state established accept

# nft add rule inet filter output ip protocol tcp ct state new,related,established accept

# nft add rule inet filter output ip protocol udp ct state new,related,established accept

# nft add rule inet filter output ip protocol icmp ct state new,related,established accept","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.8 Ensure nftables default deny firewall policy"" : [PASSED]

Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.

There are two policies: accept (Default) and drop. If the policy is set to accept the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack.

It is easier to white list acceptable usage than to black list unacceptable usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system.

Solution:
Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop ; }

Example:

# nft chain inet filter input { policy drop ; }

# nft chain inet filter forward { policy drop ; }

# nft chain inet filter output { policy drop ; }

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop ; }

Example:

# nft chain inet filter input { policy drop ; }

# nft chain inet filter forward { policy drop ; }

# nft chain inet filter output { policy drop ; }

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.9 Ensure nftables service is enabled"" : [PASSED]

The nftables service allows for the loading of nftables rulesets during boot, or starting on the nftables service

The nftables service restores the nftables rules from the rules files referenced in the /etc/nftables.conf file during boot or the starting of the nftables service

Solution:
Run the following command to enable the nftables service:

# systemctl enable nftables

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command to enable the nftables service:

# systemctl enable nftables","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.1.1 Ensure iptables packages are installed"" : [PASSED]

iptables is a utility program that allows a system administrator to configure the tables provided by the Linux kernel firewall, implemented as different Netfilter modules, and the chains and rules it stores. Different kernel modules and programs are used for different protocols; iptables applies to IPv4, ip6tables to IPv6, arptables to ARP, and ebtables to Ethernet frames.

A method of configuring and maintaining firewall rules is necessary to configure a Host Based Firewall.

Solution:
Run the following command to install iptables and iptables-persistent

# apt install iptables iptables-persistent

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - dpkg check iptables-persistent
The command '/bin/dpkg -s iptables-persistent 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

Status: install ok installed

-------------------------
PASSED - dpkg check iptables
The command '/bin/dpkg -s iptables 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

Status: install ok installed","Run the following command to install iptables and iptables-persistent

# apt install iptables iptables-persistent","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.1.2 Ensure nftables is not installed with iptables"" : [FAILED]

nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.

Running both iptables and nftables may lead to conflict.

Solution:
Run the following command to remove nftables :

# apt purge nftables

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
cmd: /bin/dpkg -s nftables 2>&1 | /bin/grep -E '(Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s nftables 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

Status: install ok installed","Run the following command to remove nftables :

# apt purge nftables","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.1.3 Ensure ufw is uninstalled or disabled with iptables"" : [PASSED]

Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to be easy to use.

 - Uses a command-line interface consisting of a small number of simple commands
 - Uses iptables for configuration

Running iptables.persistent with ufw enabled may lead to conflict and unexpected results.

Solution:
Run one of the following commands to either remove ufw or stop and mask ufw

Run the following command to remove ufw :

# apt purge ufw

- OR -

Run the following commands to disable ufw :

# ufw disable
# systemctl stop ufw
# systemctl mask ufw

Note: ufw disable needs to be run before systemctl mask ufw in order to correctly disable UFW

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
cmd: /bin/dpkg -s ufw 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s ufw 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'ufw' is not installed and no information is available","Run one of the following commands to either remove ufw or stop and mask ufw

Run the following command to remove ufw :

# apt purge ufw

- OR -

Run the following commands to disable ufw :

# ufw disable
# systemctl stop ufw
# systemctl mask ufw

Note: ufw disable needs to be run before systemctl mask ufw in order to correctly disable UFW","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.2.1 Ensure iptables default deny firewall policy"" : [FAILED]

A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Notes:

 -

Changing firewall settings while connected over network can result in being locked out of the system

 -

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.

Solution:
Run the following commands to implement a default DROP policy:

# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - FORWARD
The command '/sbin/iptables -L -n | /bin/grep 'Chain FORWARD'' returned : 

Chain FORWARD (policy ACCEPT)

-------------------------
FAILED - INPUT
The command '/sbin/iptables -L -n | /bin/grep 'Chain INPUT'' returned : 

Chain INPUT (policy ACCEPT)

-------------------------
FAILED - OUTPUT
The command '/sbin/iptables -L -n | /bin/grep 'Chain OUTPUT'' returned : 

Chain OUTPUT (policy ACCEPT)","Run the following commands to implement a default DROP policy:

# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.2.2 Ensure iptables loopback traffic is configured"" : [FAILED]

Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8).

Notes:

 -

Changing firewall settings while connected over network can result in being locked out of the system

 -

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

Solution:
Run the following commands to implement the loopback rules:

# iptables -A INPUT -i lo -j ACCEPT
# iptables -A OUTPUT -o lo -j ACCEPT
# iptables -A INPUT -s 127.0.0.0/8 -j DROP

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - iptables OUTPUT
The command '/sbin/iptables -L OUTPUT -v -n | /bin/awk '{ a[$3"":""$4"":""$6"":""$7"":""$8"":""$9] = NR; print } END { if (a[""ACCEPT:all:*:lo:0.0.0.0/0:0.0.0.0/0""] > 0) { print ""pass"" } else { print ""fail"" } }'' returned : 

Chain OUTPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         
fail

-------------------------
FAILED - iptables INPUT
The command '/sbin/iptables -L INPUT -v -n | /bin/awk '{ a[$3"":""$4"":""$6"":""$7"":""$8"":""$9] = NR; print } END { if (a[""ACCEPT:all:lo:*:0.0.0.0/0:0.0.0.0/0""] > 0 && a[""ACCEPT:all:lo:*:0.0.0.0/0:0.0.0.0/0""] < a[""DROP:all:*:*:127.0.0.0/8:0.0.0.0/0""]) { print ""pass"" } else { print ""fail"" } }'' returned : 

Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         
fail","Run the following commands to implement the loopback rules:

# iptables -A INPUT -i lo -j ACCEPT
# iptables -A OUTPUT -o lo -j ACCEPT
# iptables -A INPUT -s 127.0.0.0/8 -j DROP","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.2.3 Ensure iptables outbound and established connections are configured"" : [WARNING]

Configure the firewall rules for new outbound, and established connections.

Notes:

 -

Changing firewall settings while connected over network can result in being locked out of the system

 -

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# iptables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
cmd: /sbin/iptables -L -v -n
expect: ^Manual Review Required$

Actual Value:
The command '/sbin/iptables -L -v -n' returned : 

Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         

Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         

Chain OUTPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination","Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# iptables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.2.4 Ensure iptables firewall rules exist for all open ports"" : [WARNING]

Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Note:

 - Changing firewall settings while connected over network can result in being locked out of the system
 - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well
 - The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# iptables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
cmd: /bin/ss -4tuln; /sbin/iptables -L INPUT -v -n
expect: ^Manual Review Required$

Actual Value:
The command '/bin/ss -4tuln; /sbin/iptables -L INPUT -v -n' returned : 

Netid  State   Recv-Q  Send-Q   Local Address:Port    Peer Address:Port Process 
udp    UNCONN  0       0              0.0.0.0:51021        0.0.0.0:*            
udp    UNCONN  0       0              0.0.0.0:30041        0.0.0.0:*            
udp    UNCONN  0       0        192.168.111.1:30042        0.0.0.0:*            
udp    UNCONN  0       0        127.0.0.53%lo:53           0.0.0.0:*            
udp    UNCONN  0       0        192.168.111.1:443          0.0.0.0:*            
udp    UNCONN  0       0          198.18.30.2:443          0.0.0.0:*            
udp    UNCONN  0       0            127.0.0.1:443          0.0.0.0:*            
tcp    LISTEN  0       5            127.0.0.1:33333        0.0.0.0:*            
tcp    LISTEN  0       4096     192.168.111.1:443          0.0.0.0:*            
tcp    LISTEN  0       4096     192.168.111.1:80           0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:443          0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:48001        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:48000        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:48022        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:48021        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:48020        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:48031        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:48030        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:48041        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:48050        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:48061        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41601        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41600        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:8888         0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:9100         0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:9080         0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41201        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41200        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41101        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41100        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41001        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41000        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41401        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41400        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41302        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41301        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41300        0.0.0.0:*            
tcp    LISTEN  0       128            0.0.0.0:22           0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:53077        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:19531        0.0.0.0:*            
tcp    LISTEN  0       4096       198.18.30.2:443          0.0.0.0:*            
tcp    LISTEN  0       4096       198.18.30.2:80           0.0.0.0:*            
tcp    LISTEN  0       4096     192.168.111.1:30252        0.0.0.0:*            
tcp    LISTEN  0       4096     127.0.0.53%lo:53           0.0.0.0:*            
Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination","For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# iptables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.3.1 Ensure ip6tables default deny firewall policy"" : [FAILED]

A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Note:

 - Changing firewall settings while connected over network can result in being locked out of the system
 - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.

Solution:
IF IPv6 is enabled on your system:

Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - INPUT
The command '/sbin/ip6tables -L -n | /bin/grep 'Chain INPUT'' returned : 

Chain INPUT (policy ACCEPT)

-------------------------
FAILED - OUTPUT
The command '/sbin/ip6tables -L -n | /bin/grep 'Chain OUTPUT'' returned : 

Chain OUTPUT (policy ACCEPT)

-------------------------
FAILED - FORWARD
The command '/sbin/ip6tables -L -n | /bin/grep 'Chain FORWARD'' returned : 

Chain FORWARD (policy ACCEPT)","IF IPv6 is enabled on your system:

Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.3.2 Ensure ip6tables loopback traffic is configured"" : [FAILED]

Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (::1).

Note:

 - Changing firewall settings while connected over network can result in being locked out of the system
 - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (::1) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

Solution:
Run the following commands to implement the loopback rules:

# ip6tables -A INPUT -i lo -j ACCEPT
# ip6tables -A OUTPUT -o lo -j ACCEPT
# ip6tables -A INPUT -s ::1 -j DROP

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - ip6tables output
The command '/sbin/ip6tables -L OUTPUT -v -n | /bin/awk '{ a[$3"":""$4"":""$5"":""$6"":""$7"":""$8] = NR; print } END { if (a[""ACCEPT:all:*:lo:::/0:::/0""] > 0) { print ""pass"" } else { print ""fail"" } }'' returned : 

Chain OUTPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         
fail

-------------------------
FAILED - ip6tables input
The command '/sbin/ip6tables -L INPUT -v -n | /bin/awk '{ a[$3"":""$4"":""$5"":""$6"":""$7"":""$8] = NR; print } END { if (a[""ACCEPT:all:lo:*:::/0:::/0""] > 0 && a[""ACCEPT:all:lo:*:::/0:::/0""] < a[""DROP:all:*:*:::1:::/0""]) { print ""pass"" } else { print ""fail"" } }'' returned : 

Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         
fail","Run the following commands to implement the loopback rules:

# ip6tables -A INPUT -i lo -j ACCEPT
# ip6tables -A OUTPUT -o lo -j ACCEPT
# ip6tables -A INPUT -s ::1 -j DROP","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.3.3 Ensure ip6tables outbound and established connections are configured"" : [WARNING]

Configure the firewall rules for new outbound, and established IPv6 connections.

Note:

 - Changing firewall settings while connected over network can result in being locked out of the system
 - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
cmd: /sbin/ip6tables -L -v -n
expect: Manual Review Required$

Actual Value:
The command '/sbin/ip6tables -L -v -n' returned : 

Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         

Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         

Chain OUTPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination","Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.3.4 Ensure ip6tables firewall rules exist for all open ports"" : [WARNING]

Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Note:

 - Changing firewall settings while connected over network can result in being locked out of the system
 - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well
 - The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
cmd: /bin/ss -6tuln; /sbin/ip6tables -L INPUT -v -n
expect: ^Manual Review Required$

Actual Value:
The command '/bin/ss -6tuln; /sbin/ip6tables -L INPUT -v -n' returned : 

Netid  State   Recv-Q  Send-Q   Local Address:Port    Peer Address:Port Process 
udp    UNCONN  0       0                 [::]:51021           [::]:*            
udp    UNCONN  0       0                 [::]:30041           [::]:*            
tcp    LISTEN  0       4096                 *:42001              *:*            
tcp    LISTEN  0       4096                 *:80                 *:*            
tcp    LISTEN  0       128               [::]:22              [::]:*            
Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination","For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured"" : [FAILED]

The file /etc/ssh/sshd_config and files ending inconf in the /etc/ssh/sshd_config.d directory, contain configuration specifications for sshd

configuration specifications for sshd need to be protected from unauthorized changes by non-privileged users.

Solution:
Run the following script to set ownership and permissions on /etc/ssh/sshd_config and files ending inconf in the /etc/ssh/sshd_config.d directory:

#!/usr/bin/env bash

{
   chmod u-x,og-rwx /etc/ssh/sshd_config
   chown root:root /etc/ssh/sshd_config
   while IFS= read -r -d $'0' l_file; do
      if [ -e ""$l_file"" ]; then
         chmod u-x,og-rwx ""$l_file""
         chown root:root ""$l_file""
      fi
   done < <(find /etc/ssh/sshd_config.d -type f -print0 2>/dev/null)
}

- IF - other locations are listed in an Include statement, *.conf files in these locations access should also be modified.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - * Reasons for audit failure * :

 - File: ""/etc/ssh/sshd_config"":
  - Is mode: ""0644"" should be: ""600"" or more restrictive
 - File: ""/etc/ssh/sshd_config.d/30-anapaya-controller-PasswordAuthentication.conf"":
  - Is mode: ""0644"" should be: ""600"" or more restrictive
 - File: ""/etc/ssh/sshd_config.d/90-anapaya.conf"":
  - Is mode: ""0644"" should be: ""600"" or more restrictive","Run the following script to set ownership and permissions on /etc/ssh/sshd_config and files ending inconf in the /etc/ssh/sshd_config.d directory:

#!/usr/bin/env bash

{
   chmod u-x,og-rwx /etc/ssh/sshd_config
   chown root:root /etc/ssh/sshd_config
   while IFS= read -r -d $'0' l_file; do
      if [ -e ""$l_file"" ]; then
         chmod u-x,og-rwx ""$l_file""
         chown root:root ""$l_file""
      fi
   done < <(find /etc/ssh/sshd_config.d -type f -print0 2>/dev/null)
}

- IF - other locations are listed in an Include statement, *.conf files in these locations access should also be modified.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.10 Ensure sshd HostbasedAuthentication is disabled"" : [PASSED]

The HostbasedAuthentication parameter specifies if authentication is allowed through trusted hosts via the user ofrhosts or /etc/hosts.equiv along with successful public key client host authentication.

Even though therhosts files are ineffective if support is disabled in /etc/pam.conf disabling the ability to userhosts files in SSH provides an additional layer of protection.

Solution:
Edit the /etc/ssh/sshd_config file to set the HostbasedAuthentication parameter to no above any Include and Match entries as follows:

HostbasedAuthentication no

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - sshd hostbasedauthentication setting
The command script with multiple lines returned : 

port 22: hostbasedauthentication no
Pass

-------------------------
PASSED - config file HostbasedAuthentication setting
The file ""/etc/ssh/sshd_config"" does not contain ""^[\s]*(?i)HostbasedAuthentication(?-i)[\s]""","Edit the /etc/ssh/sshd_config file to set the HostbasedAuthentication parameter to no above any Include and Match entries as follows:

HostbasedAuthentication no

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.11 Ensure sshd IgnoreRhosts is enabled"" : [PASSED]

The IgnoreRhosts parameter specifies thatrhosts andshosts files will not be used in RhostsRSAAuthentication or HostbasedAuthentication

Setting this parameter forces users to enter a password when authenticating with SSH.

Solution:
Edit the /etc/ssh/sshd_config file to set the IgnoreRhosts parameter to yes above any Include and Match entries as follows:

IgnoreRhosts yes

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - config file IgnoreRhosts setting
The file ""/etc/ssh/sshd_config"" does not contain ""^[\s]*(?i)IgnoreRhosts(?-i)[\s]""

-------------------------
PASSED - sshd ignorerhosts setting
The command script with multiple lines returned : 

port 22: ignorerhosts yes
Pass","Edit the /etc/ssh/sshd_config file to set the IgnoreRhosts parameter to yes above any Include and Match entries as follows:

IgnoreRhosts yes

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.12 Ensure sshd KexAlgorithms is configured"" : [PASSED]

Key exchange is any method in cryptography by which cryptographic keys are exchanged between two parties, allowing use of a cryptographic algorithm. If the sender and receiver wish to exchange encrypted messages, each must be equipped to encrypt messages to be sent and decrypt messages received

Notes:

 - Kex algorithms have a higher preference the earlier they appear in the list
 - Some organizations may have stricter requirements for approved Key exchange algorithms
 - Ensure that Key exchange algorithms used are in compliance with site policy
 - The only Key Exchange Algorithms currently FIPS 140 approved are:
 - ecdh-sha2-nistp256
 - ecdh-sha2-nistp384
 - ecdh-sha2-nistp521
 - diffie-hellman-group-exchange-sha256
 - diffie-hellman-group16-sha512
 - diffie-hellman-group18-sha512
 - diffie-hellman-group14-sha256

Key exchange methods that are considered weak should be removed. A key exchange method may be weak because too few bits are used, or the hashing algorithm is considered too weak. Using weak algorithms could expose connections to man-in-the-middle attacks

Solution:
Edit the /etc/ssh/sshd_config file and add/modify the KexAlgorithms line to contain a comma separated list of the site unapproved (weak) KexAlgorithms preceded with a - above any Include entries:

Example:

KexAlgorithms -diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

port 22: kexalgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp384,diffie-hellman-group-exchange-sha256
Pass","Edit the /etc/ssh/sshd_config file and add/modify the KexAlgorithms line to contain a comma separated list of the site unapproved (weak) KexAlgorithms preceded with a - above any Include entries:

Example:

KexAlgorithms -diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.13 Ensure sshd LoginGraceTime is configured"" : [PASSED]

The LoginGraceTime parameter specifies the time allowed for successful authentication to the SSH server. The longer the Grace period is the more open unauthenticated connections can exist. Like other session controls in this session the Grace Period should be limited to appropriate organizational limits to ensure the service is available for needed access.

Setting the LoginGraceTime parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. It will also limit the number of concurrent unauthenticated connections While the recommended setting is 60 seconds (1 Minute), set the number based on site policy.

Solution:
Edit the /etc/ssh/sshd_config file to set the LoginGraceTime parameter to 60 seconds or less above any Include entry as follows:

LoginGraceTime 60

Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.11,800-53|AC-10,800-53|AC-12,800-53r5|AC-10,800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-10,ITSG-33|AC-12,LEVEL|1A,NESA|T5.5.1,NIAv2|NS49,QCSC-v1|5.2.1,QCSC-v1|5.2.2

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

port 22: logingracetime 60
Pass","Edit the /etc/ssh/sshd_config file to set the LoginGraceTime parameter to 60 seconds or less above any Include entry as follows:

LoginGraceTime 60

Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.14 Ensure sshd LogLevel is configured"" : [PASSED]

SSH provides several logging levels with varying amounts of verbosity. The DEBUG options are specifically not recommended other than strictly for debugging SSH communications. These levels provide so much data that it is difficult to identify important security information, and may violate the privacy of users.

The INFO level is the basic level that only records login activity of SSH users. In many situations, such as Incident Response, it is important to determine when a particular user was active on a system. The logout record can eliminate those users who disconnected, which helps narrow the field.

The VERBOSE level specifies that login and logout activity as well as the key fingerprint for any SSH key used for login will be logged. This information is important for SSH key management, especially in legacy environments.

Solution:
Edit the /etc/ssh/sshd_config file to set the LogLevel parameter to VERBOSE or INFO above any Include and Match entries as follows:

LogLevel VERBOSE
   - OR -
LogLevel INFO

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - sshd loglevel setting
The command script with multiple lines returned : 

port 22: loglevel INFO
Pass

-------------------------
PASSED - config file loglevel setting
No matching files were found","Edit the /etc/ssh/sshd_config file to set the LogLevel parameter to VERBOSE or INFO above any Include and Match entries as follows:

LogLevel VERBOSE
   - OR -
LogLevel INFO

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.15 Ensure sshd MACs are configured"" : [FAILED]

This variable limits the types of MAC algorithms that SSH can use during communication.

Notes:

 - Some organizations may have stricter requirements for approved MACs.
 - Ensure that MACs used are in compliance with site policy.
 - The only ""strong"" MACs currently FIPS 140 approved are:
 - HMAC-SHA1
 - HMAC-SHA2-256
 - HMAC-SHA2-384
 - HMAC-SHA2-512

MD5 and 96-bit MAC algorithms are considered weak and have been shown to increase exploitability in SSH downgrade attacks. Weak algorithms continue to have a great deal of attention as a weak spot that can be exploited with expanded computing power. An attacker that breaks the algorithm could take advantage of a MiTM position to decrypt the SSH tunnel and capture credentials and information.

Solution:
Edit the /etc/ssh/sshd_config file and add/modify the MACs line to contain a comma separated list of the site unapproved (weak) MACs preceded with a - above any Include entries:

Example:

MACs -hmac-md5,hmac-md5-96,hmac-ripemd160,hmac-sha1-96,umac-64@openssh.com,hmac-md5-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com

- IF - CVE-2023-48795 has not been reviewed and addressed, the following etm MACs should be added to the exclude list:

hmac-sha1-etm@openssh.com

,

hmac-sha2-256-etm@openssh.com

,

hmac-sha2-512-etm@openssh.com

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv7|16.5,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

port 22: macs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512
Fail","Edit the /etc/ssh/sshd_config file and add/modify the MACs line to contain a comma separated list of the site unapproved (weak) MACs preceded with a - above any Include entries:

Example:

MACs -hmac-md5,hmac-md5-96,hmac-ripemd160,hmac-sha1-96,umac-64@openssh.com,hmac-md5-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com

- IF - CVE-2023-48795 has not been reviewed and addressed, the following etm MACs should be added to the exclude list:

hmac-sha1-etm@openssh.com

,

hmac-sha2-256-etm@openssh.com

,

hmac-sha2-512-etm@openssh.com

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.16 Ensure sshd MaxAuthTries is configured"" : [FAILED]

The MaxAuthTries parameter specifies the maximum number of authentication attempts permitted per connection. When the login failure count reaches half the number, error messages will be written to the syslog file detailing the login failure.

Setting the MaxAuthTries parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. While the recommended setting is 4, set the number based on site policy.

Solution:
Edit the /etc/ssh/sshd_config file to set the MaxAuthTries parameter to 4 or less above any Include and Match entries as follows:

MaxAuthTries 4

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|16.13,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - sshd maxauthtries setting
The command script with multiple lines returned : 

port 22: maxauthtries 6
Fail

-------------------------
PASSED - config file maxauthtries setting
The file ""/etc/ssh/sshd_config"" does not contain ""^[\s]*(?i)MaxAuthTries(?-i)[\s]""","Edit the /etc/ssh/sshd_config file to set the MaxAuthTries parameter to 4 or less above any Include and Match entries as follows:

MaxAuthTries 4

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.17 Ensure sshd MaxSessions is configured"" : [PASSED]

The MaxSessions parameter specifies the maximum number of open sessions permitted from a given connection.

To protect a system from denial of service due to a large number of concurrent sessions, use the rate limiting function of MaxSessions to protect availability of sshd logins and prevent overwhelming the daemon.

Solution:
Edit the /etc/ssh/sshd_config file to set the MaxSessions parameter to 10 or less above any Include and Match entries as follows:

MaxSessions 10

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|AC-10,800-53r5|AC-10,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-10,LEVEL|1A,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - config file MaxSessions setting
The file ""/etc/ssh/sshd_config"" does not contain ""^[\s]*(?i)MaxSessions(?-i)[\s]""

-------------------------
PASSED - sshd maxsessions setting
The command script with multiple lines returned : 

port 22: maxsessions 10
Pass","Edit the /etc/ssh/sshd_config file to set the MaxSessions parameter to 10 or less above any Include and Match entries as follows:

MaxSessions 10

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.18 Ensure sshd MaxStartups is configured"" : [FAILED]

The MaxStartups parameter specifies the maximum number of concurrent unauthenticated connections to the SSH daemon.

To protect a system from denial of service due to a large number of pending authentication connection attempts, use the rate limiting function of MaxStartups to protect availability of sshd logins and prevent overwhelming the daemon.

Solution:
Edit the /etc/ssh/sshd_config file to set the MaxStartups parameter to 10:30:60 or more restrictive above any Include entries as follows:

MaxStartups 10:30:60

Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|AC-10,800-53r5|AC-10,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-10,LEVEL|1A,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

port 22: maxstartups 10:30:100
Fail","Edit the /etc/ssh/sshd_config file to set the MaxStartups parameter to 10:30:60 or more restrictive above any Include entries as follows:

MaxStartups 10:30:60

Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.19 Ensure sshd PermitEmptyPasswords is disabled"" : [PASSED]

The PermitEmptyPasswords parameter specifies if the SSH server allows login to accounts with empty password strings.

Disallowing remote shell access to accounts that have an empty password reduces the probability of unauthorized access to the system.

Solution:
Edit /etc/ssh/sshd_config and set the PermitEmptyPasswords parameter to no above any Include and Match entries as follows:

PermitEmptyPasswords no

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - config file permitemptypasswords setting
Compliant file(s):
      /etc/ssh/sshd_config - regex '^[\s]*(?i)PermitEmptyPasswords(?-i)[\s]' found - expect '^[\s]*(?i)PermitEmptyPasswords(?-i)[\s]+""?yes""?[\s]*$' not found in the following lines:
          61: PermitEmptyPasswords no
      /etc/ssh/sshd_config.d/30-anapaya-controller-PasswordAuthentication.conf - regex not found
      /etc/ssh/sshd_config.d/90-anapaya.conf - regex '^[\s]*(?i)PermitEmptyPasswords(?-i)[\s]' found - expect '^[\s]*(?i)PermitEmptyPasswords(?-i)[\s]+""?yes""?[\s]*$' not found in the following lines:
          2: PermitEmptyPasswords no

-------------------------
PASSED - sshd permitemptypasswords setting
The command script with multiple lines returned : 

port 22: permitemptypasswords no
Pass","Edit /etc/ssh/sshd_config and set the PermitEmptyPasswords parameter to no above any Include and Match entries as follows:

PermitEmptyPasswords no

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.2 Ensure permissions on SSH private host key files are configured"" : [PASSED]

An SSH private key is one of two files used in SSH public key authentication. In this authentication method, the possession of the private key is proof of identity. Only a private key that corresponds to a public key will be able to authenticate successfully. The private keys need to be stored and handled carefully, and no copies of the private key should be distributed.

If an unauthorized user obtains the private SSH host key file, the host could be impersonated

Solution:
Run the following script to set mode, ownership, and group on the private SSH host key files:

#!/usr/bin/env bash

{
   l_output="""" l_output2=""""
   l_ssh_group_name=""$(awk -F: '($1 ~ /^(ssh_keys|_?ssh)$/) {print $1}' /etc/group)""
   FILE_ACCESS_FIX()
   {
      while IFS=: read -r l_file_mode l_file_owner l_file_group; do
         echo ""File: \""$l_file\"" mode: \""$l_file_mode\"" owner \""$l_file_own\"" group \""$l_file_group\""""
         l_out2=""""
         [ ""l_file_group"" = ""$l_ssh_group_name"" ] &amp;&amp; l_pmask=""0137"" || l_pmask=""0177""
         l_maxperm=""$( printf '%o' $(( 0777 &amp; ~$l_pmask )) )""
         if [ $(( $l_file_mode &amp; $l_pmask )) -gt 0 ]; then
            l_out2=""$l_out2
 - Mode: \""$l_file_mode\"" should be mode: \""$l_maxperm\"" or more restrictive
 - updating to mode: :$l_maxperm\""""
            [ ""l_file_group"" = ""$l_ssh_group_name"" ] &amp;&amp; chmod u-x,g-wx,o-rwx ""$l_file"" || chmod u-x,go-rwx
         fi
         if [ ""$l_file_owner"" != ""root"" ]; then
            l_out2=""$l_out2
 - Owned by: \""$l_file_owner\"" should be owned by \""root\""
 - Changing ownership to \""root\""""
            chown root ""$l_file""
         fi
         if [[ ! ""$l_file_group"" =~ ($l_ssh_group_name|root) ]]; then
            [ -n ""$l_ssh_group_name"" ] &amp;&amp; l_new_group=""$l_ssh_group_name"" || l_new_group=""root""
            l_out2=""$l_out2
 - Owned by group \""$l_file_group\"" should be group owned by: \""$l_ssh_group_name\"" or \""root\""
 - Changing group ownership to \""$l_new_group\""""
            chgrp ""$l_new_group"" ""$l_file""
         fi
         if [ -n ""$l_out2"" ]; then
            l_output2=""$l_output2
 - File: \""$l_file\""$l_out2""
         else
            l_output=""$l_output
 - File: \""$l_file\""
 - Correct: mode: \""$l_file_mode\"", owner: \""$l_file_owner\"", and group owner: \""$l_file_group\"" configured""
         fi
      done < <(stat -Lc '%#a:%U:%G' ""$l_file"")
   }
   while IFS= read -r -d $'0' l_file; do
      if ssh-keygen -lf &amp;>/dev/null ""$l_file""; then
         file ""$l_file"" | grep -Piq -- 'bopensshh+([^#
r]+h+)?privateh+keyb' &amp;&amp; FILE_ACCESS_FIX
      fi
   done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null)
   if [ -z ""$l_output2"" ]; then
      echo -e ""
- No access changes required
""
   else
      echo -e ""
- Remediation results:
$l_output2
""
   fi
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **
 - * Correctly configured * :
 - File: ""/etc/ssh/ssh_host_ed25519_key""
  - Correct: mode: ""0600"", owner: ""root"", and group owner: ""root"" configured","Run the following script to set mode, ownership, and group on the private SSH host key files:

#!/usr/bin/env bash

{
   l_output="""" l_output2=""""
   l_ssh_group_name=""$(awk -F: '($1 ~ /^(ssh_keys|_?ssh)$/) {print $1}' /etc/group)""
   FILE_ACCESS_FIX()
   {
      while IFS=: read -r l_file_mode l_file_owner l_file_group; do
         echo ""File: \""$l_file\"" mode: \""$l_file_mode\"" owner \""$l_file_own\"" group \""$l_file_group\""""
         l_out2=""""
         [ ""l_file_group"" = ""$l_ssh_group_name"" ] &amp;&amp; l_pmask=""0137"" || l_pmask=""0177""
         l_maxperm=""$( printf '%o' $(( 0777 &amp; ~$l_pmask )) )""
         if [ $(( $l_file_mode &amp; $l_pmask )) -gt 0 ]; then
            l_out2=""$l_out2
 - Mode: \""$l_file_mode\"" should be mode: \""$l_maxperm\"" or more restrictive
 - updating to mode: :$l_maxperm\""""
            [ ""l_file_group"" = ""$l_ssh_group_name"" ] &amp;&amp; chmod u-x,g-wx,o-rwx ""$l_file"" || chmod u-x,go-rwx
         fi
         if [ ""$l_file_owner"" != ""root"" ]; then
            l_out2=""$l_out2
 - Owned by: \""$l_file_owner\"" should be owned by \""root\""
 - Changing ownership to \""root\""""
            chown root ""$l_file""
         fi
         if [[ ! ""$l_file_group"" =~ ($l_ssh_group_name|root) ]]; then
            [ -n ""$l_ssh_group_name"" ] &amp;&amp; l_new_group=""$l_ssh_group_name"" || l_new_group=""root""
            l_out2=""$l_out2
 - Owned by group \""$l_file_group\"" should be group owned by: \""$l_ssh_group_name\"" or \""root\""
 - Changing group ownership to \""$l_new_group\""""
            chgrp ""$l_new_group"" ""$l_file""
         fi
         if [ -n ""$l_out2"" ]; then
            l_output2=""$l_output2
 - File: \""$l_file\""$l_out2""
         else
            l_output=""$l_output
 - File: \""$l_file\""
 - Correct: mode: \""$l_file_mode\"", owner: \""$l_file_owner\"", and group owner: \""$l_file_group\"" configured""
         fi
      done < <(stat -Lc '%#a:%U:%G' ""$l_file"")
   }
   while IFS= read -r -d $'0' l_file; do
      if ssh-keygen -lf &amp;>/dev/null ""$l_file""; then
         file ""$l_file"" | grep -Piq -- 'bopensshh+([^#
r]+h+)?privateh+keyb' &amp;&amp; FILE_ACCESS_FIX
      fi
   done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null)
   if [ -z ""$l_output2"" ]; then
      echo -e ""
- No access changes required
""
   else
      echo -e ""
- Remediation results:
$l_output2
""
   fi
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.20 Ensure sshd PermitRootLogin is disabled"" : [FAILED]

The PermitRootLogin parameter specifies if the root user can log in using SSH. The default is prohibit-password

Disallowing root logins over SSH requires system admins to authenticate using their own individual account, then escalating to root This limits opportunity for non-repudiation and provides a clear audit trail in the event of a security incident.

Solution:
Edit the /etc/ssh/sshd_config file to set the PermitRootLogin parameter to no above any Include and Match entries as follows:

PermitRootLogin no

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - sshd -T permitrootlogin
The command script with multiple lines returned : 

port 22: permitrootlogin without-password
Fail

-------------------------
FAILED - config file permitrootlogin setting
Non-compliant file(s):
      /etc/ssh/sshd_config - regex '^[\s]*(?i)PermitRootLogin(?-i)[\s]' found - expect '^[\s]*(?i)PermitRootLogin(?-i)[\s]+""?no""?[\s]*$' not found in the following lines:
          36: PermitRootLogin without-password
      /etc/ssh/sshd_config.d/90-anapaya.conf - regex '^[\s]*(?i)PermitRootLogin(?-i)[\s]' found - expect '^[\s]*(?i)PermitRootLogin(?-i)[\s]+""?no""?[\s]*$' not found in the following lines:
          4: PermitRootLogin prohibit-password","Edit the /etc/ssh/sshd_config file to set the PermitRootLogin parameter to no above any Include and Match entries as follows:

PermitRootLogin no

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.21 Ensure sshd PermitUserEnvironment is disabled"" : [PASSED]

The PermitUserEnvironment option allows users to present environment options to the SSH daemon.

Permitting users the ability to set environment variables through the SSH daemon could potentially allow users to bypass security controls (e.g. setting an execution path that has SSH executing trojan'd programs)

Solution:
Edit the /etc/ssh/sshd_config file to set the PermitUserEnvironment parameter to no above any Include entries as follows:

PermitUserEnvironment no

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

port 22: permitemptypasswords no
Pass","Edit the /etc/ssh/sshd_config file to set the PermitUserEnvironment parameter to no above any Include entries as follows:

PermitUserEnvironment no

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.22 Ensure sshd UsePAM is enabled"" : [FAILED]

The UsePAM directive enables the Pluggable Authentication Module (PAM) interface. If set to yes this will enable PAM authentication using ChallengeResponseAuthentication and PasswordAuthentication directives in addition to PAM account and session module processing for all authentication types.

When usePAM is set to yes PAM runs through account and session types properly. This is important if you want to restrict access to services based off of IP, time or other factors of the account. Additionally, you can make sure users inherit certain environment variables on login or disallow access to the server

Solution:
Edit the /etc/ssh/sshd_config file to set the UsePAM parameter to yes above any Include entries as follows:

UsePAM yes

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

port 22: usepam no
Fail","Edit the /etc/ssh/sshd_config file to set the UsePAM parameter to yes above any Include entries as follows:

UsePAM yes

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.3 Ensure permissions on SSH public host key files are configured"" : [PASSED]

An SSH public key is one of two files used in SSH public key authentication. In this authentication method, a public key is a key that can be used for verifying digital signatures generated using a corresponding private key. Only a public key that corresponds to a private key will be able to authenticate successfully.

If a public host key file is modified by an unauthorized user, the SSH service may be compromised.

Solution:
Run the following script to set mode, ownership, and group on the public SSH host key files:

#!/usr/bin/env bash

{
   l_output="""" l_output2=""""
   l_pmask=""0133"" &amp;&amp; l_maxperm=""$( printf '%o' $(( 0777 &amp; ~$l_pmask )) )""
   FILE_ACCESS_FIX()
   {
      while IFS=: read -r l_file_mode l_file_owner l_file_group; do
         l_out2=""""
         if [ $(( $l_file_mode &amp; $l_pmask )) -gt 0 ]; then
            l_out2=""$l_out2
 - Mode: \""$l_file_mode\"" should be mode: \""$l_maxperm\"" or more restrictive
 - updating to mode: :$l_maxperm\""""
            chmod u-x,go-wx
         fi
         if [ ""$l_file_owner"" != ""root"" ]; then
            l_out2=""$l_out2
 - Owned by: \""$l_file_owner\"" should be owned by \""root\""
 - Changing ownership to \""root\""""
            chown root ""$l_file""
         fi
         if [ ""$l_file_group"" != ""root"" ]; then
            l_out2=""$l_out2
 - Owned by group \""$l_file_group\"" should be group owned by: \""root\""
 - Changing group ownership to \""root\""""
            chgrp root ""$l_file""
         fi
         if [ -n ""$l_out2"" ]; then
            l_output2=""$l_output2
 - File: \""$l_file\""$l_out2""
         else
            l_output=""$l_output
 - File: \""$l_file\""
 - Correct: mode: \""$l_file_mode\"", owner: \""$l_file_owner\"", and group owner: \""$l_file_group\"" configured""
         fi
      done < <(stat -Lc '%#a:%U:%G' ""$l_file"")
   }
   while IFS= read -r -d $'0' l_file; do
      if ssh-keygen -lf &amp;>/dev/null ""$l_file""; then
         file ""$l_file"" | grep -Piq -- 'bopensshh+([^#
r]+h+)?publich+keyb' &amp;&amp; FILE_ACCESS_FIX
      fi
   done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null)
   if [ -z ""$l_output2"" ]; then
      echo -e ""
- No access changes required
""
   else
      echo -e ""
- Remediation results:
$l_output2
""
   fi
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **
 - * Correctly configured * :
 - File: ""/etc/ssh/ssh_host_rsa_key.pub""
  - Correct: mode: ""0644"", owner: ""root"", and group owner: ""root"" configured
 - File: ""/etc/ssh/ssh_host_ecdsa_key.pub""
  - Correct: mode: ""0644"", owner: ""root"", and group owner: ""root"" configured
 - File: ""/etc/ssh/ssh_host_ed25519_key.pub""
  - Correct: mode: ""0644"", owner: ""root"", and group owner: ""root"" configured","Run the following script to set mode, ownership, and group on the public SSH host key files:

#!/usr/bin/env bash

{
   l_output="""" l_output2=""""
   l_pmask=""0133"" &amp;&amp; l_maxperm=""$( printf '%o' $(( 0777 &amp; ~$l_pmask )) )""
   FILE_ACCESS_FIX()
   {
      while IFS=: read -r l_file_mode l_file_owner l_file_group; do
         l_out2=""""
         if [ $(( $l_file_mode &amp; $l_pmask )) -gt 0 ]; then
            l_out2=""$l_out2
 - Mode: \""$l_file_mode\"" should be mode: \""$l_maxperm\"" or more restrictive
 - updating to mode: :$l_maxperm\""""
            chmod u-x,go-wx
         fi
         if [ ""$l_file_owner"" != ""root"" ]; then
            l_out2=""$l_out2
 - Owned by: \""$l_file_owner\"" should be owned by \""root\""
 - Changing ownership to \""root\""""
            chown root ""$l_file""
         fi
         if [ ""$l_file_group"" != ""root"" ]; then
            l_out2=""$l_out2
 - Owned by group \""$l_file_group\"" should be group owned by: \""root\""
 - Changing group ownership to \""root\""""
            chgrp root ""$l_file""
         fi
         if [ -n ""$l_out2"" ]; then
            l_output2=""$l_output2
 - File: \""$l_file\""$l_out2""
         else
            l_output=""$l_output
 - File: \""$l_file\""
 - Correct: mode: \""$l_file_mode\"", owner: \""$l_file_owner\"", and group owner: \""$l_file_group\"" configured""
         fi
      done < <(stat -Lc '%#a:%U:%G' ""$l_file"")
   }
   while IFS= read -r -d $'0' l_file; do
      if ssh-keygen -lf &amp;>/dev/null ""$l_file""; then
         file ""$l_file"" | grep -Piq -- 'bopensshh+([^#
r]+h+)?publich+keyb' &amp;&amp; FILE_ACCESS_FIX
      fi
   done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null)
   if [ -z ""$l_output2"" ]; then
      echo -e ""
- No access changes required
""
   else
      echo -e ""
- Remediation results:
$l_output2
""
   fi
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.4 Ensure sshd access is configured"" : [FAILED]

There are several options available to limit which users and group can access the system via SSH. It is recommended that at least one of the following options be leveraged:

 - AllowUsers :
 - The AllowUsers variable gives the system administrator the option of allowing specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by only allowing the allowed users to log in from a particular host, the entry can be specified in the form of user@host.

 - AllowGroups :
 - The AllowGroups variable gives the system administrator the option of allowing specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.

 - DenyUsers :
 - The DenyUsers variable gives the system administrator the option of denying specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by specifically denying a user's access from a particular host, the entry can be specified in the form of user@host.

 - DenyGroups :
 - The DenyGroups variable gives the system administrator the option of denying specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.

Restricting which users can remotely access the system via SSH will help ensure that only authorized users access the system.

Solution:
Edit the /etc/ssh/sshd_config file to set one or more of the parameters above any Include and Match set statements as follows:

AllowUsers <userlist>
 - AND/OR -
AllowGroups <grouplist>

Note:

 - First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in aconf file in a Include directory.
 - It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user or group and forget to add it to the deny list.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|4.3,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

port 22: 
Fail","Edit the /etc/ssh/sshd_config file to set one or more of the parameters above any Include and Match set statements as follows:

AllowUsers <userlist>
 - AND/OR -
AllowGroups <grouplist>

Note:

 - First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in aconf file in a Include directory.
 - It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user or group and forget to add it to the deny list.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.5 Ensure sshd Banner is configured"" : [FAILED]

The Banner parameter specifies a file whose contents must be sent to the remote user before authentication is permitted. By default, no banner is displayed.

Banners are used to warn connecting users of the particular site's policy regarding connection. Presenting a warning message prior to the normal user login may assist the prosecution of trespassers on the computer system.

Solution:
Edit the /etc/ssh/sshd_config file to set the Banner parameter above any Include and Match entries as follows:

Banner /etc/issue.net

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.9,800-53|AC-8,800-53r5|AC-8,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - sshd_config banner
The file ""/etc/ssh/sshd_config"" does not contain ""(?i)^\h*Banner\h+""?none\b""

-------------------------
FAILED - sshd -T banner
The command script with multiple lines returned : 

port 22: banner none
Fail","Edit the /etc/ssh/sshd_config file to set the Banner parameter above any Include and Match entries as follows:

Banner /etc/issue.net

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.6 Ensure sshd Ciphers are configured"" : [PASSED]

This variable limits the ciphers that SSH can use during communication.

Notes:

 - Some organizations may have stricter requirements for approved ciphers.
 - Ensure that ciphers used are in compliance with site policy.
 - The only ""strong"" ciphers currently FIPS 140 compliant are:
 -

aes256-gcm@openssh.com

 -

aes128-gcm@openssh.com

 - aes256-ctr
 - aes192-ctr
 - aes128-ctr

Weak ciphers that are used for authentication to the cryptographic module cannot be relied upon to provide confidentiality or integrity, and system data may be compromised.

 - The Triple DES ciphers, as used in SSH, have a birthday bound of approximately four billion blocks, which makes it easier for remote attackers to obtain clear text data via a birthday attack against a long-duration encrypted session, aka a ""Sweet32"" attack.
 - Error handling in the SSH protocol; Client and Server, when using a block cipher algorithm in Cipher Block Chaining (CBC) mode, makes it easier for remote attackers to recover certain plain text data from an arbitrary block of cipher text in an SSH session via unknown vectors.

Solution:
Edit the /etc/ssh/sshd_config file and add/modify the Ciphers line to contain a comma separated list of the site unapproved (weak) Ciphers preceded with a - above any Include entries:

Example:

Ciphers -3des-cbc,aes128-cbc,aes192-cbc,aes256-cbc,chacha20-poly1305@openssh.com

- IF - CVE-2023-48795 has been addressed, and it meets local site policy, chacha20-poly1305@openssh.com may be removed from the list of excluded ciphers.

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

awk: cmd. line:1: warning: escape sequence `\.' treated as plain `.'
port 22: ciphers chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com
Pass","Edit the /etc/ssh/sshd_config file and add/modify the Ciphers line to contain a comma separated list of the site unapproved (weak) Ciphers preceded with a - above any Include entries:

Example:

Ciphers -3des-cbc,aes128-cbc,aes192-cbc,aes256-cbc,chacha20-poly1305@openssh.com

- IF - CVE-2023-48795 has been addressed, and it meets local site policy, chacha20-poly1305@openssh.com may be removed from the list of excluded ciphers.

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.7 Ensure sshd ClientAliveInterval and ClientAliveCountMax are configured"" : [FAILED]

Note: To clarify, the two settings described below are only meant for idle connections from a protocol perspective and are not meant to check if the user is active or not. An idle user does not mean an idle connection. SSH does not and never had, intentionally, the capability to drop idle users. In SSH versions before 8.2p1 there was a bug that caused these values to behave in such a manner that they were abused to disconnect idle users. This bug has been resolved in 8.2p1 and thus it can no longer be abused disconnect idle users.

The two options ClientAliveInterval and ClientAliveCountMax control the timeout of SSH sessions. Taken directly from man 5 sshd_config :

 -

ClientAliveInterval Sets a timeout interval in seconds after which if no data has been received from the client, sshd(8) will send a message through the encrypted channel to request a response from the client. The default is 0, indicating that these messages will not be sent to the client.

 -

ClientAliveCountMax Sets the number of client alive messages which may be sent without sshd(8) receiving any messages back from the client. If this threshold is reached while client alive messages are being sent, sshd will disconnect the client, terminating the session. It is important to note that the use of client alive messages is very different from TCPKeepAlive. The client alive messages are sent through the encrypted channel and therefore will not be spoofable. The TCP keepalive option en-abled by TCPKeepAlive is spoofable. The client alive mechanism is valuable when the client or server depend on knowing when a connection has become unresponsive.The default value is 3. If ClientAliveInterval is set to 15, and ClientAliveCountMax is left at the default, unresponsive SSH clients will be disconnected after approximately 45 seconds. Setting a zero ClientAliveCountMax disables connection termination.

In order to prevent resource exhaustion, appropriate values should be set for both ClientAliveInterval and ClientAliveCountMax Specifically, looking at the source code, ClientAliveCountMax must be greater than zero in order to utilize the ability of SSH to drop idle connections. If connections are allowed to stay open indefinitely, this can potentially be used as a DDOS attack or simple resource exhaustion could occur over unreliable networks.

The example set here is a 45 second timeout. Consult your site policy for network timeouts and apply as appropriate.

Solution:
Edit the /etc/ssh/sshd_config file to set the ClientAliveInterval and ClientAliveCountMax parameters above any Include and Match entries according to site policy.

Example:

ClientAliveInterval 15
ClientAliveCountMax 3

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.11,800-53|AC-12,800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,LEVEL|1A,NIAv2|NS49

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - ClientAliveCountMax is greater than 0
The command script with multiple lines returned : 

port 22: clientalivecountmax 3
Pass

-------------------------
FAILED - ClientAliveInterval is greater than 0
The command script with multiple lines returned : 

port 22: clientaliveinterval 0
Fail

-------------------------
PASSED - sshd_config ClientAliveCountMax
The file ""/etc/ssh/sshd_config"" does not contain ""(?i)^\h*ClientAliveCountMax\h+""?0\b""

-------------------------
PASSED - sshd_config ClientAliveInterval
The file ""/etc/ssh/sshd_config"" does not contain ""(?i)^\h*ClientAliveInterval\h+""?0\b""","Edit the /etc/ssh/sshd_config file to set the ClientAliveInterval and ClientAliveCountMax parameters above any Include and Match entries according to site policy.

Example:

ClientAliveInterval 15
ClientAliveCountMax 3

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.2.1 Ensure sudo is installed"" : [PASSED]

sudo allows a permitted user to execute a command as the superuser or another user, as specified by the security policy. The invoking user's real (not effective) user ID is used to determine the user name with which to query the security policy.

sudo supports a plug-in architecture for security policies and input/output logging. Third parties can develop and distribute their own policy and I/O logging plug-ins to work seamlessly with the sudo front end. The default security policy is sudoers which is configured via the file /etc/sudoers and any entries in /etc/sudoers.d

The security policy determines what privileges, if any, a user has to run sudo The policy may require that users authenticate themselves with a password or another authentication mechanism. If authentication is required, sudo will exit if the user's password is not entered within a configurable time limit. This limit is policy-specific.

Solution:
First determine is LDAP functionality is required. If so, then install sudo-ldap else install sudo

Example:

# apt install sudo

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /usr/bin/dpkg -s sudo sudo-ldap 2>&1
expect: install[\s]+ok[\s]+installed

Actual Value:
The command '/usr/bin/dpkg -s sudo sudo-ldap 2>&1' returned : 

dpkg-query: package 'sudo-ldap' is not installed and no information is available
Package: sudo
Status: install ok installed
Priority: important
Section: admin
Installed-Size: 2508
Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
Architecture: amd64
Version: 1.9.9-1ubuntu2.4
Replaces: sudo-ldap
Depends: libaudit1 (>= 1:2.2.1), libc6 (>= 2.34), libpam0g (>= 0.99.7.1), libselinux1 (>= 3.1~), zlib1g (>= 1:1.2.0.2), libpam-modules, lsb-base
Conflicts: sudo-ldap
Conffiles:
 /etc/pam.d/sudo b3a1b916bf62a2cc3280f7f9b94844ff
 /etc/pam.d/sudo-i ce9740f66cedf7716e26950abfe556fa
 /etc/sudo.conf efb56b1b282fa4cad1b6c0f05137bb08
 /etc/sudo_logsrvd.conf 09ceda2c98f43e0fbb79bed7c82dba45
 /etc/sudoers 791aa979aa5e859f9ba0112a9512158c
 /etc/sudoers.d/README 44c75ff004a18eeefdde4c998914d6d3
Description: Provide limited super user privileges to specific users
 Sudo is a program designed to allow a sysadmin to give limited root
 privileges to users and log root activity.  The basic philosophy is to give
 as few privileges as possible but still allow people to get their work done.
 .
 This version is built with minimal shared library dependencies, use the
 sudo-ldap package instead if you need LDAP support for sudoers.
Homepage: https://www.sudo.ws/
Original-Maintainer: Sudo Maintainers <sudo@packages.debian.org>

Use dpkg --info (= dpkg-deb --info) to examine archive files.","First determine is LDAP functionality is required. If so, then install sudo-ldap else install sudo

Example:

# apt install sudo","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.2.2 Ensure sudo commands use pty"" : [PASSED]

sudo can be configured to run only from a pseudo terminal ( pseudo-pty ).

Attackers can run a malicious program using sudo which would fork a background process that remains even when the main program has finished executing.

Solution:
Edit the file /etc/sudoers with visudo or a file in /etc/sudoers.d/ with visudo -f <PATH TO FILE> and add the following line:

Defaults use_pty

Edit the file /etc/sudoers with visudo and any files in /etc/sudoers.d/ with visudo -f <PATH TO FILE> and remove any occurrence of !use_pty

Note:

 - sudo will read each file in /etc/sudoers.d skipping file names that end in ~ or contain a character to avoid causing problems with package manager or editor temporary/backup files.
 - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second
 - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second
 - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.

Impact:

WARNING: Editing the sudo configuration incorrectly can cause sudo to stop functioning. Always use visudo to modify sudo configuration files.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - /etc/sudoers use_pty
The command '/bin/grep -rPi -- '^\h*Defaults\h+([^#\n\r]+,)?use_pty(,\h*\h+\h*)*\h*(#.*)?$' /etc/sudoers*' returned : 

/etc/sudoers.dpkg-dist:Defaults	use_pty

-------------------------
PASSED - /etc/sudoers !use_pty
The command '/bin/grep -rPi -- '^\h*Defaults\h+([^#\n\r]+,)?!use_pty(,\h*\h+\h*)*\h*(#.*)?$' /etc/sudoers* | /bin/awk '{print} END {if (NR == 0) print ""pass"" ; else print ""fail""}'' returned : 

pass","Edit the file /etc/sudoers with visudo or a file in /etc/sudoers.d/ with visudo -f <PATH TO FILE> and add the following line:

Defaults use_pty

Edit the file /etc/sudoers with visudo and any files in /etc/sudoers.d/ with visudo -f <PATH TO FILE> and remove any occurrence of !use_pty

Note:

 - sudo will read each file in /etc/sudoers.d skipping file names that end in ~ or contain a character to avoid causing problems with package manager or editor temporary/backup files.
 - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second
 - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second
 - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.

Impact:

WARNING: Editing the sudo configuration incorrectly can cause sudo to stop functioning. Always use visudo to modify sudo configuration files.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.2.3 Ensure sudo log file exists"" : [FAILED]

sudo can use a custom log file

A sudo log file simplifies auditing of sudo commands

Solution:
Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo or visudo -f <PATH TO FILE> and add the following line:

Example:

Defaults logfile=""/var/log/sudo.log""

Note:

 - sudo will read each file in /etc/sudoers.d skipping file names that end in ~ or contain a character to avoid causing problems with package manager or editor temporary/backup files.
 - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second
 - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second
 - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.

Impact:

WARNING: Editing the sudo configuration incorrectly can cause sudo to stop functioning. Always use visudo to modify sudo configuration files.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
expect: (?i)^\h*Defaults\h+([^#]+,\h*)?logfile\h*=\h*(\""|\')?\H+(\""|\')?(,\h*\H+\h*)*\h*(#.*)?$
file: /etc/sudoers /etc/sudoers.d/*
min_occurrences: 1
regex: (?i)^\h*Defaults\h+([^#]+,\h*)?logfile\h*=\h*(\""|\')?\H+(\""|\')?(,\h*\H+\h*)*\h*(#.*)?$
string_required: NO

Actual Value:
No matching files were found
Less than 1 matches of regex found","Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo or visudo -f <PATH TO FILE> and add the following line:

Example:

Defaults logfile=""/var/log/sudo.log""

Note:

 - sudo will read each file in /etc/sudoers.d skipping file names that end in ~ or contain a character to avoid causing problems with package manager or editor temporary/backup files.
 - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second
 - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second
 - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.

Impact:

WARNING: Editing the sudo configuration incorrectly can cause sudo to stop functioning. Always use visudo to modify sudo configuration files.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.2.5 Ensure re-authentication for privilege escalation is not disabled globally"" : [PASSED]

The operating system must be configured so that users must re-authenticate for privilege escalation.

Without re-authentication, users may access resources or perform tasks for which they do not have authorization.

When operating systems provide the capability to escalate a functional capability, it is critical the user re-authenticate.

Solution:
Configure the operating system to require users to reauthenticate for privilege escalation.

Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit the relevant sudoers file.

Remove any occurrences of !authenticate tags in the file(s).

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: ^[^#].*!authenticate
file: /etc/sudoers /etc/sudoers.d/*
regex: ^[^#].*!authenticate

Actual Value:
The file ""/etc/sudoers"" does not contain ""^[^#].*!authenticate""","Configure the operating system to require users to reauthenticate for privilege escalation.

Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit the relevant sudoers file.

Remove any occurrences of !authenticate tags in the file(s).","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.2.6 Ensure sudo authentication timeout is configured correctly"" : [PASSED]

sudo caches used credentials for a default of 15 minutes. This is for ease of use when there are multiple administrative tasks to perform. The timeout can be modified to suit local security policies.

This default is distribution specific. See audit section for further information.

Setting a timeout value reduces the window of opportunity for unauthorized privileged access to another user.

Solution:
If the currently configured timeout is larger than 15 minutes, edit the file listed in the audit section with visudo -f <PATH TO FILE> and modify the entry timestamp_timeout= to 15 minutes or less as per your site policy. The value is in minutes. This particular entry may appear on it's own, or on the same line as env_reset See the following two examples:

Defaults env_reset, timestamp_timeout=15 Defaults timestamp_timeout=15
Defaults env_reset

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
PASSED

Actual Value:
One of the following must pass to satisfy this requirement:

-------------------------
PASSED - sudo timeout
The command '/bin/sudo -V | /bin/grep 'Authentication timestamp timeout:'' returned : 

Authentication timestamp timeout: 15.0 minutes

-------------------------
PASSED - On disk timestamp_timeout
No matching files were found","If the currently configured timeout is larger than 15 minutes, edit the file listed in the audit section with visudo -f <PATH TO FILE> and modify the entry timestamp_timeout= to 15 minutes or less as per your site policy. The value is in minutes. This particular entry may appear on it's own, or on the same line as env_reset See the following two examples:

Defaults env_reset, timestamp_timeout=15 Defaults timestamp_timeout=15
Defaults env_reset","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.2.7 Ensure access to the su command is restricted"" : [FAILED]

The su command allows a user to run a command or shell as another user. The program has been superseded by sudo which allows for more granular control over privileged access. Normally, the su command can be executed by any user. By uncommenting the pam_wheel.so statement in /etc/pam.d/su the su command will only allow users in a specific groups to execute su This group should be empty to reinforce the use of sudo for privileged access.

Restricting the use of su and using sudo in its place, provides system administrators better control of the escalation of user privileges to execute privileged commands. The sudo utility also provides a better logging and audit mechanism, as it can log each command executed via sudo whereas su can only record that a user executed the su program.

Solution:
Create an empty group that will be specified for use of the su command. The group should be named according to site policy.

Example:

# groupadd sugroup

Add the following line to the /etc/pam.d/su file, specifying the empty group:

auth required pam_wheel.so use_uid group=sugroup

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: sugroup=$(/bin/grep -Pi '^\h*auth\h+(?:required|requisite)\h+pam_wheel\.so\h+(?:[^#\n\r]+\h+)?((?!\2)(use_uid\b|group=\H+\b))\h+(?:[^#\n\r]+\h+)?((?!\1)(use_uid\b|group=\H+\b))(\h+.*)?$' /etc/pam.d/su | /bin/awk 'BEGIN { FS = ""=""} ; { print $2 }'); if [ ! -z $sugroup ]; then /bin/grep $sugroup /etc/group | /bin/awk 'BEGIN { FS = "":"" }; { print $4 }' | /bin/awk '{print} END {if (NF == 0) print ""pass - group empty""; else print ""fail - group not empty""}'; else echo ""fail - sugroup not found in /etc/pam.d/su""; fi
expect: pass - group empty

Actual Value:
The command 'sugroup=$(/bin/grep -Pi '^\h*auth\h+(?:required|requisite)\h+pam_wheel\.so\h+(?:[^#\n\r]+\h+)?((?!\2)(use_uid\b|group=\H+\b))\h+(?:[^#\n\r]+\h+)?((?!\1)(use_uid\b|group=\H+\b))(\h+.*)?$' /etc/pam.d/su | /bin/awk 'BEGIN { FS = ""=""} ; { print $2 }'); if [ ! -z $sugroup ]; then /bin/grep $sugroup /etc/group | /bin/awk 'BEGIN { FS = "":"" }; { print $4 }' | /bin/awk '{print} END {if (NF == 0) print ""pass - group empty""; else print ""fail - group not empty""}'; else echo ""fail - sugroup not found in /etc/pam.d/su""; fi' returned : 

fail - sugroup not found in /etc/pam.d/su","Create an empty group that will be specified for use of the su command. The group should be named according to site policy.

Example:

# groupadd sugroup

Add the following line to the /etc/pam.d/su file, specifying the empty group:

auth required pam_wheel.so use_uid group=sugroup","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.1.1 Ensure latest version of pam is installed"" : [FAILED]

Updated versions of PAM include additional functionality

To ensure the system has full functionality and access to the options covered by this Benchmark the latest version of libpam-runtime should be installed on the system

Solution:
- IF - the version of libpam-runtime on the system is less that version 1.5.2-6 :

Run the following command to update to the latest version of PAM :

# apt upgrade libpam-runtime

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
cmd: /bin/dpkg -s libpam-runtime | /bin/grep -E '(Status:|Version)'
expect: ^Version: ([1-9]|[1-9][0-9])\.([5-9]|[1-9][0-9])\.([2-9]|[1-9][0-9])-([6-9]|[1-9][0-9])

Actual Value:
The command '/bin/dpkg -s libpam-runtime | /bin/grep -E '(Status:|Version)'' returned : 

Status: install ok installed
Version: 1.4.0-11ubuntu2.4","- IF - the version of libpam-runtime on the system is less that version 1.5.2-6 :

Run the following command to update to the latest version of PAM :

# apt upgrade libpam-runtime","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.1.2 Ensure libpam-modules is installed"" : [FAILED]

Pluggable Authentication Modules for PAM

To ensure the system has full functionality and access to the PAM options covered by this Benchmark

Solution:
- IF - the version of libpam-modules on the system is less that version 1.5.2-6 :

Run the following command to update to the latest version of PAM :

# apt upgrade libpam-modules

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
cmd: /bin/dpkg -s libpam-modules | /bin/grep -E '(Status:|Version)'
expect: ^Version: (1\.5\.([2-9]|[1-9][0-9])-([6-9]|[1-9][0-9])|1\.([6-9]|[1-9][0-9])\.|[2-9]\.|[1-9][0-9]\.)

Actual Value:
The command '/bin/dpkg -s libpam-modules | /bin/grep -E '(Status:|Version)'' returned : 

Status: install ok installed
Version: 1.4.0-11ubuntu2.4","- IF - the version of libpam-modules on the system is less that version 1.5.2-6 :

Run the following command to update to the latest version of PAM :

# apt upgrade libpam-modules","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.1.3 Ensure libpam-pwquality is installed"" : [FAILED]

libpwquality provides common functions for password quality checking and scoring them based on their apparent randomness. The library also provides a function for generating random passwords with good pronounceability.

This module can be plugged into the password stack of a given service to provide some plug-in strength-checking for passwords. The code was originally based on pam_cracklib module and the module is backwards compatible with its options.

Strong passwords reduce the risk of systems being hacked through brute force methods.

Solution:
Run the following command to install libpam-pwquality :

# apt install libpam-pwquality

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
cmd: /bin/dpkg -s libpam-pwquality 2>&1 | /bin/grep -E '(Status:|not installed)'
expect: ^Status: install ok

Actual Value:
The command '/bin/dpkg -s libpam-pwquality 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

dpkg-query: package 'libpam-pwquality' is not installed and no information is available","Run the following command to install libpam-pwquality :

# apt install libpam-pwquality","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.2.1 Ensure pam_unix module is enabled"" : [PASSED]

pam_unix is the standard Unix authentication module. It uses standard calls from the system's libraries to retrieve and set account information as well as authentication. Usually this is obtained from the /etc/passwd and if shadow is enabled, the /etc/shadow file as well.

The account component performs the task of establishing the status of the user's account and password based on the following shadow elements: expire last_change max_change min_change warn_change In the case of the latter, it may offer advice to the user on changing their password or, through the PAM_AUTHTOKEN_REQD return, delay giving service to the user until they have established a new password. The entries listed above are documented in the shadow(5) manual page. Should the user's record not contain one or more of these entries, the corresponding shadow check is not performed.

The authentication component performs the task of checking the users credentials (password). The default action of this module is to not permit the user access to a service if their official password is blank.

The system should only provide access after performing authentication of a user.

Solution:
Run the following command to enable the pam_unix module:

# pam-auth-update --enable unix

Note: If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_faillock module, enable that module instead

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - common-password pam_unix.so
Compliant file(s):
      /etc/pam.d/common-password - regex '^\h*password\h+[^#\n\r]+\h+pam_unix\.so\b' found - expect '^\h*password\h+[^#\n\r]+\h+pam_unix\.so\b' found in the following lines:
          25: password	[success=1 default=ignore]	pam_unix.so obscure yescrypt

-------------------------
PASSED - common-account pam_unix.so
Compliant file(s):
      /etc/pam.d/common-account - regex '^\h*account\h+[^#\n\r]+\h+pam_unix\.so\b' found - expect '^\h*account\h+[^#\n\r]+\h+pam_unix\.so\b' found in the following lines:
          17: account	[success=1 new_authtok_reqd=done default=ignore]	pam_unix.so

-------------------------
PASSED - common-session pam_unix.so
Compliant file(s):
      /etc/pam.d/common-session - regex '^\h*session\h+[^#\n\r]+\h+pam_unix\.so\b' found - expect '^\h*session\h+[^#\n\r]+\h+pam_unix\.so\b' found in the following lines:
          29: session	required	pam_unix.so

-------------------------
PASSED - common-auth pam_unix.so
Compliant file(s):
      /etc/pam.d/common-auth - regex '^\h*auth\h+[^#\n\r]+\h+pam_unix\.so\b' found - expect '^\h*auth\h+[^#\n\r]+\h+pam_unix\.so\b' found in the following lines:
          17: auth	[success=1 default=ignore]	pam_unix.so nullok","Run the following command to enable the pam_unix module:

# pam-auth-update --enable unix

Note: If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_faillock module, enable that module instead","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.2.2 Ensure pam_faillock module is enabled"" : [FAILED]

The pam_faillock.so module maintains a list of failed authentication attempts per user during a specified interval and locks the account in case there were more than the configured number of consecutive failed authentications (this is defined by the deny parameter in the faillock configuration). It stores the failure records into per-user files in the tally directory.

Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.

Solution:
Create two pam-auth-update profiles in /usr/share/pam-configs/ :

Create the first profile with the following lines:

Name: Enable pam_faillock to deny access
Default: yes
Priority: 0
Auth-Type: Primary
Auth:
        [default=die] pam_faillock.so authfail

Example:

#!/usr/bin/env bash

{
   arr=('Name: Enable pam_faillock to deny access' 'Default: yes' 'Priority: 0' 'Auth-Type: Primary' 'Auth:' ' [default=die] pam_faillock.so authfail')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/faillock
}

Create the second profile with the following lines:

Name: Notify of failed login attempts and reset count upon success
Default: yes
Priority: 1024
Auth-Type: Primary
Auth:
        requisite pam_faillock.so preauth
Account-Type: Primary
Account:
        required pam_faillock.so

Example:

#!/usr/bin/env bash

{
   arr=('Name: Notify of failed login attempts and reset count upon success' 'Default: yes' 'Priority: 1024' 'Auth-Type: Primary' 'Auth:' ' requisite pam_faillock.so preauth' 'Account-Type: Primary' 'Account:' ' required pam_faillock.so')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/faillock_notify
}

Run the following command to update the common-auth and common-account PAM files with the new profiles:

# pam-auth-update --enable <profile_filename>

Example:

# pam-auth-update --enable faillock
# pam-auth-update --enable faillock_notify

Note:

 - The name used for the file must be used in the pam-auth-update --enable command
 - The Name: line should be easily recognizable and understood
 - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files
 - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_faillock module, enable that module instead

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.7,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),LEVEL|1A,NESA|M1.2.2,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - account pam_faillock.so
The file ""/etc/pam.d/common-account"" does not contain ""(?i)^\h*account\h+([^#\n\r]+)\h+pam_faillock\.so\b""

-------------------------
FAILED - authfail
The file ""/etc/pam.d/common-auth"" does not contain ""(?i)^\h*auth\h+([^#\n\r]+)\h+pam_faillock\.so\h+([^#\n\r]+\h+)?authfail\b""

-------------------------
FAILED - preauth
The file ""/etc/pam.d/common-auth"" does not contain ""(?i)^\h*auth\h+([^#\n\r]+)\h+pam_faillock\.so\h+([^#\n\r]+\h+)?preauth\b""","Create two pam-auth-update profiles in /usr/share/pam-configs/ :

Create the first profile with the following lines:

Name: Enable pam_faillock to deny access
Default: yes
Priority: 0
Auth-Type: Primary
Auth:
        [default=die] pam_faillock.so authfail

Example:

#!/usr/bin/env bash

{
   arr=('Name: Enable pam_faillock to deny access' 'Default: yes' 'Priority: 0' 'Auth-Type: Primary' 'Auth:' ' [default=die] pam_faillock.so authfail')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/faillock
}

Create the second profile with the following lines:

Name: Notify of failed login attempts and reset count upon success
Default: yes
Priority: 1024
Auth-Type: Primary
Auth:
        requisite pam_faillock.so preauth
Account-Type: Primary
Account:
        required pam_faillock.so

Example:

#!/usr/bin/env bash

{
   arr=('Name: Notify of failed login attempts and reset count upon success' 'Default: yes' 'Priority: 1024' 'Auth-Type: Primary' 'Auth:' ' requisite pam_faillock.so preauth' 'Account-Type: Primary' 'Account:' ' required pam_faillock.so')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/faillock_notify
}

Run the following command to update the common-auth and common-account PAM files with the new profiles:

# pam-auth-update --enable <profile_filename>

Example:

# pam-auth-update --enable faillock
# pam-auth-update --enable faillock_notify

Note:

 - The name used for the file must be used in the pam-auth-update --enable command
 - The Name: line should be easily recognizable and understood
 - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files
 - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_faillock module, enable that module instead","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.2.3 Ensure pam_pwquality module is enabled"" : [FAILED]

The pam_pwquality.so module performs password quality checking. This module can be plugged into the password stack of a given service to provide strength-checking for passwords. The code was originally based on pam_cracklib module and the module is backwards compatible with its options.

The action of this module is to prompt the user for a password and check its strength against a system dictionary and a set of rules for identifying poor choices.

The first action is to prompt for a single password, check its strength and then, if it is considered strong, prompt for the password a second time (to verify that it was typed correctly on the first occasion). All being well, the password is passed on to subsequent modules to be installed as the new authentication token.

Use of a unique, complex passwords helps to increase the time and resources required to compromise the password.

Solution:
Run the following script to verify the pam_pwquality.so line exists in a pam-auth-update profile:

# grep -P -- 'bpam_pwquality.sob' /usr/share/pam-configs/*

Output should be similar to:

/usr/share/pam-configs/pwquality: requisite pam_pwquality.so retry=3
/usr/share/pam-configs/pwquality: requisite pam_pwquality.so retry=3

- IF - similar output is returned:

Run the following command to update /etc/pam.d/common-password with the returned profile:

# pam-auth-update --enable {PROFILE_NAME}

Example:

# pam-auth-update pwquality

- IF - similar output is NOT returned:

Run the following script to create a pam-auth-update profile for pwquality :

!#/usr/bin/env bash

{
   arr=('Name: Pwquality password strength checking' 'Default: yes' 'Priority: 1024' 'Conflicts: cracklib' 'Password-Type: Primary' 'Password:' ' requisite pam_pwquality.so retry=3' 'Password-Initial:' 'requisite')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/pwquality
}

Run the following command to update /etc/pam.d/common-password with the pwquality profile:

# pam-auth-update --enable pwquality

Note:

 - The name used for the file must be used in the pam-auth-update --enable command
 - The Name: line should be easily recognizable and understood
 - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files
 - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_pwquality module, enable that module instead

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
expect: (?i)^\h*password\h+(requisite|required)\h+pam_pwquality\.so\b
file: /etc/pam.d/common-password
regex: (?i)^\h*password\h+(requisite|required)\h+pam_pwquality\.so\b

Actual Value:
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+(requisite|required)\h+pam_pwquality\.so\b""","Run the following script to verify the pam_pwquality.so line exists in a pam-auth-update profile:

# grep -P -- 'bpam_pwquality.sob' /usr/share/pam-configs/*

Output should be similar to:

/usr/share/pam-configs/pwquality: requisite pam_pwquality.so retry=3
/usr/share/pam-configs/pwquality: requisite pam_pwquality.so retry=3

- IF - similar output is returned:

Run the following command to update /etc/pam.d/common-password with the returned profile:

# pam-auth-update --enable {PROFILE_NAME}

Example:

# pam-auth-update pwquality

- IF - similar output is NOT returned:

Run the following script to create a pam-auth-update profile for pwquality :

!#/usr/bin/env bash

{
   arr=('Name: Pwquality password strength checking' 'Default: yes' 'Priority: 1024' 'Conflicts: cracklib' 'Password-Type: Primary' 'Password:' ' requisite pam_pwquality.so retry=3' 'Password-Initial:' 'requisite')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/pwquality
}

Run the following command to update /etc/pam.d/common-password with the pwquality profile:

# pam-auth-update --enable pwquality

Note:

 - The name used for the file must be used in the pam-auth-update --enable command
 - The Name: line should be easily recognizable and understood
 - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files
 - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_pwquality module, enable that module instead","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.2.4 Ensure pam_pwhistory module is enabled"" : [FAILED]

The pam_pwhistory.so module saves the last passwords for each user in order to force password change history and keep the user from alternating between the same password too frequently.

This module does not work together with kerberos. In general, it does not make much sense to use this module in conjunction with NIS or LDAP since the old passwords are stored on the local machine and are not available on another machine for password history checking.

Use of a unique, complex passwords helps to increase the time and resources required to compromise the password.

Solution:
Run the following script to verify the pam_pwquality.so line exists in a pam-auth-update profile:

# grep -P -- 'bpam_pwhistory.sob' /usr/share/pam-configs/*

Output should be similar to:

/usr/share/pam-configs/pwhistory: requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok

- IF - similar output is returned:

Run the following command to update /etc/pam.d/common-password with the returned profile:

# pam-auth-update --enable {PROFILE_NAME}

Example:

# pam-auth-update pwhistory

- IF - similar output is NOT returned:

Run the following script to create a pam-auth-update profile for pwhistory :

!#/usr/bin/env bash

{
   arr=('Name: pwhistory password history checking' 'Default: yes' 'Priority: 1024' 'Password-Type: Primary' 'Password:' ' requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/pwhistory
}

Run the following command to update /etc/pam.d/common-password with the pwhistory profile:

# pam-auth-update --enable pwhistory

Note:

 - The name used for the file must be used in the pam-auth-update --enable command
 - The Name: line should be easily recognizable and understood
 - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files
 - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_pwhistory module, enable that module instead

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
expect: (?i)^\h*password\h+(requisite|required)\h+pam_pwhistory\.so\b
file: /etc/pam.d/common-password
regex: (?i)^\h*password\h+(requisite|required)\h+pam_pwhistory\.so\b

Actual Value:
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+(requisite|required)\h+pam_pwhistory\.so\b""","Run the following script to verify the pam_pwquality.so line exists in a pam-auth-update profile:

# grep -P -- 'bpam_pwhistory.sob' /usr/share/pam-configs/*

Output should be similar to:

/usr/share/pam-configs/pwhistory: requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok

- IF - similar output is returned:

Run the following command to update /etc/pam.d/common-password with the returned profile:

# pam-auth-update --enable {PROFILE_NAME}

Example:

# pam-auth-update pwhistory

- IF - similar output is NOT returned:

Run the following script to create a pam-auth-update profile for pwhistory :

!#/usr/bin/env bash

{
   arr=('Name: pwhistory password history checking' 'Default: yes' 'Priority: 1024' 'Password-Type: Primary' 'Password:' ' requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/pwhistory
}

Run the following command to update /etc/pam.d/common-password with the pwhistory profile:

# pam-auth-update --enable pwhistory

Note:

 - The name used for the file must be used in the pam-auth-update --enable command
 - The Name: line should be easily recognizable and understood
 - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files
 - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_pwhistory module, enable that module instead","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.1.1 Ensure password failed attempts lockout is configured"" : [FAILED]

The deny=<n> option will deny access if the number of consecutive authentication failures for this user during the recent interval exceeds

.

Locking out user IDs after

n

unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.

Solution:
Create or edit the following line in /etc/security/faillock.conf setting the deny option to 5 or less:

deny = 5

Run the following command:

# grep -Pl -- 'bpam_faillock.soh+([^#
r]+h+)?denyb' /usr/share/pam-configs/*

Edit any returned files and remove the deny=<N> arguments from the pam_faillock.so line(s):

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.7,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),LEVEL|1A,NESA|M1.2.2,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - faillock.conf - deny
The file ""/etc/security/faillock.conf"" does not contain ""(?i)^\h*deny\h*=\h*[1-5]\b""

-------------------------
PASSED - common-auth deny
No matching files were found","Create or edit the following line in /etc/security/faillock.conf setting the deny option to 5 or less:

deny = 5

Run the following command:

# grep -Pl -- 'bpam_faillock.soh+([^#
r]+h+)?denyb' /usr/share/pam-configs/*

Edit any returned files and remove the deny=<N> arguments from the pam_faillock.so line(s):","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.1.2 Ensure password unlock time is configured"" : [FAILED]

unlock_time=<n> - The access will be re-enabled after

seconds after the lock out. The value 0 has the same meaning as value never - the access will not be re-enabled without resetting the faillock entries by the faillock(8) command.

Note:

 - The default directory that pam_faillock uses is usually cleared on system boot so the access will be also re-enabled after system reboot. If that is undesirable a different tally directory must be set with the dir option.
 - It is usually undesirable to permanently lock out users as they can become easily a target of denial of service attack unless the usernames are random and kept secret to potential attackers.
 - The maximum configurable value for unlock_time is 604800

Locking out user IDs after

n

unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.

Solution:
Set password unlock time to conform to site policy. unlock_time should be 0 (never), or 900 seconds or greater.

Edit /etc/security/faillock.conf and update or add the following line:

unlock_time = 900

Run the following command: remove the unlock_time argument from the pam_faillock.so module in the PAM files:

# grep -Pl -- 'bpam_faillock.soh+([^#
r]+h+)?unlock_timeb' /usr/share/pam-configs/*

Edit any returned files and remove the unlock_time=<N> argument from the pam_faillock.so line(s):

Impact:

Use of unlock_time=0 may allow an attacker to cause denial of service to legitimate users. This will also require a systems administrator with elevated privileges to unlock the account.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.7,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),LEVEL|1A,NESA|M1.2.2,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - faillock.conf - unlock time
The file ""/etc/security/faillock.conf"" does not contain ""(?i)^\h*unlock_time\h*=""

-------------------------
PASSED - common-auth unlock_time
No matching files were found","Set password unlock time to conform to site policy. unlock_time should be 0 (never), or 900 seconds or greater.

Edit /etc/security/faillock.conf and update or add the following line:

unlock_time = 900

Run the following command: remove the unlock_time argument from the pam_faillock.so module in the PAM files:

# grep -Pl -- 'bpam_faillock.soh+([^#
r]+h+)?unlock_timeb' /usr/share/pam-configs/*

Edit any returned files and remove the unlock_time=<N> argument from the pam_faillock.so line(s):

Impact:

Use of unlock_time=0 may allow an attacker to cause denial of service to legitimate users. This will also require a systems administrator with elevated privileges to unlock the account.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.1 Ensure password number of changed characters is configured"" : [FAILED]

The pwquality difok option sets the number of characters in a password that must not be present in the old password.

Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

Password complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised.

Solution:
Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set difok to 2 or more. Ensure setting conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*difoks*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""difok = 2"" > /etc/security/pwquality.conf.d/50-pwdifok.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?difokb' /usr/share/pam-configs/*

Edit any returned files and remove the difok argument from the pam_pwquality.so line(s):

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - pwquality - difok
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

-------------------------
PASSED - common-password difok
No matching files were found","Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set difok to 2 or more. Ensure setting conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*difoks*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""difok = 2"" > /etc/security/pwquality.conf.d/50-pwdifok.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?difokb' /usr/share/pam-configs/*

Edit any returned files and remove the difok argument from the pam_pwquality.so line(s):","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.2 Ensure minimum password length is configured"" : [FAILED]

The minimum password length setting determines the lowers number of characters that make up a password for a user account. There are many different theories about how to determine the best password length for an organization, but perhaps ""passphrase"" is a better term than ""password"".

The minlen option sets the minimum acceptable size for the new password (plus one if credits are not disabled which is the default). Cannot be set to lower value than 6.

Strong passwords help protect systems from password attacks. Types of password attacks include dictionary attacks, which attempt to use common words and phrases, and brute force attacks, which try every possible combination of characters. Also attackers may try to obtain the account database so they can use tools to discover the accounts and passwords.

Solution:
Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set password length of 14 or more characters. Ensure that password length conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*minlens*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""minlen = 14"" > /etc/security/pwquality.conf.d/50-pwlength.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?minlenb' /usr/share/pam-configs/*

Edit any returned files and remove the minlen argument from the pam_pwquality.so line(s):

Impact:

In general, it is true that longer passwords are better (harder to crack), but it is also true that forced password length requirements can cause user behavior that is predictable and undesirable. For example, requiring users to have a minimum 16-character password may cause them to choose repeating patterns like fourfourfourfour or passwordpassword that meet the requirement but aren't hard to guess. Additionally, length requirements increase the chances that users will adopt other insecure practices, like writing them down, re-using them or storing them unencrypted in their documents.

Having a reasonable minimum length with no maximum character limit increases the resultingaverage password length used (and therefore the strength).6

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - common-password minlen
No matching files were found

-------------------------
FAILED - pwquality - minlen
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf","Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set password length of 14 or more characters. Ensure that password length conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*minlens*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""minlen = 14"" > /etc/security/pwquality.conf.d/50-pwlength.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?minlenb' /usr/share/pam-configs/*

Edit any returned files and remove the minlen argument from the pam_pwquality.so line(s):

Impact:

In general, it is true that longer passwords are better (harder to crack), but it is also true that forced password length requirements can cause user behavior that is predictable and undesirable. For example, requiring users to have a minimum 16-character password may cause them to choose repeating patterns like fourfourfourfour or passwordpassword that meet the requirement but aren't hard to guess. Additionally, length requirements increase the chances that users will adopt other insecure practices, like writing them down, re-using them or storing them unencrypted in their documents.

Having a reasonable minimum length with no maximum character limit increases the resultingaverage password length used (and therefore the strength).6","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.3 Ensure password complexity is configured"" : [FAILED]

Password complexity can be set through:

 - minclass - The minimum number of classes of characters required in a new password. (digits, uppercase, lowercase, others). e.g. minclass = 4 requires digits, uppercase, lower case, and special characters.
 - dcredit - The maximum credit for having digits in the new password. If less than 0 it is the minimum number of digits in the new password. e.g. dcredit = -1 requires at least one digit
 - ucredit - The maximum credit for having uppercase characters in the new password. If less than 0 it is the minimum number of uppercase characters in the new password. e.g. ucredit = -1 requires at least one uppercase character
 - ocredit - The maximum credit for having other characters in the new password. If less than 0 it is the minimum number of other characters in the new password. e.g. ocredit = -1 requires at least one special character
 - lcredit - The maximum credit for having lowercase characters in the new password. If less than 0 it is the minimum number of lowercase characters in the new password. e.g. lcredit = -1 requires at least one lowercase character

Strong passwords protect systems from being hacked through brute force methods.

Requiring at least one non-alphabetic character increases the search space beyond pure dictionary words, which makes the resulting password harder to crack.

Forcing users to choose an excessively complex password, e.g. some combination of upper-case, lower-case, numbers, and special characters, has a negative impact. It places an extra burden on users and many will use predictable patterns (for example, a capital letter in the first position, followed by lowercase letters, then one or two numbers, and a ""special character"" at the end). Attackers know this, so dictionary attacks will often contain these common patterns and use the most common substitutions like, $ for s, @ for a, 1 for l, 0 for o.

Solution:
Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?(minclass|[dulo]credit)b' /usr/share/pam-configs/*

Edit any returned files and remove the minclass dcredit ucredit lcredit and ocredit arguments from the pam_pwquality.so line(s)

Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line(s) to set complexity according to local site policy:

 - minclass = _N_
 - dcredit = _N_ # Value should be either 0 or a number proceeded by a minus ( - ) symbol
 - ucredit = -1 # Value should be either 0 or a number proceeded by a minus ( - ) symbol
 - ocredit = -1 # Value should be either 0 or a number proceeded by a minus ( - ) symbol
 - lcredit = -1 # Value should be either 0 or a number proceeded by a minus ( - ) symbol

Example 1 - Set minclass = 3 :

#!/usr/bin/env bash

{
   sed -ri 's/^s*minclasss*=/# &amp;/' /etc/security/pwquality.conf
   sed -ri 's/^s*[dulo]credits*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""minclass = 3"" > /etc/security/pwquality.conf.d/50-pwcomplexity.conf
}

Example 2 - set dcredit = -1 ucredit = -1 and lcredit = -1 :

#!/usr/bin/env bash

{
   sed -ri 's/^s*minclasss*=/# &amp;/' /etc/security/pwquality.conf
   sed -ri 's/^s*[dulo]credits*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '%s
' ""dcredit = -1"" ""ucredit = -1"" ""lcredit = -1"" > /etc/security/pwquality.conf.d/50-pwcomplexity.conf
}

Impact:

Passwords that are too complex in nature make it harder for users to remember, leading to bad practices. In addition, composition requirements provide no defense against common attack types such as social engineering or insecure storage of passwords

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1M,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - ocredit
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

-------------------------
FAILED - ucredit
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

-------------------------
FAILED - lcredit
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

-------------------------
FAILED - dcredit
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf","Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?(minclass|[dulo]credit)b' /usr/share/pam-configs/*

Edit any returned files and remove the minclass dcredit ucredit lcredit and ocredit arguments from the pam_pwquality.so line(s)

Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line(s) to set complexity according to local site policy:

 - minclass = _N_
 - dcredit = _N_ # Value should be either 0 or a number proceeded by a minus ( - ) symbol
 - ucredit = -1 # Value should be either 0 or a number proceeded by a minus ( - ) symbol
 - ocredit = -1 # Value should be either 0 or a number proceeded by a minus ( - ) symbol
 - lcredit = -1 # Value should be either 0 or a number proceeded by a minus ( - ) symbol

Example 1 - Set minclass = 3 :

#!/usr/bin/env bash

{
   sed -ri 's/^s*minclasss*=/# &amp;/' /etc/security/pwquality.conf
   sed -ri 's/^s*[dulo]credits*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""minclass = 3"" > /etc/security/pwquality.conf.d/50-pwcomplexity.conf
}

Example 2 - set dcredit = -1 ucredit = -1 and lcredit = -1 :

#!/usr/bin/env bash

{
   sed -ri 's/^s*minclasss*=/# &amp;/' /etc/security/pwquality.conf
   sed -ri 's/^s*[dulo]credits*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '%s
' ""dcredit = -1"" ""ucredit = -1"" ""lcredit = -1"" > /etc/security/pwquality.conf.d/50-pwcomplexity.conf
}

Impact:

Passwords that are too complex in nature make it harder for users to remember, leading to bad practices. In addition, composition requirements provide no defense against common attack types such as social engineering or insecure storage of passwords","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.4 Ensure password same consecutive characters is configured"" : [FAILED]

The pwquality maxrepeat option sets the maximum number of allowed same consecutive characters in a new password.

Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

Password complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised.

Solution:
Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set maxrepeat to 3 or less and not 0 Ensure setting conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*maxrepeats*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""maxrepeat = 3"" > /etc/security/pwquality.conf.d/50-pwrepeat.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?maxrepeatb' /usr/share/pam-configs/*

Edit any returned files and remove the maxrepeat argument from the pam_pwquality.so line(s):

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - pwquality - maxrepeat
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

-------------------------
PASSED - common-password maxrepeat
No matching files were found","Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set maxrepeat to 3 or less and not 0 Ensure setting conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*maxrepeats*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""maxrepeat = 3"" > /etc/security/pwquality.conf.d/50-pwrepeat.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?maxrepeatb' /usr/share/pam-configs/*

Edit any returned files and remove the maxrepeat argument from the pam_pwquality.so line(s):","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.5 Ensure password maximum sequential characters is configured"" : [FAILED]

The pwquality maxsequence option sets the maximum length of monotonic character sequences in the new password. Examples of such sequence are 12345 or fedcb The check is disabled if the value is 0

Note: Most such passwords will not pass the simplicity check unless the sequence is only a minor part of the password.

Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

Password complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised.

Solution:
Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set maxsequence to 3 or less and not 0 Ensure setting conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*maxsequences*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""maxsequence = 3"" > /etc/security/pwquality.conf.d/50-pwmaxsequence.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?maxsequenceb' /usr/share/pam-configs/*

Edit any returned files and remove the maxsequence argument from the pam_pwquality.so line(s):

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - pwquality - maxsequence
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

-------------------------
PASSED - common-password maxsequence
No matching files were found","Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set maxsequence to 3 or less and not 0 Ensure setting conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*maxsequences*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""maxsequence = 3"" > /etc/security/pwquality.conf.d/50-pwmaxsequence.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?maxsequenceb' /usr/share/pam-configs/*

Edit any returned files and remove the maxsequence argument from the pam_pwquality.so line(s):","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.6 Ensure password dictionary check is enabled"" : [FAILED]

The pwquality dictcheck option sets whether to check for the words from the cracklib dictionary.

If the operating system allows the user to select passwords based on dictionary words, this increases the chances of password compromise by increasing the opportunity for successful guesses, and brute-force attacks.

Solution:
Edit any file ending inconf in the /etc/security/pwquality.conf.d/ directory and/or the file /etc/security/pwquality.conf and comment out or remove any instance of dictcheck = 0 :

Example:

# sed -ri 's/^s*dictchecks*=/# &amp;/' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?dictcheckb' /usr/share/pam-configs/*

Edit any returned files and remove the dictcheck argument from the pam_pwquality.so line(s)

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - Verify that the dictcheck option is not set to 0 (disabled) in a pwquality configuration file
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

-------------------------
PASSED - dictcheck=0
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwquality\.so\h+([^#\r]+\h+)?dictcheck\h*=\h*0\b""","Edit any file ending inconf in the /etc/security/pwquality.conf.d/ directory and/or the file /etc/security/pwquality.conf and comment out or remove any instance of dictcheck = 0 :

Example:

# sed -ri 's/^s*dictchecks*=/# &amp;/' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?dictcheckb' /usr/share/pam-configs/*

Edit any returned files and remove the dictcheck argument from the pam_pwquality.so line(s)","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.7 Ensure password quality checking is enforced"" : [FAILED]

The pam_pwquality module can be configured to either reject a password if it fails the checks, or only print a warning.

This is configured by setting the enforcing=<N> argument. If nonzero, a password will be rejected if it fails the checks, otherwise only a warning message will be provided.

This setting applies only to the pam_pwquality module and possibly other applications that explicitly change their behavior based on it. It does not affect pwmake(1) and pwscore(1).

Strong passwords help protect systems from password attacks. Types of password attacks include dictionary attacks, which attempt to use common words and phrases, and brute force attacks, which try every possible combination of characters. Also attackers may try to obtain the account database so they can use tools to discover the accounts and passwords.

Solution:
Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?enforcing=0b' /usr/share/pam-configs/*

Edit any returned files and remove the enforcing=0 argument from the pam_pwquality.so line(s)

Edit /etc/security/pwquality.conf and all files ending inconf in the /etc/security/pwquality.conf.d/ directory and remove or comment out any line containing the enforcing = 0 argument:

Example:

# sed -ri 's/^s*enforcings*=s*0/# &amp;/' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - common-password enforcing=0
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwquality\.so\h+([^#\r]+\h+)?enforcing\h*=\h*0\b""

-------------------------
FAILED - pwquality.conf enforcing=0
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf","Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?enforcing=0b' /usr/share/pam-configs/*

Edit any returned files and remove the enforcing=0 argument from the pam_pwquality.so line(s)

Edit /etc/security/pwquality.conf and all files ending inconf in the /etc/security/pwquality.conf.d/ directory and remove or comment out any line containing the enforcing = 0 argument:

Example:

# sed -ri 's/^s*enforcings*=s*0/# &amp;/' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.8 Ensure password quality is enforced for the root user"" : [FAILED]

If the pwquality enforce_for_root option is enabled, the module will return error on failed check even if the user changing the password is root.

This option is off by default which means that just the message about the failed check is printed but root can change the password anyway.

Note: The root is not asked for an old password so the checks that compare the old and new password are not performed.

Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

Password complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised.

Solution:
Edit or add the following line in a *.conf file in /etc/security/pwquality.conf.d or in /etc/security/pwquality.conf :

Example:

#!/urs/bin/env bash

{
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s
' ""enforce_for_root"" > /etc/security/pwquality.conf.d/50-pwroot.conf
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
expect: (?i)^\h*enforce_for_root\b
file: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf
min_occurrences: 1
regex: (?i)^\h*enforce_for_root\b
string_required: NO

Actual Value:
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf","Edit or add the following line in a *.conf file in /etc/security/pwquality.conf.d or in /etc/security/pwquality.conf :

Example:

#!/urs/bin/env bash

{
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s
' ""enforce_for_root"" > /etc/security/pwquality.conf.d/50-pwroot.conf
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.3.1 Ensure password history remember is configured"" : [FAILED]

The /etc/security/opasswd file stores the users' old passwords and can be checked to ensure that users are not recycling recent passwords. The number of passwords remembered is set via the remember argument value in set for the pam_pwhistory module.

 - remember=<N> - <N> is the number of old passwords to remember

Requiring users not to reuse their passwords make it less likely that an attacker will be able to guess the password or use a compromised password.

Note: These change only apply to accounts configured on the local system.

Solution:
Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_pwhistory.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files and edit or add the remember= argument, with a value of 24 or more, that meets local site policy to the pam_pwhistory line in the Password section:

Example File:

Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password:
   requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes remember=<N>**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable pwhistory

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
expect: (?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwhistory\.so\h+([^#\r]+\h+)?remember=(2[4-9]|[3-9][0-9]|[1-9][0-9]{2,})\b
file: /etc/pam.d/common-password
regex: (?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwhistory\.so\h+([^#\r]+\h+)?remember=

Actual Value:
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwhistory\.so\h+([^#\r]+\h+)?remember=""","Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_pwhistory.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files and edit or add the remember= argument, with a value of 24 or more, that meets local site policy to the pam_pwhistory line in the Password section:

Example File:

Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password:
   requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes remember=<N>**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable pwhistory","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.3.2 Ensure password history is enforced for the root user"" : [FAILED]

If the pwhistory enforce_for_root option is enabled, the module will enforce password history for the root user as well

Requiring users not to reuse their passwords make it less likely that an attacker will be able to guess the password or use a compromised password

Note: These change only apply to accounts configured on the local system.

Solution:
Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_pwhistory.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files and add the enforce_for_root argument to the pam_pwhistory line in the Password section:

Example File:

Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password:
   requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes enforce_for_root**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable pwhistory

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
expect: (?i)^\h*password\h+[^#\n\r]+\h+pam_pwhistory\.so\h+([^#\n\r]+\h+)?enforce_for_root\b
file: /etc/pam.d/common-password
regex: (?i)^\h*password\h+[^#\n\r]+\h+pam_pwhistory\.so\h+([^#\n\r]+\h+)?enforce_for_root\b

Actual Value:
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+[^#\n\r]+\h+pam_pwhistory\.so\h+([^#\n\r]+\h+)?enforce_for_root\b""","Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_pwhistory.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files and add the enforce_for_root argument to the pam_pwhistory line in the Password section:

Example File:

Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password:
   requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes enforce_for_root**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable pwhistory","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.3.3 Ensure pam_pwhistory includes use_authtok"" : [FAILED]

use_authtok - When password changing enforce the module to set the new password to the one provided by a previously stacked password module

use_authtok allows multiple pam modules to confirm a new password before it is accepted.

Solution:
Edit any returned files and add the use_authtok argument to the pam_pwhistory line in the Password section:

Example File:

Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password:
   requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes use_authtok**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable pwhistory

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1

Policy Value:
expect: (?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwhistory\.so(\h+[^#\n\r]+)?\h+use_authtok\b
file: /etc/pam.d/common-password
regex: (?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwhistory\.so(\h+[^#\n\r]+)?\h+use_authtok\b

Actual Value:
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwhistory\.so(\h+[^#\n\r]+)?\h+use_authtok\b""","Edit any returned files and add the use_authtok argument to the pam_pwhistory line in the Password section:

Example File:

Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password:
   requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes use_authtok**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable pwhistory","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.4.1 Ensure pam_unix does not include nullok"" : [FAILED]

The nullok argument overrides the default action of pam_unix.so to not permit the user access to a service if their official password is blank.

Using a strong password is essential to helping protect personal and sensitive information from unauthorized access

Solution:
Run the following command:

# grep -PH -- '^h*([^#
r]+h+)?pam_unix.soh+([^#
r]+h+)?nullokb' /usr/share/pam-configs/*

Edit any files returned and remove the nullok argument for the pam_unix lines

Example File:

Name: Unix authentication
Default: yes
Priority: 256
Auth-Type: Primary
Auth:
        [success=end default=ignore] pam_unix.so try_first_pass # <- **ensure line does not include nullok nullok**
Auth-Initial:
        [success=end default=ignore] pam_unix.so # <- **ensure line does not include nullok nullok**
Account-Type: Primary
Account:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Account-Initial:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Session-Type: Additional
Session:
        required pam_unix.so
Session-Initial:
        required pam_unix.so
Password-Type: Primary
Password:
        [success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt
Password-Initial:
        [success=end default=ignore] pam_unix.so obscure yescrypt

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <EDITED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix

Note: If custom files are being used, the corresponding files in /etc/pam.d/ would need to be edited directly, and the pam-auth-update --enable <EDITED_PROFILE_NAME> command skipped

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - common-session-noninteractive nullok
The file ""/etc/pam.d/common-session-noninteractive"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+nullok\b""

-------------------------
PASSED - common-password nullok
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+nullok\b""

-------------------------
FAILED - common-auth nullok
Non-compliant file(s):
      /etc/pam.d/common-auth - regex '(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+nullok\b' found - expect '(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+nullok\b' found in the following lines:
          17: auth	[success=1 default=ignore]	pam_unix.so nullok

-------------------------
PASSED - common-account nullok
The file ""/etc/pam.d/common-account"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+nullok\b""

-------------------------
PASSED - common-session nullok
The file ""/etc/pam.d/common-session"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+nullok\b""","Run the following command:

# grep -PH -- '^h*([^#
r]+h+)?pam_unix.soh+([^#
r]+h+)?nullokb' /usr/share/pam-configs/*

Edit any files returned and remove the nullok argument for the pam_unix lines

Example File:

Name: Unix authentication
Default: yes
Priority: 256
Auth-Type: Primary
Auth:
        [success=end default=ignore] pam_unix.so try_first_pass # <- **ensure line does not include nullok nullok**
Auth-Initial:
        [success=end default=ignore] pam_unix.so # <- **ensure line does not include nullok nullok**
Account-Type: Primary
Account:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Account-Initial:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Session-Type: Additional
Session:
        required pam_unix.so
Session-Initial:
        required pam_unix.so
Password-Type: Primary
Password:
        [success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt
Password-Initial:
        [success=end default=ignore] pam_unix.so obscure yescrypt

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <EDITED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix

Note: If custom files are being used, the corresponding files in /etc/pam.d/ would need to be edited directly, and the pam-auth-update --enable <EDITED_PROFILE_NAME> command skipped","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.4.2 Ensure pam_unix does not include remember"" : [PASSED]

The remember=n argument saves the last n passwords for each user in /etc/security/opasswd in order to force password change history and keep the user from alternating between the same password too frequently. The MD5 password hash algorithm is used for storing the old passwords. Instead of this option the pam_pwhistory module should be used. The pam_pwhistory module saves the last n passwords for each user in /etc/security/opasswd using the password hash algorithm set on the pam_unix module. This allows for the yescrypt or sha512 hash algorithm to be used.

The remember=n argument should be removed to ensure a strong password hashing algorithm is being used. A stronger hash provides additional protection to the system by increasing the level of effort needed for an attacker to successfully determine local user's old passwords stored in /etc/security/opasswd

Solution:
Run the following command:

# grep -PH -- '^h*([^#
r]+h+)?pam_unix.soh+([^#
r]+h+)?rememberb' /usr/share/pam-configs/*

Edit any files returned and remove the remember=_<N>_ argument for the pam_unix lines

Example output:

[success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt remember=5 # **<- remove remember=<N>**
[success=end default=ignore] pam_unix.so obscure yescrypt remember=5 # **<- remove remember=<N>**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <EDITED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix

Note: If custom files are being used, the corresponding files in /etc/pam.d/ would need to be edited directly, and the pam-auth-update --enable <EDITED_PROFILE_NAME> command skipped

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - common-session remember
The file ""/etc/pam.d/common-session"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+remember=\b""

-------------------------
PASSED - common-password remember
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+remember=\b""

-------------------------
PASSED - common-session-noninteractive remember
The file ""/etc/pam.d/common-session-noninteractive"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+remember=\b""

-------------------------
PASSED - common-auth remember
The file ""/etc/pam.d/common-auth"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+remember=\b""

-------------------------
PASSED - common-account remember
The file ""/etc/pam.d/common-account"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+remember=\b""","Run the following command:

# grep -PH -- '^h*([^#
r]+h+)?pam_unix.soh+([^#
r]+h+)?rememberb' /usr/share/pam-configs/*

Edit any files returned and remove the remember=_<N>_ argument for the pam_unix lines

Example output:

[success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt remember=5 # **<- remove remember=<N>**
[success=end default=ignore] pam_unix.so obscure yescrypt remember=5 # **<- remove remember=<N>**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <EDITED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix

Note: If custom files are being used, the corresponding files in /etc/pam.d/ would need to be edited directly, and the pam-auth-update --enable <EDITED_PROFILE_NAME> command skipped","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm"" : [PASSED]

A cryptographic hash function converts an arbitrary-length input into a fixed length output. Password hashing performs a one-way transformation of a password, turning the password into another string, called the hashed password.

The pam_unix module can be configured to use one of the following hashing algorithms for user's passwords:

 - md5 - When a user changes their password next, encrypt it with the MD5 algorithm.
 - bigcrypt - When a user changes their password next, encrypt it with the DEC C2 algorithm.
 - sha256 - When a user changes their password next, encrypt it with the SHA256 algorithm. The SHA256 algorithm must be supported by the crypt(3) function.
 - sha512 - When a user changes their password next, encrypt it with the SHA512 algorithm. The SHA512 algorithm must be supported by the crypt(3) function.
 - blowfish - When a user changes their password next, encrypt it with the blowfish algorithm. The blowfish algorithm must be supported by the crypt(3) function.
 - gost_yescrypt - When a user changes their password next, encrypt it with the gost-yescrypt algorithm. The gost-yescrypt algorithm must be supported by the crypt(3) function.
 - yescrypt - When a user changes their password next, encrypt it with the yescrypt algorithm. The yescrypt algorithm must be supported by the crypt(3) function.

The SHA-512 and yescrypt algorithms provide a stronger hash than other algorithms used by Linux for password hash generation. A stronger hash provides additional protection to the system by increasing the level of effort needed for an attacker to successfully determine local user passwords.

Note: These changes only apply to the local system.

Solution:
Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_unix.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files and edit or add a strong hashing algorithm, either sha512 or yescrypt, that meets local site policy to the pam_unix lines in the Password section:

Example File:

Name: Unix authentication
Default: yes
Priority: 256
Auth-Type: Primary # <- Start of ""Auth"" section
Auth:
        [success=end default=ignore] pam_unix.so try_first_pass
Auth-Initial:
        [success=end default=ignore] pam_unix.so
Account-Type: Primary # <- Start of ""Account"" section
Account:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Account-Initial:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Session-Type: Additional # <- Start of ""Session"" section
Session:
        required pam_unix.so
Session-Initial:
        required pam_unix.so
Password-Type: Primary # <- Start of ""Password"" section
Password:
        [success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt # <- **ensure hashing algorithm is either sha512 or yescrypt**
Password-Initial:
        [success=end default=ignore] pam_unix.so obscure yescrypt # <- **ensure hashing algorithm is either sha512 or yescrypt**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1

Policy Value:
expect: (?i)^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?(SHA512|YESCRYPT)\b
file: /etc/pam.d/common-password
regex: (?i)^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?(SHA512|YESCRYPT)\b

Actual Value:
Compliant file(s):
      /etc/pam.d/common-password - regex '(?i)^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?(SHA512|YESCRYPT)\b' found - expect '(?i)^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?(SHA512|YESCRYPT)\b' found in the following lines:
          25: password	[success=1 default=ignore]	pam_unix.so obscure yescrypt","Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_unix.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files and edit or add a strong hashing algorithm, either sha512 or yescrypt, that meets local site policy to the pam_unix lines in the Password section:

Example File:

Name: Unix authentication
Default: yes
Priority: 256
Auth-Type: Primary # <- Start of ""Auth"" section
Auth:
        [success=end default=ignore] pam_unix.so try_first_pass
Auth-Initial:
        [success=end default=ignore] pam_unix.so
Account-Type: Primary # <- Start of ""Account"" section
Account:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Account-Initial:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Session-Type: Additional # <- Start of ""Session"" section
Session:
        required pam_unix.so
Session-Initial:
        required pam_unix.so
Password-Type: Primary # <- Start of ""Password"" section
Password:
        [success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt # <- **ensure hashing algorithm is either sha512 or yescrypt**
Password-Initial:
        [success=end default=ignore] pam_unix.so obscure yescrypt # <- **ensure hashing algorithm is either sha512 or yescrypt**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.4.4 Ensure pam_unix includes use_authtok"" : [FAILED]

use_authtok - When password changing enforce the module to set the new password to the one provided by a previously stacked password module

use_authtok allows multiple pam modules to confirm a new password before it is accepted.

Solution:
Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_unix.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files add use_authtok to the pam_unix line in the Password section under Password: subsection:

Note: The if the file's Password section includes a Password-Initial: subsection, use_authtok should not be added to the pam_unix line in the Password-Initial: subsection

Example File:

Name: Unix authentication
Default: yes
Priority: 256
Auth-Type: Primary # <- Start of ""Auth"" section
Auth:
        [success=end default=ignore] pam_unix.so try_first_pass
Auth-Initial:
        [success=end default=ignore] pam_unix.so
Account-Type: Primary # <- Start of ""Account"" section
Account:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Account-Initial:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Session-Type: Additional # <- Start of ""Session"" section
Session:
        required pam_unix.so
Session-Initial:
        required pam_unix.so
Password-Type: Primary # <- Start of ""Password"" section
Password:
        [success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt # <- **ensure line includes use_authtok**
Password-Initial:
        [success=end default=ignore] pam_unix.so obscure yescrypt # <- **Password-Initial: subsection does not include use_authtok

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1

Policy Value:
expect: (?i)^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?use_authtok\b
file: /etc/pam.d/common-password
regex: (?i)^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?use_authtok\b

Actual Value:
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?use_authtok\b""","Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_unix.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files add use_authtok to the pam_unix line in the Password section under Password: subsection:

Note: The if the file's Password section includes a Password-Initial: subsection, use_authtok should not be added to the pam_unix line in the Password-Initial: subsection

Example File:

Name: Unix authentication
Default: yes
Priority: 256
Auth-Type: Primary # <- Start of ""Auth"" section
Auth:
        [success=end default=ignore] pam_unix.so try_first_pass
Auth-Initial:
        [success=end default=ignore] pam_unix.so
Account-Type: Primary # <- Start of ""Account"" section
Account:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Account-Initial:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Session-Type: Additional # <- Start of ""Session"" section
Session:
        required pam_unix.so
Session-Initial:
        required pam_unix.so
Password-Type: Primary # <- Start of ""Password"" section
Password:
        [success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt # <- **ensure line includes use_authtok**
Password-Initial:
        [success=end default=ignore] pam_unix.so obscure yescrypt # <- **Password-Initial: subsection does not include use_authtok

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.1.1 Ensure password expiration is configured"" : [FAILED]

The PASS_MAX_DAYS parameter in /etc/login.defs allows an administrator to force passwords to expire once they reach a defined age.

PASS_MAX_DAYS

<N>

- The maximum number of days a password may be used. If the password is older than this, a password change will be forced. If not specified, -1 will be assumed (which disables the restriction).

The window of opportunity for an attacker to leverage compromised credentials or successfully compromise credentials via an online brute force attack is limited by the age of the password. Therefore, reducing the maximum age of a password also reduces an attacker's window of opportunity.

We recommend a yearly password change. This is primarily because for all their good intentions users will share credentials across accounts. Therefore, even if a breach is publicly identified, the user may not see this notification, or forget they have an account on that site. This could leave a shared credential vulnerable indefinitely. Having an organizational policy of a 1-year (annual) password expiration is a reasonable compromise to mitigate this with minimal user burden.

Solution:
Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs :

PASS_MAX_DAYS 365

Modify user parameters for all users with a password set to match:

# chage --maxdays 365 <user>

Edit /etc/login.defs and set PASS_MAX_DAYS to a value greater than 0 that follows local site policy:

Example:

PASS_MAX_DAYS 365

Run the following command to modify user parameters for all users with a password set to a maximum age no greater than 356 or less than 1 that follows local site policy:

# chage --maxdays <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($5 > 365 || $5 < 1)system (""chage --maxdays 365 "" $1)}' /etc/shadow

Impact:

The password expiration must be greater than the minimum days between password changes or users will be unable to change their password.

Excessive password expiration requirements do more harm than good, because these requirements make users select predictable passwords, composed of sequential words and numbers that are closely related to each other. In these cases, the next password can be predicted based on the previous one (incrementing a number used in the password forexample). Also, password expiration requirements offer no containment benefits because attackers will often use credentials as soon as they compromise them. Instead, immediate password changes should be based on key events including, but not limited to:

 - Indication of compromise
 - Change of user roles
 - When a user leaves the organization.

Not only does changing passwords every few weeks or months frustrate the user, it's been suggested that it does more harm than good, because it could lead to bad practices by the user such as adding a character to the end of their existing password.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - shadow password max days
Non-compliant file(s):
      /etc/shadow - regex '^[^:]+:[^!*]' found - expect '^([^:]*:){4}([1-9]|[1-9][0-9]|[12][0-9]{2}|3[0-5][0-9]|36[0-5]):' not found in the following lines:
          1: root:$6$cHxy3rQ.Bf50$uYOrh7oOEHJfdggS.93HTMqhJGmQI/P9c3ecD9IYjRJpirYJmfLY3V6uXDa/cwZDEHp6ltyl7z5yWg1hT1qLG0:19047:0:99999:7:::
          26: anapaya:$6$Ykmswojd$lodHD1eD5i5i4FfSVEY/s/Yywnlw7cr9WTIOA/lnceFgak7Z6c5xs/i/wQkzkh/WDy5R4w4ZFghZrAgOmud02.:19047:0:99999:7:::
          27: scion:$6$cHxy3rQ.Bf50$uYOrh7oOEHJfdggS.93HTMqhJGmQI/P9c3ecD9IYjRJpirYJmfLY3V6uXDa/cwZDEHp6ltyl7z5yWg1hT1qLG0:19361:0:99999:7:::

-------------------------
FAILED - login.defs
Non-compliant file(s):
      /etc/login.defs - regex '(?i)^[\s]*PASS_MAX_DAYS[\s]' found - expect '(?i)^[\s]*PASS_MAX_DAYS[\s]+([1-9]|[1-9][0-9]|[12][0-9]{2}|3[0-5][0-9]|36[0-5])[\s]*$' not found in the following lines:
          165: PASS_MAX_DAYS	99999","Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs :

PASS_MAX_DAYS 365

Modify user parameters for all users with a password set to match:

# chage --maxdays 365 <user>

Edit /etc/login.defs and set PASS_MAX_DAYS to a value greater than 0 that follows local site policy:

Example:

PASS_MAX_DAYS 365

Run the following command to modify user parameters for all users with a password set to a maximum age no greater than 356 or less than 1 that follows local site policy:

# chage --maxdays <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($5 > 365 || $5 < 1)system (""chage --maxdays 365 "" $1)}' /etc/shadow

Impact:

The password expiration must be greater than the minimum days between password changes or users will be unable to change their password.

Excessive password expiration requirements do more harm than good, because these requirements make users select predictable passwords, composed of sequential words and numbers that are closely related to each other. In these cases, the next password can be predicted based on the previous one (incrementing a number used in the password forexample). Also, password expiration requirements offer no containment benefits because attackers will often use credentials as soon as they compromise them. Instead, immediate password changes should be based on key events including, but not limited to:

 - Indication of compromise
 - Change of user roles
 - When a user leaves the organization.

Not only does changing passwords every few weeks or months frustrate the user, it's been suggested that it does more harm than good, because it could lead to bad practices by the user such as adding a character to the end of their existing password.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.1.3 Ensure password expiration warning days is configured"" : [PASSED]

The PASS_WARN_AGE parameter in /etc/login.defs allows an administrator to notify users that their password will expire in a defined number of days.

PASS_WARN_AGE

<N>

- The number of days warning given before a password expires. A zero means warning is given only upon the day of expiration, a negative value means no warning is given. If not specified, no warning will be provided.

Providing an advance warning that a password will be expiring gives users time to think of a secure password. Users caught unaware may choose a simple password or write it down where it may be discovered.

Solution:
Edit /etc/login.defs and set PASS_WARN_AGE to a value of 7 or more that follows local site policy:

Example:

PASS_WARN_AGE 7

Run the following command to modify user parameters for all users with a password set to a minimum warning to 7 or more days that follows local site policy:

# chage --warndays <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($6 < 7)system (""chage --warndays 7 "" $1)}' /etc/shadow

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|4.4,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - login.defs
Compliant file(s):
      /etc/login.defs - regex '(?i)^[\s]*PASS_WARN_AGE[\s]+' found - expect '(?i)^[\s]*PASS_WARN_AGE[\s]+([7-9]|[1-9][0-9]+)[\s]*$' found in the following lines:
          167: PASS_WARN_AGE	7

-------------------------
PASSED - shadow password warn age
Compliant file(s):
      /etc/shadow - regex '^[^:]+:[^!*]' found - expect '^([^:]*:){5}([7-9]|[1-9][0-9]+):' found in the following lines:
          1: root:$6$cHxy3rQ.Bf50$uYOrh7oOEHJfdggS.93HTMqhJGmQI/P9c3ecD9IYjRJpirYJmfLY3V6uXDa/cwZDEHp6ltyl7z5yWg1hT1qLG0:19047:0:99999:7:::
          26: anapaya:$6$Ykmswojd$lodHD1eD5i5i4FfSVEY/s/Yywnlw7cr9WTIOA/lnceFgak7Z6c5xs/i/wQkzkh/WDy5R4w4ZFghZrAgOmud02.:19047:0:99999:7:::
          27: scion:$6$cHxy3rQ.Bf50$uYOrh7oOEHJfdggS.93HTMqhJGmQI/P9c3ecD9IYjRJpirYJmfLY3V6uXDa/cwZDEHp6ltyl7z5yWg1hT1qLG0:19361:0:99999:7:::","Edit /etc/login.defs and set PASS_WARN_AGE to a value of 7 or more that follows local site policy:

Example:

PASS_WARN_AGE 7

Run the following command to modify user parameters for all users with a password set to a minimum warning to 7 or more days that follows local site policy:

# chage --warndays <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($6 < 7)system (""chage --warndays 7 "" $1)}' /etc/shadow","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.1.4 Ensure strong password hashing algorithm is configured"" : [PASSED]

A cryptographic hash function converts an arbitrary-length input into a fixed length output. Password hashing performs a one-way transformation of a password, turning the password into another string, called the hashed password.

ENCRYPT_METHOD (string) - This defines the system default encryption algorithm for encrypting passwords (if no algorithm are specified on the command line). It can take one of these values:

 - MD5 - MD5-based algorithm will be used for encrypting password
 - SHA256 - SHA256-based algorithm will be used for encrypting password
 - SHA512 - SHA512-based algorithm will be used for encrypting password
 - BCRYPT - BCRYPT-based algorithm will be used for encrypting password
 - YESCRYPT - YESCRYPT-based algorithm will be used for encrypting password
 - DES - DES-based algorithm will be used for encrypting password (default)

Note:

 - This parameter overrides the deprecated MD5_CRYPT_ENAB variable.
 - This parameter will only affect the generation of group passwords.
 - The generation of user passwords is done by PAM and subject to the PAM configuration.
 - It is recommended to set this variable consistently with the PAM configuration.

The SHA-512 and yescrypt algorithms provide a stronger hash than other algorithms used by Linux for password hash generation. A stronger hash provides additional protection to the system by increasing the level of effort needed for an attacker to successfully determine local group passwords.

Solution:
Edit /etc/login.defs and set the ENCRYPT_METHOD to SHA512 or YESCRYPT :

ENCRYPT_METHOD <HASHING_ALGORITHM>

Example:

ENCRYPT_METHOD YESCRYPT

Note:

 - This only effects local groups' passwords created after updating the file to use sha512 or yescrypt
 - If it is determined that the password algorithm being used is not sha512 or yescrypt once it is changed, it is recommended that all group passwords be updated to use the stronger hashing algorithm.
 - It is recommended that the chosen hashing algorithm is consistent across /etc/login.defs and the PAM configuration

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1

Policy Value:
expect: ^\s*ENCRYPT_METHOD\s+(?i)(SHA512|YESCRYPT)(?-i)\s*$
file: /etc/login.defs
regex: ^\s*ENCRYPT_METHOD\s+

Actual Value:
Compliant file(s):
      /etc/login.defs - regex '^\s*ENCRYPT_METHOD\s+' found - expect '^\s*ENCRYPT_METHOD\s+(?i)(SHA512|YESCRYPT)(?-i)\s*$' found in the following lines:
          284: ENCRYPT_METHOD SHA512","Edit /etc/login.defs and set the ENCRYPT_METHOD to SHA512 or YESCRYPT :

ENCRYPT_METHOD <HASHING_ALGORITHM>

Example:

ENCRYPT_METHOD YESCRYPT

Note:

 - This only effects local groups' passwords created after updating the file to use sha512 or yescrypt
 - If it is determined that the password algorithm being used is not sha512 or yescrypt once it is changed, it is recommended that all group passwords be updated to use the stronger hashing algorithm.
 - It is recommended that the chosen hashing algorithm is consistent across /etc/login.defs and the PAM configuration","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.1.5 Ensure inactive password lock is configured"" : [FAILED]

User accounts that have been inactive for over a given period of time can be automatically disabled.

INACTIVE - Defines the number of days after the password exceeded its maximum age where the user is expected to replace this password.

The value is stored in the shadow password file. An input of 0 will disable an expired password with no delay. An input of -1 will blank the respective field in the shadow password file.

Inactive accounts pose a threat to system security since the users are not logging in to notice failed login attempts or other anomalies.

Solution:
Run the following command to set the default password inactivity period to 45 days or less that meets local site policy:

# useradd -D -f <N>

Example:

# useradd -D -f 45

Run the following command to modify user parameters for all users with a password set to a inactive age of 45 days or less that follows local site policy:

# chage --inactive <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($7 > 45 || $7 < 0)system (""chage --inactive 45 "" $1)}' /etc/shadow

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - useradd
The command '/sbin/useradd -D | /bin/grep 'INACTIVE'' returned : 

INACTIVE=-1

-------------------------
FAILED - shadow inactive password lock
Non-compliant file(s):
      /etc/shadow - regex '^[^:]+:[^!*]' found - expect '^([^:]*:){6}([1-9]|[123][0-9]|4[0-5]):' not found in the following lines:
          1: root:$6$cHxy3rQ.Bf50$uYOrh7oOEHJfdggS.93HTMqhJGmQI/P9c3ecD9IYjRJpirYJmfLY3V6uXDa/cwZDEHp6ltyl7z5yWg1hT1qLG0:19047:0:99999:7:::
          26: anapaya:$6$Ykmswojd$lodHD1eD5i5i4FfSVEY/s/Yywnlw7cr9WTIOA/lnceFgak7Z6c5xs/i/wQkzkh/WDy5R4w4ZFghZrAgOmud02.:19047:0:99999:7:::
          27: scion:$6$cHxy3rQ.Bf50$uYOrh7oOEHJfdggS.93HTMqhJGmQI/P9c3ecD9IYjRJpirYJmfLY3V6uXDa/cwZDEHp6ltyl7z5yWg1hT1qLG0:19361:0:99999:7:::","Run the following command to set the default password inactivity period to 45 days or less that meets local site policy:

# useradd -D -f <N>

Example:

# useradd -D -f 45

Run the following command to modify user parameters for all users with a password set to a inactive age of 45 days or less that follows local site policy:

# chage --inactive <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($7 > 45 || $7 < 0)system (""chage --inactive 45 "" $1)}' /etc/shadow","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.1.6 Ensure all users last password change date is in the past"" : [PASSED]

All users should have a password change date in the past.

If a user's recorded password change date is in the future, then they could bypass any set password expiration.

Solution:
Investigate any users with a password change date in the future and correct them. Locking the account, expiring the password, or resetting the password manually may be appropriate.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

Pass","Investigate any users with a password change date in the future and correct them. Locking the account, expiring the password, or resetting the password manually may be appropriate.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.1 Ensure root is the only UID 0 account"" : [PASSED]

Any account with UID 0 has superuser privileges on the system.

This access must be limited to only the default root account and only from the system console. Administrative access must be through an unprivileged account using an approved mechanism as noted in Item 5.6 Ensure access to the su command is restricted.

Solution:
Run the following command to change the root account UID to 0 :

# usermod -u 0 root

Modify any users other than root with UID 0 and assign them a new UID.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.5,800-53|AC-6(5),800-53r5|AC-6(5),CN-L3|8.1.10.6(a),CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
name: passwd_zero_uid

Actual Value:
No issues found.","Run the following command to change the root account UID to 0 :

# usermod -u 0 root

Modify any users other than root with UID 0 and assign them a new UID.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.2 Ensure root is the only GID 0 account"" : [PASSED]

The usermod command can be used to specify which group the root account belongs to. This affects permissions of files that are created by the root account.

Using GID 0 for the root account helps prevent root -owned files from accidentally becoming accessible to non-privileged users.

Solution:
Run the following command to set the root user's GID to 0 :

# usermod -g 0 root

Run the following command to set the root group's GID to 0 :

# groupmod -g 0 root

Remove any users other than the root user with GID 0 or assign them a new GID if appropriate.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **
 - * Correctly configured * :
  - No unauthorized user's GID is: ""0""
  - User ""root"" GID is correctly set to: ""0""","Run the following command to set the root user's GID to 0 :

# usermod -g 0 root

Run the following command to set the root group's GID to 0 :

# groupmod -g 0 root

Remove any users other than the root user with GID 0 or assign them a new GID if appropriate.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.3 Ensure group root is the only GID 0 group"" : [PASSED]

The groupmod command can be used to specify which group the root group belongs to. This affects permissions of files that are group owned by the root group.

Using GID 0 for the root group helps prevent root group owned files from accidentally becoming accessible to non-privileged users.

Solution:
Run the following command to set the root group's GID to 0 :

# groupmod -g 0 root

Remove any groups other than the root group with GID 0 or assign them a new GID if appropriate.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
name: group_zero_gid

Actual Value:
No issues found.","Run the following command to set the root group's GID to 0 :

# groupmod -g 0 root

Remove any groups other than the root group with GID 0 or assign them a new GID if appropriate.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.4 Ensure root password is set"" : [PASSED]

There are a number of methods to access the root account directly. Without a password set any user would be able to gain access and thus control over the entire system.

Access to root should be secured at all times.

Solution:
Run the following command to set a password for the root user:

# passwd root

Impact:

If there are any automated processes that relies on access to the root account without authentication, they will fail after remediation.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /bin/passwd -S root | /bin/awk '$2 ~ /^P/ {print ""User: \"""" $1 ""\"" Password is set""}'
expect: (?i)^User: ""root"" Password is set$

Actual Value:
The command '/bin/passwd -S root | /bin/awk '$2 ~ /^P/ {print ""User: \"""" $1 ""\"" Password is set""}'' returned : 

User: ""root"" Password is set","Run the following command to set a password for the root user:

# passwd root

Impact:

If there are any automated processes that relies on access to the root account without authentication, they will fail after remediation.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.5 Ensure root path integrity"" : [FAILED]

The root user can execute any command on the system and could be fooled into executing programs unintentionally if the PATH is not set correctly.

Including the current working directory (.) or other writable directory in root 's executable path makes it likely that an attacker can gain superuser access by forcing an administrator operating as root to execute a Trojan horse program.

Solution:
Correct or justify any:

 - Locations that are not directories
 - Empty directories ( :: )
 - Trailing ( : )
 - Current working directory ( )
 - Non root owned directories
 - Directories that less restrictive than mode 0755

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.7,800-53|CM-7(2),800-53r5|CM-7(2),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7(2),LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - * Reasons for audit failure * :

 - ""/snap/bin"" is not a directory","Correct or justify any:

 - Locations that are not directories
 - Empty directories ( :: )
 - Trailing ( : )
 - Current working directory ( )
 - Non root owned directories
 - Directories that less restrictive than mode 0755","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.6 Ensure root user umask is configured"" : [FAILED]

The user file-creation mode mask ( umask ) is used to determine the file permission for newly created directories and files. In Linux, the default permissions for any newly created directory is 0777 ( rwxrwxrwx ), and for any newly created file it is 0666 ( rw-rw-rw- ). The umask modifies the default Linux permissions by restricting (masking) these permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in the umask are cleared in the resulting file mode.

umask can be set with either Octal or Symbolic values:

 - Octal (Numeric) Value - Represented by either three or four digits. ie umask 0027 or umask 027 If a four digit umask is used, the first digit is ignored. The remaining three digits effect the resulting permissions for user, group, and world/other respectively.
 - Symbolic Value - Represented by a comma separated list for User u group g and world/other o The permissions listed are not masked by umask ie a umask set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask 027 This umask would set a newly created directory with file mode drwxr-x--- and a newly created file with file mode rw-r-----

root user Shell Configuration Files:

 - /root/.bash_profile - Is executed to configure the root users' shell before the initial command prompt. Is only read by login shells.
 - /root/.bashrc - Is executed for interactive shells. only read by a shell that's both interactive and non-login

umask is set by order of precedence. If umask is set in multiple locations, this order of precedence will determine the system's default umask

Order of precedence:

 - /root/.bash_profile
 - /root/.bashrc
 - The system default umask

Setting a secure value for umask ensures that users make a conscious choice about their file permissions. A permissive umask value could result in directories or files with excessive permissions that can be read and/or written to by unauthorized users.

Solution:
Edit /root/.bash_profile and /root/.bashrc and remove, comment out, or update any line with umask to be 0027 or more restrictive.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: (?i)^\h*umask\h+(([0-7][0-7][01][0-7]\b|[0-7][0-7][0-7][0-6]\b)|([0-7][01][0-7]\b|[0-7][0-7][0-6]\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\b)))
file: /root/.bash_profile /root/.bashrc
regex: (?i)^\h*umask\h+(([0-7][0-7][01][0-7]\b|[0-7][0-7][0-7][0-6]\b)|([0-7][01][0-7]\b|[0-7][0-7][0-6]\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\b)))

Actual Value:
Non-compliant file(s):
      /root/.bashrc - regex '(?i)^\h*umask\h+(([0-7][0-7][01][0-7]\b|[0-7][0-7][0-7][0-6]\b)|([0-7][01][0-7]\b|[0-7][0-7][0-6]\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\b)))' found - expect '(?i)^\h*umask\h+(([0-7][0-7][01][0-7]\b|[0-7][0-7][0-7][0-6]\b)|([0-7][01][0-7]\b|[0-7][0-7][0-6]\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\b)))' found in the following lines:
          110: umask 026","Edit /root/.bash_profile and /root/.bashrc and remove, comment out, or update any line with umask to be 0027 or more restrictive.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.7 Ensure system accounts do not have a valid login shell"" : [PASSED]

There are a number of accounts provided with most distributions that are used to manage applications and are not intended to provide an interactive shell. Furthermore, a user may add special accounts that are not intended to provide an interactive shell.

It is important to make sure that accounts that are not being used by regular users are prevented from being used to provide an interactive shell. By default, most distributions set the password field for these accounts to an invalid string, but it is also recommended that the shell field in the password file be set to the nologin shell. This prevents the account from potentially being used to run any commands.

Solution:
Run the following command to set the shell for any service accounts returned by the audit to nologin :

# usermod -s $(command -v nologin) <user>

Example script:

#!/usr/bin/env bash

{
   l_valid_shells=""^($( awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   awk -v pat=""$l_valid_shells"" -F: '($1!~/^(root|halt|sync|shutdown|nfsnobody)$/ &amp;&amp; ($3<'""$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)""' || $3 == 65534) &amp;&amp; $(NF) ~ pat) {system (""usermod -s '""$(command -v nologin)""' "" $1)}' /etc/passwd
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^pass$

Actual Value:
The command script with multiple lines returned : 

pass","Run the following command to set the shell for any service accounts returned by the audit to nologin :

# usermod -s $(command -v nologin) <user>

Example script:

#!/usr/bin/env bash

{
   l_valid_shells=""^($( awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   awk -v pat=""$l_valid_shells"" -F: '($1!~/^(root|halt|sync|shutdown|nfsnobody)$/ &amp;&amp; ($3<'""$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)""' || $3 == 65534) &amp;&amp; $(NF) ~ pat) {system (""usermod -s '""$(command -v nologin)""' "" $1)}' /etc/passwd
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.8 Ensure accounts without a valid login shell are locked"" : [PASSED]

There are a number of accounts provided with most distributions that are used to manage applications and are not intended to provide an interactive shell. Furthermore, a user may add special accounts that are not intended to provide an interactive shell.

It is important to make sure that accounts that are not being used by regular users are prevented from being used to provide an interactive shell. By default, most distributions set the password field for these accounts to an invalid string, but it is also recommended that the shell field in the password file be set to the nologin shell. This prevents the account from potentially being used to run any commands.

Solution:
Run the following command to lock any non-root accounts without a valid login shell returned by the audit:

# usermod -L <user>

Example script:

:

#!/usr/bin/env bash

{
   l_valid_shells=""^($(awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   while IFS= read -r l_user; do
      passwd -S ""$l_user"" | awk '$2 !~ /^L/ {system (""usermod -L "" $1)}'
   done < <(awk -v pat=""$l_valid_shells"" -F: '($1 != ""root"" &amp;&amp; $(NF) !~ pat) {print $1}' /etc/passwd)
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^pass$

Actual Value:
The command script with multiple lines returned : 

pass","Run the following command to lock any non-root accounts without a valid login shell returned by the audit:

# usermod -L <user>

Example script:

:

#!/usr/bin/env bash

{
   l_valid_shells=""^($(awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   while IFS= read -r l_user; do
      passwd -S ""$l_user"" | awk '$2 !~ /^L/ {system (""usermod -L "" $1)}'
   done < <(awk -v pat=""$l_valid_shells"" -F: '($1 != ""root"" &amp;&amp; $(NF) !~ pat) {print $1}' /etc/passwd)
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.3.2 Ensure default user shell timeout is configured"" : [PASSED]

TMOUT is an environmental setting that determines the timeout of a shell in seconds.

 - TMOUT=

n

- Sets the shell timeout to

n

seconds. A setting of TMOUT=0 disables timeout.
 - readonly TMOUT- Sets the TMOUT environmental variable as readonly, preventing unwanted modification during run-time.
 - export TMOUT - exports the TMOUT variable

System Wide Shell Configuration Files:

 - /etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in thebash_profile however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive

login

shells, or shells executed with the --login parameter.
 - /etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.
 - /etc/bashrc - System wide version ofbashrc In Fedora derived distributions, /etc/bashrc also invokes /etc/profile.d/*.sh if

non-login

shell, but redirects output to /dev/null if

non-interactive.

Is only executed for

interactive

shells or if BASH_ENV is set to /etc/bashrc

Setting a timeout value reduces the window of opportunity for unauthorized user access to another user's shell session that has been left unattended. It also ends the inactive session and releases the resources associated with that session.

Solution:
Review /etc/bashrc /etc/profile and all files ending in *.sh in the /etc/profile.d/ directory and remove or edit all TMOUT=_n_ entries to follow local site policy. TMOUT should not exceed 900 or be equal to 0

Configure TMOUT in one of the following files:

 - A file in the /etc/profile.d/ directory ending insh
 - /etc/profile
 - /etc/bashrc

TMOUT configuration examples:

 - As multiple lines:

TMOUT=900
readonly TMOUT
export TMOUT
 - As a single line:

readonly TMOUT=900 ; export TMOUT

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*passed:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

grep: : No such file or directory
grep: : No such file or directory

PASSED

TMOUT is configured in: ""/etc/profile.d/90-anapaya.sh""","Review /etc/bashrc /etc/profile and all files ending in *.sh in the /etc/profile.d/ directory and remove or edit all TMOUT=_n_ entries to follow local site policy. TMOUT should not exceed 900 or be equal to 0

Configure TMOUT in one of the following files:

 - A file in the /etc/profile.d/ directory ending insh
 - /etc/profile
 - /etc/bashrc

TMOUT configuration examples:

 - As multiple lines:

TMOUT=900
readonly TMOUT
export TMOUT
 - As a single line:

readonly TMOUT=900 ; export TMOUT","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.3.3 Ensure default user umask is configured"" : [FAILED]

The user file-creation mode mask ( umask ) is used to determine the file permission for newly created directories and files. In Linux, the default permissions for any newly created directory is 0777 ( rwxrwxrwx ), and for any newly created file it is 0666 ( rw-rw-rw- ). The umask modifies the default Linux permissions by restricting (masking) these permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in the umask are cleared in the resulting file mode.

umask can be set with either Octal or Symbolic values:

 - Octal (Numeric) Value - Represented by either three or four digits. ie umask 0027 or umask 027 If a four digit umask is used, the first digit is ignored. The remaining three digits effect the resulting permissions for user, group, and world/other respectively.
 - Symbolic Value - Represented by a comma separated list for User u group g and world/other o The permissions listed are not masked by umask ie a umask set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask 027 This umask would set a newly created directory with file mode drwxr-x--- and a newly created file with file mode rw-r-----

The default umask can be set to use the pam_umask module or in a System Wide Shell Configuration File The user creating the directories or files has the discretion of changing the permissions via the chmod command, or choosing a different default umask by adding the umask command into a User Shell Configuration File (bash_profile orbashrc ), in their home directory.

Setting the default umask:

 - pam_umask module:
 - will set the umask according to the system default in /etc/login.defs and user settings, solving the problem of different umask settings with different shells, display managers, remote sessions etc.
 - umask=<mask> value in the /etc/login.defs file is interpreted as Octal
 - Setting USERGROUPS_ENAB to yes in /etc/login.defs (default):
 - will enable setting of the umask group bits to be the same as owner bits. (examples: 022 -> 002, 077 -> 007) for non-root users, if the uid is the same as gid and username is the same as the <primary group name>
 - userdel will remove the user's group if it contains no more members, and useradd will create by default a group with the name of the user

 - System Wide Shell Configuration File :
 - /etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in thebash_profile however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive

login

shells, or shells executed with the --login parameter.
 - /etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.
 - /etc/bashrc - System wide version ofbashrc In Fedora derived distributions, etc/bashrc also invokes /etc/profile.d/*.sh if

non-login

shell, but redirects output to /dev/null if

non-interactive.

Is only executed for

interactive

shells or if BASH_ENV is set to /etc/bashrc

User Shell Configuration Files:

 - ~/.bash_profile - Is executed to configure your shell before the initial command prompt. Is only read by login shells.
 - ~/.bashrc - Is executed for interactive shells. only read by a shell that's both interactive and non-login

umask is set by order of precedence. If umask is set in multiple locations, this order of precedence will determine the system's default umask

Order of precedence:

 - A file in /etc/profile.d/ ending insh - This will override any other system-wide umask setting
 - In the file /etc/profile
 - On the pam_umask.so module in /etc/pam.d/postlogin
 - In the file /etc/login.defs
 - In the file /etc/default/login

Setting a secure default value for umask ensures that users make a conscious choice about their file permissions. A permissive umask value could result in directories or files with excessive permissions that can be read and/or written to by unauthorized users.

Solution:
Run the following script and perform the instructions in the output:

#!/usr/bin/env bash

{
   l_output="""" l_output2="""" l_out=""""
   file_umask_chk()
   {
      if grep -Psiq -- '^h*umaskh+(0?[0-7][2-7]7|u(=[rwx]{0,3}),g=([rx]{0,2}),o=)(h*#.*)?$' ""$l_file""; then
         l_out=""$l_out
 - umask is set correctly in \""$l_file\""""
      elif grep -Psiq -- '^h*umaskh+(([0-7][0-7][01][0-7]b|[0-7][0-7][0-7][0-6]b)|([0-7][01][0-7]b|[0-7][0-7][0-6]b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}b)))' ""$l_file""; then
         l_output2=""$l_output2
 - \""$l_file\""""
      fi
   }
   while IFS= read -r -d $'0' l_file; do
      file_umask_chk
   done < <(find /etc/profile.d/ -type f -name '*.sh' -print0)
   [ -n ""$l_out"" ] &amp;&amp; l_output=""$l_out""
   l_file=""/etc/profile"" &amp;&amp; file_umask_chk
   l_file=""/etc/bashrc"" &amp;&amp; file_umask_chk
   l_file=""/etc/bash.bashrc"" &amp;&amp; file_umask_chk
   l_file=""/etc/pam.d/postlogin""
   if grep -Psiq '^h*sessionh+[^#
r]+h+pam_umask.soh+([^#
r]+h+)?umask=(([0-7][0-7][01][0-7]b|[0-7][0-7][0-7][0-6]b)|([0-7][01][0-7]b))' ""$l_file""; then
      l_output2=""$l_output2
 - \""$l_file\""""
   fi
   l_file=""/etc/login.defs"" &amp;&amp; file_umask_chk
   l_file=""/etc/default/login"" &amp;&amp; file_umask_chk
   if [ -z ""$l_output2"" ]; then
      echo -e "" - No files contain a UMASK that is not restrictive enough
 No UMASK updates required to existing files""
   else
      echo -e ""
 - UMASK is not restrictive enough in the following file(s):$l_output2

- Remediation Procedure:
 - Update these files and comment out the UMASK line
 or update umask to be \""0027\"" or more restrictive""
   fi
   if [ -n ""$l_output"" ]; then
      echo -e ""$l_output""
   else
      echo -e "" - Configure UMASK in a file in the \""/etc/profile.d/\"" directory ending in \"".sh\""

 Example Command (Hash to represent being run at a root prompt):

# printf '%s\
' \""umask 027\"" > /etc/profile.d/50-systemwide_umask.sh
""
   fi
}

Notes:

 - This method only applies to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked
 - If the pam_umask.so module is going to be used to set umask ensure that it's not being overridden by another setting. Refer to the PAM_UMASK(8) man page for more information

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - * Reasons for audit failure * :

 - umask is incorrectly set in ""/etc/login.defs""","Run the following script and perform the instructions in the output:

#!/usr/bin/env bash

{
   l_output="""" l_output2="""" l_out=""""
   file_umask_chk()
   {
      if grep -Psiq -- '^h*umaskh+(0?[0-7][2-7]7|u(=[rwx]{0,3}),g=([rx]{0,2}),o=)(h*#.*)?$' ""$l_file""; then
         l_out=""$l_out
 - umask is set correctly in \""$l_file\""""
      elif grep -Psiq -- '^h*umaskh+(([0-7][0-7][01][0-7]b|[0-7][0-7][0-7][0-6]b)|([0-7][01][0-7]b|[0-7][0-7][0-6]b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}b)))' ""$l_file""; then
         l_output2=""$l_output2
 - \""$l_file\""""
      fi
   }
   while IFS= read -r -d $'0' l_file; do
      file_umask_chk
   done < <(find /etc/profile.d/ -type f -name '*.sh' -print0)
   [ -n ""$l_out"" ] &amp;&amp; l_output=""$l_out""
   l_file=""/etc/profile"" &amp;&amp; file_umask_chk
   l_file=""/etc/bashrc"" &amp;&amp; file_umask_chk
   l_file=""/etc/bash.bashrc"" &amp;&amp; file_umask_chk
   l_file=""/etc/pam.d/postlogin""
   if grep -Psiq '^h*sessionh+[^#
r]+h+pam_umask.soh+([^#
r]+h+)?umask=(([0-7][0-7][01][0-7]b|[0-7][0-7][0-7][0-6]b)|([0-7][01][0-7]b))' ""$l_file""; then
      l_output2=""$l_output2
 - \""$l_file\""""
   fi
   l_file=""/etc/login.defs"" &amp;&amp; file_umask_chk
   l_file=""/etc/default/login"" &amp;&amp; file_umask_chk
   if [ -z ""$l_output2"" ]; then
      echo -e "" - No files contain a UMASK that is not restrictive enough
 No UMASK updates required to existing files""
   else
      echo -e ""
 - UMASK is not restrictive enough in the following file(s):$l_output2

- Remediation Procedure:
 - Update these files and comment out the UMASK line
 or update umask to be \""0027\"" or more restrictive""
   fi
   if [ -n ""$l_output"" ]; then
      echo -e ""$l_output""
   else
      echo -e "" - Configure UMASK in a file in the \""/etc/profile.d/\"" directory ending in \"".sh\""

 Example Command (Hash to represent being run at a root prompt):

# printf '%s\
' \""umask 027\"" > /etc/profile.d/50-systemwide_umask.sh
""
   fi
}

Notes:

 - This method only applies to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked
 - If the pam_umask.so module is going to be used to set umask ensure that it's not being overridden by another setting. Refer to the PAM_UMASK(8) man page for more information","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.1.1 Ensure AIDE is installed"" : [FAILED]

AIDE takes a snapshot of filesystem state including modification times, permissions, and file hashes which can then be used to compare against the current state of the filesystem to detect modifications to the system.

By monitoring the filesystem state compromised files can be detected to prevent or limit the exposure of accidental or malicious misconfigurations or modified binaries.

Solution:
Install AIDE using the appropriate package manager or manual installation:

# apt install aide aide-common

Configure AIDE as appropriate for your environment. Consult the AIDE documentation for options.

Run the following commands to initialize AIDE:

# aideinit
# mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.7,800-171|3.3.1,800-171|3.3.2,800-53|AC-6(9),800-53|AU-2,800-53|AU-12,800-53r5|AC-6(9),800-53r5|AU-2,800-53r5|AU-12,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.3(a),CN-L3|8.1.10.6(a),CSCv7|14.9,CSCv8|3.14,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.3,ITSG-33|AC-6,ITSG-33|AU-2,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - dpkg check aide-common
The command '/bin/dpkg -s aide-common 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

dpkg-query: package 'aide-common' is not installed and no information is available

-------------------------
FAILED - dpkg check aide
The command '/bin/dpkg -s aide 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

dpkg-query: package 'aide' is not installed and no information is available","Install AIDE using the appropriate package manager or manual installation:

# apt install aide aide-common

Configure AIDE as appropriate for your environment. Consult the AIDE documentation for options.

Run the following commands to initialize AIDE:

# aideinit
# mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.1.2 Ensure filesystem integrity is regularly checked"" : [FAILED]

Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.

Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion.

Solution:
If cron will be used to schedule and run aide check:

Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/bin/aide.wrapper --config /etc/aide/aide.conf --update

- OR - If aidecheck.service and aidecheck.timer will be used to schedule and run aide check:

Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/bin/aide.wrapper --config /etc/aide/aide.conf --update

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|14.9,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
expect: ^([^#\n\r]+\h+)?(\/usr\/s?bin\/|^\h*)aide(\.wrapper)?\h+(--(check|update)|([^#\n\r]+\h+)?\$AIDEARGS)\b
file: /etc/cron.daily/* /etc/cron.hourly/* /etc/cron.monthly/* /etc/cron.weekly/* /var/spool/cron/crontabs/* /var/spool/cron/* /etc/crontab
min_occurrences: 1
regex: ^([^#\n\r]+\h+)?(\/usr\/s?bin\/|^\h*)aide(\.wrapper)?\h+(--(check|update)|([^#\n\r]+\h+)?\$AIDEARGS)\b
string_required: NO

Actual Value:
No matching files were found
Less than 1 matches of regex found","If cron will be used to schedule and run aide check:

Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/bin/aide.wrapper --config /etc/aide/aide.conf --update

- OR - If aidecheck.service and aidecheck.timer will be used to schedule and run aide check:

Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/bin/aide.wrapper --config /etc/aide/aide.conf --update

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.1.1 Ensure journald service is enabled and active"" : [PASSED]

Ensure that the systemd-journald service is enabled to allow capturing of logging events.

If the systemd-journald service is not enabled to start on boot, the system will not capture logging events.

Solution:
Run the following commands to unmask and start systemd-journald.service

# systemctl unmask systemd-journald.service
# systemctl start systemd-journald.service

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - journald check - active
The command '/bin/systemctl is-active systemd-journald.service' returned : 

active

-------------------------
PASSED - journald check - enabled
The command '/bin/systemctl is-enabled systemd-journald.service' returned : 

static","Run the following commands to unmask and start systemd-journald.service

# systemctl unmask systemd-journald.service
# systemctl start systemd-journald.service","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.1.2 Ensure journald log file access is configured"" : [WARNING]

Journald will create logfiles that do not already exist on the system. This setting controls what permissions will be applied to these newly created files.

It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance.

Solution:
If the default configuration is not appropriate for the site specific requirements, copy /usr/lib/tmpfiles.d/systemd.conf to /etc/tmpfiles.d/systemd.conf and modify as required. Requirements is either 0640 or site policy if that is less restrictive.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
WARNING","If the default configuration is not appropriate for the site specific requirements, copy /usr/lib/tmpfiles.d/systemd.conf to /etc/tmpfiles.d/systemd.conf and modify as required. Requirements is either 0640 or site policy if that is less restrictive.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.1.3 Ensure journald log file rotation is configured"" : [WARNING]

Journald includes the capability of rotating log files regularly to avoid filling up the system with logs or making the logs unmanageably large. The file /etc/systemd/journald.conf is the configuration file used to specify how logs generated by Journald should be rotated.

By keeping the log files smaller and more manageable, a system administrator can easily archive these files to another system and spend less time looking through inordinately large log files.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Edit /etc/systemd/journald.conf or a file ending inconf the /etc/systemd/journald.conf.d/ directory. Set the following parameters in the [Journal] section to ensure logs are rotated according to site policy. The settings should be carefully understood as there are specific edge cases and prioritization of parameters.

The specific parameters for log rotation are:

SystemMaxUse=
SystemKeepFree=
RuntimeMaxUse=
RuntimeKeepFree=
MaxFileSec=

Note: If these settings appear in a canonically later file, or later in the same file, the setting will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
expect: ^Manual Review Required$
file: /etc/systemd/journald.conf /etc/systemd/journald.conf.d/*
min_occurrences: 1
regex: ^[\s]*(SystemMaxUse|SystemKeepFree|RuntimeMaxUse|RuntimeKeepFree|MaxFileSec)[\s]*=
required: NO

Actual Value:
No matching files were found
Less than 1 matches of regex found","Edit /etc/systemd/journald.conf or a file ending inconf the /etc/systemd/journald.conf.d/ directory. Set the following parameters in the [Journal] section to ensure logs are rotated according to site policy. The settings should be carefully understood as there are specific edge cases and prioritization of parameters.

The specific parameters for log rotation are:

SystemMaxUse=
SystemKeepFree=
RuntimeMaxUse=
RuntimeKeepFree=
MaxFileSec=

Note: If these settings appear in a canonically later file, or later in the same file, the setting will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.1.4 Ensure journald ForwardToSyslog is disabled"" : [PASSED]

Data from journald should be kept in the confines of the service and not forwarded to other services.

Logs of the system should be handled by journald and not forwarded to other logging mechanisms.

Solution:
Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending inconf :

ForwardToSyslog=no

Example:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/
   if grep -Psq -- '^h*[Journal] /etc/systemd/journald.conf.d/60-journald.conf; then
      printf '%s
' ""ForwardToSyslog=no"" >> /etc/systemd/journald.conf.d/60-journald.conf
   else
      printf '%s
' ""[Journal]"" ""ForwardToSyslog=no"" >> /etc/systemd/journald.conf.d/60-journald.conf
   fi
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - ""ForwardToSyslog"" is not set in an included file
   ** Note: ""ForwardToSyslog"" May be set in a file that's ignored by load procedure **","Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending inconf :

ForwardToSyslog=no

Example:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/
   if grep -Psq -- '^h*[Journal] /etc/systemd/journald.conf.d/60-journald.conf; then
      printf '%s
' ""ForwardToSyslog=no"" >> /etc/systemd/journald.conf.d/60-journald.conf
   else
      printf '%s
' ""[Journal]"" ""ForwardToSyslog=no"" >> /etc/systemd/journald.conf.d/60-journald.conf
   fi
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.1.5 Ensure journald Storage is configured"" : [FAILED]

Data from journald may be stored in volatile memory or persisted locally on the server. Logs in memory will be lost upon a system reboot. By persisting logs to local disk on the server they are protected from loss due to a reboot.

Writing log data to disk will provide the ability to forensically reconstruct events which may have impacted the operations or security of a system even after a system crash or reboot.

Solution:
Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending inconf :

Storage=persistent

Example:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/
   if grep -Psq -- '^h*[Journal]' /etc/systemd/journald.conf.d/60-journald.conf; then
      printf '%s
' ""Storage=persistent"" >> /etc/systemd/journald.conf.d/60-journald.conf
   else
      printf '%s
' ""[Journal]"" ""Storage=persistent"" >> /etc/systemd/journald.conf.d/60-journald.conf
   fi
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""Storage"" is not set in an included file
   ** Note: ""Storage"" May be set in a file that's ignored by load procedure **","Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending inconf :

Storage=persistent

Example:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/
   if grep -Psq -- '^h*[Journal]' /etc/systemd/journald.conf.d/60-journald.conf; then
      printf '%s
' ""Storage=persistent"" >> /etc/systemd/journald.conf.d/60-journald.conf
   else
      printf '%s
' ""[Journal]"" ""Storage=persistent"" >> /etc/systemd/journald.conf.d/60-journald.conf
   fi
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.1.6 Ensure journald Compress is configured"" : [FAILED]

The journald system includes the capability of compressing overly large files to avoid filling up the system with logs or making the logs unmanageably large.

Uncompressed large files may unexpectedly fill a filesystem leading to resource unavailability. Compressing logs prior to write can prevent sudden, unexpected filesystem impacts.

Solution:
Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending inconf :

Compress=yes

Example:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/
   if grep -Psq -- '^h*[Journal]' /etc/systemd/journald.conf.d/60-journald.conf; then
      printf '%s
' ""Compress=yes"" >> /etc/systemd/journald.conf.d/60-journald.conf
   else
      printf '%s
' ""[Journal]"" ""Compress=yes"" >> /etc/systemd/journald.conf.d/60-journald.conf
   fi
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-4,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-4,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv7|6.4,CSCv8|8.2,CSCv8|8.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.DS-4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-4,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T3.3.1,NESA|T3.6.2,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""Compress"" is not set in an included file
   ** Note: ""Compress"" May be set in a file that's ignored by load procedure **","Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending inconf :

Compress=yes

Example:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/
   if grep -Psq -- '^h*[Journal]' /etc/systemd/journald.conf.d/60-journald.conf; then
      printf '%s
' ""Compress=yes"" >> /etc/systemd/journald.conf.d/60-journald.conf
   else
      printf '%s
' ""[Journal]"" ""Compress=yes"" >> /etc/systemd/journald.conf.d/60-journald.conf
   fi
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.2.1 Ensure systemd-journal-remote is installed"" : [PASSED]

Journald systemd-journal-remote supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralized log management.

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.

Solution:
Run the following command to install systemd-journal-remote :

# apt install systemd-journal-remote

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: /bin/dpkg -s systemd-journal-remote 2>&1 | /bin/grep -E '(Status:|not installed)'
expect: ^Status: install ok

Actual Value:
The command '/bin/dpkg -s systemd-journal-remote 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

Status: install ok installed","Run the following command to install systemd-journal-remote :

# apt install systemd-journal-remote","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.2.2 Ensure systemd-journal-remote authentication is configured"" : [FAILED]

Journald systemd-journal-upload supports the ability to send log events it gathers to a remote log host.

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.

Solution:
Edit the /etc/systemd/journal-upload.conf file or a file in /etc/systemd/journal-upload.conf.d ending inconf and ensure the following lines are set in the [Upload] section per your environment:

[Upload]
URL=192.168.50.42
ServerKeyFile=/etc/ssl/private/journal-upload.pem
ServerCertificateFile=/etc/ssl/certs/journal-upload.pem
TrustedCertificateFile=/etc/ssl/ca/trusted.pem

Restart the service:

# systemctl restart systemd-journal-upload

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - Trusted Cert
The file ""/etc/systemd/journal-upload.conf"" does not contain ""^[\s]*TrustedCertificateFile[\s]*=[\s]*""

-------------------------
FAILED - Cert
The file ""/etc/systemd/journal-upload.conf"" does not contain ""^[\s]*ServerCertificateFile[\s]*=[\s]*""

-------------------------
FAILED - URL
The file ""/etc/systemd/journal-upload.conf"" does not contain ""^[\s]*URL[\s]*=[\s]*""

-------------------------
FAILED - Key
The file ""/etc/systemd/journal-upload.conf"" does not contain ""^[\s]*ServerKeyFile[\s]*=[\s]*""","Edit the /etc/systemd/journal-upload.conf file or a file in /etc/systemd/journal-upload.conf.d ending inconf and ensure the following lines are set in the [Upload] section per your environment:

[Upload]
URL=192.168.50.42
ServerKeyFile=/etc/ssl/private/journal-upload.pem
ServerCertificateFile=/etc/ssl/certs/journal-upload.pem
TrustedCertificateFile=/etc/ssl/ca/trusted.pem

Restart the service:

# systemctl restart systemd-journal-upload","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.2.3 Ensure systemd-journal-upload is enabled and active"" : [FAILED]

Journald systemd-journal-upload supports the ability to send log events it gathers to a remote log host.

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.

Solution:
Run the following commands to unmask, enable and start systemd-journal-upload :

# systemctl unmask systemd-journal-upload.service
# systemctl --now enable systemd-journal-upload.service

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - enabled
The command '/bin/systemctl is-enabled systemd-journal-upload.service' returned : 

disabled

-------------------------
FAILED - active
The command '/bin/systemctl is-active systemd-journal-upload.service' returned : 

inactive","Run the following commands to unmask, enable and start systemd-journal-upload :

# systemctl unmask systemd-journal-upload.service
# systemctl --now enable systemd-journal-upload.service","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.2.4 Ensure systemd-journal-remote service is not in use"" : [PASSED]

Journald systemd-journal-remote supports the ability to receive messages from remote hosts, thus acting as a log server. Clients should not receive data from other hosts.

NOTE:

 - The same package, systemd-journal-remote is used for both sending logs to remote hosts and receiving incoming logs.
 - With regards to receiving logs, there are two services; systemd-journal-remote.socket and systemd-journal-remote.service

If a client is configured to also receive data, thus turning it into a server, the client system is acting outside it's operational boundary.

Solution:
Run the following commands to stop and mask systemd-journal-remote.socket and systemd-journal-remote.service:

# systemctl stop systemd-journal-remote.socket systemd-journal-remote.service
# systemctl mask systemd-journal-remote.socket systemd-journal-remote.service

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - active
The command '/bin/systemctl is-active systemd-journal-remote.socket systemd-journal-remote.service | /bin/grep -P -- '^active' | /bin/awk '{print} END {if(NR==0) print ""pass""}'' returned : 

pass

-------------------------
PASSED - enabled
The command '/bin/systemctl is-enabled systemd-journal-remote.socket systemd-journal-remote.service | /bin/grep -P -- '^enabled' | /bin/awk '{print} END {if(NR==0) print ""pass""}'' returned : 

pass","Run the following commands to stop and mask systemd-journal-remote.socket and systemd-journal-remote.service:

# systemctl stop systemd-journal-remote.socket systemd-journal-remote.service
# systemctl mask systemd-journal-remote.socket systemd-journal-remote.service","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.2.1 Ensure access to all logfiles has been configured"" : [FAILED]

Log files contain information from many services on the the local system, or in the event of a centralized log server, others systems logs as well.

In general log files are found in /var/log/ although application can be configured to store logs elsewhere. Should your application store logs in another, ensure to run the same test on that location.

It is important that log files have the correct permissions to ensure that sensitive data is protected and that only the appropriate users / groups have access to them.

Solution:
Run the following script to update permissions and ownership on files in /var/log

Although the script is not destructive, ensure that the output of the audit procedure is captured in the event that the remediation causes issues.

#!/usr/bin/env bash

{
   l_op2="""" l_output2=""""
   l_uidmin=""$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)""
   file_test_fix()
   {
      l_op2=""""
      l_fuser=""root""
      l_fgroup=""root""
      if [ $(( $l_mode &amp; $perm_mask )) -gt 0 ]; then
         l_op2=""$l_op2
 - Mode: \""$l_mode\"" should be \""$maxperm\"" or more restrictive
 - Removing excess permissions""
         chmod ""$l_rperms"" ""$l_fname""
      fi
      if [[ ! ""$l_user"" =~ $l_auser ]]; then
         l_op2=""$l_op2
 - Owned by: \""$l_user\"" and should be owned by \""${l_auser//|/ or }\""
 - Changing ownership to: \""$l_fuser\""""
         chown ""$l_fuser"" ""$l_fname""
      fi
      if [[ ! ""$l_group"" =~ $l_agroup ]]; then
         l_op2=""$l_op2
 - Group owned by: \""$l_group\"" and should be group owned by \""${l_agroup//|/ or }\""
 - Changing group ownership to: \""$l_fgroup\""""
         chgrp ""$l_fgroup"" ""$l_fname""
      fi
      [ -n ""$l_op2"" ] &amp;&amp; l_output2=""$l_output2
 - File: \""$l_fname\"" is:$l_op2
""
   }
   unset a_file &amp;&amp; a_file=() # clear and initialize array
   # Loop to create array with stat of files that could possibly fail one of the audits
   while IFS= read -r -d $'0' l_file; do
      [ -e ""$l_file"" ] &amp;&amp; a_file+=(""$(stat -Lc '%n^%#a^%U^%u^%G^%g' ""$l_file"")"")
   done < <(find -L /var/log -type f ( -perm /0137 -o ! -user root -o ! -group root ) -print0)
   while IFS=""^"" read -r l_fname l_mode l_user l_uid l_group l_gid; do
      l_bname=""$(basename ""$l_fname"")""
      case ""$l_bname"" in
         lastlog | lastlog.* | wtmp | wtmp.* | wtmp-* | btmp | btmp.* | btmp-* | README)
            perm_mask='0113'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""ug-x,o-wx""
            l_auser=""root""
            l_agroup=""(root|utmp)""
            file_test_fix
            ;;
         secure | auth.log | syslog | messages)
            perm_mask='0137'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""u-x,g-wx,o-rwx""
            l_auser=""(root|syslog)""
            l_agroup=""(root|adm)""
            file_test_fix
            ;;
         SSSD | sssd)
            perm_mask='0117'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""ug-x,o-rwx""
            l_auser=""(root|SSSD)""
            l_agroup=""(root|SSSD)""
            file_test_fix
            ;;
         gdm | gdm3)
            perm_mask='0117'
            l_rperms=""ug-x,o-rwx""
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_auser=""root""
            l_agroup=""(root|gdm|gdm3)""
            file_test_fix
            ;;
         *.journal | *.journal~)
            perm_mask='0137'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""u-x,g-wx,o-rwx""
            l_auser=""root""
            l_agroup=""(root|systemd-journal)""
            file_test_fix
            ;;
         *)
            perm_mask='0137'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""u-x,g-wx,o-rwx""
            l_auser=""(root|syslog)""
            l_agroup=""(root|adm)""
            if [ ""$l_uid"" -lt ""$l_uidmin"" ] &amp;&amp; [ -z ""$(awk -v grp=""$l_group"" -F: '$1==grp {print $4}' /etc/group)"" ]; then
               if [[ ! ""$l_user"" =~ $l_auser ]]; then
                  l_auser=""(root|syslog|$l_user)""
               fi
               if [[ ! ""$l_group"" =~ $l_agroup ]]; then
                  l_tst=""""
                  while l_out3="""" read -r l_duid; do
                     [ ""$l_duid"" -ge ""$l_uidmin"" ] &amp;&amp; l_tst=failed
                  done <<< ""$(awk -F: '$4=='""$l_gid""' {print $3}' /etc/passwd)""
                  [ ""$l_tst"" != ""failed"" ] &amp;&amp; l_agroup=""(root|adm|$l_group)""
               fi
            fi
            file_test_fix
            ;;
      esac
   done <<< ""$(printf '%s
' ""${a_file[@]}"")""
   unset a_file # Clear array
   # If all files passed, then we report no changes
   if [ -z ""$l_output2"" ]; then
      echo -e ""- All files in \""/var/log/\"" have appropriate permissions and ownership
 - No changes required
""
   else
      # print report of changes
      echo -e ""
$l_output2""
   fi
}

Note: You may also need to change the configuration for your logging software or services for any logs that had incorrect permissions.

If there are services that log to other locations, ensure that those log files have the appropriate permissions.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$
timeout: 7200

Actual Value:
The command script with multiple lines returned : 

- Audit Results:
 ** Fail **

 - File: ""/var/log/alternatives.log.1"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/alternatives.log.4.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dpkg.log.7.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/faillog"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dpkg.log.2.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/ubuntu-advantage-timer.log.3.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dpkg.log.5.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/ubuntu-advantage-timer.log.4.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/ubuntu-advantage-timer.log.6.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/ubuntu-advantage-timer.log.1"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dpkg.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dpkg.log.9.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dpkg.log.3.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/ubuntu-advantage-timer.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dpkg.log.4.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dpkg.log.1"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dpkg.log.8.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/ubuntu-advantage-timer.log.5.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/alternatives.log.3.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/unattended-upgrades/unattended-upgrades-shutdown.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/ubuntu-advantage.log.1"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/ubuntu-advantage-timer.log.2.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/alternatives.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/ubuntu-advantage.log.2.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dpkg.log.6.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dist-upgrade/eipp.log.xz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dist-upgrade/history.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dist-upgrade/apt.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dist-upgrade/lspci.txt"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dist-upgrade/20231005-1347/xorg_fixup.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dist-upgrade/20231005-1347/history.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dist-upgrade/20231005-1347/apt.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dist-upgrade/20231005-1347/main.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dist-upgrade/main.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/ubuntu-advantage.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/apt/history.log.2.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/apt/history.log.5.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/apt/eipp.log.xz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/apt/history.log.8.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/apt/history.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/apt/history.log.9.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/apt/history.log.3.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/apt/history.log.7.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/apt/history.log.4.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/apt/history.log.1.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/apt/history.log.6.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/ubuntu-advantage.log.3.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/alternatives.log.2.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive","Run the following script to update permissions and ownership on files in /var/log

Although the script is not destructive, ensure that the output of the audit procedure is captured in the event that the remediation causes issues.

#!/usr/bin/env bash

{
   l_op2="""" l_output2=""""
   l_uidmin=""$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)""
   file_test_fix()
   {
      l_op2=""""
      l_fuser=""root""
      l_fgroup=""root""
      if [ $(( $l_mode &amp; $perm_mask )) -gt 0 ]; then
         l_op2=""$l_op2
 - Mode: \""$l_mode\"" should be \""$maxperm\"" or more restrictive
 - Removing excess permissions""
         chmod ""$l_rperms"" ""$l_fname""
      fi
      if [[ ! ""$l_user"" =~ $l_auser ]]; then
         l_op2=""$l_op2
 - Owned by: \""$l_user\"" and should be owned by \""${l_auser//|/ or }\""
 - Changing ownership to: \""$l_fuser\""""
         chown ""$l_fuser"" ""$l_fname""
      fi
      if [[ ! ""$l_group"" =~ $l_agroup ]]; then
         l_op2=""$l_op2
 - Group owned by: \""$l_group\"" and should be group owned by \""${l_agroup//|/ or }\""
 - Changing group ownership to: \""$l_fgroup\""""
         chgrp ""$l_fgroup"" ""$l_fname""
      fi
      [ -n ""$l_op2"" ] &amp;&amp; l_output2=""$l_output2
 - File: \""$l_fname\"" is:$l_op2
""
   }
   unset a_file &amp;&amp; a_file=() # clear and initialize array
   # Loop to create array with stat of files that could possibly fail one of the audits
   while IFS= read -r -d $'0' l_file; do
      [ -e ""$l_file"" ] &amp;&amp; a_file+=(""$(stat -Lc '%n^%#a^%U^%u^%G^%g' ""$l_file"")"")
   done < <(find -L /var/log -type f ( -perm /0137 -o ! -user root -o ! -group root ) -print0)
   while IFS=""^"" read -r l_fname l_mode l_user l_uid l_group l_gid; do
      l_bname=""$(basename ""$l_fname"")""
      case ""$l_bname"" in
         lastlog | lastlog.* | wtmp | wtmp.* | wtmp-* | btmp | btmp.* | btmp-* | README)
            perm_mask='0113'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""ug-x,o-wx""
            l_auser=""root""
            l_agroup=""(root|utmp)""
            file_test_fix
            ;;
         secure | auth.log | syslog | messages)
            perm_mask='0137'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""u-x,g-wx,o-rwx""
            l_auser=""(root|syslog)""
            l_agroup=""(root|adm)""
            file_test_fix
            ;;
         SSSD | sssd)
            perm_mask='0117'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""ug-x,o-rwx""
            l_auser=""(root|SSSD)""
            l_agroup=""(root|SSSD)""
            file_test_fix
            ;;
         gdm | gdm3)
            perm_mask='0117'
            l_rperms=""ug-x,o-rwx""
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_auser=""root""
            l_agroup=""(root|gdm|gdm3)""
            file_test_fix
            ;;
         *.journal | *.journal~)
            perm_mask='0137'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""u-x,g-wx,o-rwx""
            l_auser=""root""
            l_agroup=""(root|systemd-journal)""
            file_test_fix
            ;;
         *)
            perm_mask='0137'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""u-x,g-wx,o-rwx""
            l_auser=""(root|syslog)""
            l_agroup=""(root|adm)""
            if [ ""$l_uid"" -lt ""$l_uidmin"" ] &amp;&amp; [ -z ""$(awk -v grp=""$l_group"" -F: '$1==grp {print $4}' /etc/group)"" ]; then
               if [[ ! ""$l_user"" =~ $l_auser ]]; then
                  l_auser=""(root|syslog|$l_user)""
               fi
               if [[ ! ""$l_group"" =~ $l_agroup ]]; then
                  l_tst=""""
                  while l_out3="""" read -r l_duid; do
                     [ ""$l_duid"" -ge ""$l_uidmin"" ] &amp;&amp; l_tst=failed
                  done <<< ""$(awk -F: '$4=='""$l_gid""' {print $3}' /etc/passwd)""
                  [ ""$l_tst"" != ""failed"" ] &amp;&amp; l_agroup=""(root|adm|$l_group)""
               fi
            fi
            file_test_fix
            ;;
      esac
   done <<< ""$(printf '%s
' ""${a_file[@]}"")""
   unset a_file # Clear array
   # If all files passed, then we report no changes
   if [ -z ""$l_output2"" ]; then
      echo -e ""- All files in \""/var/log/\"" have appropriate permissions and ownership
 - No changes required
""
   else
      # print report of changes
      echo -e ""
$l_output2""
   fi
}

Note: You may also need to change the configuration for your logging software or services for any logs that had incorrect permissions.

If there are services that log to other locations, ensure that those log files have the appropriate permissions.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.1 Ensure permissions on /etc/passwd are configured"" : [PASSED]

The /etc/passwd file contains user account information that is used by many system utilities and therefore must be readable for these utilities to operate.

It is critical to ensure that the /etc/passwd file is protected from unauthorized write access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.

Solution:
Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd :

# chmod u-x,go-wx /etc/passwd
# chown root:root /etc/passwd

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/passwd
group: root
mask: 133
owner: root

Actual Value:
The file /etc/passwd with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/passwd","Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd :

# chmod u-x,go-wx /etc/passwd
# chown root:root /etc/passwd","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.10 Ensure permissions on /etc/security/opasswd are configured"" : [PASSED]

/etc/security/opasswd and it's backup /etc/security/opasswd.old hold user's previous passwords if pam_unix or pam_pwhistory is in use on the system

It is critical to ensure that /etc/security/opasswd is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.

Solution:
Run the following commands to remove excess permissions, set owner, and set group on /etc/security/opasswd and /etc/security/opasswd.old is they exist:

# [ -e ""/etc/security/opasswd"" ] &amp;&amp; chmod u-x,go-rwx /etc/security/opasswd
# [ -e ""/etc/security/opasswd"" ] &amp;&amp; chown root:root /etc/security/opasswd
# [ -e ""/etc/security/opasswd.old"" ] &amp;&amp; chmod u-x,go-rwx /etc/security/opasswd.old
# [ -e ""/etc/security/opasswd.old"" ] &amp;&amp; chown root:root /etc/security/opasswd.old

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - etc/security/opasswd file permissions
The file /etc/security/opasswd with fmode owner: root group: root mode: 0600 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/security/opasswd

-------------------------
PASSED - /etc/security/opasswd.old file permissions","Run the following commands to remove excess permissions, set owner, and set group on /etc/security/opasswd and /etc/security/opasswd.old is they exist:

# [ -e ""/etc/security/opasswd"" ] &amp;&amp; chmod u-x,go-rwx /etc/security/opasswd
# [ -e ""/etc/security/opasswd"" ] &amp;&amp; chown root:root /etc/security/opasswd
# [ -e ""/etc/security/opasswd.old"" ] &amp;&amp; chmod u-x,go-rwx /etc/security/opasswd.old
# [ -e ""/etc/security/opasswd.old"" ] &amp;&amp; chown root:root /etc/security/opasswd.old","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.11 Ensure world writable files and directories are secured"" : [FAILED]

World writable files are the least secure. Data in world-writable files can be modified and compromised by any user on the system. World writable files may also indicate an incorrectly written script or program that could potentially be the cause of a larger compromise to the system's integrity. See the chmod(2) man page for more information.

Setting the sticky bit on world writable directories prevents users from deleting or renaming files in that directory that are not owned by them.

Data in world-writable files can be modified and compromised by any user on the system. World writable files may also indicate an incorrectly written script or program that could potentially be the cause of a larger compromise to the system's integrity.

This feature prevents the ability to delete or rename files in world writable directories (such as /tmp ) that are owned by another user.

Solution:
- World Writable Files:
 - It is recommended that write access is removed from other with the command ( chmod o-w <filename> ), but always consult relevant vendor documentation to avoid breaking any application dependencies on a given file.

 - World Writable Directories:
 - Set the sticky bit on all world writable directories with the command ( chmod a+t <directory_name> )

Run the following script to:

 - Remove other write permission from any world writable files
 - Add the sticky bit to all world writable directories

#!/usr/bin/env bash

{
   l_smask='01000'
   a_file=(); a_dir=() # Initialize arrays
   a_path=(! -path ""/run/user/*"" -a ! -path ""/proc/*"" -a ! -path ""*/containerd/*"" -a ! -path ""*/kubelet/pods/*"" -a ! -path ""*/kubelet/plugins/*"" -a ! -path ""/sys/*"" -a ! -path ""/snap/*"")
   while IFS= read -r l_mount; do
      while IFS= read -r -d $'0' l_file; do
         if [ -e ""$l_file"" ]; then
            l_mode=""$(stat -Lc '%#a' ""$l_file"")""
            if [ -f ""$l_file"" ]; then # Remove excess permissions from WW files
               echo -e "" - File: \""$l_file\"" is mode: \""$l_mode\""
 - removing write permission on \""$l_file\"" from \""other\""""
               chmod o-w ""$l_file""
            fi
            if [ -d ""$l_file"" ]; then # Add sticky bit
               if [ ! $(( $l_mode &amp; $l_smask )) -gt 0 ]; then
                  echo -e "" - Directory: \""$l_file\"" is mode: \""$l_mode\"" and doesn't have the sticky bit set
 - Adding the sticky bit""
                  chmod a+t ""$l_file""
               fi
            fi
         fi
      done < <(find ""$l_mount"" -xdev ( ""${a_path[@]}"" ) ( -type f -o -type d ) -perm -0002 -print0 2> /dev/null)
   done < <(findmnt -Dkerno fstype,target | awk '($1 !~ /^s*(nfs|proc|smb|vfat|iso9660|efivarfs|selinuxfs)/ &amp;&amp; $2 !~ /^(/run/user/|/tmp|/var/tmp)/){print $2}')
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
name: find_world_writeable_files
timeout: 7200

Actual Value:
The following 20 files are world writeable:

  /var/lib/docker/overlay2/2c52d501f8efb9a88aa9b42222e1fa91423208e89032d13ab4c10833eb4579c3/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/a61d71551040a2dbcdc9486754d5893a95daa05630eb3fe595ebaff12f2fedd1/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/ec077ba2363b072e1a1e56fec8004e31ff5b1aba235a3af33fb82066a1b71a44/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/5813459578d29b4301854a9713108c6e92186a9b6f23bf0a188be84fb5d149cf/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/4496f9438ef363cc067e514ab3106999a43763e08fb4f1ab67354e0683ce64a5/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/dd6440b7f8fab1706529d05c08c78c70a93c556e229ba4ea48d253314732b068/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/2a0a283bc7132b1fe6771c44d33d2883df6bde4e438a1a9d5303bb6ff81a45b7/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/2b16d40a42fa70e30a5f16de5b1ec2a09962c3ff957904923d016f74e2903fee/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/cecce0ff8127e6beb172ab518aa534571b15393fa1addd60e032f907ad6db9b6/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/435de6f7d0fe618bf9c8f6a2e873e06ca459c25ba0e3d664df78d019cd1950c5/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/2c0e60b8e863ab35a198b1ffd8c9c3cf9b34bd6cfab53309d63175fed44349a2/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/657bf062417f3533ae387259cf405577c5471c12b139a939f98fa32ffaddc1c8/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/e14120d5069193dc557d4b1b30397aa9c29ac5ac3183b435a39b0c2bc7e5e8d9/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/08b13a5fe9224b3d77ab4fb61a5c5383ef528b0801a6ffafa87be7e2876d39e0/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/e7ed5c37153ae981dbeaccc698212b0f2c68794276d76e162bfa99b250843e69/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/ac43ed18fda83ccaba3bfabd5c458c49bfcca6e1b4a576e6f76121e3011be531/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/f96cbab491579ed5bc56fe220573cc0c2f7f0634bbf9579a191729d3e067a1a8/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/dcf103b0848a5057248b08e2dbde1419848e25724f56302dafbc35642eecd046/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/1a5c86f5ce1085b21642251b06d4ed7a8b3cab0b7c4b266c0bb3a53786a37644/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/1ee40fd07a5e62f98c14feb2110c7e8032c1f8ec1ffa299f2c9d2679703c15f8/lower
     owner: root, group: root, permissions: 0666","- World Writable Files:
 - It is recommended that write access is removed from other with the command ( chmod o-w <filename> ), but always consult relevant vendor documentation to avoid breaking any application dependencies on a given file.

 - World Writable Directories:
 - Set the sticky bit on all world writable directories with the command ( chmod a+t <directory_name> )

Run the following script to:

 - Remove other write permission from any world writable files
 - Add the sticky bit to all world writable directories

#!/usr/bin/env bash

{
   l_smask='01000'
   a_file=(); a_dir=() # Initialize arrays
   a_path=(! -path ""/run/user/*"" -a ! -path ""/proc/*"" -a ! -path ""*/containerd/*"" -a ! -path ""*/kubelet/pods/*"" -a ! -path ""*/kubelet/plugins/*"" -a ! -path ""/sys/*"" -a ! -path ""/snap/*"")
   while IFS= read -r l_mount; do
      while IFS= read -r -d $'0' l_file; do
         if [ -e ""$l_file"" ]; then
            l_mode=""$(stat -Lc '%#a' ""$l_file"")""
            if [ -f ""$l_file"" ]; then # Remove excess permissions from WW files
               echo -e "" - File: \""$l_file\"" is mode: \""$l_mode\""
 - removing write permission on \""$l_file\"" from \""other\""""
               chmod o-w ""$l_file""
            fi
            if [ -d ""$l_file"" ]; then # Add sticky bit
               if [ ! $(( $l_mode &amp; $l_smask )) -gt 0 ]; then
                  echo -e "" - Directory: \""$l_file\"" is mode: \""$l_mode\"" and doesn't have the sticky bit set
 - Adding the sticky bit""
                  chmod a+t ""$l_file""
               fi
            fi
         fi
      done < <(find ""$l_mount"" -xdev ( ""${a_path[@]}"" ) ( -type f -o -type d ) -perm -0002 -print0 2> /dev/null)
   done < <(findmnt -Dkerno fstype,target | awk '($1 !~ /^s*(nfs|proc|smb|vfat|iso9660|efivarfs|selinuxfs)/ &amp;&amp; $2 !~ /^(/run/user/|/tmp|/var/tmp)/){print $2}')
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.12 Ensure no files or directories without an owner and a group exist"" : [FAILED]

Administrators may delete users or groups from the system and neglect to remove all files and/or directories owned by those users or groups.

A new user or group who is assigned a deleted user's user ID or group ID may then end up ""owning"" a deleted user or group's files, and thus have more access on the system than was intended.

Solution:
Remove or set ownership and group ownership of these files and/or directories to an active user on the system as appropriate.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
name: find_orphan_files
timeout: 7200

Actual Value:
The following 11 files are orphaned:

  /var/lib/docker/overlay2/516a6ce48195777c88cdadfd9aff21a80e42e1dce88b59f8241dfc9be824d1c7/diff/home
     owner: 65532, group: 65532, permissions: 0755

  /var/lib/docker/overlay2/516a6ce48195777c88cdadfd9aff21a80e42e1dce88b59f8241dfc9be824d1c7/diff/home/nonroot
     owner: 65532, group: 65532, permissions: 0700

  /var/lib/docker/overlay2/1d021dc8bc01cec2619fbd84ea21b6fef71384846d308e7e5308d8a8b4849dea/diff/pkgs/apk/x86_64
     owner: anapaya, group: 300, permissions: 0755

  /var/lib/docker/overlay2/1d021dc8bc01cec2619fbd84ea21b6fef71384846d308e7e5308d8a8b4849dea/diff/pkgs/apk/x86_64/APKINDEX.tar.gz
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/1d021dc8bc01cec2619fbd84ea21b6fef71384846d308e7e5308d8a8b4849dea/diff/pkgs/apk/x86_64/libyang-dev-2.1.80-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/1d021dc8bc01cec2619fbd84ea21b6fef71384846d308e7e5308d8a8b4849dea/diff/pkgs/apk/x86_64/libyang-doc-2.1.80-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/1d021dc8bc01cec2619fbd84ea21b6fef71384846d308e7e5308d8a8b4849dea/diff/pkgs/apk/x86_64/frr-9.1_git-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/1d021dc8bc01cec2619fbd84ea21b6fef71384846d308e7e5308d8a8b4849dea/diff/pkgs/apk/x86_64/frr-dbg-9.1_git-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/1d021dc8bc01cec2619fbd84ea21b6fef71384846d308e7e5308d8a8b4849dea/diff/pkgs/apk/x86_64/libyang-2.1.80-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/1d021dc8bc01cec2619fbd84ea21b6fef71384846d308e7e5308d8a8b4849dea/diff/pkgs/apk/x86_64/frr-doc-9.1_git-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/1d021dc8bc01cec2619fbd84ea21b6fef71384846d308e7e5308d8a8b4849dea/diff/pkgs/apk/x86_64/frr-dev-9.1_git-r0.apk
     owner: anapaya, group: 300, permissions: 0644","Remove or set ownership and group ownership of these files and/or directories to an active user on the system as appropriate.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.13 Ensure SUID and SGID files are reviewed"" : [WARNING]

The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common reason for a SUID or SGID program is to enable users to perform functions (such as changing their password) that require root privileges.

There are valid reasons for SUID and SGID programs, but it is important to identify and review such programs to ensure they are legitimate. Review the files returned by the action in the audit section and check to see if system binaries have a different checksum than what from the package. This is an indication that the binary may have been replaced.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Ensure that no rogue SUID or SGID programs have been introduced into the system. Review the files returned by the action in the Audit section and confirm the integrity of these binaries.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
name: find_suid_sgid_files
timeout: 7200

Actual Value:
The following 50 files are SUID or SGID:

  /usr/lib/x86_64-linux-gnu/utempter/utempter
     owner: root, group: utmp, permissions: 2755

  /usr/lib/dbus-1.0/dbus-daemon-launch-helper
     owner: root, group: messagebus, permissions: 4754

  /usr/lib/openssh/ssh-keysign
     owner: root, group: root, permissions: 4755

  /usr/bin/umount
     owner: root, group: root, permissions: 4755

  /usr/bin/chsh
     owner: root, group: root, permissions: 4755

  /usr/bin/chage
     owner: root, group: shadow, permissions: 2755

  /usr/bin/mount
     owner: root, group: root, permissions: 4755

  /usr/bin/expiry
     owner: root, group: shadow, permissions: 2755

  /usr/bin/ssh-agent
     owner: root, group: _ssh, permissions: 2755

  /usr/bin/gpasswd
     owner: root, group: root, permissions: 4755

  /usr/bin/newgrp
     owner: root, group: root, permissions: 4755

  /usr/bin/chfn
     owner: root, group: root, permissions: 4755

  /usr/bin/su
     owner: root, group: root, permissions: 4755

  /usr/bin/passwd
     owner: root, group: root, permissions: 4755

  /usr/bin/crontab
     owner: root, group: crontab, permissions: 2755

  /usr/bin/sudo
     owner: root, group: root, permissions: 4755

  /usr/libexec/polkit-agent-helper-1
     owner: root, group: root, permissions: 4755

  /usr/sbin/pam_extrausers_chkpwd
     owner: root, group: shadow, permissions: 2755

  /usr/sbin/unix_chkpwd
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/bin/umount
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/bin/mount
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/bin/su
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/usr/bin/chsh
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/usr/bin/wall
     owner: root, group: tty, permissions: 2755

  /var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/usr/bin/chage
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/usr/bin/expiry
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/usr/bin/gpasswd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/usr/bin/newgrp
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/usr/bin/chfn
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/usr/bin/passwd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/3c86329df4320c1b47a513cdc60ec1085da1a207914b7b86a57c56c59a489295/diff/sbin/unix_chkpwd
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/1d36c7986d9249060758aecb70b3113e7ce67744bbe4c67b054500a4984dd33b/diff/usr/bin/chsh
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1d36c7986d9249060758aecb70b3113e7ce67744bbe4c67b054500a4984dd33b/diff/usr/bin/chage
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1d36c7986d9249060758aecb70b3113e7ce67744bbe4c67b054500a4984dd33b/diff/usr/bin/expiry
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1d36c7986d9249060758aecb70b3113e7ce67744bbe4c67b054500a4984dd33b/diff/usr/bin/gpasswd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1d36c7986d9249060758aecb70b3113e7ce67744bbe4c67b054500a4984dd33b/diff/usr/bin/chfn
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1d36c7986d9249060758aecb70b3113e7ce67744bbe4c67b054500a4984dd33b/diff/usr/bin/passwd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1d36c7986d9249060758aecb70b3113e7ce67744bbe4c67b054500a4984dd33b/diff/sbin/unix_chkpwd
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/bin/umount
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/bin/mount
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/bin/su
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/usr/bin/chsh
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/usr/bin/wall
     owner: root, group: tty, permissions: 2755

  /var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/usr/bin/chage
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/usr/bin/expiry
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/usr/bin/gpasswd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/usr/bin/newgrp
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/usr/bin/chfn
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/usr/bin/passwd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/6df805bb2b12e21afa692b1988ff045a4f6bb4b0df6155c3e83a09c4906fd920/diff/sbin/unix_chkpwd
     owner: root, group: shadow, permissions: 2755","Ensure that no rogue SUID or SGID programs have been introduced into the system. Review the files returned by the action in the Audit section and confirm the integrity of these binaries.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.2 Ensure permissions on /etc/passwd- are configured"" : [PASSED]

The /etc/passwd- file contains backup user account information.

It is critical to ensure that the /etc/passwd- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.

Solution:
Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd- :

# chmod u-x,go-wx /etc/passwd-
# chown root:root /etc/passwd-

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/passwd-
group: root
mask: 133
owner: root

Actual Value:
The file /etc/passwd- with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/passwd-","Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd- :

# chmod u-x,go-wx /etc/passwd-
# chown root:root /etc/passwd-","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.3 Ensure permissions on /etc/group are configured"" : [PASSED]

The /etc/group file contains a list of all the valid groups defined in the system. The command below allows read/write access for root and read access for everyone else.

The /etc/group file needs to be protected from unauthorized changes by non-privileged users, but needs to be readable as this information is used with many non-privileged programs.

Solution:
Run the following commands to remove excess permissions, set owner, and set group on /etc/group :

# chmod u-x,go-wx /etc/group
# chown root:root /etc/group

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/group
group: root
mask: 133
owner: root

Actual Value:
The file /etc/group with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/group","Run the following commands to remove excess permissions, set owner, and set group on /etc/group :

# chmod u-x,go-wx /etc/group
# chown root:root /etc/group","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.4 Ensure permissions on /etc/group- are configured"" : [PASSED]

The /etc/group- file contains a backup list of all the valid groups defined in the system.

It is critical to ensure that the /etc/group- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.

Solution:
Run the following commands to remove excess permissions, set owner, and set group on /etc/group- :

# chmod u-x,go-wx /etc/group-
# chown root:root /etc/group-

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/group-
group: root
mask: 133
owner: root

Actual Value:
The file /etc/group- with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/group-","Run the following commands to remove excess permissions, set owner, and set group on /etc/group- :

# chmod u-x,go-wx /etc/group-
# chown root:root /etc/group-","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.5 Ensure permissions on /etc/shadow are configured"" : [PASSED]

The /etc/shadow file is used to store the information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.

If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert the user accounts.

Solution:
Run one of the following commands to set ownership of /etc/shadow to root and group to either root or shadow :

# chown root:shadow /etc/shadow
  -OR-
# chown root:root /etc/shadow

Run the following command to remove excess permissions form /etc/shadow :

# chmod u-x,g-wx,o-rwx /etc/shadow

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/shadow
group: shadow
mask: 137
owner: root

Actual Value:
The file /etc/shadow with fmode owner: root group: shadow mode: 0640 uid: 0 gid: 42 uneven permissions : FALSE is compliant with the policy value 

/etc/shadow","Run one of the following commands to set ownership of /etc/shadow to root and group to either root or shadow :

# chown root:shadow /etc/shadow
  -OR-
# chown root:root /etc/shadow

Run the following command to remove excess permissions form /etc/shadow :

# chmod u-x,g-wx,o-rwx /etc/shadow","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.6 Ensure permissions on /etc/shadow- are configured"" : [PASSED]

The /etc/shadow- file is used to store backup information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.

It is critical to ensure that the /etc/shadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.

Solution:
Run one of the following commands to set ownership of /etc/shadow- to root and group to either root or shadow :

# chown root:shadow /etc/shadow-
  -OR-
# chown root:root /etc/shadow-

Run the following command to remove excess permissions form /etc/shadow- :

# chmod u-x,g-wx,o-rwx /etc/shadow-

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/shadow
group: shadow
mask: 137
owner: root

Actual Value:
The file /etc/shadow with fmode owner: root group: shadow mode: 0640 uid: 0 gid: 42 uneven permissions : FALSE is compliant with the policy value 

/etc/shadow","Run one of the following commands to set ownership of /etc/shadow- to root and group to either root or shadow :

# chown root:shadow /etc/shadow-
  -OR-
# chown root:root /etc/shadow-

Run the following command to remove excess permissions form /etc/shadow- :

# chmod u-x,g-wx,o-rwx /etc/shadow-","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.7 Ensure permissions on /etc/gshadow are configured"" : [PASSED]

The /etc/gshadow file is used to store the information about groups that is critical to the security of those accounts, such as the hashed password and other security information.

If attackers can gain read access to the /etc/gshadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/gshadow file (such as group administrators) could also be useful to subvert the group.

Solution:
Run one of the following commands to set ownership of /etc/gshadow to root and group to either root or shadow :

# chown root:shadow /etc/gshadow
  -OR-
# chown root:root /etc/gshadow

Run the following command to remove excess permissions form /etc/gshadow :

# chmod u-x,g-wx,o-rwx /etc/gshadow

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/gshadow
group: root
group: shadow
mask: 137
owner: root

Actual Value:
The file /etc/gshadow with fmode owner: root group: shadow mode: 0640 uid: 0 gid: 42 uneven permissions : FALSE is compliant with the policy value 

/etc/gshadow","Run one of the following commands to set ownership of /etc/gshadow to root and group to either root or shadow :

# chown root:shadow /etc/gshadow
  -OR-
# chown root:root /etc/gshadow

Run the following command to remove excess permissions form /etc/gshadow :

# chmod u-x,g-wx,o-rwx /etc/gshadow","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.8 Ensure permissions on /etc/gshadow- are configured"" : [PASSED]

The /etc/gshadow- file is used to store backup information about groups that is critical to the security of those accounts, such as the hashed password and other security information.

It is critical to ensure that the /etc/gshadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.

Solution:
Run one of the following commands to set ownership of /etc/gshadow- to root and group to either root or shadow :

# chown root:shadow /etc/gshadow-
  -OR-
# chown root:root /etc/gshadow-

Run the following command to remove excess permissions form /etc/gshadow- :

# chmod u-x,g-wx,o-rwx /etc/gshadow-

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/gshadow-
group: root
group: shadow
mask: 137
owner: root

Actual Value:
The file /etc/gshadow- with fmode owner: root group: shadow mode: 0640 uid: 0 gid: 42 uneven permissions : FALSE is compliant with the policy value 

/etc/gshadow-","Run one of the following commands to set ownership of /etc/gshadow- to root and group to either root or shadow :

# chown root:shadow /etc/gshadow-
  -OR-
# chown root:root /etc/gshadow-

Run the following command to remove excess permissions form /etc/gshadow- :

# chmod u-x,g-wx,o-rwx /etc/gshadow-","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.9 Ensure permissions on /etc/shells are configured"" : [PASSED]

/etc/shells is a text file which contains the full pathnames of valid login shells. This file is consulted by chsh and available to be queried by other programs.

It is critical to ensure that the /etc/shells file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.

Solution:
Run the following commands to remove excess permissions, set owner, and set group on /etc/shells :

# chmod u-x,go-wx /etc/shells
# chown root:root /etc/shells

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/shells
group: root
mask: 133
owner: root

Actual Value:
The file /etc/shells with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/shells","Run the following commands to remove excess permissions, set owner, and set group on /etc/shells :

# chmod u-x,go-wx /etc/shells
# chown root:root /etc/shells","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.1 Ensure accounts in /etc/passwd use shadowed passwords"" : [PASSED]

Local accounts can uses shadowed passwords. With shadowed passwords, The passwords are saved in shadow password file, /etc/shadow encrypted by a salted one-way hash. Accounts with a shadowed password have an x in the second field in /etc/passwd

The /etc/passwd file also contains information like user ID's and group ID's that are used by many system programs. Therefore, the /etc/passwd file must remain world readable. In spite of encoding the password with a randomly-generated one-way hash function, an attacker could still break the system if they got access to the /etc/passwd file. This can be mitigated by using shadowed passwords, thus moving the passwords in the /etc/passwd file to /etc/shadow The /etc/shadow file is set so only root will be able to read and write. This helps mitigate the risk of an attacker gaining access to the encoded passwords with which to perform a dictionary attack.

Note:

 - All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.
 - A user account with an empty second field in /etc/passwd allows the account to be logged into by providing only the username.

Solution:
Run the following command to set accounts to use shadowed passwords and migrate passwords in /etc/passwd to /etc/shadow :

# pwconv

Investigate to determine if the account is logged in and what it is being used for, to determine if it needs to be forced off.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1

Policy Value:
cmd: /bin/awk -F: '($2 != ""x"" ) { print $1 "" is not set to shadowed passwords ""}' /etc/passwd | /bin/awk '{print} END {if (NR == 0) print ""none""}'
expect: ^none$

Actual Value:
The command '/bin/awk -F: '($2 != ""x"" ) { print $1 "" is not set to shadowed passwords ""}' /etc/passwd | /bin/awk '{print} END {if (NR == 0) print ""none""}'' returned : 

none","Run the following command to set accounts to use shadowed passwords and migrate passwords in /etc/passwd to /etc/shadow :

# pwconv

Investigate to determine if the account is logged in and what it is being used for, to determine if it needs to be forced off.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.10 Ensure local interactive user dot files access is configured"" : [PASSED]

While the system administrator can establish secure permissions for users' ""dot"" files, the users can easily override these.

 - forward file specifies an email address to forward the user's mail to.
 - rhost file provides the ""remote authentication"" database for the rcp, rlogin, and rsh commands and the rcmd() function. These files bypass the standard password-based user authentication mechanism. They specify remote hosts and users that are considered trusted (i.e. are allowed to access the local system without supplying a password)
 - netrc file contains data for logging into a remote host or passing authentication to an API.
 - bash_history file keeps track of the user's commands.

User configuration files with excessive or incorrect access may enable malicious users to steal or modify other users' data or to gain another user's system privileges.

Solution:
Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user dot file permissions and determine the action to be taken in accordance with site policy.

The following script will:

 - remove excessive permissions on dot files within interactive users' home directories
 - change ownership of dot files within interactive users' home directories to the user
 - change group ownership of dot files within interactive users' home directories to the user's primary group
 - listforward andrhost files to be investigated and manually deleted

#!/usr/bin/env bash

{
   l_valid_shells=""^($( awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   unset a_uarr &amp;&amp; a_uarr=() # Clear and initialize array
   while read -r l_epu l_eph; do # Populate array with users and user home location
      [[ -n ""$l_epu"" &amp;&amp; -n ""$l_eph"" ]] &amp;&amp; a_uarr+=(""$l_epu $l_eph"")
   done <<< ""$(awk -v pat=""$l_valid_shells"" -F: '$(NF) ~ pat { print $1 "" "" $(NF-1) }' /etc/passwd)""
   l_asize=""${#a_uarr[@]}"" # Here if we want to look at number of users before proceeding
   l_maxsize=""1000"" # Maximum number of local interactive users before warning (Default 1,000)
   [ ""$l_asize "" -gt ""$l_maxsize"" ] &amp;&amp; echo -e ""
 ** INFO **
 - \""$l_asize\"" Local interactive users found on the system
 - This may be a long running check
""
   file_access_fix()
   {
      l_facout2=""""
      l_max=""$( printf '%o' $(( 0777 &amp; ~$l_mask)) )""
      if [ $(( $l_mode &amp; $l_mask )) -gt 0 ]; then
         echo -e "" - File: \""$l_hdfile\"" is mode: \""$l_mode\"" and should be mode: \""$l_max\"" or more restrictive
 - Changing to mode \""$l_max\""""
         chmod ""$l_chp"" ""$l_hdfile""
      fi
      if [[ ! ""$l_owner"" =~ ($l_user) ]]; then
         echo -e "" - File: \""$l_hdfile\"" owned by: \""$l_owner\"" and should be owned by \""${l_user//|/ or }\""
 - Changing ownership to \""$l_user\""""
         chown ""$l_user"" ""$l_hdfile""
      fi
      if [[ ! ""$l_gowner"" =~ ($l_group) ]]; then
         echo -e "" - File: \""$l_hdfile\"" group owned by: \""$l_gowner\"" and should be group owned by \""${l_group//|/ or }\""
 - Changing group ownership to \""$l_group\""""
         chgrp ""$l_group"" ""$l_hdfile""
      fi
   }
   while read -r l_user l_home; do
      if [ -d ""$l_home"" ]; then
         echo -e ""
 - Checking user: \""$l_user\"" home directory: \""$l_home\""""
         l_group=""$(id -gn ""$l_user"" | xargs)""
         l_group=""${l_group// /|}""
         while IFS= read -r -d $'0' l_hdfile; do
            while read -r l_mode l_owner l_gowner; do
               case ""$(basename ""$l_hdfile"")"" in
                  .forward | .rhost )
                     echo -e "" - File: \""$l_hdfile\"" exists
 - Please investigate and manually delete \""$l_hdfile\""""
                  ;;
                  .netrc )
                     l_mask='0177'
                     l_chp=""u-x,go-rwx""
                     file_access_fix ;;
                  .bash_history )
                     l_mask='0177'
                     l_chp=""u-x,go-rwx""
                     file_access_fix ;;
                  * )
                     l_mask='0133'
                     l_chp=""u-x,go-wx""
                     file_access_fix ;;
                  esac
            done <<< ""$(stat -Lc '%#a %U %G' ""$l_hdfile"")""
         done < <(find ""$l_home"" -xdev -type f -name '.*' -print0)
      fi
   done <<< ""$(printf '%s
' ""${a_uarr[@]}"")""
   unset a_uarr # Remove array
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$
timeout: 7200

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **
 - * Correctly configured * :
  - No local interactive users home directories contain:
   - "".forward"" or "".rhost"" files
   - "".netrc"" files with incorrect access configured
   - "".bash_history"" files with incorrect access configured
   - ""dot"" files with incorrect access configured","Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user dot file permissions and determine the action to be taken in accordance with site policy.

The following script will:

 - remove excessive permissions on dot files within interactive users' home directories
 - change ownership of dot files within interactive users' home directories to the user
 - change group ownership of dot files within interactive users' home directories to the user's primary group
 - listforward andrhost files to be investigated and manually deleted

#!/usr/bin/env bash

{
   l_valid_shells=""^($( awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   unset a_uarr &amp;&amp; a_uarr=() # Clear and initialize array
   while read -r l_epu l_eph; do # Populate array with users and user home location
      [[ -n ""$l_epu"" &amp;&amp; -n ""$l_eph"" ]] &amp;&amp; a_uarr+=(""$l_epu $l_eph"")
   done <<< ""$(awk -v pat=""$l_valid_shells"" -F: '$(NF) ~ pat { print $1 "" "" $(NF-1) }' /etc/passwd)""
   l_asize=""${#a_uarr[@]}"" # Here if we want to look at number of users before proceeding
   l_maxsize=""1000"" # Maximum number of local interactive users before warning (Default 1,000)
   [ ""$l_asize "" -gt ""$l_maxsize"" ] &amp;&amp; echo -e ""
 ** INFO **
 - \""$l_asize\"" Local interactive users found on the system
 - This may be a long running check
""
   file_access_fix()
   {
      l_facout2=""""
      l_max=""$( printf '%o' $(( 0777 &amp; ~$l_mask)) )""
      if [ $(( $l_mode &amp; $l_mask )) -gt 0 ]; then
         echo -e "" - File: \""$l_hdfile\"" is mode: \""$l_mode\"" and should be mode: \""$l_max\"" or more restrictive
 - Changing to mode \""$l_max\""""
         chmod ""$l_chp"" ""$l_hdfile""
      fi
      if [[ ! ""$l_owner"" =~ ($l_user) ]]; then
         echo -e "" - File: \""$l_hdfile\"" owned by: \""$l_owner\"" and should be owned by \""${l_user//|/ or }\""
 - Changing ownership to \""$l_user\""""
         chown ""$l_user"" ""$l_hdfile""
      fi
      if [[ ! ""$l_gowner"" =~ ($l_group) ]]; then
         echo -e "" - File: \""$l_hdfile\"" group owned by: \""$l_gowner\"" and should be group owned by \""${l_group//|/ or }\""
 - Changing group ownership to \""$l_group\""""
         chgrp ""$l_group"" ""$l_hdfile""
      fi
   }
   while read -r l_user l_home; do
      if [ -d ""$l_home"" ]; then
         echo -e ""
 - Checking user: \""$l_user\"" home directory: \""$l_home\""""
         l_group=""$(id -gn ""$l_user"" | xargs)""
         l_group=""${l_group// /|}""
         while IFS= read -r -d $'0' l_hdfile; do
            while read -r l_mode l_owner l_gowner; do
               case ""$(basename ""$l_hdfile"")"" in
                  .forward | .rhost )
                     echo -e "" - File: \""$l_hdfile\"" exists
 - Please investigate and manually delete \""$l_hdfile\""""
                  ;;
                  .netrc )
                     l_mask='0177'
                     l_chp=""u-x,go-rwx""
                     file_access_fix ;;
                  .bash_history )
                     l_mask='0177'
                     l_chp=""u-x,go-rwx""
                     file_access_fix ;;
                  * )
                     l_mask='0133'
                     l_chp=""u-x,go-wx""
                     file_access_fix ;;
                  esac
            done <<< ""$(stat -Lc '%#a %U %G' ""$l_hdfile"")""
         done < <(find ""$l_home"" -xdev -type f -name '.*' -print0)
      fi
   done <<< ""$(printf '%s
' ""${a_uarr[@]}"")""
   unset a_uarr # Remove array
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.2 Ensure /etc/shadow password fields are not empty"" : [PASSED]

An account with an empty password field means that anybody may log in as that user without providing a password.

All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.

Solution:
If any accounts in the /etc/shadow file do not have a password, run the following command to lock the account until it can be determined why it does not have a password:

# passwd -l <username>

Also, check to see if the account is logged in and investigate what it is being used for to determine if it needs to be forced off.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
cmd: /bin/awk -F : '($2 == """") { print $1 "" does not have a password.""}' /etc/shadow | /bin/awk '{print} END {if (NR == 0) print ""none""}'
expect: ^none$

Actual Value:
The command '/bin/awk -F : '($2 == """") { print $1 "" does not have a password.""}' /etc/shadow | /bin/awk '{print} END {if (NR == 0) print ""none""}'' returned : 

none","If any accounts in the /etc/shadow file do not have a password, run the following command to lock the account until it can be determined why it does not have a password:

# passwd -l <username>

Also, check to see if the account is logged in and investigate what it is being used for to determine if it needs to be forced off.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.3 Ensure all groups in /etc/passwd exist in /etc/group"" : [PASSED]

Over time, system administration errors and changes can lead to groups being defined in /etc/passwd but not in /etc/group

Groups defined in the /etc/passwd file but not in the /etc/group file pose a threat to system security since group permissions are not properly managed.

Solution:
Analyze the output of the Audit step above and perform the appropriate action to correct any discrepancies found.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-2,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv8|3.3,CSCv8|14.6,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
name: passwd_invalid_gid

Actual Value:
No issues found.","Analyze the output of the Audit step above and perform the appropriate action to correct any discrepancies found.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.4 Ensure shadow group is empty"" : [PASSED]

The shadow group allows system programs which require access the ability to read the /etc/shadow file. No users should be assigned to the shadow group.

Any users assigned to the shadow group would be granted read access to the /etc/shadow file. If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed passwords to break them. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert additional user accounts.

Solution:
Run the following command to remove all users from the shadow group

# sed -ri 's/(^shadow:[^:]*:[^:]*:)([^:]+$)/1/' /etc/group

Change the primary group of any users with shadow as their primary group.

# usermod -g <primary group> <user>

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /bin/awk -F: 'FILENAME == ""/etc/group"" && $1 == ""shadow"" { gid=$3; if ($4!="""") { print ""secondary ""$4; f=1 } } FILENAME == ""/etc/passwd"" && $4 == gid { print ""primary ""$1; f=1 } END { if (!f) print ""shadow group empty"" }' /etc/group /etc/passwd
expect: ^shadow group empty$

Actual Value:
The command '/bin/awk -F: 'FILENAME == ""/etc/group"" && $1 == ""shadow"" { gid=$3; if ($4!="""") { print ""secondary ""$4; f=1 } } FILENAME == ""/etc/passwd"" && $4 == gid { print ""primary ""$1; f=1 } END { if (!f) print ""shadow group empty"" }' /etc/group /etc/passwd' returned : 

shadow group empty","Run the following command to remove all users from the shadow group

# sed -ri 's/(^shadow:[^:]*:[^:]*:)([^:]+$)/1/' /etc/group

Change the primary group of any users with shadow as their primary group.

# usermod -g <primary group> <user>","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.5 Ensure no duplicate UIDs exist"" : [PASSED]

Although the useradd program will not let you create a duplicate User ID (UID), it is possible for an administrator to manually edit the /etc/passwd file and change the UID field.

Users must be assigned unique UIDs for accountability and to ensure appropriate access protections.

Solution:
Based on the results of the audit script, establish unique UIDs and review all files owned by the shared UIDs to determine which UID they are supposed to belong to.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5

Policy Value:
name: passwd_duplicate_uid

Actual Value:
No duplicate User IDs detected","Based on the results of the audit script, establish unique UIDs and review all files owned by the shared UIDs to determine which UID they are supposed to belong to.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.6 Ensure no duplicate GIDs exist"" : [PASSED]

Although the groupadd program will not let you create a duplicate Group ID (GID), it is possible for an administrator to manually edit the /etc/group file and change the GID field.

User groups must be assigned unique GIDs for accountability and to ensure appropriate access protections.

Solution:
Based on the results of the audit script, establish unique GIDs and review all files owned by the shared GID to determine which group they are supposed to belong to.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5

Policy Value:
name: group_duplicate_gid

Actual Value:
No duplicate Group IDs detected","Based on the results of the audit script, establish unique GIDs and review all files owned by the shared GID to determine which group they are supposed to belong to.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.7 Ensure no duplicate user names exist"" : [PASSED]

Although the useradd program will not let you create a duplicate user name, it is possible for an administrator to manually edit the /etc/passwd file and change the user name.

If a user is assigned a duplicate user name, it will create and have access to files with the first UID for that username in /etc/passwd For example, if ""test4"" has a UID of 1000 and a subsequent ""test4"" entry has a UID of 2000, logging in as ""test4"" will use UID 1000. Effectively, the UID is shared, which is a security problem.

Solution:
Based on the results of the audit script, establish unique user names for the users. File ownerships will automatically reflect the change as long as the users have unique UIDs.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5

Policy Value:
name: passwd_duplicate_username

Actual Value:
No issues found.","Based on the results of the audit script, establish unique user names for the users. File ownerships will automatically reflect the change as long as the users have unique UIDs.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.8 Ensure no duplicate group names exist"" : [PASSED]

Although the groupadd program will not let you create a duplicate group name, it is possible for an administrator to manually edit the /etc/group file and change the group name.

If a group is assigned a duplicate group name, it will create and have access to files with the first GID for that group in /etc/group Effectively, the GID is shared, which is a security problem.

Solution:
Based on the results of the audit script, establish unique names for the user groups. File group ownerships will automatically reflect the change as long as the groups have unique GIDs.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5

Policy Value:
name: group_duplicate_name

Actual Value:
No issues found.","Based on the results of the audit script, establish unique names for the user groups. File group ownerships will automatically reflect the change as long as the groups have unique GIDs.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.111.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.9 Ensure local interactive user home directories are configured"" : [FAILED]

The user home directory is space defined for the particular user to set local environment variables and to store personal files. While the system administrator can establish secure permissions for users' home directories, the users can easily override these. Users can be defined in /etc/passwd without a home directory or with a home directory that does not actually exist.

Since the user is accountable for files stored in the user home directory, the user must be the owner of the directory. Group or world-writable user home directories may enable malicious users to steal or modify other users' data or to gain another user's system privileges. If the user's home directory does not exist or is unassigned, the user will be placed in ""/"" and will not be able to write any files or have local environment variables set.

Solution:
If a local interactive users' home directory is undefined and/or doesn't exist, follow local site policy and perform one of the following:

 - Lock the user account
 - Remove the user from the system
 - create a directory for the user. If undefined, edit /etc/passwd and add the absolute path to the directory to the last field of the user.

Run the following script to:

 - Remove excessive permissions from local interactive users home directories
 - Update the home directory's owner

#!/usr/bin/env bash

{
   l_output2=""""
   l_valid_shells=""^($( awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   unset a_uarr &amp;&amp; a_uarr=() # Clear and initialize array
   while read -r l_epu l_eph; do # Populate array with users and user home location
      a_uarr+=(""$l_epu $l_eph"")
   done <<< ""$(awk -v pat=""$l_valid_shells"" -F: '$(NF) ~ pat { print $1 "" "" $(NF-1) }' /etc/passwd)""
   l_asize=""${#a_uarr[@]}"" # Here if we want to look at number of users before proceeding
   [ ""$l_asize "" -gt ""10000"" ] &amp;&amp; echo -e ""
 ** INFO **
 - \""$l_asize\"" Local interactive users found on the system
 - This may be a long running process
""
   while read -r l_user l_home; do
      if [ -d ""$l_home"" ]; then
         l_mask='0027'
         l_max=""$( printf '%o' $(( 0777 &amp; ~$l_mask)) )""
         while read -r l_own l_mode; do
            if [ ""$l_user"" != ""$l_own"" ]; then
               l_output2=""$l_output2
 - User: \""$l_user\"" Home \""$l_home\"" is owned by: \""$l_own\""
 - changing ownership to: \""$l_user\""
""
               chown ""$l_user"" ""$l_home""
            fi
            if [ $(( $l_mode &amp; $l_mask )) -gt 0 ]; then
               l_output2=""$l_output2
 - User: \""$l_user\"" Home \""$l_home\"" is mode: \""$l_mode\"" should be mode: \""$l_max\"" or more restrictive
 - removing excess permissions
""
               chmod g-w,o-rwx ""$l_home""
            fi
         done <<< ""$(stat -Lc '%U %#a' ""$l_home"")""
      else
         l_output2=""$l_output2
 - User: \""$l_user\"" Home \""$l_home\"" Doesn't exist
 - Please create a home in accordance with local site policy""
      fi
   done <<< ""$(printf '%s
' ""${a_uarr[@]}"")""
   if [ -z ""$l_output2"" ]; then # If l_output2 is empty, we pass
      echo -e "" - No modification needed to local interactive users home directories""
   else
      echo -e ""
$l_output2""
   fi
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - * Reasons for audit failure * :

  - User: ""anapaya"" Home ""/home/anapaya"" is mode: ""0755"" should be mode: ""750"" or more restrictive
  - User: ""scion"" Home ""/home/scion"" is mode: ""0755"" should be mode: ""750"" or more restrictive
  - User: ""william.blonay"" Home ""/home/william.blonay"" is mode: ""0755"" should be mode: ""750"" or more restrictive

- * Correctly configured * :
  - All local interactive users:
   - home directories exist
   - own their home directory","If a local interactive users' home directory is undefined and/or doesn't exist, follow local site policy and perform one of the following:

 - Lock the user account
 - Remove the user from the system
 - create a directory for the user. If undefined, edit /etc/passwd and add the absolute path to the directory to the last field of the user.

Run the following script to:

 - Remove excessive permissions from local interactive users home directories
 - Update the home directory's owner

#!/usr/bin/env bash

{
   l_output2=""""
   l_valid_shells=""^($( awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   unset a_uarr &amp;&amp; a_uarr=() # Clear and initialize array
   while read -r l_epu l_eph; do # Populate array with users and user home location
      a_uarr+=(""$l_epu $l_eph"")
   done <<< ""$(awk -v pat=""$l_valid_shells"" -F: '$(NF) ~ pat { print $1 "" "" $(NF-1) }' /etc/passwd)""
   l_asize=""${#a_uarr[@]}"" # Here if we want to look at number of users before proceeding
   [ ""$l_asize "" -gt ""10000"" ] &amp;&amp; echo -e ""
 ** INFO **
 - \""$l_asize\"" Local interactive users found on the system
 - This may be a long running process
""
   while read -r l_user l_home; do
      if [ -d ""$l_home"" ]; then
         l_mask='0027'
         l_max=""$( printf '%o' $(( 0777 &amp; ~$l_mask)) )""
         while read -r l_own l_mode; do
            if [ ""$l_user"" != ""$l_own"" ]; then
               l_output2=""$l_output2
 - User: \""$l_user\"" Home \""$l_home\"" is owned by: \""$l_own\""
 - changing ownership to: \""$l_user\""
""
               chown ""$l_user"" ""$l_home""
            fi
            if [ $(( $l_mode &amp; $l_mask )) -gt 0 ]; then
               l_output2=""$l_output2
 - User: \""$l_user\"" Home \""$l_home\"" is mode: \""$l_mode\"" should be mode: \""$l_max\"" or more restrictive
 - removing excess permissions
""
               chmod g-w,o-rwx ""$l_home""
            fi
         done <<< ""$(stat -Lc '%U %#a' ""$l_home"")""
      else
         l_output2=""$l_output2
 - User: \""$l_user\"" Home \""$l_home\"" Doesn't exist
 - Please create a home in accordance with local site policy""
      fi
   done <<< ""$(printf '%s
' ""${a_uarr[@]}"")""
   if [ -z ""$l_output2"" ]; then # If l_output2 is empty, we pass
      echo -e "" - No modification needed to local interactive users home directories""
   else
      echo -e ""
$l_output2""
   fi
}","https://workbench.cisecurity.org/benchmarks/17074",""
"25202","","","None","192.168.111.1","tcp","0","Enumerate IPv6 Interfaces via SSH","Nessus was able to enumerate the IPv6 interfaces on the remote host.","Nessus was able to enumerate the network interfaces configured with
IPv6 addresses by connecting to the remote host via SSH using the
supplied credentials.","Disable IPv6 if you are not actually using it. Otherwise, disable any
unused IPv6 interfaces.","","
The following IPv6 interfaces are set on the remote host :

 - fe80::ae1f:6bff:fe75:11f4 (on interface eno1)
 - fe80::2:0:2b:1 (on interface enp2s0f0)
 - fe80::21b:21ff:febe:3452 (on interface enp2s0f1)
 - ::1 (on interface lo)
 - fe80::7b81:8132:be2e:1973 (on interface scion-gateway)
"
"25203","","","None","192.168.111.1","tcp","0","Enumerate IPv4 Interfaces via SSH","Nessus was able to enumerate the IPv4 interfaces on the remote host.","Nessus was able to enumerate the network interfaces configured with
IPv4 addresses by connecting to the remote host via SSH using the
supplied credentials.","Disable any unused IPv4 interfaces.","","
The following IPv4 addresses are set on the remote host :

 - 172.17.0.1 (on interface docker0)
 - 192.168.130.20 (on interface eno1)
 - 192.168.111.1 (on interface enp2s0f1)
 - 127.0.0.1 (on interface lo)
 - 198.18.30.2 (on interface wg0)
"
"33276","","","None","192.168.111.1","tcp","0","Enumerate MAC Addresses via SSH","Nessus was able to enumerate MAC addresses on the remote host.","Nessus was able to enumerate MAC addresses by connecting to the remote
host via SSH with the supplied credentials.","Disable any unused interfaces.","","
The following MAC addresses exist on the remote host :

  - 02:42:7a:09:6d:69 (interface docker0)
  - ac:1f:6b:75:11:f5 (interface eno2)
  - 00:1b:21:be:34:50 (interface enp2s0f0)
  - 00:1b:21:be:34:52 (interface enp2s0f1)
  - ac:1f:6b:75:11:f4 (interface eno1)
"
"55472","","","None","192.168.111.1","tcp","0","Device Hostname","It was possible to determine the remote system hostname.","This plugin reports a device's hostname collected via SSH or WMI.","n/a","","
  Hostname : s01-chzrh1-arma
    s01-chzrh1-arma (hostname command)"
"141118","","","None","192.168.111.1","tcp","22","Target Credential Status by Authentication Protocol - Valid Credentials Provided","Valid credentials were provided for an available authentication protocol.","Nessus was able to determine that valid credentials were provided for
an authentication protocol available on the remote target because it
was able to successfully authenticate directly to the remote target
using that authentication protocol at least once. Authentication was
successful because the authentication protocol service was available
remotely, the service was able to be identified, the authentication
protocol was able to be negotiated successfully, and a set of
credentials provided in the scan policy for that authentication
protocol was accepted by the remote service. See plugin output for
details, including protocol, port, and account.

Please note the following :

- This plugin reports per protocol, so it is possible for
  valid credentials to be provided for one protocol and not
  another. For example, authentication may succeed via SSH
  but fail via SMB, while no credentials were provided for
  an available SNMP service.

- Providing valid credentials for all available
  authentication protocols may improve scan coverage, but
  the value of successful authentication for a given
  protocol may vary from target to target depending upon
  what data (if any) is gathered from the target via that
  protocol. For example, successful authentication via SSH
  is more valuable for Linux targets than for Windows
  targets, and likewise successful authentication via SMB
  is more valuable for Windows targets than for Linux
  targets.","n/a","","
Nessus was able to log in to the remote host via the following :

User:       'anapaya'
Port:       22
Proto:      SSH
Method:     publickey
Escalation: sudo
"
"14272","","","None","192.168.112.1","tcp","22","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 22/tcp was found to be open"
"14272","","","None","192.168.112.1","tcp","80","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 80/tcp was found to be open"
"14272","","","None","192.168.112.1","tcp","443","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 443/tcp was found to be open"
"14272","","","None","192.168.112.1","tcp","30252","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 30252/tcp was found to be open"
"14272","","","None","192.168.112.1","tcp","42001","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 42001/tcp was found to be open"
"14272","","","None","192.168.112.1","udp","443","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 443/udp was found to be open"
"14272","","","None","192.168.112.1","udp","30041","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 30041/udp was found to be open"
"14272","","","None","192.168.112.1","udp","30042","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 30042/udp was found to be open"
"14272","","","None","192.168.112.1","udp","51021","Netstat Portscanner (SSH)","Remote open ports can be enumerated via SSH.","Nessus was able to run 'netstat' on the remote host to enumerate the
open ports. If 'netstat' is not available, the plugin will attempt to use 'ss'.

See the section 'plugins options' about configuring this plugin.

Note: This plugin will run on Windows (using netstat.exe) in the
event that the target being scanned is localhost.","n/a","https://en.wikipedia.org/wiki/Netstat","Port 51021/udp was found to be open"
"19506","","","None","192.168.112.1","tcp","0","Nessus Scan Information","This plugin displays information about the Nessus scan.","This plugin displays, for each tested host, information about the
scan itself :

  - The version of the plugin set.
  - The type of scanner (Nessus or Nessus Home).
  - The version of the Nessus Engine.
  - The port scanner(s) used.
  - The port range scanned.
  - The ping round trip time 
  - Whether credentialed or third-party patch management
    checks are possible.
  - Whether the display of superseded patches is enabled
  - The date of the scan.
  - The duration of the scan.
  - The number of hosts scanned in parallel.
  - The number of checks done in parallel.","n/a","","Information about this scan : 

Nessus version : 10.8.1
Nessus build : 20004
Plugin feed version : 202408120709
Scanner edition used : Nessus
Scanner OS : LINUX
Scanner distribution : ubuntu1604-x86-64
Scan type : Normal
Scan name : Ubuntu 22.04 Compliance Scan
Scan policy used : Policy Compliance Auditing
Scanner IP : 192.168.110.80
Port scanner(s) : netstat 
Port range : default
Ping RTT : 74.488 ms
Thorough tests : no
Experimental tests : no
Scan for Unpatched Vulnerabilities : no
Plugin debugging enabled : no
Paranoia level : 1
Report verbosity : 1
Safe checks : yes
Optimize the test : no
Credentialed checks : yes, as 'scion' via ssh
Attempt Least Privilege : no
Patch management checks : None
Display superseded patches : yes (supersedence plugin did not launch)
CGI scanning : disabled
Web application tests : disabled
Max hosts : 30
Max checks : 4
Recv timeout : 5
Backports : None
Allow post-scan editing : Yes
Nessus Plugin Signature Checking : Enabled
Audit File Signature Checking : Disabled
Scan Start Date : 2024/8/12 15:26 CEST
Scan duration : 251 sec
Scan for malware : no
"
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""CIS_Ubuntu_Linux_22.04_LTS_v2.0.0_L2_Server.audit from CIS Ubuntu Linux 22.04 LTS Benchmark v2.0.0"" : [PASSED]

See Also: https://workbench.cisecurity.org/benchmarks/17074

Policy Value:
PASSED","n/a","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.6 Ensure squashfs kernel module is not available"" : [PASSED]

The squashfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A squashfs image can be used without having to first decompress the image.

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

Solution:
Run the following script to disable the squashfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install squashfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist squashfs in the /etc/modprobe.d/ directory
 - Unload squashfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist squashfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""squashfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

Impact:

As Snap packages utilize squashfs as a compressed filesystem, disabling squashfs will cause Snap packages to fail.

Snap application packages of software are self-contained and work across a range of Linux distributions. This is unlike traditional Linux package management approaches, like APT or RPM, which require specifically adapted packages per Linux distribution on an application update and delay therefore application deployment from developers to their software's end-user. Snaps themselves have no dependency on any external store (""App store""), can be obtained from any source and can be therefore used for upstream software deployment.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - module: ""squashfs"" doesn't exist in ""/lib/modules/5.15.0-116-generic/kernel/fs""
 - module: ""squashfs"" doesn't exist in ""/lib/modules/5.15.0-117-generic/kernel/fs""","Run the following script to disable the squashfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install squashfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist squashfs in the /etc/modprobe.d/ directory
 - Unload squashfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist squashfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""squashfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

Impact:

As Snap packages utilize squashfs as a compressed filesystem, disabling squashfs will cause Snap packages to fail.

Snap application packages of software are self-contained and work across a range of Linux distributions. This is unlike traditional Linux package management approaches, like APT or RPM, which require specifically adapted packages per Linux distribution on an application update and delay therefore application deployment from developers to their software's end-user. Snaps themselves have no dependency on any external store (""App store""), can be obtained from any source and can be therefore used for upstream software deployment.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.7 Ensure udf kernel module is not available"" : [FAILED]

The udf filesystem type is the universal disk format used to implement ISO/IEC 13346 and ECMA-167 specifications. This is an open vendor filesystem type for data storage on a broad range of media. This filesystem type is necessary to support writing DVDs and newer optical disc formats.

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

Solution:
Run the following script to disable the udf module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install udf /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist udf in the /etc/modprobe.d/ directory
 - Unload udf from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist udf in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""udf"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

Impact:

Microsoft Azure requires the usage of udf

udf should not be disabled on systems run on Microsoft Azure.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""udf"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/fs""
  - ""/lib/modules/5.15.0-117-generic/kernel/fs""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""udf"" is not deny listed
 - module: ""udf"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/fs/udf/udf.ko ""


- Correctly set:

 - module: ""udf"" is not loaded","Run the following script to disable the udf module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install udf /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist udf in the /etc/modprobe.d/ directory
 - Unload udf from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist udf in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""udf"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

Impact:

Microsoft Azure requires the usage of udf

udf should not be disabled on systems run on Microsoft Azure.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.3.1 Ensure separate partition exists for /home"" : [FAILED]

The /home directory is used to support disk storage needs of local users.

The default installation only creates a single / partition. Since the /home directory contains user generated data, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /home and impact all local users.

Configuring /home as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev These options limit an attacker's ability to create exploits on the system. In the case of /home options such as usrquota/grpquota may be considered to limit the impact that users can have on each other with regards to disk resource exhaustion. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options.

As /home contains user data, care should be taken to ensure the security and integrity of the data and mount point.

Solution:
For new installations, during installation create a custom partition setup and specify a separate partition for /home

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: [\s]+/home[\s]+
file: /proc/self/mountinfo
regex: [\s]+/home[\s]+

Actual Value:
The file ""/proc/self/mountinfo"" does not contain ""[\s]+/home[\s]+""","For new installations, during installation create a custom partition setup and specify a separate partition for /home

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.4.1 Ensure separate partition exists for /var"" : [FAILED]

The /var directory is used by daemons and other system services to temporarily store dynamic data. Some directories created by these processes may be world-writable.

The reasoning for mounting /var on a separate partition is as follows.

The default installation only creates a single / partition. Since the /var directory may contain world-writable files and directories, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /var and cause unintended behavior across the system as the disk is full. See man auditd.conf for details.

Configuring /var as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev These options limits an attackers ability to create exploits on the system. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options.

An example of exploiting /var may be an attacker establishing a hard-link to a system setuid program and wait for it to be updated. Once the program was updated, the hard-link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.

Solution:
For new installations, during installation create a custom partition setup and specify a separate partition for /var

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: [\s]+/var[\s]+
file: /proc/self/mountinfo
regex: [\s]+/var[\s]+

Actual Value:
The file ""/proc/self/mountinfo"" does not contain ""[\s]+/var[\s]+""","For new installations, during installation create a custom partition setup and specify a separate partition for /var

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.5.1 Ensure separate partition exists for /var/tmp"" : [FAILED]

The /var/tmp directory is a world-writable directory used for temporary storage by all users and some applications. Temporary files residing in /var/tmp are to be preserved between reboots.

The default installation only creates a single / partition. Since the /var/tmp directory is world-writable, there is a risk of resource exhaustion. In addition, other operations on the system could fill up the disk unrelated to /var/tmp and cause potential disruption to daemons as the disk is full.

Configuring /var/tmp as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev These options limits an attackers ability to create exploits on the system.

Solution:
For new installations, during installation create a custom partition setup and specify a separate partition for /var/tmp

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: [\s]+/var/tmp[\s]+
file: /proc/self/mountinfo
regex: [\s]+/var/tmp[\s]+

Actual Value:
The file ""/proc/self/mountinfo"" does not contain ""[\s]+/var/tmp[\s]+""","For new installations, during installation create a custom partition setup and specify a separate partition for /var/tmp

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.6.1 Ensure separate partition exists for /var/log"" : [FAILED]

The /var/log directory is used by system services to store log data.

The default installation only creates a single / partition. Since the /var/log directory contains log files which can grow quite large, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole.

Configuring /var/log as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev These options limit an attackers ability to create exploits on the system. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options.

As /var/log contains log files, care should be taken to ensure the security and integrity of the data and mount point.

Solution:
For new installations, during installation create a custom partition setup and specify a separate partition for /var/log

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2

Policy Value:
expect: [\s]+/var/log[\s]+
file: /proc/self/mountinfo
regex: [\s]+/var/log[\s]+

Actual Value:
The file ""/proc/self/mountinfo"" does not contain ""[\s]+/var/log[\s]+""","For new installations, during installation create a custom partition setup and specify a separate partition for /var/log

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.7.1 Ensure separate partition exists for /var/log/audit"" : [FAILED]

The auditing daemon, auditd stores log data in the /var/log/audit directory.

The default installation only creates a single / partition. Since the /var/log/audit directory contains the audit.log file which can grow quite large, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /var/log/audit and cause auditd to trigger it's space_left_action as the disk is full. See man auditd.conf for details.

Configuring /var/log/audit as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev These options limit an attacker's ability to create exploits on the system. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options.

As /var/log/audit contains audit logs, care should be taken to ensure the security and integrity of the data and mount point.

Solution:
For new installations, during installation create a custom partition setup and specify a separate partition for /var/log/audit

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2

Policy Value:
expect: [\s]+/var/log/audit[\s]+
file: /proc/self/mountinfo
regex: [\s]+/var/log/audit[\s]+

Actual Value:
The file ""/proc/self/mountinfo"" does not contain ""[\s]+/var/log/audit[\s]+""","For new installations, during installation create a custom partition setup and specify a separate partition for /var/log/audit

For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.

Impact:

Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.3.1.4 Ensure all AppArmor Profiles are enforcing"" : [PASSED]

AppArmor profiles define what resources applications are able to access.

Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that any policies that exist on the system are activated.

Solution:
Run the following command to set all profiles to enforce mode:

# aa-enforce /etc/apparmor.d/*

Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - apparmor_status - processes are confined
The command '/sbin/apparmor_status' returned : 

apparmor module is loaded.
22 profiles are loaded.
22 profiles are in enforce mode.
   /usr/bin/man
   /usr/lib/NetworkManager/nm-dhcp-client.action
   /usr/lib/NetworkManager/nm-dhcp-helper
   /usr/lib/connman/scripts/dhclient-script
   /{,usr/}sbin/dhclient
   docker-default
   lsb_release
   man_filter
   man_groff
   nvidia_modprobe
   nvidia_modprobe//kmod
   tcpdump
   ubuntu_pro_apt_news
   ubuntu_pro_esm_cache
   ubuntu_pro_esm_cache//apt_methods
   ubuntu_pro_esm_cache//apt_methods_gpgv
   ubuntu_pro_esm_cache//cloud_id
   ubuntu_pro_esm_cache//dpkg
   ubuntu_pro_esm_cache//ps
   ubuntu_pro_esm_cache//ubuntu_distro_info
   ubuntu_pro_esm_cache_systemctl
   ubuntu_pro_esm_cache_systemd_detect_virt
0 profiles are in complain mode.
0 profiles are in kill mode.
0 profiles are in unconfined mode.
5 processes have profiles defined.
5 processes are in enforce mode.
   /app/scion-all (240671) docker-default
   /app/scion-all (240748) docker-default
   /app/appliance (240764) docker-default
   /app/scion-all (241025) docker-default
   /otelcol-contrib (241096) docker-default
0 processes are in complain mode.
0 processes are unconfined but have a profile defined.
0 processes are in mixed mode.
0 processes are in kill mode.

-------------------------
PASSED - apparmor_status - profiles are loaded
The command '/sbin/apparmor_status' returned : 

apparmor module is loaded.
22 profiles are loaded.
22 profiles are in enforce mode.
   /usr/bin/man
   /usr/lib/NetworkManager/nm-dhcp-client.action
   /usr/lib/NetworkManager/nm-dhcp-helper
   /usr/lib/connman/scripts/dhclient-script
   /{,usr/}sbin/dhclient
   docker-default
   lsb_release
   man_filter
   man_groff
   nvidia_modprobe
   nvidia_modprobe//kmod
   tcpdump
   ubuntu_pro_apt_news
   ubuntu_pro_esm_cache
   ubuntu_pro_esm_cache//apt_methods
   ubuntu_pro_esm_cache//apt_methods_gpgv
   ubuntu_pro_esm_cache//cloud_id
   ubuntu_pro_esm_cache//dpkg
   ubuntu_pro_esm_cache//ps
   ubuntu_pro_esm_cache//ubuntu_distro_info
   ubuntu_pro_esm_cache_systemctl
   ubuntu_pro_esm_cache_systemd_detect_virt
0 profiles are in complain mode.
0 profiles are in kill mode.
0 profiles are in unconfined mode.
5 processes have profiles defined.
5 processes are in enforce mode.
   /app/scion-all (240671) docker-default
   /app/scion-all (240748) docker-default
   /app/appliance (240764) docker-default
   /app/scion-all (241025) docker-default
   /otelcol-contrib (241096) docker-default
0 processes are in complain mode.
0 processes are unconfined but have a profile defined.
0 processes are in mixed mode.
0 processes are in kill mode.

-------------------------
PASSED - apparmor_status - profiles in complain mode
The command '/sbin/apparmor_status' returned : 

apparmor module is loaded.
22 profiles are loaded.
22 profiles are in enforce mode.
   /usr/bin/man
   /usr/lib/NetworkManager/nm-dhcp-client.action
   /usr/lib/NetworkManager/nm-dhcp-helper
   /usr/lib/connman/scripts/dhclient-script
   /{,usr/}sbin/dhclient
   docker-default
   lsb_release
   man_filter
   man_groff
   nvidia_modprobe
   nvidia_modprobe//kmod
   tcpdump
   ubuntu_pro_apt_news
   ubuntu_pro_esm_cache
   ubuntu_pro_esm_cache//apt_methods
   ubuntu_pro_esm_cache//apt_methods_gpgv
   ubuntu_pro_esm_cache//cloud_id
   ubuntu_pro_esm_cache//dpkg
   ubuntu_pro_esm_cache//ps
   ubuntu_pro_esm_cache//ubuntu_distro_info
   ubuntu_pro_esm_cache_systemctl
   ubuntu_pro_esm_cache_systemd_detect_virt
0 profiles are in complain mode.
0 profiles are in kill mode.
0 profiles are in unconfined mode.
5 processes have profiles defined.
5 processes are in enforce mode.
   /app/scion-all (240671) docker-default
   /app/scion-all (240748) docker-default
   /app/appliance (240764) docker-default
   /app/scion-all (241025) docker-default
   /otelcol-contrib (241096) docker-default
0 processes are in complain mode.
0 processes are unconfined but have a profile defined.
0 processes are in mixed mode.
0 processes are in kill mode.","Run the following command to set all profiles to enforce mode:

# aa-enforce /etc/apparmor.d/*

Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.1 Ensure GDM is removed"" : [PASSED]

The GNOME Display Manager (GDM) is a program that manages graphical display servers and handles graphical user logins.

If a Graphical User Interface (GUI) is not required, it should be removed to reduce the attack surface of the system.

Solution:
Run the following commands to uninstall gdm3 and remove unused dependencies:

# apt purge gdm3
# apt autoremove gdm3

Impact:

Removing the GNOME Display manager will remove the Graphical User Interface (GUI) from the system.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s gdm3 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s gdm3 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'gdm3' is not installed and no information is available","Run the following commands to uninstall gdm3 and remove unused dependencies:

# apt purge gdm3
# apt autoremove gdm3

Impact:

Removing the GNOME Display manager will remove the Graphical User Interface (GUI) from the system.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.20 Ensure X window server services are not in use"" : [PASSED]

The X Window System provides a Graphical User Interface (GUI) where users can have multiple windows in which to run programs and various add on. The X Windows system is typically used on workstations where users login, but not on servers where users typically do not login.

Unless your organization specifically requires graphical login access via X Windows, remove it to reduce the potential attack surface.

Solution:
- IF - a Graphical Desktop Manager or X-Windows server is not required and approved by local site policy:

Run the following command to remove the X Windows Server package:

# apt purge xserver-common

Impact:

If a Graphical Desktop Manager (GDM) is in use on the system, there may be a dependency on the xorg-x11-server-common package. If the GDM is required and approved by local site policy, the package should not be removed.

Many Linux systems run applications which require a Java runtime. Some Linux Java packages have a dependency on specific X Windows xorg-x11-fonts. One workaround to avoid this dependency is to use the ""headless"" Java packages for your specific Java runtime.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|2.6,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s xserver-common 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s xserver-common 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'xserver-common' is not installed and no information is available","- IF - a Graphical Desktop Manager or X-Windows server is not required and approved by local site policy:

Run the following command to remove the X Windows Server package:

# apt purge xserver-common

Impact:

If a Graphical Desktop Manager (GDM) is in use on the system, there may be a dependency on the xorg-x11-server-common package. If the GDM is required and approved by local site policy, the package should not be removed.

Many Linux systems run applications which require a Java runtime. Some Linux Java packages have a dependency on specific X Windows xorg-x11-fonts. One workaround to avoid this dependency is to use the ""headless"" Java packages for your specific Java runtime.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.2.1 Ensure dccp kernel module is not available"" : [FAILED]

The Datagram Congestion Control Protocol (DCCP) is a transport layer protocol that supports streaming media and telephony. DCCP provides a way to gain access to congestion control, without having to do it at the application layer, but does not provide in-sequence delivery.

-IF- the protocol is not required, it is recommended that the drivers not be installed to reduce the potential attack surface.

Solution:
Run the following script to disable the dccp module:

-IF- the module is available in the running kernel:

 - Create a file with install dccp /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist dccp in the /etc/modprobe.d/ directory
 - Unload dccp from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist dccp in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""dccp"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""dccp"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/net""
  - ""/lib/modules/5.15.0-117-generic/kernel/net""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""dccp"" is not deny listed
 - module: ""dccp"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/net/dccp/dccp.ko ""


- Correctly set:

 - module: ""dccp"" is not loaded","Run the following script to disable the dccp module:

-IF- the module is available in the running kernel:

 - Create a file with install dccp /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist dccp in the /etc/modprobe.d/ directory
 - Unload dccp from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist dccp in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""dccp"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.2.2 Ensure tipc kernel module is not available"" : [FAILED]

The Transparent Inter-Process Communication (TIPC) protocol is designed to provide communication between cluster nodes.

-IF- the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.

Solution:
Run the following script to disable the tipc module:

-IF- the module is available in the running kernel:

 - Create a file with install tipc /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist tipc in the /etc/modprobe.d/ directory
 - Unload tipc from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist tipc in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""tipc"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""tipc"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/net""
  - ""/lib/modules/5.15.0-117-generic/kernel/net""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""tipc"" is not deny listed
 - module: ""tipc"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/net/tipc/tipc.ko ""


- Correctly set:

 - module: ""tipc"" is not loaded","Run the following script to disable the tipc module:

-IF- the module is available in the running kernel:

 - Create a file with install tipc /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist tipc in the /etc/modprobe.d/ directory
 - Unload tipc from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist tipc in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""tipc"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.2.3 Ensure rds kernel module is not available"" : [FAILED]

The Reliable Datagram Sockets (RDS) protocol is a transport layer protocol designed to provide low-latency, high-bandwidth communications between cluster nodes. It was developed by the Oracle Corporation.

-IF- the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.

Solution:
Run the following script to disable the rds module:

-IF- the module is available in the running kernel:

 - Create a file with install rds /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist rds in the /etc/modprobe.d/ directory
 - Unload rds from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist rds in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""rds"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""rds"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/net""
  - ""/lib/modules/5.15.0-117-generic/kernel/net""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""rds"" is not deny listed
 - module: ""rds"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/net/rds/rds.ko ""


- Correctly set:

 - module: ""rds"" is not loaded","Run the following script to disable the rds module:

-IF- the module is available in the running kernel:

 - Create a file with install rds /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist rds in the /etc/modprobe.d/ directory
 - Unload rds from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist rds in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""rds"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.2.4 Ensure sctp kernel module is not available"" : [FAILED]

The Stream Control Transmission Protocol (SCTP) is a transport layer protocol used to support message oriented communication, with several streams of messages in one connection. It serves a similar function as TCP and UDP, incorporating features of both. It is message-oriented like UDP, and ensures reliable in-sequence transport of messages with congestion control like TCP.

-IF- the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.

Solution:
Run the following script to disable the sctp module:

-IF- the module is available in the running kernel:

 - Create a file with install sctp /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist sctp in the /etc/modprobe.d/ directory
 - Unload sctp from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist sctp in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""sctp"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""sctp"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/net""
  - ""/lib/modules/5.15.0-117-generic/kernel/net""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""sctp"" is not deny listed
 - module: ""sctp"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/net/sctp/sctp.ko ""


- Correctly set:

 - module: ""sctp"" is not loaded","Run the following script to disable the sctp module:

-IF- the module is available in the running kernel:

 - Create a file with install sctp /bin/false in the /etc/modprobe.d/ directory
 - Create a file with blacklist sctp in the /etc/modprobe.d/ directory
 - Unload sctp from the kernel

-IF- available in ANY installed kernel:

 - Create a file with blacklist sctp in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""sctp"" # set module name
   l_mtype=""net"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.8 Ensure sshd DisableForwarding is enabled"" : [FAILED]

The DisableForwarding parameter disables all forwarding features, including X11, ssh-agent(1), TCP and StreamLocal. This option overrides all other forwarding-related options and may simplify restricted configurations.

 - X11Forwarding provides the ability to tunnel X11 traffic through the connection to enable remote graphic connections.
 - ssh-agent is a program to hold private keys used for public key authentication. Through use of environment variables the agent can be located and automatically used for authentication when logging in to other machines using ssh.
 - SSH port forwarding is a mechanism in SSH for tunneling application ports from the client to the server, or servers to clients. It can be used for adding encryption to legacy applications, going through firewalls, and some system administrators and IT professionals use it for opening backdoors into the internal network from their home machines.

Disable X11 forwarding unless there is an operational requirement to use X11 applications directly. There is a small risk that the remote X11 servers of users who are logged in via SSH with X11 forwarding could be compromised by other users on the X11 server. Note that even if X11 forwarding is disabled, users can always install their own forwarders.

anyone with root privilege on the the intermediate server can make free use of ssh-agent to authenticate them to other servers

Leaving port forwarding enabled can expose the organization to security risks and backdoors. SSH connections are protected with strong encryption. This makes their contents invisible to most deployed network monitoring and traffic filtering solutions. This invisibility carries considerable risk potential if it is used for malicious purposes such as data exfiltration. Cybercriminals or malware could exploit SSH to hide their unauthorized communications, or to exfiltrate stolen data from the target network.

Solution:
Edit the /etc/ssh/sshd_config file to set the DisableForwarding parameter to yes above any Include entry as follows:

DisableForwarding yes

Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

Impact:

SSH tunnels are widely used in many corporate environments. In some environments the applications themselves may have very limited native support for security. By utilizing tunneling, compliance with SOX, HIPAA, PCI-DSS, and other standards can be achieved without having to modify the applications.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

port 22: disableforwarding no
Fail","Edit the /etc/ssh/sshd_config file to set the DisableForwarding parameter to yes above any Include entry as follows:

DisableForwarding yes

Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

Impact:

SSH tunnels are widely used in many corporate environments. In some environments the applications themselves may have very limited native support for security. By utilizing tunneling, compliance with SOX, HIPAA, PCI-DSS, and other standards can be achieved without having to modify the applications.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.9 Ensure sshd GSSAPIAuthentication is disabled"" : [PASSED]

The GSSAPIAuthentication parameter specifies whether user authentication based on GSSAPI is allowed

Allowing GSSAPI authentication through SSH exposes the system's GSSAPI to remote hosts, and should be disabled to reduce the attack surface of the system

Solution:
Edit the /etc/ssh/sshd_config file to set the GSSAPIAuthentication parameter to no above any Include and Match entries as follows:

GSSAPIAuthentication no

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|2A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - sshd_config GSSAPIAuthentication
The file ""/etc/ssh/sshd_config"" does not contain ""(?i)^\h*GSSAPIAuthentication\h+""?yes\b""

-------------------------
PASSED - sshd -T GSSAPIAuthentication
The command script with multiple lines returned : 

port 22: gssapiauthentication no
Pass","Edit the /etc/ssh/sshd_config file to set the GSSAPIAuthentication parameter to no above any Include and Match entries as follows:

GSSAPIAuthentication no

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.2.4 Ensure users must provide password for privilege escalation"" : [FAILED]

The operating system must be configured so that users must provide a password for privilege escalation.

Without (re-)authentication, users may access resources or perform tasks for which they do not have authorization.

When operating systems provide the capability to escalate a functional capability, it is critical the user (re-)authenticate.

Solution:
Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit the relevant sudoers file.

Remove any line with occurrences of NOPASSWD tags in the file.

Impact:

This will prevent automated processes from being able to elevate privileges.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|2A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: ^[^#]*NOPASSWD
file: /etc/sudoers /etc/sudoers.d/*
regex: ^[^#]*NOPASSWD

Actual Value:
Non-compliant file(s):
      /etc/sudoers.d/scion - regex '^[^#]*NOPASSWD' found - expect '^[^#]*NOPASSWD' found in the following lines:
          1: scion ALL=(ALL) NOPASSWD:ALL","Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit the relevant sudoers file.

Remove any line with occurrences of NOPASSWD tags in the file.

Impact:

This will prevent automated processes from being able to elevate privileges.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.1.3 Ensure password failed attempts lockout includes root account"" : [FAILED]

even_deny_root - Root account can become locked as well as regular accounts

root_unlock_time=n - This option implies even_deny_root option. Allow access after n seconds to root account after the account is locked. In case the option is not specified the value is the same as of the unlock_time option.

Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.

Solution:
Edit /etc/security/faillock.conf :

 - Remove or update any line containing root_unlock_time - OR - set it to a value of 60 or more
 - Update or add the following line:

even_deny_root

Run the following command:

# grep -Pl -- 'bpam_faillock.soh+([^#
r]+h+)?(even_deny_root|root_unlock_time)' /usr/share/pam-configs/*

Edit any returned files and remove the even_deny_root and root_unlock_time arguments from the pam_faillock.so line(s):

Impact:

Use of unlock_time=0 or root_unlock_time=0 may allow an attacker to cause denial of service to legitimate users.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.7,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),LEVEL|2A,NESA|M1.2.2,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - even_deny_root
The file ""/etc/security/faillock.conf"" does not contain ""(?i)^\h*(even_deny_root|root_unlock_time\h*=\h*\d+)\b""

-------------------------
PASSED - faillock - root_unlock_time
No matching files were found

-------------------------
PASSED - common-auth root_unlock_time
No matching files were found","Edit /etc/security/faillock.conf :

 - Remove or update any line containing root_unlock_time - OR - set it to a value of 60 or more
 - Update or add the following line:

even_deny_root

Run the following command:

# grep -Pl -- 'bpam_faillock.soh+([^#
r]+h+)?(even_deny_root|root_unlock_time)' /usr/share/pam-configs/*

Edit any returned files and remove the even_deny_root and root_unlock_time arguments from the pam_faillock.so line(s):

Impact:

Use of unlock_time=0 or root_unlock_time=0 may allow an attacker to cause denial of service to legitimate users.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.1.2 Ensure minimum password age is configured"" : [FAILED]

The minimum password age determines the number of days that you must use a password before you can change it.

PASS_MIN_DAYS <

N

> - The minimum number of days allowed between password changes. Any password changes attempted sooner than this will be rejected. If not specified, 0 will be assumed (which disables the restriction).

Users may have favorite passwords that they like to use because they are easy to remember and they believe that their password choice is secure from compromise. Unfortunately, passwords are compromised and if an attacker is targeting a specific individual user account, with foreknowledge of data about that user, reuse of old, potentially compromised passwords, may cause a security breach.

By restricting the frequency of password changes, an administrator can prevent users from repeatedly changing their password in an attempt to circumvent password reuse controls

Solution:
Edit /etc/login.defs and set PASS_MIN_DAYS to a value greater than 0 that follows local site policy:

Example:

PASS_MIN_DAYS 1

Run the following command to modify user parameters for all users with a password set to a minimum age greater than zero that follows local site policy:

# chage --mindays <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($4 < 1)system (""chage --mindays 1 "" $1)}' /etc/shadow

Impact:

By enforcing a minimum password age, a user will be unable to change their password if they observe a potential compromise of their password, e.g. ""shoulder surfing"", during the time defined by minimum password age. In this event the user should follow local site policy to report a compromised password.

If a users password is set by other personnel as a procedure in dealing with a lost or expired password, the user should be forced to update this ""set"" password with their own password. e.g. force ""change at next logon"".

If it is not possible to have a user set their own password immediately, and this recommendation or local site procedure may cause a user to continue using a third party generated password, PASS_MIN_DAYS for the effected user should be temporally changed to 0 to allow a user to change their password immediately.

For applications where the user is not using the password at console, the ability to ""change at next logon"" may be limited. This may cause a user to continue to use a password created by other personnel.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|2M,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - shadow - password min days
Non-compliant file(s):
      /etc/shadow - regex '^[^:]+:[^!*]' found - expect '^([^:]*:){3}([1-9]|[1-9][0-9]+):' not found in the following lines:
          1: root:$6$cHxy3rQ.Bf50$uYOrh7oOEHJfdggS.93HTMqhJGmQI/P9c3ecD9IYjRJpirYJmfLY3V6uXDa/cwZDEHp6ltyl7z5yWg1hT1qLG0:19417:0:99999:7:::
          26: anapaya:$6$rwiN9fzH$D11Faz.GgMt70EYN9tALinXL/.16Hcc66kM6yK1HGuQj5BKjSEdYtDuI.XQpLFq15AQ8yEXLlYhyooxQKTjs0/:18927:0:99999:7:::
          27: scion:$6$cHxy3rQ.Bf50$uYOrh7oOEHJfdggS.93HTMqhJGmQI/P9c3ecD9IYjRJpirYJmfLY3V6uXDa/cwZDEHp6ltyl7z5yWg1hT1qLG0:19443:0:99999:7:::

-------------------------
FAILED - login.defs PASS_MIN_DAYS
Non-compliant file(s):
      /etc/login.defs - regex '(?i)^[\s]*PASS_MIN_DAYS[\s]+' found - expect '(?i)PASS_MIN_DAYS[\s]+([1-9]|[1-9][0-9]+)[\s]*$' not found in the following lines:
          166: PASS_MIN_DAYS	0","Edit /etc/login.defs and set PASS_MIN_DAYS to a value greater than 0 that follows local site policy:

Example:

PASS_MIN_DAYS 1

Run the following command to modify user parameters for all users with a password set to a minimum age greater than zero that follows local site policy:

# chage --mindays <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($4 < 1)system (""chage --mindays 1 "" $1)}' /etc/shadow

Impact:

By enforcing a minimum password age, a user will be unable to change their password if they observe a potential compromise of their password, e.g. ""shoulder surfing"", during the time defined by minimum password age. In this event the user should follow local site policy to report a compromised password.

If a users password is set by other personnel as a procedure in dealing with a lost or expired password, the user should be forced to update this ""set"" password with their own password. e.g. force ""change at next logon"".

If it is not possible to have a user set their own password immediately, and this recommendation or local site procedure may cause a user to continue using a third party generated password, PASS_MIN_DAYS for the effected user should be temporally changed to 0 to allow a user to change their password immediately.

For applications where the user is not using the password at console, the ability to ""change at next logon"" may be limited. This may cause a user to continue to use a password created by other personnel.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.3.1 Ensure nologin is not listed in /etc/shells"" : [PASSED]

/etc/shells is a text file which contains the full pathnames of valid login shells. This file is consulted by chsh and available to be queried by other programs.

Be aware that there are programs which consult this file to find out if a user is a normal user; for example, FTP daemons traditionally disallow access to users with shells not included in this file.

A user can use chsh to change their configured shell.

If a user has a shell configured that isn't in in /etc/shells then the system assumes that they're somehow restricted. In the case of chsh it means that the user cannot change that value.

Other programs might query that list and apply similar restrictions.

By putting nologin in /etc/shells any user that has nologin as its shell is considered a full, unrestricted user. This is not the expected behavior for nologin

Solution:
Edit /etc/shells and remove any lines that include nologin

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5,800-53r5|IA-5,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5,LEVEL|2A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2

Policy Value:
expect: ^.*\/nologin\b
file: /etc/shells
regex: ^.*\/nologin\b

Actual Value:
The file ""/etc/shells"" does not contain ""^.*\/nologin\b""","Edit /etc/shells and remove any lines that include nologin","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.1.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tools"" : [FAILED]

Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.

Protecting the integrity of the tools used for auditing purposes is a critical step toward ensuring the integrity of audit information. Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

Attackers may replace the audit tools or inject code into the existing tools with the purpose of providing the capability to hide or erase system activity from the audit logs.

Audit tools should be cryptographically signed in order to provide the capability to identify when the audit tools have been modified, manipulated, or replaced. An example is a checksum hash of the file or files.

Solution:
Edit /etc/aide/aide.conf and add or update the following selection lines:

# Audit Tools
/sbin/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/auditd p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/aureport p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/autrace p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512

Note: - IF - /etc/aide/aide.conf includes a @@x_include statement:

Example:

@@x_include /etc/aide/aide.conf.d ^[a-zA-Z0-9_-]+$
 - @@x_include FILE
 - @@x_include DIRECTORY REGEX
 - @x_include is identical to @@include except that if a config file is executable it is run and the output is used as config.
 - If the executable file exits with status greater than zero or writes to stderr aide stops with an error.
 - For security reasons DIRECTORY and each executable config file must be owned by the current user and must not be group or world-writable.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|SI-7,800-53r5|SI-7,CSF|PR.DS-6,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(c)(1),HIPAA|164.312(c)(2),HIPAA|164.312(e)(2)(i),ITSG-33|SI-7,ITSG-33|SI-7a.,LEVEL|2A,NESA|T3.4.1,NESA|T7.3.2,NESA|T7.3.3,PCI-DSSv3.2.1|10.5.5,QCSC-v1|3.2

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - * Reasons for audit failure * :
 - AIDE configuration file not found.
  Please verify AIDE is installed on the system","Edit /etc/aide/aide.conf and add or update the following selection lines:

# Audit Tools
/sbin/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/auditd p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/aureport p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/autrace p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512

Note: - IF - /etc/aide/aide.conf includes a @@x_include statement:

Example:

@@x_include /etc/aide/aide.conf.d ^[a-zA-Z0-9_-]+$
 - @@x_include FILE
 - @@x_include DIRECTORY REGEX
 - @x_include is identical to @@include except that if a config file is executable it is run and the output is used as config.
 - If the executable file exits with status greater than zero or writes to stderr aide stops with an error.
 - For security reasons DIRECTORY and each executable config file must be owned by the current user and must not be group or world-writable.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.1.1 Ensure auditd packages are installed"" : [FAILED]

auditd is the userspace component to the Linux Auditing System. It's responsible for writing audit records to the disk

The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.

Solution:
Run the following command to Install auditd and audispd-plugins

# apt install auditd audispd-plugins

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - dpkg check auditd
The command '/bin/dpkg -s auditd 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'auditd' is not installed and no information is available

-------------------------
FAILED - dpkg check audispd-plugins
The command '/bin/dpkg -s audispd-plugins 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'audispd-plugins' is not installed and no information is available","Run the following command to Install auditd and audispd-plugins

# apt install auditd audispd-plugins","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.1.2 Ensure auditd service is enabled and active"" : [FAILED]

Turn on the auditd daemon to record system events.

The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.

Solution:
Run the following commands to unmask, enable and start auditd :

# systemctl unmask auditd
# systemctl enable auditd
# systemctl start auditd

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - check if auditd is active
The command '/bin/systemctl is-active auditd' returned : 

inactive

-------------------------
FAILED - check if auditd is enabled
The command '/bin/systemctl is-enabled auditd' returned : 

Failed to get unit file state for auditd.service: No such file or directory","Run the following commands to unmask, enable and start auditd :

# systemctl unmask auditd
# systemctl enable auditd
# systemctl start auditd","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.1.3 Ensure auditing for processes that start prior to auditd is enabled"" : [FAILED]

Configure grub2 so that processes that are capable of being audited can be audited even if they start up prior to auditd startup.

Audit events need to be captured on processes that start up prior to auditd so that potential malicious activity cannot go undetected.

Solution:
Edit /etc/default/grub and add audit=1 to GRUB_CMDLINE_LINUX :

Example:

GRUB_CMDLINE_LINUX=""audit=1""

Run the following command to update the grub2 configuration:

# update-grub

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$
timeout: 7200

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - Grub parameter: ""audit=1"" is not set","Edit /etc/default/grub and add audit=1 to GRUB_CMDLINE_LINUX :

Example:

GRUB_CMDLINE_LINUX=""audit=1""

Run the following command to update the grub2 configuration:

# update-grub","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.1.4 Ensure audit_backlog_limit is sufficient"" : [FAILED]

In the kernel-level audit subsystem, a socket buffer queue is used to hold audit events. Whenever a new audit event is received, it is logged and prepared to be added to this queue.

The kernel boot parameter audit_backlog_limit=N with N representing the amount of messages, will ensure that a queue cannot grow beyond a certain size. If an audit event is logged which would grow the queue beyond this limit, then a failure occurs and is handled according to the system configuration

If an audit event is logged which would grow the queue beyond the audit_backlog_limit then a failure occurs, auditd records will be lost, and potential malicious activity could go undetected.

Solution:
Edit /etc/default/grub and add audit_backlog_limit=N to GRUB_CMDLINE_LINUX. The recommended size for N is 8192 or larger.

Example:

GRUB_CMDLINE_LINUX=""audit_backlog_limit=8192""

Run the following command to update the grub2 configuration:

# update-grub

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: /bin/find /boot -type f -name 'grub.cfg' -exec /bin/grep -Ph -- '^\h*linux' {} + | /bin/grep -Pv 'audit_backlog_limit=\d+\b' | /bin/awk '{print} END { if (NR==0) print ""pass"" }'
expect: ^pass$
timeout: 7200

Actual Value:
The command '/bin/find /boot -type f -name 'grub.cfg' -exec /bin/grep -Ph -- '^\h*linux' {} + | /bin/grep -Pv 'audit_backlog_limit=\d+\b' | /bin/awk '{print} END { if (NR==0) print ""pass"" }'' returned : 

linux	/boot/vmlinuz-5.15.0-117-generic root=/dev/mapper/anapaya--v3--vg-root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  quiet
		linux	/boot/vmlinuz-5.15.0-117-generic root=/dev/mapper/anapaya--v3--vg-root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  quiet
		linux	/boot/vmlinuz-5.15.0-117-generic root=/dev/mapper/anapaya--v3--vg-root ro recovery nomodeset dis_ucode_ldr noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0 
		linux	/boot/vmlinuz-5.15.0-116-generic root=/dev/mapper/anapaya--v3--vg-root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  quiet
		linux	/boot/vmlinuz-5.15.0-116-generic root=/dev/mapper/anapaya--v3--vg-root ro recovery nomodeset dis_ucode_ldr noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0","Edit /etc/default/grub and add audit_backlog_limit=N to GRUB_CMDLINE_LINUX. The recommended size for N is 8192 or larger.

Example:

GRUB_CMDLINE_LINUX=""audit_backlog_limit=8192""

Run the following command to update the grub2 configuration:

# update-grub","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.2.1 Ensure audit log storage size is configured"" : [FAILED]

Configure the maximum size of the audit log file. Once the log reaches the maximum size, it will be rotated and a new log file will be started.

It is important that an appropriate size is determined for log files so that they do not impact the system and audit data is not lost.

Solution:
Set the following parameter in /etc/audit/auditd.conf in accordance with site policy:

max_log_file = <MB>

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2

Policy Value:
expect: ^[\s]*max_log_file[\s]*=[\s]*32[\s]*$
file: /etc/audit/auditd.conf
regex: ^[\s]*max_log_file[\s]*=

Actual Value:
No files found: /etc/audit/auditd.conf","Set the following parameter in /etc/audit/auditd.conf in accordance with site policy:

max_log_file = <MB>","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.2.2 Ensure audit logs are not automatically deleted"" : [FAILED]

The max_log_file_action setting determines how to handle the audit log file reaching the max file size. A value of keep_logs will rotate the logs but never delete old logs.

In high security contexts, the benefits of maintaining a long audit history exceed the cost of storing the audit history.

Solution:
Set the following parameter in /etc/audit/auditd.conf:

max_log_file_action = keep_logs

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2

Policy Value:
expect: ^[\s]*max_log_file_action[\s]*=[\s]*(?i)keep_logs(?-i)[\s]*$
file: /etc/audit/auditd.conf
regex: ^[\s]*max_log_file_action[\s]*=

Actual Value:
No files found: /etc/audit/auditd.conf","Set the following parameter in /etc/audit/auditd.conf:

max_log_file_action = keep_logs","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.2.3 Ensure system is disabled when audit logs are full"" : [FAILED]

The auditd daemon can be configured to halt the system or put the system in single user mode, if no free space is available or an error is detected on the partition that holds the audit log files.

The disk_full_action parameter tells the system what action to take when no free space is available on the partition that holds the audit log files. Valid values are ignore syslog rotate exec suspend single and halt

 - ignore the audit daemon will issue a syslog message but no other action is taken
 - syslog the audit daemon will issue a warning to syslog
 - rotate the audit daemon will rotate logs, losing the oldest to free up space
 - exec /path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging once its completed its action
 - suspend the audit daemon will stop writing records to the disk
 - single the audit daemon will put the computer system in single user mode
 - halt the audit daemon will shut down the system

The disk_error_action parameter tells the system what action to take when an error is detected on the partition that holds the audit log files. Valid values are ignore syslog exec suspend single and halt

 - ignore the audit daemon will not take any action
 - syslog the audit daemon will issue no more than 5 consecutive warnings to syslog
 - exec /path-to-script will execute the script. You cannot pass parameters to the script
 - suspend the audit daemon will stop writing records to the disk
 - single the audit daemon will put the computer system in single user mode
 - halt the audit daemon will shut down the system

In high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability.

Solution:
Set one of the following parameters in /etc/audit/auditd.conf depending on your local security policies.

disk_full_action = <halt|single>
disk_error_action = <syslog|single|halt>

Example:

disk_full_action = halt
disk_error_action = halt

Impact:

disk_full_action parameter:

 - Set to halt - the auditd daemon will shutdown the system when the disk partition containing the audit logs becomes full.
 - Set to single - the auditd daemon will put the computer system in single user mode when the disk partition containing the audit logs becomes full.

disk_error_action parameter:

 - Set to halt - the auditd daemon will shutdown the system when an error is detected on the partition that holds the audit log files.
 - Set to single - the auditd daemon will put the computer system in single user mode when an error is detected on the partition that holds the audit log files.
 - Set to syslog - the auditd daemon will issue no more than 5 consecutive warnings to syslog when an error is detected on the partition that holds the audit log files.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-4,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-4,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv8|8.2,CSCv8|8.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.DS-4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-4,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NESA|T3.3.1,NESA|T3.6.2,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - disk_full_action
No files found: /etc/audit/auditd.conf

-------------------------
FAILED - disk_error_action = root
No files found: /etc/audit/auditd.conf","Set one of the following parameters in /etc/audit/auditd.conf depending on your local security policies.

disk_full_action = <halt|single>
disk_error_action = <syslog|single|halt>

Example:

disk_full_action = halt
disk_error_action = halt

Impact:

disk_full_action parameter:

 - Set to halt - the auditd daemon will shutdown the system when the disk partition containing the audit logs becomes full.
 - Set to single - the auditd daemon will put the computer system in single user mode when the disk partition containing the audit logs becomes full.

disk_error_action parameter:

 - Set to halt - the auditd daemon will shutdown the system when an error is detected on the partition that holds the audit log files.
 - Set to single - the auditd daemon will put the computer system in single user mode when an error is detected on the partition that holds the audit log files.
 - Set to syslog - the auditd daemon will issue no more than 5 consecutive warnings to syslog when an error is detected on the partition that holds the audit log files.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.2.4 Ensure system warns when audit logs are low on space"" : [FAILED]

The auditd daemon can be configured to halt the system, put the system in single user mode or send a warning message, if the partition that holds the audit log files is low on space.

The space_left_action parameter tells the system what action to take when the system has detected that it is starting to get low on disk space. Valid values are ignore syslog rotate email exec suspend single and halt

 - ignore the audit daemon does nothing
 - syslog the audit daemon will issue a warning to syslog
 - rotate the audit daemon will rotate logs, losing the oldest to free up space
 - email the audit daemon will send a warning to the email account specified in action_mail_acct as well as sending the message to syslog
 - exec /path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging once its completed its action
 - suspend the audit daemon will stop writing records to the disk
 - single the audit daemon will put the computer system in single user mode
 - halt the audit daemon will shut down the system

The admin_space_left_action parameter tells the system what action to take when the system has detected that it is low on disk space. Valid values are ignore syslog rotate email exec suspend single and halt

 - ignore the audit daemon does nothing
 - syslog the audit daemon will issue a warning to syslog
 - rotate the audit daemon will rotate logs, losing the oldest to free up space
 - email the audit daemon will send a warning to the email account specified in action_mail_acct as well as sending the message to syslog
 - exec /path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging once its completed its action
 - suspend the audit daemon will stop writing records to the disk
 - single the audit daemon will put the computer system in single user mode
 - halt the audit daemon will shut down the system

In high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability.

Solution:
Set the space_left_action parameter in /etc/audit/auditd.conf to email exec single or halt :

Example:

space_left_action = email

Set the admin_space_left_action parameter in /etc/audit/auditd.conf to single or halt :

Example:

admin_space_left_action = single

Note: A Mail Transfer Agent (MTA) must be installed and configured properly to set space_left_action = email

Impact:

If the admin_space_left_action is set to single the audit daemon will put the computer system in single user mode.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-4,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-4,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSCv8|8.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.DS-4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-4,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NESA|T3.3.1,NESA|T3.6.2,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - admin_space_left_action
No files found: /etc/audit/auditd.conf

-------------------------
FAILED - space_left_action
No files found: /etc/audit/auditd.conf","Set the space_left_action parameter in /etc/audit/auditd.conf to email exec single or halt :

Example:

space_left_action = email

Set the admin_space_left_action parameter in /etc/audit/auditd.conf to single or halt :

Example:

admin_space_left_action = single

Note: A Mail Transfer Agent (MTA) must be installed and configured properly to set space_left_action = email

Impact:

If the admin_space_left_action is set to single the audit daemon will put the computer system in single user mode.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.1 Ensure changes to system administration scope (sudoers) is collected"" : [FAILED]

Monitor scope changes for system administrators. If the system has been properly configured to force system administrators to log in as themselves first and then use the sudo command to execute privileged commands, it is possible to monitor changes in scope. The file /etc/sudoers or files in /etc/sudoers.d will be written to when the file(s) or related attributes have changed. The audit records will be tagged with the identifier ""scope"".

Changes in the /etc/sudoers and /etc/sudoers.d files can indicate that an unauthorized change has been made to the scope of system administrator activity.

Solution:
Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor scope changes for system administrators.

Example:

# printf '%s
' ""-w /etc/sudoers -p wa -k scope"" ""-w /etc/sudoers.d -p wa -k scope"" >> /etc/audit/rules.d/50-scope.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|4.8,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - auditctl /etc/sudoers
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/sudoers/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - /etc/sudoers.d
The command '/bin/awk '/^ *-w/ &&/\/etc\/sudoers\.d/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - /etc/sudoers
The command '/bin/awk '/^ *-w/ &&/\/etc\/sudoers/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /etc/sudoers.d
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/sudoers\.d/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail","Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor scope changes for system administrators.

Example:

# printf '%s
' ""-w /etc/sudoers -p wa -k scope"" ""-w /etc/sudoers.d -p wa -k scope"" >> /etc/audit/rules.d/50-scope.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.10 Ensure successful file system mounts are collected"" : [FAILED]

Monitor the use of the mount system call. The mount (and umount ) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user

It is highly unusual for a non privileged user to mount file systems to the system. While tracking mount commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful open creat and truncate system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document.

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful file system mounts.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b32 -S mount -F auid>=$UID_MIN -F auid!=unset -k mounts
-a always,exit -F arch=b64 -S mount -F auid>=$UID_MIN -F auid!=unset -k mounts
"" >> /etc/audit/rules.d/50-mounts.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - auditctl b64
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -S/ &&/mount/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b32
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -S/ &&/mount/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b64
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -S/ &&/mount/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -S/ &&/mount/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful file system mounts.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b32 -S mount -F auid>=$UID_MIN -F auid!=unset -k mounts
-a always,exit -F arch=b64 -S mount -F auid>=$UID_MIN -F auid!=unset -k mounts
"" >> /etc/audit/rules.d/50-mounts.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.11 Ensure session initiation information is collected"" : [FAILED]

Monitor session initiation events. The parameters in this section track changes to the files associated with session events.

 - /var/run/utmp - tracks all currently logged in users.
 - /var/log/wtmp - file tracks logins, logouts, shutdown, and reboot events.
 - /var/log/btmp - keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp

All audit records will be tagged with the identifier ""session.""

Monitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in).

Solution:
Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor session initiation information.

Example:

# printf ""
-w /var/run/utmp -p wa -k session
-w /var/log/wtmp -p wa -k session
-w /var/log/btmp -p wa -k session
"" >> /etc/audit/rules.d/50-session.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|16.13,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - auditctl /var/run/utmp
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/  &&/\/var\/run\/utmp/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - utmp
The command '/bin/awk '/^ *-w/  &&/\/var\/run\/utmp/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - btmp
The command '/bin/awk '/^ *-w/  &&/\/var\/log\/btmp/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /var/log/wtmp
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/  &&/\/var\/log\/wtmp/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /var/log/btmp
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/  &&/\/var\/log\/btmp/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - wtmp
The command '/bin/awk '/^ *-w/  &&/\/var\/log\/wtmp/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail","Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor session initiation information.

Example:

# printf ""
-w /var/run/utmp -p wa -k session
-w /var/log/wtmp -p wa -k session
-w /var/log/btmp -p wa -k session
"" >> /etc/audit/rules.d/50-session.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.12 Ensure login and logout events are collected"" : [FAILED]

Monitor login and logout events. The parameters below track changes to files associated with login/logout events.

 - /var/log/lastlog - maintain records of the last time a user successfully logged in.
 - /var/run/faillock - directory maintains records of login failures via the pam_faillock module.

Monitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins.

Solution:
Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor login and logout events.

Example:

# printf ""
-w /var/log/lastlog -p wa -k logins
-w /var/run/faillock -p wa -k logins
"" >> /etc/audit/rules.d/50-login.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - faillock
The command '/bin/awk '/^ *-w/ && /\/var\/run\/faillock/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /var/log/lastlog
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ && /\/var\/log\/lastlog/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /var/run/faillock
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ && /\/var\/run\/faillock/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - lastlog
The command '/bin/awk '/^ *-w/ && /\/var\/log\/lastlog/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail","Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor login and logout events.

Example:

# printf ""
-w /var/log/lastlog -p wa -k logins
-w /var/run/faillock -p wa -k logins
"" >> /etc/audit/rules.d/50-login.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.13 Ensure file deletion events by users are collected"" : [FAILED]

Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for:

 - unlink - remove a file
 - unlinkat - remove a file attribute
 - rename - rename a file
 - renameat rename a file attributesystem calls and tags them with the identifier ""delete"".

Monitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered.

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor file deletion events by users.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S rename,unlink,unlinkat,renameat -F auid>=${UID_MIN} -F auid!=unset -F key=delete
-a always,exit -F arch=b32 -S rename,unlink,unlinkat,renameat -F auid>=${UID_MIN} -F auid!=unset -F key=delete
"" >> /etc/audit/rules.d/50-delete.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - b32 unlink
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/)  &&/ -F *arch=b32/  &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/)  &&/ -F *auid>=${UID_MIN}/  &&/ -S/  &&(/unlink/||/rename/||/unlinkat/||/renameat/)  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules  | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64 unlink
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/)  &&/ -F *arch=b64/  &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/)  &&/ -F *auid>=${UID_MIN}/  &&/ -S/  &&(/unlink/||/rename/||/unlinkat/||/renameat/)  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b32 unlink
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/)  &&/ -F *arch=b32/  &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/)  &&/ -F *auid>=${UID_MIN}/  &&/ -S/  &&(/unlink/||/rename/||/unlinkat/||/renameat/)  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b64 unlink
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/)  &&/ -F *arch=b64/  &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/)  &&/ -F *auid>=${UID_MIN}/  &&/ -S/  &&(/unlink/||/rename/||/unlinkat/||/renameat/)  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules  | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor file deletion events by users.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S rename,unlink,unlinkat,renameat -F auid>=${UID_MIN} -F auid!=unset -F key=delete
-a always,exit -F arch=b32 -S rename,unlink,unlinkat,renameat -F auid>=${UID_MIN} -F auid!=unset -F key=delete
"" >> /etc/audit/rules.d/50-delete.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.14 Ensure events that modify the system's Mandatory Access Controls are collected"" : [FAILED]

Monitor AppArmor, an implementation of mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/apparmor/ and /etc/apparmor.d/ directories.

Note: If a different Mandatory Access Control method is used, changes to the corresponding directories should be audited.

Changes to files in the /etc/apparmor/ and /etc/apparmor.d/ directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system.

Solution:
Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify the system's Mandatory Access Controls.

Example:

# printf ""
-w /etc/apparmor/ -p wa -k MAC-policy
-w /etc/apparmor.d/ -p wa -k MAC-policy
"" >> /etc/audit/rules.d/50-MAC-policy.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|5.5,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - auditctl - /etc/apparmor.d/
The command '/sbin/auditctl -l 2>/dev/null | /bin/awk '/^ *-w/ && /\/etc\/apparmor.d/ && / +-p *wa/ && (/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

fail

-------------------------
FAILED - rules - /etc/apparmor/
The command '/bin/awk '/^ *-w/ && /\/etc\/apparmor/ && / +-p *wa/ && (/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - rules - /etc/apparmor.d/
The command '/bin/awk '/^ *-w/ && /\/etc\/apparmor.d/ && / +-p *wa/ && (/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl - /etc/apparmor/
The command '/sbin/auditctl -l 2>/dev/null | /bin/awk '/^ *-w/ && /\/etc\/apparmor/ && / +-p *wa/ && (/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

fail","Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify the system's Mandatory Access Controls.

Example:

# printf ""
-w /etc/apparmor/ -p wa -k MAC-policy
-w /etc/apparmor.d/ -p wa -k MAC-policy
"" >> /etc/audit/rules.d/50-MAC-policy.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.15 Ensure successful and unsuccessful attempts to use the chcon command are recorded"" : [FAILED]

The operating system must generate audit records for successful/unsuccessful uses of the chcon command.

The chcon command is used to change file security context. Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.

Audit records can be generated from various components within the information system (e.g., module or policy filter).

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the chcon command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - /etc/audit/rules.d/*.rules
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/bin\/chcon/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/bin\/chcon/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

sh: 1: auditctl: not found
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the chcon command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.16 Ensure successful and unsuccessful attempts to use the setfacl command are recorded"" : [FAILED]

The operating system must generate audit records for successful/unsuccessful uses of the setfacl command

This utility sets Access Control Lists (ACLs) of files and directories. Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.

Audit records can be generated from various components within the information system (e.g., module or policy filter).

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the setfacl command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/bin/setfacl -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - /etc/audit/rules.d/*.rules
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/bin\/setfacl/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf  ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/bin\/setfacl/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf  ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the setfacl command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/bin/setfacl -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.17 Ensure successful and unsuccessful attempts to use the chacl command are recorded"" : [FAILED]

The operating system must generate audit records for successful/unsuccessful uses of the chacl command.

chacl is an IRIX-compatibility command, and is maintained for those users who are familiar with its use from either XFS or IRIX.

chacl changes the ACL(s) for a file or directory. Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.

Audit records can be generated from various components within the information system (e.g., module or policy filter).

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the chacl command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/bin/chacl -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - /etc/audit/rules.d/*.rules
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/bin\/chacl/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf  ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/bin\/chacl/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf  ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

sh: 1: auditctl: not found
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the chacl command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/bin/chacl -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.18 Ensure successful and unsuccessful attempts to use the usermod command are recorded"" : [FAILED]

The operating system must generate audit records for successful/unsuccessful uses of the usermod command.

The usermod command modifies the system account files to reflect the changes that are specified on the command line. Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.

Audit records can be generated from various components within the information system (e.g., module or policy filter).

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the usermod command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/sbin/usermod -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k usermod
"" >> /etc/audit/rules.d/50-usermod.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - /etc/audit/rules.d/*.rules
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/sbin\/usermod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf  ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk  ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\/usr\/sbin\/usermod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/) "" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf  ""ERROR: Variable 'UID_MIN' is unset. \n ""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the usermod command.

Example:

# {
 UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F path=/usr/sbin/usermod -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k usermod
"" >> /etc/audit/rules.d/50-usermod.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.19 Ensure kernel module loading unloading and modification is collected"" : [FAILED]

Monitor the loading and unloading of kernel modules. All the loading / listing / dependency checking of modules is done by kmod via symbolic links.

The following system calls control loading and unloading of modules:

 - init_module - load a module
 - finit_module - load a module (used when the overhead of using cryptographically signed modules to determine the authenticity of a module can be avoided)
 - delete_module - delete a module

Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of modules

Monitoring the use of all the various ways to manipulate kernel modules could provide system administrators with evidence that an unauthorized change was made to a kernel module, possibly compromising the security of the system.

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor kernel module modification.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S init_module,finit_module,delete_module -F auid>=${UID_MIN} -F auid!=unset -k kernel_modules
-a always,exit -F path=/usr/bin/kmod -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k kernel_modules
"" >> /etc/audit/rules.d/50-kernel_modules.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - /usr/bin/kmod
The command script with multiple lines returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
ERROR: Variable 'UID_MIN' is unset.
pass

-------------------------
FAILED - auditctl delete_module
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b(32|64)/ &&/ -S/ &&/delete_module/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - on disk init_module
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b(32|64)/ &&/ -S/ &&/init_module/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - on disk finit_module
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b(32|64)/ &&/ -S/ &&/finit_module/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /usr/bin/kmod
The command script with multiple lines returned : 

bash: line 3: auditctl: command not found
fail

-------------------------
FAILED - auditctl init_module
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b(32|64)/ &&/ -S/ &&/init_module/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - on disk delete_module
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b(32|64)/ &&/ -S/ &&/delete_module/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl finit_module
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b(32|64)/ &&/ -S/ &&/finit_module/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
PASSED - symlinks
The command script with multiple lines returned : 

OK","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor kernel module modification.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S init_module,finit_module,delete_module -F auid>=${UID_MIN} -F auid!=unset -k kernel_modules
-a always,exit -F path=/usr/bin/kmod -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k kernel_modules
"" >> /etc/audit/rules.d/50-kernel_modules.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.2 Ensure actions as another user are always logged"" : [FAILED]

sudo provides users with temporary elevated privileges to perform operations, either as the superuser or another user.

Creating an audit log of users with temporary elevated privileges and the operation(s) they performed is essential to reporting. Administrators will want to correlate the events written to the audit trail with the records written to sudo 's logfile to verify if unauthorized commands have been executed.

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor elevated privileges.

Example:

# printf ""
-a always,exit -F arch=b64 -C euid!=uid -F auid!=unset -S execve -k user_emulation
-a always,exit -F arch=b32 -C euid!=uid -F auid!=unset -S execve -k user_emulation
"" >> /etc/audit/rules.d/50-user_emulation.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - /etc/audit/rules.d/*.rules b32
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&(/ -C *euid!=uid/||/ -C *uid!=euid/) &&/ -S *execve/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - /etc/audit/rules.d/*.rules b64
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&(/ -C *euid!=uid/||/ -C *uid!=euid/) &&/ -S *execve/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&(/ -C *euid!=uid/||/ -C *uid!=euid/) &&/ -S *execve/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl b32
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&(/ -C *euid!=uid/||/ -C *uid!=euid/) &&/ -S *execve/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor elevated privileges.

Example:

# printf ""
-a always,exit -F arch=b64 -C euid!=uid -F auid!=unset -S execve -k user_emulation
-a always,exit -F arch=b32 -C euid!=uid -F auid!=unset -S execve -k user_emulation
"" >> /etc/audit/rules.d/50-user_emulation.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.20 Ensure the audit configuration is immutable"" : [FAILED]

Set system audit so that audit rules cannot be modified with auditctl Setting the flag ""-e 2"" forces audit to be put in immutable mode. Audit changes can only be made on system reboot.

Note: This setting will require the system to be rebooted to update the active auditd configuration settings.

In immutable mode, unauthorized users cannot execute changes to the audit system to potentially hide malicious activity and then put the audit rules back. Users would most likely notice a system reboot and that could alert administrators of an attempt to make unauthorized audit changes.

Solution:
Edit or create the file /etc/audit/rules.d/99-finalize.rules and add the line -e 2 at the end of the file:

Example:

# printf -- ""-e 2
"" >> /etc/audit/rules.d/99-finalize.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,800-53r5|MP-2,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(b),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|6.2,CSCv7|6.3,CSCv8|3.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-2,CSF|PR.PT-3,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T3.6.2,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /bin/grep -Ph -- '^\h*-e\h+2\b' /etc/audit/rules.d/*.rules | /bin/tail -1
expect: ^[\s]*-e[\s]+2[\s]*$

Actual Value:
The command '/bin/grep -Ph -- '^\h*-e\h+2\b' /etc/audit/rules.d/*.rules | /bin/tail -1' returned : 

/bin/grep: /etc/audit/rules.d/*.rules: No such file or directory","Edit or create the file /etc/audit/rules.d/99-finalize.rules and add the line -e 2 at the end of the file:

Example:

# printf -- ""-e 2
"" >> /etc/audit/rules.d/99-finalize.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.21 Ensure the running and on disk configuration is the same"" : [FAILED]

The Audit system have both on disk and running configuration. It is possible for these configuration settings to differ.

Note: Due to the limitations of augenrules and auditctl it is not absolutely guaranteed that loading the rule sets via augenrules --load will result in all rules being loaded or even that the user will be informed if there was a problem loading the rules.

Configuration differences between what is currently running and what is on disk could cause unexpected problems or may give a false impression of compliance requirements.

Solution:
If the rules are not aligned across all three () areas, run the following command to merge and load all rules:

# augenrules --load

Check if reboot is required.

if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then echo ""Reboot required to load rules""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2M,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: /sbin/augenrules --check
expect: ^[\s]*/sbin/augenrules:[\s]*No change[\s]*$

Actual Value:
The command '/sbin/augenrules --check' returned : 

sh: 1: /sbin/augenrules: not found","If the rules are not aligned across all three () areas, run the following command to merge and load all rules:

# augenrules --load

Check if reboot is required.

if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then echo ""Reboot required to load rules""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.3 Ensure events that modify the sudo log file are collected"" : [PASSED]

Monitor the sudo log file. If the system has been properly configured to disable the use of the su command and force all administrators to have to log in first and then use sudo to execute privileged commands, then all administrator commands will be logged to /var/log/sudo.log Any time a command is executed, an audit event will be triggered as the /var/log/sudo.log file will be opened for write and the executed administration command will be written to the log.

Changes in /var/log/sudo.log indicate that an administrator has executed a command or the log file itself has been tampered with. Administrators will want to correlate the events written to the audit trail with the records written to /var/log/sudo.log to verify if unauthorized commands have been executed.

Solution:
Note: This recommendation requires that the sudo logfile is configured. See guidance provided in the recommendation ""Ensure sudo log file exists""

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify the sudo log file.

Example:

# {
SUDO_LOG_FILE=$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,? .*//' -e 's/""//g')
[ -n ""${SUDO_LOG_FILE}"" ] &amp;&amp; printf ""
-w ${SUDO_LOG_FILE} -p wa -k sudo_log_file
"" >> /etc/audit/rules.d/50-sudo.rules || printf ""ERROR: Variable 'SUDO_LOG_FILE' is unset.
""
}

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - auditctl sudo log file
The command script with multiple lines returned : 

ERROR: Variable 'SUDO_LOG_FILE' is unset.
pass

-------------------------
PASSED - on disk sudo log file
The command script with multiple lines returned : 

ERROR: Variable 'SUDO_LOG_FILE' is unset.
pass","Note: This recommendation requires that the sudo logfile is configured. See guidance provided in the recommendation ""Ensure sudo log file exists""

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify the sudo log file.

Example:

# {
SUDO_LOG_FILE=$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,? .*//' -e 's/""//g')
[ -n ""${SUDO_LOG_FILE}"" ] &amp;&amp; printf ""
-w ${SUDO_LOG_FILE} -p wa -k sudo_log_file
"" >> /etc/audit/rules.d/50-sudo.rules || printf ""ERROR: Variable 'SUDO_LOG_FILE' is unset.
""
}

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.4 Ensure events that modify date and time information are collected"" : [FAILED]

Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the;

 - adjtimex - tune kernel clock
 - settimeofday - set time using timeval and timezone structures
 - stime - using seconds since 1/1/1970
 - clock_settime - allows for the setting of several internal clocks and timers

system calls have been executed. Further, ensure to write an audit record to the configured audit log file upon exit, tagging the records with a unique identifier such as ""time-change"".

Unexpected changes in system date and/or time could be a sign of malicious activity on the system.

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify date and time information.

Example:

# printf ""
-a always,exit -F arch=b64 -S adjtimex,settimeofday,clock_settime -k time-change
-a always,exit -F arch=b32 -S adjtimex,settimeofday,clock_settime -k time-change
-w /etc/localtime -p wa -k time-change
"" >> /etc/audit/rules.d/50-time-change.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|5.5,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - settimeofday x32
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/settimeofday/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl settimeofday x64
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/settimeofday/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - adjtimex x64
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/adjtimex/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - settimeofday x64
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/settimeofday/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl clock_settime x32
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/clock_settime/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl clock_settime x64
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/clock_settime/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - adjtimex x32
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/adjtimex/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - /etc/localtime
The command '/bin/awk '/^ *-w/ &&/\/etc\/localtime/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - clock_settime x64
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/clock_settime/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - clock_settime x32
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/clock_settime/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl settimeofday x32
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/settimeofday/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/localtime
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/localtime/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl adjtimex x32
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/adjtimex/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl adjtimex x64
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/adjtimex/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify date and time information.

Example:

# printf ""
-a always,exit -F arch=b64 -S adjtimex,settimeofday,clock_settime -k time-change
-a always,exit -F arch=b32 -S adjtimex,settimeofday,clock_settime -k time-change
-w /etc/localtime -p wa -k time-change
"" >> /etc/audit/rules.d/50-time-change.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.5 Ensure events that modify the system's network environment are collected"" : [FAILED]

Record changes to network environment files or system calls. The below parameters monitors the following system calls, and write an audit event on system call exit:

 - sethostname - set the systems host name
 - setdomainname - set the systems domain name

The files being monitored are:

 - /etc/issue and /etc/issue.net - messages displayed pre-login
 - /etc/hosts - file containing host names and associated IP addresses
 - /etc/networks - symbolic names for networks
 - /etc/network/ - directory containing network interface scripts and configurations files
 - /etc/netplan/ - central location for YAML networking configurations files

Monitoring system events that change network environments, such as sethostname and setdomainname helps identify unauthorized alterations to host and domain names, which could compromise security settings reliant on these names. Changes to /etc/hosts can signal unauthorized attempts to alter machine associations with IP addresses, potentially redirecting users and processes to unintended destinations. Surveillance of /etc/issue and /etc/issue.net is crucial to detect intruders inserting false information to deceive users. Monitoring /etc/network/ reveals modifications to network interfaces or scripts that may jeopardize system availability or security. Additionally, tracking changes in the /etc/netplan/ directory ensures swift detection of unauthorized adjustments to network configurations. All audit records should be appropriately tagged for relevance

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify the system's network environment.

Example:

# printf ""
-a always,exit -F arch=b64 -S sethostname,setdomainname -k system-locale
-a always,exit -F arch=b32 -S sethostname,setdomainname -k system-locale
-w /etc/issue -p wa -k system-locale
-w /etc/issue.net -p wa -k system-locale
-w /etc/hosts -p wa -k system-locale
-w /etc/networks -p wa -k system-locale
-w /etc/network/ -p wa -k system-locale
-w /etc/netplan/ -p wa -k system-locale
"" >> /etc/audit/rules.d/50-system_locale.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|5.5,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - on disk /etc/network/
The command '/bin/awk '/^ *-w/ &&/\/etc\/network\// &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - /etc/issue.net
The command '/bin/awk '/^ *-w/ &&/\/etc\/issue.net/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - on disk b32 setdomainname
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/setdomainname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - rules - /etc/networks
The command '/bin/awk '/^ *-w/ &&/\/etc\/networks/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64 setdomainname
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/setdomainname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl b64 sethostname
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/sethostname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - on disk b64 setdomainname
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/setdomainname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 sethostname
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/sethostname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/network
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/network / &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/issue.net
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/issue.net/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/issue
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/issue / &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - b32 sethostname
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/sethostname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl - /etc/networks
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/networks/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/hosts
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/hosts/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - b64 sethostname
The command '/bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/sethostname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - on disk /etc/issue
The command '/bin/awk '/^ *-w/ &&/\/etc\/issue / &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - on disk /etc/netplan
The command '/bin/awk '/^ *-w/ &&/\/etc\/netplan\// &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 setdomainname
The command '/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/setdomainname/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - /etc/hosts
The command '/bin/awk '/^ *-w/ &&/\/etc\/hosts/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /etc/netplan
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/netplan/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify the system's network environment.

Example:

# printf ""
-a always,exit -F arch=b64 -S sethostname,setdomainname -k system-locale
-a always,exit -F arch=b32 -S sethostname,setdomainname -k system-locale
-w /etc/issue -p wa -k system-locale
-w /etc/issue.net -p wa -k system-locale
-w /etc/hosts -p wa -k system-locale
-w /etc/networks -p wa -k system-locale
-w /etc/network/ -p wa -k system-locale
-w /etc/netplan/ -p wa -k system-locale
"" >> /etc/audit/rules.d/50-system_locale.rules

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.6 Ensure use of privileged commands are collected"" : [FAILED]

Monitor privileged programs, those that have the setuid and/or setgid bit set on execution, to determine if unprivileged users are running these commands.

Execution of privileged commands by non-privileged users could be an indication of someone trying to gain unauthorized access to the system.

Solution:
Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor the use of privileged commands.

Example script:

#!/usr/bin/env bash

{
  UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
  AUDIT_RULE_FILE=""/etc/audit/rules.d/50-privileged.rules""
  NEW_DATA=()
  for PARTITION in $(findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | grep -Pv ""noexec|nosuid"" | awk '{print $1}'); do
    readarray -t DATA < <(find ""${PARTITION}"" -xdev -perm /6000 -type f | awk -v UID_MIN=${UID_MIN} '{print ""-a always,exit -F path="" $1 "" -F perm=x -F auid>=""UID_MIN"" -F auid!=unset -k privileged"" }')
      for ENTRY in ""${DATA[@]}""; do
        NEW_DATA+=(""${ENTRY}"")
      done
  done
  readarray &amp;> /dev/null -t OLD_DATA < ""${AUDIT_RULE_FILE}""
  COMBINED_DATA=( ""${OLD_DATA[@]}"" ""${NEW_DATA[@]}"" )
  printf '%s
' ""${COMBINED_DATA[@]}"" | sort -u > ""${AUDIT_RULE_FILE}""
}

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

Special mount points

If there are any special mount points that are not visible by default from just scanning / change the PARTITION variable to the appropriate partition and re-run the remediation.

Impact:

Both the audit and remediation section of this recommendation will traverse all mounted file systems that is not mounted with either noexec or nosuid mount options. If there are large file systems without these mount options, such traversal will be significantly detrimental to the performance of the system.

Before running either the audit or remediation section, inspect the output of the following command to determine exactly which file systems will be traversed:

# findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | grep -Pv ""noexec|nosuid""

To exclude a particular file system due to adverse performance impacts, update the audit and remediation sections by adding a sufficiently unique string to the grep statement. The above command can be used to test the modified exclusions.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - auditctl
The command 'RUNNING=$(/sbin/auditctl -l); [ -n ""${RUNNING}"" ] && for PARTITION in $(/bin/findmnt -n -l -k -it $(/bin/awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | /bin/grep -Pv ""noexec|nosuid"" | /bin/awk '{print $1}'); do for PRIVILEGED in $(/bin/find ""${PARTITION}"" -xdev -perm /6000 -type f); do printf -- ""${RUNNING}"" | /bin/grep -q ""${PRIVILEGED}"" && printf ""OK: '${PRIVILEGED}' found in auditing rules.\n"" || printf ""Warning: '${PRIVILEGED}' not found in running configuration.\n""; done; done | /bin/awk '{print} END { if ($1 ~ ""Warning"") print ""Fail - Warnings found""; else print ""Pass - No warning entries found"" }'' returned : 

sh: 1: /sbin/auditctl: not found

-------------------------
FAILED - /etc/audit/rules.d
The command 'for PARTITION in $(/bin/findmnt -n -l -k -it $(/bin/awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | /bin/grep -Pv ""noexec|nosuid"" | /bin/awk '{print $1}'); do for PRIVILEGED in $(/bin/find ""${PARTITION}"" -xdev -perm /6000 -type f); do /bin/grep -qr ""${PRIVILEGED}"" /etc/audit/rules.d && printf ""OK: '${PRIVILEGED}' found in auditing rules.\n"" || printf ""Warning: '${PRIVILEGED}' not found in on disk configuration.\n""; done; done | /bin/awk '{print} END { if ($1 ~ ""Warning"") print ""Fail - Warnings found""; else print ""Pass - No warning entries found"" }'' returned : 

/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
Warning: '/usr/sbin/pam_extrausers_chkpwd' not found in on disk configuration.
Warning: '/usr/sbin/unix_chkpwd' not found in on disk configuration.
Warning: '/usr/bin/ssh-agent' not found in on disk configuration.
Warning: '/usr/bin/expiry' not found in on disk configuration.
Warning: '/usr/bin/su' not found in on disk configuration.
Warning: '/usr/bin/chage' not found in on disk configuration.
Warning: '/usr/bin/chfn' not found in on disk configuration.
Warning: '/usr/bin/crontab' not found in on disk configuration.
Warning: '/usr/bin/mount' not found in on disk configuration.
Warning: '/usr/bin/umount' not found in on disk configuration.
Warning: '/usr/bin/newgrp' not found in on disk configuration.
Warning: '/usr/bin/gpasswd' not found in on disk configuration.
Warning: '/usr/bin/sudo' not found in on disk configuration.
Warning: '/usr/bin/chsh' not found in on disk configuration.
Warning: '/usr/bin/passwd' not found in on disk configuration.
Warning: '/usr/libexec/polkit-agent-helper-1' not found in on disk configuration.
Warning: '/usr/lib/openssh/ssh-keysign' not found in on disk configuration.
Warning: '/usr/lib/x86_64-linux-gnu/utempter/utempter' not found in on disk configuration.
Warning: '/usr/lib/dbus-1.0/dbus-daemon-launch-helper' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/usr/bin/expiry' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/usr/bin/chage' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/usr/bin/wall' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/usr/bin/chfn' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/usr/bin/newgrp' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/usr/bin/gpasswd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/usr/bin/chsh' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/usr/bin/passwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/sbin/unix_chkpwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/bin/su' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/bin/mount' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/bin/umount' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/c7e8d7ba1ed20a4e0d51ea89f678801114bcfe0fa1fdef7b613a9475e63454b4/diff/bin/fusermount' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/usr/bin/expiry' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/usr/bin/chage' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/usr/bin/wall' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/usr/bin/chfn' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/usr/bin/newgrp' not found in on disk configurati/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
on.
Warning: '/var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/usr/bin/gpasswd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/usr/bin/chsh' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/usr/bin/passwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/sbin/unix_chkpwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/bin/su' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/bin/mount' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/bin/umount' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/121ad0592b404cd784e8de1bb8896462fdbee25e117e116dcb8e1deaee5ffa68/diff/usr/bin/ssh-agent' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/121ad0592b404cd784e8de1bb8896462fdbee25e117e116dcb8e1deaee5ffa68/diff/usr/lib/openssh/ssh-keysign' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/ea85a0fe3853c35c79e28f7157c972e1dd5d91905ec55d7fbf9bfd99eb923637/diff/usr/bin/expiry' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/ea85a0fe3853c35c79e28f7157c972e1dd5d91905ec55d7fbf9bfd99eb923637/diff/usr/bin/chage' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/ea85a0fe3853c35c79e28f7157c972e1dd5d91905ec55d7fbf9bfd99eb923637/diff/usr/bin/chfn' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/ea85a0fe3853c35c79e28f7157c972e1dd5d91905ec55d7fbf9bfd99eb923637/diff/usr/bin/newgrp' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/ea85a0fe3853c35c79e28f7157c972e1dd5d91905ec55d7fbf9bfd99eb923637/diff/usr/bin/gpasswd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/ea85a0fe3853c35c79e28f7157c972e1dd5d91905ec55d7fbf9bfd99eb923637/diff/usr/bin/chsh' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/ea85a0fe3853c35c79e28f7157c972e1dd5d91905ec55d7fbf9bfd99eb923637/diff/usr/bin/passwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/ea85a0fe3853c35c79e28f7157c972e1dd5d91905ec55d7fbf9bfd99eb923637/diff/sbin/unix_chkpwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/ea85a0fe3853c35c79e28f7157c972e1dd5d91905ec55d7fbf9bfd99eb923637/diff/bin/su' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/cbe61e7a1ca5b6bad4dd3927128e52b803063a64bece343cb093b08636d72004/diff/usr/bin/expiry' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/cbe61e7a1ca5b6bad4dd3927128e52b803063a64bece343cb093b08636d72004/diff/usr/bin/chage' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/cbe61e7a1ca5b6bad4dd3927128e52b803063a64bece343cb093b08636d72004/diff/usr/bin/chfn' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/cbe61e7a1ca5b6bad4dd3927128e52b803063a64bece343cb093b08636d72004/diff/usr/bin/newgrp' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/cbe61e7a1ca5b6bad4dd3927128e52b803063a64bece343cb093b08636d72004/diff/usr/bin/gpasswd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/cbe61e7a1ca5b6bad4dd3927128e52b803063a64bece343cb093b08636d72004/diff/usr/bin/chsh' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/cbe61e7a1ca5b6bad4dd3927128e52b803063a64bece343cb093b08636d72004/diff/usr/bin/passwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/cbe61e7a1ca5b6bad4dd3927128e52b803063a64bece343cb093b08636d72004/diff/sbin/unix_chkpwd' not found in on disk configuration.
Warning: '/var/lib/doc/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
ker/overlay2/cbe61e7a1ca5b6bad4dd3927128e52b803063a64bece343cb093b08636d72004/diff/bin/su' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/usr/bin/expiry' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/usr/bin/chage' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/usr/bin/wall' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/usr/bin/chfn' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/usr/bin/newgrp' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/usr/bin/gpasswd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/usr/bin/chsh' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/usr/bin/passwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/sbin/unix_chkpwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/bin/su' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/bin/mount' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/bin/umount' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/bin/ping' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/usr/bin/expiry' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/usr/bin/chage' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/usr/bin/wall' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/usr/bin/chfn' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/usr/bin/newgrp' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/usr/bin/gpasswd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/usr/bin/chsh' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/usr/bin/passwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/sbin/unix_chkpwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/bin/su' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/bin/mount' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/bin/umount' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1b9bbf293e16bc42603a023ffb1dfb2e7aae9fe22d5903200e1c23bb0/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
/bin/grep: /etc/audit/rules.d: No such file or directory
83c751c/diff/bin/s6-overlay-preinit' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/usr/bin/expiry' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/usr/bin/chage' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/usr/bin/wall' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/usr/bin/chfn' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/usr/bin/newgrp' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/usr/bin/gpasswd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/usr/bin/chsh' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/usr/bin/passwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/sbin/unix_chkpwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/bin/su' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/bin/mount' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/bin/umount' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/fe85d861ef4280ad140e54bde4aafe37d901fd79d3014028f3e82f570c11b804/diff/usr/bin/expiry' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/fe85d861ef4280ad140e54bde4aafe37d901fd79d3014028f3e82f570c11b804/diff/usr/bin/chage' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/fe85d861ef4280ad140e54bde4aafe37d901fd79d3014028f3e82f570c11b804/diff/usr/bin/chfn' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/fe85d861ef4280ad140e54bde4aafe37d901fd79d3014028f3e82f570c11b804/diff/usr/bin/gpasswd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/fe85d861ef4280ad140e54bde4aafe37d901fd79d3014028f3e82f570c11b804/diff/usr/bin/chsh' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/fe85d861ef4280ad140e54bde4aafe37d901fd79d3014028f3e82f570c11b804/diff/usr/bin/passwd' not found in on disk configuration.
Warning: '/var/lib/docker/overlay2/fe85d861ef4280ad140e54bde4aafe37d901fd79d3014028f3e82f570c11b804/diff/sbin/unix_chkpwd' not found in on disk configuration.
Fail - Warnings found","Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor the use of privileged commands.

Example script:

#!/usr/bin/env bash

{
  UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
  AUDIT_RULE_FILE=""/etc/audit/rules.d/50-privileged.rules""
  NEW_DATA=()
  for PARTITION in $(findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | grep -Pv ""noexec|nosuid"" | awk '{print $1}'); do
    readarray -t DATA < <(find ""${PARTITION}"" -xdev -perm /6000 -type f | awk -v UID_MIN=${UID_MIN} '{print ""-a always,exit -F path="" $1 "" -F perm=x -F auid>=""UID_MIN"" -F auid!=unset -k privileged"" }')
      for ENTRY in ""${DATA[@]}""; do
        NEW_DATA+=(""${ENTRY}"")
      done
  done
  readarray &amp;> /dev/null -t OLD_DATA < ""${AUDIT_RULE_FILE}""
  COMBINED_DATA=( ""${OLD_DATA[@]}"" ""${NEW_DATA[@]}"" )
  printf '%s
' ""${COMBINED_DATA[@]}"" | sort -u > ""${AUDIT_RULE_FILE}""
}

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

Special mount points

If there are any special mount points that are not visible by default from just scanning / change the PARTITION variable to the appropriate partition and re-run the remediation.

Impact:

Both the audit and remediation section of this recommendation will traverse all mounted file systems that is not mounted with either noexec or nosuid mount options. If there are large file systems without these mount options, such traversal will be significantly detrimental to the performance of the system.

Before running either the audit or remediation section, inspect the output of the following command to determine exactly which file systems will be traversed:

# findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | grep -Pv ""noexec|nosuid""

To exclude a particular file system due to adverse performance impacts, update the audit and remediation sections by adding a sufficiently unique string to the grep statement. The above command can be used to test the modified exclusions.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.7 Ensure unsuccessful file access attempts are collected"" : [FAILED]

Monitor for unsuccessful attempts to access files. The following parameters are associated with system calls that control files:

 - creation - creat
 - opening - open openat
 - truncation - truncate ftruncate

An audit log record will only be written if all of the following criteria is met for the user when trying to access a file:

 - a non-privileged user (auid>=UID_MIN)
 - is not a Daemon event (auid=4294967295/unset/-1)
 - if the system call returned EACCES (permission denied) or EPERM (some other permanent error associated with the specific system call)

Failed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system.

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor unsuccessful file access attempts.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-EACCES -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-EPERM -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-EACCES -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-EPERM -F auid>=${UID_MIN} -F auid!=unset -k access
"" >> /etc/audit/rules.d/50-access.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|14.9,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - auditctl b32 EPERM
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EPERM/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 EACCES
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EACCES/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 EPERM
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EPERM/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b32 EACCES
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EACCES/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b64 EPERM
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EPERM/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b32 EACCES
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EACCES/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b32 EPERM
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EPERM/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b64 EACCES
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *exit=-EACCES/ &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor unsuccessful file access attempts.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-EACCES -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-EPERM -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-EACCES -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-EPERM -F auid>=${UID_MIN} -F auid!=unset -k access
"" >> /etc/audit/rules.d/50-access.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.8 Ensure events that modify user/group information are collected"" : [FAILED]

Record events affecting the modification of user or group information, including that of passwords and old passwords if in use.

 - /etc/group - system groups
 - /etc/passwd - system users
 - /etc/gshadow - encrypted password for each group
 - /etc/shadow - system user passwords
 - /etc/security/opasswd - storage of old passwords if the relevant PAM module is in use
 - /etc/nsswitch.conf - file configures how the system uses various databases and name resolution mechanisms
 - /etc/pam.conf - file determines the authentication services to be used, and the order in which the services are used.
 - /etc/pam.d - directory contains the PAM configuration files for each PAM-aware application.

The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier ""identity"" in the audit log file.

Unexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.

Solution:
Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify user/group information.

Example:

# printf ""
-w /etc/group -p wa -k identity
-w /etc/passwd -p wa -k identity
-w /etc/gshadow -p wa -k identity
-w /etc/shadow -p wa -k identity
-w /etc/security/opasswd -p wa -k identity
-w /etc/nsswitch.conf -p wa -k identity
-w /etc/pam.conf -p wa -k identity
-w /etc/pam.d -p wa -k identity
"" >> /etc/audit/rules.d/50-identity.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|4.8,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - /etc/shadow
The command '/bin/awk '/^ *-w/ &&/\/etc\/shadow/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /etc/nsswitch.cnof
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/nsswitch\.conf/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - on disk /etc/pam.conf
The command '/bin/awk '/^ *-w/ &&/\/etc\/pam\.conf/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - /etc/gshadow
The command '/bin/awk '/^ *-w/ &&/\/etc\/gshadow/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /etc/security/opasswd
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/security\/opasswd/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - /etc/group
The command '/bin/awk '/^ *-w/ &&/\/etc\/group/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - /etc/passwd
The command '/bin/awk '/^ *-w/ &&/\/etc\/passwd/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /etc/pam.d
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/pam\.d/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/shadow
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/shadow/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/gshadow
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/gshadow/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - on disk /etc/nsswitch.conf
The command '/bin/awk '/^ *-w/ &&/\/etc\/nsswitch\.conf/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /etc/passwd
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/passwd/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - /etc/security/opasswd
The command '/bin/awk '/^ *-w/ &&/\/etc\/security\/opasswd/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - on disk /etc/pam.d
The command '/bin/awk '/^ *-w/ &&/\/etc\/pam\.d/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl /etc/group
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/group/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail

-------------------------
FAILED - auditctl /etc/pam.conf
The command '/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\/etc\/pam\.conf/ &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}'' returned : 

sh: 1: /sbin/auditctl: not found
fail","Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor events that modify user/group information.

Example:

# printf ""
-w /etc/group -p wa -k identity
-w /etc/passwd -p wa -k identity
-w /etc/gshadow -p wa -k identity
-w /etc/shadow -p wa -k identity
-w /etc/security/opasswd -p wa -k identity
-w /etc/nsswitch.conf -p wa -k identity
-w /etc/pam.conf -p wa -k identity
-w /etc/pam.d -p wa -k identity
"" >> /etc/audit/rules.d/50-identity.rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.3.9 Ensure discretionary access control permission modification events are collected"" : [FAILED]

Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The following commands and system calls effect the permissions, ownership and various attributes of files.

 - chmod
 - fchmod
 - fchmodat
 - chown
 - fchown
 - fchownat
 - lchown
 - setxattr
 - lsetxattr
 - fsetxattr
 - removexattr
 - lremovexattr
 - fremovexattr

In all cases, an audit record will only be written for non-system user ids and will ignore Daemon events. All audit records will be tagged with the identifier ""perm_mod.""

Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.

Solution:
Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor discretionary access control permission modification events.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b64 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
"" >> /etc/audit/rules.d/50-perm_mod.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|5.5,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - auditctl b32 setxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/setxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b64 fchownat
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchownat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 fchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchownat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 chmod
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b32 chmod
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b32 lremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 fremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b64 fsetxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 fchmod
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 fremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 chown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b64 fchmodat
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmodat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b32 fchmodat
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmodat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64 fsetxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b32 fsetxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64 fchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b32 fchmod
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b64 lremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 fchmodat
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmodat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b64 fchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b64 setxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/setxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b64 fremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b64 removexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/removexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b32 lchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64 lsetxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b32 removexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/removexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 fchmod
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b32 setxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/setxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 fchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b32 chown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b32 fchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b64 fchmod
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b32 chown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b32 fremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 lsetxattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b32 removexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/removexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - b32 chmod
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64 removexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/removexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 fchmodat
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmodat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 lchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b32 lchown
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b64 lremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b32 fchownat
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchownat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

awk: fatal: cannot open file `/etc/audit/rules.d/*.rules' for reading: No such file or directory
fail

-------------------------
FAILED - auditctl b64 fchownat
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchownat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - auditctl b32 lremovexattr
The command 'UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs); [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" | /bin/awk '{print} END {if (NR != 0) print ""pass"" ; else print ""fail""}' || printf ""ERROR: Variable 'UID_MIN' is unset.\n""' returned : 

sh: 1: auditctl: not found
fail

-------------------------
FAILED - b64 chown
The co","Create audit rules

Edit or create a file in the /etc/audit/rules.d/ directory, ending inrules extension, with the relevant rules to monitor discretionary access control permission modification events.

Example:

# {
UID_MIN=$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] &amp;&amp; printf ""
-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b64 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
"" >> /etc/audit/rules.d/50-perm_mod.rules || printf ""ERROR: Variable 'UID_MIN' is unset.
""
}

Load audit rules

Merge and load the rules into active configuration:

# augenrules --load

Check if reboot is required.

# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules
""; fi","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.1 Ensure audit log files mode is configured"" : [FAILED]

Audit log files contain information about the system and system activity.

Access to audit records can reveal system and configuration data to attackers, potentially compromising its confidentiality.

Solution:
Run the following command to remove more permissive mode than 0640 from audit log files:

# [ -f /etc/audit/auditd.conf ] &amp;&amp; find ""$(dirname $(awk -F ""="" '/^s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))"" -type f -perm /0137 -exec chmod u-x,g-wx,o-rwx {} +

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
  - File: ""/etc/audit/auditd.conf"" not found.
  - ** Verify auditd is installed **","Run the following command to remove more permissive mode than 0640 from audit log files:

# [ -f /etc/audit/auditd.conf ] &amp;&amp; find ""$(dirname $(awk -F ""="" '/^s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))"" -type f -perm /0137 -exec chmod u-x,g-wx,o-rwx {} +","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.10 Ensure audit tools group owner is configured"" : [FAILED]

Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.

Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.

Solution:
Run the following command to change group ownership to the groop root :

# chgrp root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules
group: root

Actual Value:
No files found: /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules","Run the following command to change group ownership to the groop root :

# chgrp root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.2 Ensure audit log files owner is configured"" : [FAILED]

Audit log files contain information about the system and system activity.

Access to audit records can reveal system and configuration data to attackers, potentially compromising its confidentiality.

Solution:
Run the following command to configure the audit log files to be owned by the root user:

# [ -f /etc/audit/auditd.conf ] &amp;&amp; find ""$(dirname $(awk -F ""="" '/^s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))"" -type f ! -user root -exec chown root {} +

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - * Reasons for audit failure * :
  - File: ""/etc/audit/auditd.conf"" not found.
  - ** Verify auditd is installed **","Run the following command to configure the audit log files to be owned by the root user:

# [ -f /etc/audit/auditd.conf ] &amp;&amp; find ""$(dirname $(awk -F ""="" '/^s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))"" -type f ! -user root -exec chown root {} +","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.3 Ensure audit log files group owner is configured"" : [FAILED]

Audit log files contain information about the system and system activity.

Access to audit records can reveal system and configuration data to attackers, potentially compromising its confidentiality.

Solution:
Run the following command to configure the audit log files to be group owned by adm :

# find $(dirname $(awk -F""="" '/^s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs)) -type f ( ! -group adm -a ! -group root ) -exec chgrp adm {} +

Run the following command to set the log_group parameter in the audit configuration file to log_group = adm :

# sed -ri 's/^s*#?s*log_groups*=s*S+(s*#.*)?.*$/log_group = adm1/' /etc/audit/auditd.conf

Run the following command to restart the audit daemon to reload the configuration file:

# systemctl restart auditd

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - log_group path permissions
The command script with multiple lines returned : 

pass

-------------------------
FAILED - auditd.conf log_group
No files found: /etc/audit/auditd.conf","Run the following command to configure the audit log files to be group owned by adm :

# find $(dirname $(awk -F""="" '/^s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs)) -type f ( ! -group adm -a ! -group root ) -exec chgrp adm {} +

Run the following command to set the log_group parameter in the audit configuration file to log_group = adm :

# sed -ri 's/^s*#?s*log_groups*=s*S+(s*#.*)?.*$/log_group = adm1/' /etc/audit/auditd.conf

Run the following command to restart the audit daemon to reload the configuration file:

# systemctl restart auditd","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.4 Ensure the audit log file directory mode is configured"" : [FAILED]

The audit log directory contains audit log files.

Audit information includes all information including: audit records, audit settings and audit reports. This information is needed to successfully audit system activity. This information must be protected from unauthorized modification or deletion. If this information were to be compromised, forensic analysis and discovery of the true source of potentially malicious system activity is impossible to achieve.

Solution:
Run the following command to configure the audit log directory to have a mode of ""0750"" or less permissive:

# chmod g-w,o-rwx ""$(dirname ""$(awk -F= '/^s*log_files*/{print $2}' /etc/audit/auditd.conf | xargs)"")""

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
  - File: ""/etc/audit/auditd.conf"" not found
  - ** Verify auditd is installed **","Run the following command to configure the audit log directory to have a mode of ""0750"" or less permissive:

# chmod g-w,o-rwx ""$(dirname ""$(awk -F= '/^s*log_files*/{print $2}' /etc/audit/auditd.conf | xargs)"")""","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.5 Ensure audit configuration files mode is configured"" : [PASSED]

Audit configuration files control auditd and what events are audited.

Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events.

Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.

Solution:
Run the following command to remove more permissive mode than 0640 from the audit configuration files:

# find /etc/audit/ -type f ( -name '*.conf' -o -name '*.rules' ) -exec chmod u-x,g-wx,o-rwx {} +

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /bin/find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) -exec /bin/stat -Lc ""%n %a"" {} + | /bin/grep -Pv -- '^\h*\H+\h*([0,2,4,6][0,4]0)\h*$' | /bin/awk '{print} END { if(NR==0) print ""pass"" ; else print ""fail""}'
expect: ^pass$
timeout: 7200

Actual Value:
The command '/bin/find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) -exec /bin/stat -Lc ""%n %a"" {} + | /bin/grep -Pv -- '^\h*\H+\h*([0,2,4,6][0,4]0)\h*$' | /bin/awk '{print} END { if(NR==0) print ""pass"" ; else print ""fail""}'' returned : 

/bin/find: ‘/etc/audit/’: No such file or directory
pass","Run the following command to remove more permissive mode than 0640 from the audit configuration files:

# find /etc/audit/ -type f ( -name '*.conf' -o -name '*.rules' ) -exec chmod u-x,g-wx,o-rwx {} +","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.6 Ensure audit configuration files owner is configured"" : [PASSED]

Audit configuration files control auditd and what events are audited.

Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events.

Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.

Solution:
Run the following command to change ownership to root user:

# find /etc/audit/ -type f ( -name '*.conf' -o -name '*.rules' ) ! -user root -exec chown root {} +

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /bin/find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -user root | /bin/awk '{print} END { if(NR==0) print ""pass"" ; else print ""fail""}'
expect: ^pass$
timeout: 7200

Actual Value:
The command '/bin/find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -user root | /bin/awk '{print} END { if(NR==0) print ""pass"" ; else print ""fail""}'' returned : 

/bin/find: ‘/etc/audit/’: No such file or directory
pass","Run the following command to change ownership to root user:

# find /etc/audit/ -type f ( -name '*.conf' -o -name '*.rules' ) ! -user root -exec chown root {} +","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.7 Ensure audit configuration files group owner is configured"" : [PASSED]

Audit configuration files control auditd and what events are audited.

Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events.

Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.

Solution:
Run the following command to change group to root :

# find /etc/audit/ -type f ( -name '*.conf' -o -name '*.rules' ) ! -group root -exec chgrp root {} +

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /bin/find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -group root | /bin/awk '{print} END { if(NR==0) print ""pass"" ; else print ""fail""}'
expect: ^pass$
timeout: 7200

Actual Value:
The command '/bin/find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -group root | /bin/awk '{print} END { if(NR==0) print ""pass"" ; else print ""fail""}'' returned : 

/bin/find: ‘/etc/audit/’: No such file or directory
pass","Run the following command to change group to root :

# find /etc/audit/ -type f ( -name '*.conf' -o -name '*.rules' ) ! -group root -exec chgrp root {} +","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.8 Ensure audit tools mode is configured"" : [FAILED]

Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.

Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.

Solution:
Run the following command to remove more permissive mode from the audit tools:

# chmod go-w /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules
mask: 022

Actual Value:
No files found: /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules","Run the following command to remove more permissive mode from the audit tools:

# chmod go-w /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.3.4.9 Ensure audit tools owner is configured"" : [FAILED]

Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.

Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.

Solution:
Run the following command to change the owner of the audit tools to the root user:

# chown root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules
owner: root

Actual Value:
No files found: /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules","Run the following command to change the owner of the audit tools to the root user:

# chown root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""CIS_Ubuntu_Linux_22.04_LTS_v2.0.0_L1_Server.audit from CIS Ubuntu Linux 22.04 LTS Benchmark v2.0.0"" : [PASSED]

See Also: https://workbench.cisecurity.org/benchmarks/17074

Policy Value:
PASSED","n/a","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.1 Ensure cramfs kernel module is not available"" : [FAILED]

The cramfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A cramfs image can be used without having to first decompress the image.

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

Solution:
Run the following script to disable the cramfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install cramfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist cramfs in the /etc/modprobe.d/ directory
 - Unload cramfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist cramfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""cramfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""cramfs"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/fs""
  - ""/lib/modules/5.15.0-117-generic/kernel/fs""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""cramfs"" is not deny listed
 - module: ""cramfs"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/fs/cramfs/cramfs.ko ""


- Correctly set:

 - module: ""cramfs"" is not loaded","Run the following script to disable the cramfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install cramfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist cramfs in the /etc/modprobe.d/ directory
 - Unload cramfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist cramfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""cramfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.2 Ensure freevxfs kernel module is not available"" : [FAILED]

The freevxfs filesystem type is a free version of the Veritas type filesystem. This is the primary filesystem type for HP-UX operating systems.

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

Solution:
Run the following script to disable the freevxfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install freevxfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist freevxfs in the /etc/modprobe.d/ directory
 - Unload freevxfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist freevxfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""freevxfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""freevxfs"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/fs""
  - ""/lib/modules/5.15.0-117-generic/kernel/fs""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""freevxfs"" is not deny listed
 - module: ""freevxfs"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/fs/freevxfs/freevxfs.ko ""


- Correctly set:

 - module: ""freevxfs"" is not loaded","Run the following script to disable the freevxfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install freevxfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist freevxfs in the /etc/modprobe.d/ directory
 - Unload freevxfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist freevxfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""freevxfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.3 Ensure hfs kernel module is not available"" : [FAILED]

The hfs filesystem type is a hierarchical filesystem that allows you to mount Mac OS filesystems.

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

Solution:
Run the following script to disable the hfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install hfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist hfs in the /etc/modprobe.d/ directory
 - Unload hfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist hfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""hfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""hfs"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/fs""
  - ""/lib/modules/5.15.0-117-generic/kernel/fs""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""hfs"" is not deny listed
 - module: ""hfs"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/fs/hfs/hfs.ko ""


- Correctly set:

 - module: ""hfs"" is not loaded","Run the following script to disable the hfs module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install hfs /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist hfs in the /etc/modprobe.d/ directory
 - Unload hfs from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist hfs in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""hfs"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.4 Ensure hfsplus kernel module is not available"" : [FAILED]

The hfsplus filesystem type is a hierarchical filesystem designed to replace hfs that allows you to mount Mac OS filesystems.

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

Solution:
Run the following script to disable the hfsplus module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install hfsplus /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist hfsplus in the /etc/modprobe.d/ directory
 - Unload hfsplus from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist hfsplus in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""hfsplus"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""hfsplus"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/fs""
  - ""/lib/modules/5.15.0-117-generic/kernel/fs""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""hfsplus"" is not deny listed
 - module: ""hfsplus"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/fs/hfsplus/hfsplus.ko ""


- Correctly set:

 - module: ""hfsplus"" is not loaded","Run the following script to disable the hfsplus module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install hfsplus /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist hfsplus in the /etc/modprobe.d/ directory
 - Unload hfsplus from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist hfsplus in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""hfsplus"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.5 Ensure jffs2 kernel module is not available"" : [FAILED]

The jffs2 (journaling flash filesystem 2) filesystem type is a log-structured filesystem used in flash memory devices.

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.

Solution:
Run the following script to disable the jffs2 module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install jffs2 /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist jffs2 in the /etc/modprobe.d/ directory
 - Unload jffs2 from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist jffs2 in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""jffs2"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""jffs2"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/fs""
  - ""/lib/modules/5.15.0-117-generic/kernel/fs""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""jffs2"" is not deny listed
 - module: ""jffs2"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/fs/jffs2/jffs2.ko ""


- Correctly set:

 - module: ""jffs2"" is not loaded","Run the following script to disable the jffs2 module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install jffs2 /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist jffs2 in the /etc/modprobe.d/ directory
 - Unload jffs2 from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist jffs2 in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""jffs2"" # set module name
   l_mtype=""fs"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.1.8 Ensure usb-storage kernel module is not available"" : [FAILED]

USB storage provides a means to transfer and store files ensuring persistence and availability of the files independent of network connection status. Its popularity and utility has led to USB-based malware being a simple and common means for network infiltration and a first step to establishing a persistent threat within a networked environment.

Restricting USB access on the system will decrease the physical attack surface for a device and diminish the possible vectors to introduce malware.

Solution:
Run the following script to disable the usb-storage module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install usb-storage /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist usb-storage in the /etc/modprobe.d/ directory
 - Unload usb-storage from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist usb-storage in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""usb-storage"" # set module name
   l_mtype=""drivers"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

Impact:

Disabling the usb-storage module will disable any usage of USB storage devices.

If requirements and local site policy allow the use of such devices, other solutions should be configured accordingly instead. One example of a commonly used solution is USBGuard

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|13.7,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

-- INFO --
 - module: ""usb-storage"" exists in:
  - ""/lib/modules/5.15.0-116-generic/kernel/drivers""
  - ""/lib/modules/5.15.0-117-generic/kernel/drivers""

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - module: ""usb-storage"" is not deny listed
 - module: ""usb-storage"" is loadable: ""insmod /lib/modules/5.15.0-116-generic/kernel/drivers/usb/storage/usb-storage.ko ""


- Correctly set:

 - module: ""usb-storage"" is not loaded","Run the following script to disable the usb-storage module:

-IF- the module is available in the running kernel:

 - Create a file ending inconf with install usb-storage /bin/false in the /etc/modprobe.d/ directory
 - Create a file ending inconf with blacklist usb-storage in the /etc/modprobe.d/ directory
 - Unload usb-storage from the kernel

-IF- available in ANY installed kernel:

 - Create a file ending inconf with blacklist usb-storage in the /etc/modprobe.d/ directory

-IF- the kernel module is not available on the system or pre-compiled into the kernel:

 - No remediation is necessary

#!/usr/bin/env bash

{
   l_mname=""usb-storage"" # set module name
   l_mtype=""drivers"" # set module type
   l_mpath=""/lib/modules/**/kernel/$l_mtype""
   l_mpname=""$(tr '-' '_' <<< ""$l_mname"")""
   l_mndir=""$(tr '-' '/' <<< ""$l_mname"")""

   module_loadable_fix()
   {
      # If the module is currently loadable, add ""install {MODULE_NAME} /bin/false"" to a file in ""/etc/modprobe.d""
      l_loadable=""$(modprobe -n -v ""$l_mname"")""
      [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] &amp;&amp; l_loadable=""$(grep -P -- ""(^h*install|b$l_mname)b"" <<< ""$l_loadable"")""
      if ! grep -Pq -- '^h*install /bin/(true|false)' <<< ""$l_loadable""; then
         echo -e ""
 - setting module: \""$l_mname\"" to be not loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   module_loaded_fix()
   {
      # If the module is currently loaded, unload the module
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e ""
 - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
   }
   module_deny_fix()
   {
      # If the module isn't deny listed, denylist the module
      if ! modprobe --showconfig | grep -Pq -- ""^h*blacklisth+$l_mpnameb""; then
         echo -e ""
 - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mpname"".conf
      fi
   }
   # Check if the module exists on the system
   for l_mdir in $l_mpath; do
      if [ -d ""$l_mdir/$l_mndir"" ] &amp;&amp; [ -n ""$(ls -A $l_mdir/$l_mndir)"" ]; then
         echo -e ""
 - module: \""$l_mname\"" exists in \""$l_mdir\""
 - checking if disabled...""
         module_deny_fix
         if [ ""$l_mdir"" = ""/lib/modules/$(uname -r)/kernel/$l_mtype"" ]; then
            module_loadable_fix
            module_loaded_fix
         fi
      else
         echo -e ""
 - module: \""$l_mname\"" doesn't exist in \""$l_mdir\""
""
      fi
   done
   echo -e ""
 - remediation of module: \""$l_mname\"" complete
""
}

Impact:

Disabling the usb-storage module will disable any usage of USB storage devices.

If requirements and local site policy allow the use of such devices, other solutions should be configured accordingly instead. One example of a commonly used solution is USBGuard","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.1.1 Ensure /tmp is a separate partition"" : [FAILED]

The /tmp directory is a world-writable directory used for temporary storage by all users and some applications.

- IF - an entry for /tmp exists in /etc/fstab it will take precedence over entries in systemd default unit file.

Note: In an environment where the main system is diskless and connected to iSCSI, entries in /etc/fstab may not take precedence.

/tmp can be configured to use tmpfs

tmpfs puts everything into the kernel internal caches and grows and shrinks to accommodate the files it contains and is able to swap unneeded pages out to swap space. It has maximum size limits which can be adjusted on the fly via mount -o remount

Since tmpfs lives completely in the page cache and on swap, all tmpfs pages will be shown as ""Shmem"" in /proc/meminfo and ""Shared"" in free Notice that these counters also include shared memory. The most reliable way to get the count is using df and du

tmpfs has three mount options for sizing:

 - size : The limit of allocated bytes for this tmpfs instance. The default is half of your physical RAM without swap. If you oversize your tmpfs instances the machine will deadlock since the OOM handler will not be able to free that memory.
 - nr_blocks : The same as size, but in blocks of PAGE_SIZE.
 - nr_inodes : The maximum number of inodes for this instance. The default is half of the number of your physical RAM pages, or (on a machine with highmem) the number of lowmem RAM pages, whichever is the lower.

These parameters accept a suffix k, m or g and can be changed on remount. The size parameter also accepts a suffix % to limit this tmpfs instance to that percentage of your physical RAM. The default, when neither size nor nr_blocks is specified, is size=50%

Making /tmp its own file system allows an administrator to set additional mount options such as the noexec option on the mount, making /tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hard link to a system setuid program and wait for it to be updated. Once the program was updated, the hard link would be broken, and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.

This can be accomplished by either mounting tmpfs to /tmp or creating a separate partition for /tmp

Solution:
First ensure that systemd is correctly configured to ensure that /tmp will be mounted at boot time.

# systemctl unmask tmp.mount

For specific configuration requirements of the /tmp mount for your environment, modify /etc/fstab

Example of using tmpfs with specific mount options:

tmpfs	/tmp	tmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 0

Note: the size=2G is an example of setting a specific size for tmpfs

Example of using a volume or disk with specific mount options. The source location of the volume or disk will vary depending on your environment:

<device> /tmp <fstype> defaults,nodev,nosuid,noexec 0 0

Impact:

By design files saved to /tmp should have no expectation of surviving a reboot of the system. tmpfs is ram based and all files stored to tmpfs will be lost when the system is rebooted.

If files need to be persistent through a reboot, they should be saved to /var/tmp not /tmp

Since the /tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to tmpfs or a separate partition.

Running out of /tmp space is a problem regardless of what kind of filesystem lies under it, but in a configuration where /tmp is not a separate file system it will essentially have the whole disk available, as the default installation only creates a single / partition. On the other hand, a RAM-based /tmp (as with tmpfs ) will almost certainly be much smaller, which can lead to applications filling up the filesystem much more easily. Another alternative is to create a dedicated partition for /tmp from a separate volume or disk. One of the downsides of a disk-based dedicated partition is that it will be slower than tmpfs which is RAM-based.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/findmnt -nk /tmp
expect: ^[\s]*/tmp[\s]+

Actual Value:
The command '/bin/findmnt -nk /tmp' did not return any result","First ensure that systemd is correctly configured to ensure that /tmp will be mounted at boot time.

# systemctl unmask tmp.mount

For specific configuration requirements of the /tmp mount for your environment, modify /etc/fstab

Example of using tmpfs with specific mount options:

tmpfs	/tmp	tmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 0

Note: the size=2G is an example of setting a specific size for tmpfs

Example of using a volume or disk with specific mount options. The source location of the volume or disk will vary depending on your environment:

<device> /tmp <fstype> defaults,nodev,nosuid,noexec 0 0

Impact:

By design files saved to /tmp should have no expectation of surviving a reboot of the system. tmpfs is ram based and all files stored to tmpfs will be lost when the system is rebooted.

If files need to be persistent through a reboot, they should be saved to /var/tmp not /tmp

Since the /tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to tmpfs or a separate partition.

Running out of /tmp space is a problem regardless of what kind of filesystem lies under it, but in a configuration where /tmp is not a separate file system it will essentially have the whole disk available, as the default installation only creates a single / partition. On the other hand, a RAM-based /tmp (as with tmpfs ) will almost certainly be much smaller, which can lead to applications filling up the filesystem much more easily. Another alternative is to create a dedicated partition for /tmp from a separate volume or disk. One of the downsides of a disk-based dedicated partition is that it will be slower than tmpfs which is RAM-based.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.1.2 Ensure nodev option set on /tmp partition"" : [PASSED]

The nodev mount option specifies that the filesystem cannot contain special devices.

Since the /tmp filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /tmp

Solution:
- IF - a separate partition exists for /tmp

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /tmp partition.

Example:

<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /tmp with the configured options:

# mount -o remount /tmp

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
expect: nodev
file: /proc/self/mountinfo
regex: [\s]+/tmp[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /tmp

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /tmp partition.

Example:

<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /tmp with the configured options:

# mount -o remount /tmp","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.1.3 Ensure nosuid option set on /tmp partition"" : [PASSED]

The nosuid mount option specifies that the filesystem cannot contain setuid files.

Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /tmp

Solution:
- IF - a separate partition exists for /tmp

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /tmp partition.

Example:

<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /tmp with the configured options:

# mount -o remount /tmp

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nosuid
file: /proc/self/mountinfo
regex: [\s]+/tmp[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /tmp

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /tmp partition.

Example:

<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /tmp with the configured options:

# mount -o remount /tmp","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.1.4 Ensure noexec option set on /tmp partition"" : [PASSED]

The noexec mount option specifies that the filesystem cannot contain executable binaries.

Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /tmp

Solution:
- IF - a separate partition exists for /tmp

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /tmp partition.

Example:

<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /tmp with the configured options:

# mount -o remount /tmp

Impact:

Setting the noexec option on /tmp may prevent installation and/or updating of some 3rd party software.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: noexec
file: /proc/self/mountinfo
regex: [\s]+/tmp[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /tmp

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /tmp partition.

Example:

<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /tmp with the configured options:

# mount -o remount /tmp

Impact:

Setting the noexec option on /tmp may prevent installation and/or updating of some 3rd party software.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.2.1 Ensure /dev/shm is a separate partition"" : [PASSED]

The /dev/shm directory is a world-writable directory that can function as shared memory that facilitates inter process communication (IPC).

Making /dev/shm its own file system allows an administrator to set additional mount options such as the noexec option on the mount, making /dev/shm useless for an attacker to install executable code. It would also prevent an attacker from establishing a hard link to a system setuid program and wait for it to be updated. Once the program was updated, the hard link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.

This can be accomplished by mounting tmpfs to /dev/shm

Solution:
For specific configuration requirements of the /dev/shm mount for your environment, modify /etc/fstab

Example:

tmpfs	/dev/shm	tmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 0

Impact:

Since the /dev/shm directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition.

/dev/shm utilizing tmpfs can be resized using the size={size} parameter in the relevant entry in /etc/fstab

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
expect: [\s]+/dev/shm[\s]+
file: /proc/self/mountinfo
regex: [\s]+/dev/shm[\s]+
required: NO

Actual Value:
Compliant file(s):
      /proc/self/mountinfo - regex '[\s]+/dev/shm[\s]+' found - expect '[\s]+/dev/shm[\s]+' found in the following lines:
          8: 31 26 0:26 / /dev/shm rw,nosuid,nodev shared:4 - tmpfs tmpfs rw,inode64","For specific configuration requirements of the /dev/shm mount for your environment, modify /etc/fstab

Example:

tmpfs	/dev/shm	tmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 0

Impact:

Since the /dev/shm directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition.

/dev/shm utilizing tmpfs can be resized using the size={size} parameter in the relevant entry in /etc/fstab","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.2.2 Ensure nodev option set on /dev/shm partition"" : [PASSED]

The nodev mount option specifies that the filesystem cannot contain special devices.

Since the /dev/shm filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create special devices in /dev/shm partitions.

Solution:
- IF - a separate partition exists for /dev/shm

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.

Example:

tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /dev/shm with the configured options:

# mount -o remount /dev/shm

Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nodev
file: /proc/self/mountinfo
regex: [\s]+/dev/shm[\s]+
required: NO

Actual Value:
Compliant file(s):
      /proc/self/mountinfo - regex '[\s]+/dev/shm[\s]+' found - expect 'nodev' found in the following lines:
          8: 31 26 0:26 / /dev/shm rw,nosuid,nodev shared:4 - tmpfs tmpfs rw,inode64","- IF - a separate partition exists for /dev/shm

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.

Example:

tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /dev/shm with the configured options:

# mount -o remount /dev/shm

Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.2.3 Ensure nosuid option set on /dev/shm partition"" : [PASSED]

The nosuid mount option specifies that the filesystem cannot contain setuid files.

Setting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them.

Solution:
- IF - a separate partition exists for /dev/shm

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.

Example:

tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /dev/shm with the configured options:

# mount -o remount /dev/shm

Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nosuid
file: /proc/self/mountinfo
regex: [\s]+/dev/shm[\s]+
required: NO

Actual Value:
Compliant file(s):
      /proc/self/mountinfo - regex '[\s]+/dev/shm[\s]+' found - expect 'nosuid' found in the following lines:
          8: 31 26 0:26 / /dev/shm rw,nosuid,nodev shared:4 - tmpfs tmpfs rw,inode64","- IF - a separate partition exists for /dev/shm

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.

Example:

tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /dev/shm with the configured options:

# mount -o remount /dev/shm

Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.2.4 Ensure noexec option set on /dev/shm partition"" : [FAILED]

The noexec mount option specifies that the filesystem cannot contain executable binaries.

Setting this option on a file system prevents users from executing programs from shared memory. This deters users from introducing potentially malicious software on the system.

Solution:
- IF - a separate partition exists for /dev/shm

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /dev/shm partition.

Example:

tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /dev/shm with the configured options:

# mount -o remount /dev/shm

Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: noexec
file: /proc/self/mountinfo
regex: [\s]+/dev/shm[\s]+
required: NO

Actual Value:
Non-compliant file(s):
      /proc/self/mountinfo - regex '[\s]+/dev/shm[\s]+' found - expect 'noexec' not found in the following lines:
          8: 31 26 0:26 / /dev/shm rw,nosuid,nodev shared:4 - tmpfs tmpfs rw,inode64","- IF - a separate partition exists for /dev/shm

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /dev/shm partition.

Example:

tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /dev/shm with the configured options:

# mount -o remount /dev/shm

Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.3.2 Ensure nodev option set on /home partition"" : [PASSED]

The nodev mount option specifies that the filesystem cannot contain special devices.

Since the /home filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /home

Solution:
- IF - a separate partition exists for /home

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /home partition.

Example:

<device> /home <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /home with the configured options:

# mount -o remount /home

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nodev
file: /proc/self/mountinfo
regex: [\s]+/home[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /home

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /home partition.

Example:

<device> /home <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /home with the configured options:

# mount -o remount /home","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.3.3 Ensure nosuid option set on /home partition"" : [PASSED]

The nosuid mount option specifies that the filesystem cannot contain setuid files.

Since the /home filesystem is only intended for user file storage, set this option to ensure that users cannot create setuid files in /home

Solution:
- IF - a separate partition exists for /home

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /home partition.

Example:

<device> /home <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /home with the configured options:

# mount -o remount /home

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nosuid
file: /proc/self/mountinfo
regex: [\s]+/home[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /home

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /home partition.

Example:

<device> /home <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /home with the configured options:

# mount -o remount /home","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.4.2 Ensure nodev option set on /var partition"" : [PASSED]

The nodev mount option specifies that the filesystem cannot contain special devices.

Since the /var filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var

Solution:
- IF - a separate partition exists for /var

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var partition.

Example:

<device> /var <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var with the configured options:

# mount -o remount /var

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nodev
file: /proc/self/mountinfo
regex: [\s]+/var[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var partition.

Example:

<device> /var <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var with the configured options:

# mount -o remount /var","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.4.3 Ensure nosuid option set on /var partition"" : [PASSED]

The nosuid mount option specifies that the filesystem cannot contain setuid files.

Since the /var filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create setuid files in /var

Solution:
- IF - a separate partition exists for /var

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var partition.

Example:

<device> /var <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var with the configured options:

# mount -o remount /var

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nosuid
file: /proc/self/mountinfo
regex: [\s]+/var[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var partition.

Example:

<device> /var <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var with the configured options:

# mount -o remount /var","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.5.2 Ensure nodev option set on /var/tmp partition"" : [PASSED]

The nodev mount option specifies that the filesystem cannot contain special devices.

Since the /var/tmp filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var/tmp

Solution:
- IF - a separate partition exists for /var/tmp

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/tmp partition.

Example:

<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/tmp with the configured options:

# mount -o remount /var/tmp

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nodev
file: /proc/self/mountinfo
regex: [\s]+/var/tmp[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/tmp

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/tmp partition.

Example:

<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/tmp with the configured options:

# mount -o remount /var/tmp","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.5.3 Ensure nosuid option set on /var/tmp partition"" : [PASSED]

The nosuid mount option specifies that the filesystem cannot contain setuid files.

Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /var/tmp

Solution:
- IF - a separate partition exists for /var/tmp

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/tmp partition.

Example:

<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/tmp with the configured options:

# mount -o remount /var/tmp

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nosuid
file: /proc/self/mountinfo
regex: [\s]+/var/tmp[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/tmp

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/tmp partition.

Example:

<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/tmp with the configured options:

# mount -o remount /var/tmp","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.5.4 Ensure noexec option set on /var/tmp partition"" : [PASSED]

The noexec mount option specifies that the filesystem cannot contain executable binaries.

Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /var/tmp

Solution:
- IF - a separate partition exists for /var/tmp

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/tmp partition.

Example:

<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/tmp with the configured options:

# mount -o remount /var/tmp

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: noexec
file: /proc/self/mountinfo
regex: [\s]+/var/tmp[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/tmp

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/tmp partition.

Example:

<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/tmp with the configured options:

# mount -o remount /var/tmp","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.6.2 Ensure nodev option set on /var/log partition"" : [PASSED]

The nodev mount option specifies that the filesystem cannot contain special devices.

Since the /var/log filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var/log

Solution:
- IF - a separate partition exists for /var/log

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log partition.

Example:

<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log with the configured options:

# mount -o remount /var/log

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nodev
file: /proc/self/mountinfo
regex: [\s]+/var/log[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/log

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log partition.

Example:

<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log with the configured options:

# mount -o remount /var/log","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.6.3 Ensure nosuid option set on /var/log partition"" : [PASSED]

The nosuid mount option specifies that the filesystem cannot contain setuid files.

Since the /var/log filesystem is only intended for log files, set this option to ensure that users cannot create setuid files in /var/log

Solution:
- IF - a separate partition exists for /var/log

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log partition.

Example:

<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log with the configured options:

# mount -o remount /var/log

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nosuid
file: /proc/self/mountinfo
regex: [\s]+/var/log[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/log

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log partition.

Example:

<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log with the configured options:

# mount -o remount /var/log","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.6.4 Ensure noexec option set on /var/log partition"" : [PASSED]

The noexec mount option specifies that the filesystem cannot contain executable binaries.

Since the /var/log filesystem is only intended for log files, set this option to ensure that users cannot run executable binaries from /var/log

Solution:
- IF - a separate partition exists for /var/log

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log partition.

Example:

<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log with the configured options:

# mount -o remount /var/log

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: noexec
file: /proc/self/mountinfo
regex: [\s]+/var/log[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/log

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log partition.

Example:

<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log with the configured options:

# mount -o remount /var/log","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.7.2 Ensure nodev option set on /var/log/audit partition"" : [PASSED]

The nodev mount option specifies that the filesystem cannot contain special devices.

Since the /var/log/audit filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var/log/audit

Solution:
- IF - a separate partition exists for /var/log/audit

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log/audit partition.

Example:

<device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log/audit with the configured options:

# mount -o remount /var/log/audit

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nodev
file: /proc/self/mountinfo
regex: [\s]+/var/log/audit[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/log/audit

Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log/audit partition.

Example:

<device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log/audit with the configured options:

# mount -o remount /var/log/audit","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition"" : [PASSED]

The nosuid mount option specifies that the filesystem cannot contain setuid files.

Since the /var/log/audit filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create setuid files in /var/log/audit

Solution:
- IF - a separate partition exists for /var/log/audit

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log/audit partition.

Example:

<device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log/audit with the configured options:

# mount -o remount /var/log/audit

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: nosuid
file: /proc/self/mountinfo
regex: [\s]+/var/log/audit[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/log/audit

Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log/audit partition.

Example:

<device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log/audit with the configured options:

# mount -o remount /var/log/audit","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.1.2.7.4 Ensure noexec option set on /var/log/audit partition"" : [PASSED]

The noexec mount option specifies that the filesystem cannot contain executable binaries.

Since the /var/log/audit filesystem is only intended for audit logs, set this option to ensure that users cannot run executable binaries from /var/log/audit

Solution:
- IF - a separate partition exists for /var/log/audit

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log/audit partition.

Example:

<device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log/audit with the configured options:

# mount -o remount /var/log/audit

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: noexec
file: /proc/self/mountinfo
regex: [\s]+/var/log/audit[\s]+
required: NO

Actual Value:
No matching files were found","- IF - a separate partition exists for /var/log/audit

Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log/audit partition.

Example:

<device> /var/log/audit <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0

Run the following command to remount /var/log/audit with the configured options:

# mount -o remount /var/log/audit","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.2.1.1 Ensure GPG keys are configured"" : [WARNING]

Most package managers implement GPG key signing to verify package integrity during installation.

It is important to ensure that updates are obtained from a valid source to protect against spoofing that could lead to the inadvertent installation of malware on the system.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Update your package manager GPG keys in accordance with site policy.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.11.2,800-171|3.11.3,800-171|3.14.1,800-53|RA-5,800-53|SI-2,800-53|SI-2(2),800-53r5|RA-5,800-53r5|SI-2,800-53r5|SI-2(2),CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSCv7|3.5,CSCv8|7.3,CSCv8|7.4,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,ITSG-33|SI-2,ITSG-33|SI-2(2),LEVEL|1M,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.1,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,PCI-DSSv4.0|6.3.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.7

Policy Value:
cmd: /bin/apt-key list
expect: ^Manual Review Required$

Actual Value:
The command '/bin/apt-key list' returned : 

Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
/etc/apt/trusted.gpg.d/ubuntu-keyring-2012-cdimage.gpg
------------------------------------------------------
pub   rsa4096 2012-05-11 [SC]
      8439 38DF 228D 22F7 B374  2BC0 D94A A3F0 EFE2 1092
uid           [ unknown] Ubuntu CD Image Automatic Signing Key (2012) <cdimage@ubuntu.com>

/etc/apt/trusted.gpg.d/ubuntu-keyring-2018-archive.gpg
------------------------------------------------------
pub   rsa4096 2018-09-17 [SC]
      F6EC B376 2474 EDA9 D21B  7022 8719 20D1 991B C93C
uid           [ unknown] Ubuntu Archive Automatic Signing Key (2018) <ftpmaster@ubuntu.com>","Update your package manager GPG keys in accordance with site policy.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.2.1.2 Ensure package manager repositories are configured"" : [WARNING]

Systems need to have package manager repositories configured to ensure they receive the latest patches and updates.

If a system's package repositories are misconfigured important patches may not be identified or a rogue repository could introduce compromised software.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Configure your package manager repositories according to site policy.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.11.2,800-171|3.11.3,800-171|3.14.1,800-53|RA-5,800-53|SI-2,800-53|SI-2(2),800-53r5|RA-5,800-53r5|SI-2,800-53r5|SI-2(2),CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSCv7|3.5,CSCv8|7.3,CSCv8|7.4,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,ITSG-33|SI-2,ITSG-33|SI-2(2),LEVEL|1M,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.1,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,PCI-DSSv4.0|6.3.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.7

Policy Value:
cmd: /bin/apt-cache policy
expect: ^Manual Review Required$

Actual Value:
The command '/bin/apt-cache policy' returned : 

Package files:
 100 /var/lib/dpkg/status
     release a=now
Pinned packages:","Configure your package manager repositories according to site policy.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.2.2.1 Ensure updates, patches, and additional security software are installed"" : [PASSED]

Periodically patches are released for included software either due to security flaws or to include additional functionality.

Newer patches may contain security enhancements that would not be available through the latest full update. As a result, it is recommended that the latest software patches be used to take advantage of the latest functionality. As with any software installation, organizations need to determine if a given update meets their requirements and verify the compatibility and supportability of any additional software against the update revision that is selected.

Solution:
Run the following command to update all packages following local site policy guidance on applying updates and patches:

# apt update

# apt upgrade
  - OR -
# apt dist-upgrade

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.11.2,800-171|3.11.3,800-171|3.14.1,800-53|RA-5,800-53|SI-2,800-53|SI-2(2),800-53r5|RA-5,800-53r5|SI-2,800-53r5|SI-2(2),CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSCv7|3.5,CSCv8|7.3,CSCv8|7.4,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,ITSG-33|SI-2,ITSG-33|SI-2(2),LEVEL|1M,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.1,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,PCI-DSSv4.0|6.3.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.7

Policy Value:
cmd: /bin/apt-get -s upgrade | /bin/grep -Ev '(Reading|Building|Calculating)'
expect: ^[\s]*0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded

Actual Value:
The command '/bin/apt-get -s upgrade | /bin/grep -Ev '(Reading|Building|Calculating)'' returned : 

0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.","Run the following command to update all packages following local site policy guidance on applying updates and patches:

# apt update

# apt upgrade
  - OR -
# apt dist-upgrade","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.3.1.1 Ensure AppArmor is installed"" : [FAILED]

AppArmor provides Mandatory Access Controls.

Without a Mandatory Access Control system installed only the default Discretionary Access Control system will be available.

Solution:
Install AppArmor.

# apt install apparmor apparmor-utils

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - dpkg check apparmor-utils
The command '/bin/dpkg -s apparmor-utils 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

dpkg-query: package 'apparmor-utils' is not installed and no information is available

-------------------------
PASSED - dpkg check apparmor
The command '/bin/dpkg -s apparmor 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

Status: install ok installed","Install AppArmor.

# apt install apparmor apparmor-utils","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration"" : [FAILED]

Configure AppArmor to be enabled at boot time and verify that it has not been overwritten by the bootloader boot parameters.

Note: This recommendation is designed around the grub bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings.

AppArmor must be enabled at boot time in your bootloader configuration to ensure that the controls it provides are not overridden.

Solution:
Edit /etc/default/grub and add the apparmor=1 and security=apparmor parameters to the GRUB_CMDLINE_LINUX= line

GRUB_CMDLINE_LINUX=""apparmor=1 security=apparmor""

Run the following command to update the grub2 configuration:

# update-grub

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - grub.cfg security=apparmor
Non-compliant file(s):
      /boot/grub/grub.cfg - regex '^[\s]*linux[\s]*' found - expect '(?i)security=apparmor(?-i)' not found in the following lines:
          155: 	linux	/boot/vmlinuz-5.15.0-117-generic root=/dev/mapper/anapaya--v3--vg-root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  quiet
          175: 		linux	/boot/vmlinuz-5.15.0-117-generic root=/dev/mapper/anapaya--v3--vg-root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  quiet
          194: 		linux	/boot/vmlinuz-5.15.0-117-generic root=/dev/mapper/anapaya--v3--vg-root ro recovery nomodeset dis_ucode_ldr noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0 
          214: 		linux	/boot/vmlinuz-5.15.0-116-generic root=/dev/mapper/anapaya--v3--vg-root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  quiet
          233: 		linux	/boot/vmlinuz-5.15.0-116-generic root=/dev/mapper/anapaya--v3--vg-root ro recovery nomodeset dis_ucode_ldr noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0

-------------------------
FAILED - grub.cfg apparmor=1
Non-compliant file(s):
      /boot/grub/grub.cfg - regex '^[\s]*linux[\s]*' found - expect '(?i)apparmor=1(?-i)' not found in the following lines:
          155: 	linux	/boot/vmlinuz-5.15.0-117-generic root=/dev/mapper/anapaya--v3--vg-root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  quiet
          175: 		linux	/boot/vmlinuz-5.15.0-117-generic root=/dev/mapper/anapaya--v3--vg-root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  quiet
          194: 		linux	/boot/vmlinuz-5.15.0-117-generic root=/dev/mapper/anapaya--v3--vg-root ro recovery nomodeset dis_ucode_ldr noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0 
          214: 		linux	/boot/vmlinuz-5.15.0-116-generic root=/dev/mapper/anapaya--v3--vg-root ro noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0  quiet
          233: 		linux	/boot/vmlinuz-5.15.0-116-generic root=/dev/mapper/anapaya--v3--vg-root ro recovery nomodeset dis_ucode_ldr noquiet nosplash console=tty0 console=ttyS0,115200n8 vga=normal nofb nomodeset video=vesafb:off i915.modeset=0","Edit /etc/default/grub and add the apparmor=1 and security=apparmor parameters to the GRUB_CMDLINE_LINUX= line

GRUB_CMDLINE_LINUX=""apparmor=1 security=apparmor""

Run the following command to update the grub2 configuration:

# update-grub","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.3.1.3 Ensure all AppArmor Profiles are in enforce or complain mode"" : [PASSED]

AppArmor profiles define what resources applications are able to access.

Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that any policies that exist on the system are activated.

Solution:
Run the following command to set all profiles to enforce mode:

# aa-enforce /etc/apparmor.d/*

OR

Run the following command to set all profiles to complain mode:

# aa-complain /etc/apparmor.d/*

Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - apparmor_status - processes are confined
The command '/sbin/apparmor_status' returned : 

apparmor module is loaded.
22 profiles are loaded.
22 profiles are in enforce mode.
   /usr/bin/man
   /usr/lib/NetworkManager/nm-dhcp-client.action
   /usr/lib/NetworkManager/nm-dhcp-helper
   /usr/lib/connman/scripts/dhclient-script
   /{,usr/}sbin/dhclient
   docker-default
   lsb_release
   man_filter
   man_groff
   nvidia_modprobe
   nvidia_modprobe//kmod
   tcpdump
   ubuntu_pro_apt_news
   ubuntu_pro_esm_cache
   ubuntu_pro_esm_cache//apt_methods
   ubuntu_pro_esm_cache//apt_methods_gpgv
   ubuntu_pro_esm_cache//cloud_id
   ubuntu_pro_esm_cache//dpkg
   ubuntu_pro_esm_cache//ps
   ubuntu_pro_esm_cache//ubuntu_distro_info
   ubuntu_pro_esm_cache_systemctl
   ubuntu_pro_esm_cache_systemd_detect_virt
0 profiles are in complain mode.
0 profiles are in kill mode.
0 profiles are in unconfined mode.
5 processes have profiles defined.
5 processes are in enforce mode.
   /app/scion-all (240671) docker-default
   /app/scion-all (240748) docker-default
   /app/appliance (240764) docker-default
   /app/scion-all (241025) docker-default
   /otelcol-contrib (241096) docker-default
0 processes are in complain mode.
0 processes are unconfined but have a profile defined.
0 processes are in mixed mode.
0 processes are in kill mode.

-------------------------
PASSED - apparmor_status - profiles are loaded
The command '/sbin/apparmor_status' returned : 

apparmor module is loaded.
22 profiles are loaded.
22 profiles are in enforce mode.
   /usr/bin/man
   /usr/lib/NetworkManager/nm-dhcp-client.action
   /usr/lib/NetworkManager/nm-dhcp-helper
   /usr/lib/connman/scripts/dhclient-script
   /{,usr/}sbin/dhclient
   docker-default
   lsb_release
   man_filter
   man_groff
   nvidia_modprobe
   nvidia_modprobe//kmod
   tcpdump
   ubuntu_pro_apt_news
   ubuntu_pro_esm_cache
   ubuntu_pro_esm_cache//apt_methods
   ubuntu_pro_esm_cache//apt_methods_gpgv
   ubuntu_pro_esm_cache//cloud_id
   ubuntu_pro_esm_cache//dpkg
   ubuntu_pro_esm_cache//ps
   ubuntu_pro_esm_cache//ubuntu_distro_info
   ubuntu_pro_esm_cache_systemctl
   ubuntu_pro_esm_cache_systemd_detect_virt
0 profiles are in complain mode.
0 profiles are in kill mode.
0 profiles are in unconfined mode.
5 processes have profiles defined.
5 processes are in enforce mode.
   /app/scion-all (240671) docker-default
   /app/scion-all (240748) docker-default
   /app/appliance (240764) docker-default
   /app/scion-all (241025) docker-default
   /otelcol-contrib (241096) docker-default
0 processes are in complain mode.
0 processes are unconfined but have a profile defined.
0 processes are in mixed mode.
0 processes are in kill mode.","Run the following command to set all profiles to enforce mode:

# aa-enforce /etc/apparmor.d/*

OR

Run the following command to set all profiles to complain mode:

# aa-complain /etc/apparmor.d/*

Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.4.1 Ensure bootloader password is set"" : [FAILED]

Setting the boot loader password will require that anyone rebooting the system must enter a password before being able to set command line boot parameters

Requiring a boot password upon execution of the boot loader will prevent an unauthorized user from entering boot parameters or changing the boot partition. This prevents users from weakening security (e.g. turning off AppArmor at boot time).

Solution:
Create an encrypted password with grub-mkpasswd-pbkdf2 :

# grub-mkpasswd-pbkdf2 --iteration-count=600000 --salt=64

Enter password: <password>
Reenter password: <password>
PBKDF2 hash of your password is <encrypted-password>

Add the following into a custom /etc/grub.d configuration file:

cat <<EOF
exec tail -n +2 $0
set superusers=""<username>""
password_pbkdf2 <username> <encrypted-password>
EOF

The superuser/user information and password should not be contained in the /etc/grub.d/00_header file as this file could be overwritten in a package update.

If there is a requirement to be able to boot/reboot without entering the password, edit /etc/grub.d/10_linux and add --unrestricted to the line CLASS=

Example:

CLASS=""--class gnu-linux --class gnu --class os --unrestricted""

Run the following command to update the grub2 configuration:

# update-grub

Impact:

If password protection is enabled, only the designated superuser can edit a GRUB 2 menu item by pressing ""e"" or access the GRUB 2 command line by pressing ""c""

If GRUB 2 is set up to boot automatically to a password-protected menu entry the user has no option to back out of the password prompt to select another menu entry. Holding the SHIFT key will not display the menu in this case. The user must enter the correct username and password. If unable to do so, the configuration files will have to be edited via a LiveCD or other means to fix the problem

You can add --unrestricted to the menu entries to allow the system to boot without entering a password. A password will still be required to edit menu items.

More Information:

https://help.ubuntu.com/community/Grub2/Passwords

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - grub.cfg superusers
The file ""/boot/grub/grub.cfg"" does not contain ""^[\s]*set[\s]*superusers[\s]*=""

-------------------------
FAILED - grub.cfg password
The file ""/boot/grub/grub.cfg"" does not contain ""^[\s]*password""","Create an encrypted password with grub-mkpasswd-pbkdf2 :

# grub-mkpasswd-pbkdf2 --iteration-count=600000 --salt=64

Enter password: <password>
Reenter password: <password>
PBKDF2 hash of your password is <encrypted-password>

Add the following into a custom /etc/grub.d configuration file:

cat <<EOF
exec tail -n +2 $0
set superusers=""<username>""
password_pbkdf2 <username> <encrypted-password>
EOF

The superuser/user information and password should not be contained in the /etc/grub.d/00_header file as this file could be overwritten in a package update.

If there is a requirement to be able to boot/reboot without entering the password, edit /etc/grub.d/10_linux and add --unrestricted to the line CLASS=

Example:

CLASS=""--class gnu-linux --class gnu --class os --unrestricted""

Run the following command to update the grub2 configuration:

# update-grub

Impact:

If password protection is enabled, only the designated superuser can edit a GRUB 2 menu item by pressing ""e"" or access the GRUB 2 command line by pressing ""c""

If GRUB 2 is set up to boot automatically to a password-protected menu entry the user has no option to back out of the password prompt to select another menu entry. Holding the SHIFT key will not display the menu in this case. The user must enter the correct username and password. If unable to do so, the configuration files will have to be edited via a LiveCD or other means to fix the problem

You can add --unrestricted to the menu entries to allow the system to boot without entering a password. A password will still be required to edit menu items.

More Information:

https://help.ubuntu.com/community/Grub2/Passwords","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.4.2 Ensure access to bootloader config is configured"" : [FAILED]

The grub configuration file contains information on boot settings and passwords for unlocking boot options.

Setting the permissions to read and write for root only prevents non-root users from seeing the boot parameters or changing them. Non-root users who read the boot parameters may be able to identify weaknesses in security upon boot and be able to exploit them.

Solution:
Run the following commands to set permissions on your grub configuration:

# chown root:root /boot/grub/grub.cfg
# chmod u-x,go-rwx /boot/grub/grub.cfg

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /boot/grub/grub.cfg
group: root
mask: 7177
owner: root

Actual Value:
The file /boot/grub/grub.cfg with fmode owner: root group: root mode: 0444 uid: 0 gid: 0 uneven permissions : FALSE  does not match the policy value owner: root group: root mask: 7177 uneven permissions : FALSE 

/boot/grub/grub.cfg","Run the following commands to set permissions on your grub configuration:

# chown root:root /boot/grub/grub.cfg
# chmod u-x,go-rwx /boot/grub/grub.cfg","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.5.1 Ensure address space layout randomization is enabled"" : [FAILED]

Address space layout randomization (ASLR) is an exploit mitigation technique which randomly arranges the address space of key data areas of a process.

Randomly placing virtual memory regions will make it difficult to write memory page exploits as the memory placement will be consistently shifting.

Solution:
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - kernel.randomize_va_space = 2

Example:

# printf ""%s
"" ""kernel.randomize_va_space = 2"" >> /etc/sysctl.d/60-kernel_sysctl.conf

Run the following command to set the active kernel parameter:

# sysctl -w kernel.randomize_va_space=2

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|SI-16,800-53r5|SI-16,CSCv7|8.3,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|1A

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""kernel.randomize_va_space"" is not set in an included file
   ** Note: ""kernel.randomize_va_space"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""kernel.randomize_va_space"" is correctly set to ""2"" in the running configuration","Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - kernel.randomize_va_space = 2

Example:

# printf ""%s
"" ""kernel.randomize_va_space = 2"" >> /etc/sysctl.d/60-kernel_sysctl.conf

Run the following command to set the active kernel parameter:

# sysctl -w kernel.randomize_va_space=2

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.5.2 Ensure ptrace_scope is restricted"" : [PASSED]

The ptrace() system call provides a means by which one process (the ""tracer"") may observe and control the execution of another process (the ""tracee""), and examine and change the tracee's memory and registers.

If one application is compromised, it would be possible for an attacker to attach to other running processes (e.g. Bash, Firefox, SSH sessions, GPG agent, etc) to extract additional credentials and continue to expand the scope of their attack.

Enabling restricted mode will limit the ability of a compromised process to PTRACE_ATTACH on other processes running under the same user. With restricted mode, ptrace will continue to work with root user.

Solution:
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - kernel.yama.ptrace_scope = 1

Example:

# printf ""%s
"" ""kernel.yama.ptrace_scope = 1"" >> /etc/sysctl.d/60-kernel_sysctl.conf

Run the following command to set the active kernel parameter:

# sysctl -w kernel.yama.ptrace_scope=1

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - ""kernel.yama.ptrace_scope"" is correctly set to ""1"" in the running configuration
 - ""kernel.yama.ptrace_scope"" is correctly set to ""1"" in ""/etc/sysctl.d/10-ptrace.conf""","Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - kernel.yama.ptrace_scope = 1

Example:

# printf ""%s
"" ""kernel.yama.ptrace_scope = 1"" >> /etc/sysctl.d/60-kernel_sysctl.conf

Run the following command to set the active kernel parameter:

# sysctl -w kernel.yama.ptrace_scope=1

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.5.3 Ensure core dumps are restricted"" : [FAILED]

A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core.

Solution:
Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - fs.suid_dumpable = 0

Example:

# printf ""%s
"" ""fs.suid_dumpable = 0"" >> /etc/sysctl.d/60-fs_sysctl.conf

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

-IF- systemd-coredump is installed:

edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.7,800-53|AC-6(10),800-53r5|AC-6(10),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - hard core 0
No matching files were found
Less than 1 matches of regex found

-------------------------
PASSED - check if coredump.service is enabled
The command '/bin/systemctl is-enabled coredump.service | /bin/awk '{print} END { if(NR==0) print ""disabled"" }'' returned : 

Failed to get unit file state for coredump.service: No such file or directory
disabled

-------------------------
FAILED - fs.suid_dumpable
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""fs.suid_dumpable"" is not set in an included file
   ** Note: ""fs.suid_dumpable"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""fs.suid_dumpable"" is correctly set to ""0"" in the running configuration","Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - fs.suid_dumpable = 0

Example:

# printf ""%s
"" ""fs.suid_dumpable = 0"" >> /etc/sysctl.d/60-fs_sysctl.conf

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

-IF- systemd-coredump is installed:

edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.5.4 Ensure prelink is not installed"" : [PASSED]

prelink is a program that modifies ELF shared libraries and ELF dynamically linked binaries in such a way that the time needed for the dynamic linker to perform relocations at startup significantly decreases.

The prelinking feature can interfere with the operation of AIDE, because it changes binaries. Prelinking can also increase the vulnerability of the system if a malicious user is able to compromise a common library such as libc.

Solution:
Run the following command to restore binaries to normal:

# prelink -ua

Uninstall prelink using the appropriate package manager or manual installation:

# apt purge prelink

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.7,800-171|3.3.1,800-171|3.3.2,800-53|AC-6(9),800-53|AU-2,800-53|AU-12,800-53r5|AC-6(9),800-53r5|AU-2,800-53r5|AU-12,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.3(a),CN-L3|8.1.10.6(a),CSCv7|14.9,CSCv8|3.14,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.3,ITSG-33|AC-6,ITSG-33|AU-2,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /bin/dpkg -s prelink 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s prelink 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'prelink' is not installed and no information is available","Run the following command to restore binaries to normal:

# prelink -ua

Uninstall prelink using the appropriate package manager or manual installation:

# apt purge prelink","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.5.5 Ensure Automatic Error Reporting is not enabled"" : [PASSED]

The Apport Error Reporting Service automatically generates crash reports for debugging

Apport collects potentially sensitive data, such as core dumps, stack traces, and log files. They can contain passwords, credit card numbers, serial numbers, and other private material.

Solution:
Edit /etc/default/apport and add or edit the enabled parameter to equal 0 :

enabled=0

Run the following commands to stop and mask the apport service

# systemctl stop apport.service
# systemctl mask apport.service

- OR -

Run the following command to remove the apport package:

# apt purge apport

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - check if apport.service is active
The command '/bin/systemctl is-active apport.service | /bin/grep '^active' | /bin/awk '{print} END {if(NR==0) print ""pass""}'' returned : 

pass

-------------------------
PASSED - /etc/default/apport - enabled
No matching files were found","Edit /etc/default/apport and add or edit the enabled parameter to equal 0 :

enabled=0

Run the following commands to stop and mask the apport service

# systemctl stop apport.service
# systemctl mask apport.service

- OR -

Run the following command to remove the apport package:

# apt purge apport","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.6.1 Ensure message of the day is configured properly"" : [PASSED]

The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: m - machine architecture r - operating system release s - operating system name v - operating system version

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the "" uname -a "" command once they have logged in.

Solution:
Edit the /etc/motd file with the appropriate contents according to your site policy, remove any instances of m r s v or references to the OS platform

- OR -

- IF - the motd is not used, this file can be removed.

Run the following command to remove the motd file:

# rm /etc/motd

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.9,800-53|AC-8a.,800-53r5|AC-8a.,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8a.,LEVEL|1A,NESA|M5.2.5,NESA|T5.5.1,NIAv2|AM10a,NIAv2|AM10b,NIAv2|AM10c,NIAv2|AM10d,NIAv2|AM10e,TBA-FIISB|45.2.4

Policy Value:
PASSED","Edit the /etc/motd file with the appropriate contents according to your site policy, remove any instances of m r s v or references to the OS platform

- OR -

- IF - the motd is not used, this file can be removed.

Run the following command to remove the motd file:

# rm /etc/motd","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.6.2 Ensure local login warning banner is configured properly"" : [FAILED]

The contents of the /etc/issue file are displayed to users prior to login for local terminals.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: m - machine architecture r - operating system release s - operating system name v - operating system version - or the operating system's name

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the "" uname -a "" command once they have logged in.

Solution:
Edit the /etc/issue file with the appropriate contents according to your site policy, remove any instances of m r s v or references to the OS platform

Example:

# echo ""Authorized users only. All activity may be monitored and reported."" > /etc/issue

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.9,800-53|AC-8,800-53r5|AC-8,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - banner text
First ERROR: Ubuntu 22.04.4 != All activities
Ubuntu 22.04.4 LTS \n \l

-------------------------
PASSED - mrsv not included in /etc/issue
The file ""/etc/issue"" does not contain ""\\[mrsv]""","Edit the /etc/issue file with the appropriate contents according to your site policy, remove any instances of m r s v or references to the OS platform

Example:

# echo ""Authorized users only. All activity may be monitored and reported."" > /etc/issue","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.6.3 Ensure remote login warning banner is configured properly"" : [FAILED]

The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: m - machine architecture r - operating system release s - operating system name v - operating system version

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the "" uname -a "" command once they have logged in.

Solution:
Edit the /etc/issue.net file with the appropriate contents according to your site policy, remove any instances of m r s v or references to the OS platform

Example:

# echo ""Authorized users only. All activity may be monitored and reported."" > /etc/issue.net

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.9,800-53|AC-8,800-53r5|AC-8,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - mrsv not included in /etc/issue.net
The file ""/etc/issue.net"" does not contain ""\\[mrsv]""

-------------------------
FAILED - banner text
First ERROR: Ubuntu 22.04.4 != All activities
Ubuntu 22.04.4 LTS","Edit the /etc/issue.net file with the appropriate contents according to your site policy, remove any instances of m r s v or references to the OS platform

Example:

# echo ""Authorized users only. All activity may be monitored and reported."" > /etc/issue.net","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.6.4 Ensure access to /etc/motd is configured"" : [PASSED]

The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.

- IF - the /etc/motd file does not have the correct access configured, it could be modified by unauthorized users with incorrect or misleading information.

Solution:
Run the following commands to set mode, owner, and group on /etc/motd :

# chown root:root $(readlink -e /etc/motd)
# chmod u-x,go-wx $(readlink -e /etc/motd)

- OR -

Run the following command to remove the /etc/motd file:

# rm /etc/motd

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/motd
group: root
mask: 133
owner: root
required: NO

Actual Value:
","Run the following commands to set mode, owner, and group on /etc/motd :

# chown root:root $(readlink -e /etc/motd)
# chmod u-x,go-wx $(readlink -e /etc/motd)

- OR -

Run the following command to remove the /etc/motd file:

# rm /etc/motd","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.6.5 Ensure access to /etc/issue is configured"" : [PASSED]

The contents of the /etc/issue file are displayed to users prior to login for local terminals.

- IF - the /etc/issue file does not have the correct access configured, it could be modified by unauthorized users with incorrect or misleading information.

Solution:
Run the following commands to set mode, owner, and group on /etc/issue :

# chown root:root $(readlink -e /etc/issue)
# chmod u-x,go-wx $(readlink -e /etc/issue)

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/issue
group: root
mask: 133
owner: root

Actual Value:
The file /etc/issue with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/issue","Run the following commands to set mode, owner, and group on /etc/issue :

# chown root:root $(readlink -e /etc/issue)
# chmod u-x,go-wx $(readlink -e /etc/issue)","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.6.6 Ensure access to /etc/issue.net is configured"" : [PASSED]

The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.

- IF - the /etc/issue.net file does not have the correct access configured, it could be modified by unauthorized users with incorrect or misleading information.

Solution:
Run the following commands to set mode, owner, and group on /etc/issue.net :

# chown root:root $(readlink -e /etc/issue.net)
# chmod u-x,go-wx $(readlink -e /etc/issue.net)

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/issue.net
group: root
mask: 133
owner: root

Actual Value:
The file /etc/issue.net with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/issue.net","Run the following commands to set mode, owner, and group on /etc/issue.net :

# chown root:root $(readlink -e /etc/issue.net)
# chmod u-x,go-wx $(readlink -e /etc/issue.net)","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.10 Ensure XDCMP is not enabled"" : [PASSED]

X Display Manager Control Protocol (XDMCP) is designed to provide authenticated access to display management services for remote displays

XDMCP is inherently insecure.

 - XDMCP is not a ciphered protocol. This may allow an attacker to capture keystrokes entered by a user
 - XDMCP is vulnerable to man-in-the-middle attacks. This may allow an attacker to steal the credentials of legitimate users by impersonating the XDMCP server.

Solution:
Edit all files returned by the audit and remove or commend out the Enable=true line in the [xdmcp] block:

Example file:

# GDM configuration storage
#
# See /usr/share/gdm/gdm.schemas for a list of available options.

[daemon]
# Uncomment the line below to force the login screen to use Xorg
#WaylandEnable=false

# Enabling automatic login
# AutomaticLoginEnable = true
# AutomaticLogin = user1

# Enabling timed login
# TimedLoginEnable = true
# TimedLogin = user1
# TimedLoginDelay = 10

[security]

[xdmcp]
# Enable=true <- **This line should be removed or commented out**

[chooser]

[debug]
# Uncomment the line below to turn on debugging
# More verbose logs
# Additionally lets the X server dump core if it crashes
#Enable=true

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

Pass","Edit all files returned by the audit and remove or commend out the Enable=true line in the [xdmcp] block:

Example file:

# GDM configuration storage
#
# See /usr/share/gdm/gdm.schemas for a list of available options.

[daemon]
# Uncomment the line below to force the login screen to use Xorg
#WaylandEnable=false

# Enabling automatic login
# AutomaticLoginEnable = true
# AutomaticLogin = user1

# Enabling timed login
# TimedLoginEnable = true
# TimedLogin = user1
# TimedLoginDelay = 10

[security]

[xdmcp]
# Enable=true <- **This line should be removed or commented out**

[chooser]

[debug]
# Uncomment the line below to turn on debugging
# More verbose logs
# Additionally lets the X server dump core if it crashes
#Enable=true","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.2 Ensure GDM login banner is configured"" : [PASSED]

GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place.

Solution:
- IF - GDM is installed:

Run the following script to set and enable the text banner message on the login screen:

#!/usr/bin/env bash

{
   l_pkgoutput=""""
   if command -v dpkg-query &amp;> /dev/null; then
      l_pq=""dpkg-query -s""
   elif command -v rpm &amp;> /dev/null; then
      l_pq=""rpm -q""
   fi
   l_pcl=""gdm gdm3"" # Space separated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq ""$l_pn"" &amp;> /dev/null &amp;&amp; l_pkgoutput=""$l_pkgoutput
 - Package: \""$l_pn\"" exists on the system
 - checking configuration""
   done
   if [ -n ""$l_pkgoutput"" ]; then

      l_gdmprofile=""gdm"" # Set this to desired profile name IaW Local site policy
      l_bmessage=""'Authorized uses only. All activity may be monitored and reported'"" # Set to desired banner message
      if [ ! -f ""/etc/dconf/profile/$l_gdmprofile"" ]; then
         echo ""Creating profile \""$l_gdmprofile\""""
         echo -e ""user-db:user
system-db:$l_gdmprofile
file-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults"" > /etc/dconf/profile/$l_gdmprofile
      fi
      if [ ! -d ""/etc/dconf/db/$l_gdmprofile.d/"" ]; then
         echo ""Creating dconf database directory \""/etc/dconf/db/$l_gdmprofile.d/\""""
         mkdir /etc/dconf/db/$l_gdmprofile.d/
      fi
      if ! grep -Piq '^h*banner-message-enableh*=h*trueb' /etc/dconf/db/$l_gdmprofile.d/*; then
         echo ""creating gdm keyfile for machine-wide settings""
         if ! grep -Piq -- '^h*banner-message-enableh*=h*' /etc/dconf/db/$l_gdmprofile.d/*; then
            l_kfile=""/etc/dconf/db/$l_gdmprofile.d/01-banner-message""
            echo -e ""
[org/gnome/login-screen]
banner-message-enable=true"" >> ""$l_kfile""
         else
            l_kfile=""$(grep -Pil -- '^h*banner-message-enableh*=h*' /etc/dconf/db/$l_gdmprofile.d/*)""
            ! grep -Pq '^h*[org/gnome/login-screen]' ""$l_kfile"" &amp;&amp; sed -ri '/^s*banner-message-enable/ i[org/gnome/login-screen]' ""$l_kfile""
            ! grep -Pq '^h*banner-message-enableh*=h*trueb' ""$l_kfile"" &amp;&amp; sed -ri 's/^s*(banner-message-enables*=s*)(S+)(s*.*$)/1true 3//' ""$l_kfile""
 # sed -ri '/^s*[org/gnome/login-screen]/ a\nbanner-message-enable=true' ""$l_kfile""
         fi
      fi
      if ! grep -Piq ""^h*banner-message-text=['\""]+S+"" ""$l_kfile""; then
         sed -ri ""/^s*banner-message-enable/ abanner-message-text=$l_bmessage"" ""$l_kfile""
      fi
      dconf update
   else
      echo -e ""

 - GNOME Desktop Manager isn't installed
 - Recommendation is Not Applicable
 - No remediation required
""
   fi
}

Notes:

 - There is no character limit for the banner message. gnome-shell autodetects longer stretches of text and enters two column mode.
 - The banner message cannot be read from an external file.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.9,800-53|AC-8,800-53r5|AC-8,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- GNOME Desktop Manager isn't installed
 - Recommendation is Not Applicable
- Audit result:
  *** PASS ***


- Audit Result:
  ** PASS **","- IF - GDM is installed:

Run the following script to set and enable the text banner message on the login screen:

#!/usr/bin/env bash

{
   l_pkgoutput=""""
   if command -v dpkg-query &amp;> /dev/null; then
      l_pq=""dpkg-query -s""
   elif command -v rpm &amp;> /dev/null; then
      l_pq=""rpm -q""
   fi
   l_pcl=""gdm gdm3"" # Space separated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq ""$l_pn"" &amp;> /dev/null &amp;&amp; l_pkgoutput=""$l_pkgoutput
 - Package: \""$l_pn\"" exists on the system
 - checking configuration""
   done
   if [ -n ""$l_pkgoutput"" ]; then

      l_gdmprofile=""gdm"" # Set this to desired profile name IaW Local site policy
      l_bmessage=""'Authorized uses only. All activity may be monitored and reported'"" # Set to desired banner message
      if [ ! -f ""/etc/dconf/profile/$l_gdmprofile"" ]; then
         echo ""Creating profile \""$l_gdmprofile\""""
         echo -e ""user-db:user
system-db:$l_gdmprofile
file-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults"" > /etc/dconf/profile/$l_gdmprofile
      fi
      if [ ! -d ""/etc/dconf/db/$l_gdmprofile.d/"" ]; then
         echo ""Creating dconf database directory \""/etc/dconf/db/$l_gdmprofile.d/\""""
         mkdir /etc/dconf/db/$l_gdmprofile.d/
      fi
      if ! grep -Piq '^h*banner-message-enableh*=h*trueb' /etc/dconf/db/$l_gdmprofile.d/*; then
         echo ""creating gdm keyfile for machine-wide settings""
         if ! grep -Piq -- '^h*banner-message-enableh*=h*' /etc/dconf/db/$l_gdmprofile.d/*; then
            l_kfile=""/etc/dconf/db/$l_gdmprofile.d/01-banner-message""
            echo -e ""
[org/gnome/login-screen]
banner-message-enable=true"" >> ""$l_kfile""
         else
            l_kfile=""$(grep -Pil -- '^h*banner-message-enableh*=h*' /etc/dconf/db/$l_gdmprofile.d/*)""
            ! grep -Pq '^h*[org/gnome/login-screen]' ""$l_kfile"" &amp;&amp; sed -ri '/^s*banner-message-enable/ i[org/gnome/login-screen]' ""$l_kfile""
            ! grep -Pq '^h*banner-message-enableh*=h*trueb' ""$l_kfile"" &amp;&amp; sed -ri 's/^s*(banner-message-enables*=s*)(S+)(s*.*$)/1true 3//' ""$l_kfile""
 # sed -ri '/^s*[org/gnome/login-screen]/ a\nbanner-message-enable=true' ""$l_kfile""
         fi
      fi
      if ! grep -Piq ""^h*banner-message-text=['\""]+S+"" ""$l_kfile""; then
         sed -ri ""/^s*banner-message-enable/ abanner-message-text=$l_bmessage"" ""$l_kfile""
      fi
      dconf update
   else
      echo -e ""

 - GNOME Desktop Manager isn't installed
 - Recommendation is Not Applicable
 - No remediation required
""
   fi
}

Notes:

 - There is no character limit for the banner message. gnome-shell autodetects longer stretches of text and enters two column mode.
 - The banner message cannot be read from an external file.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.3 Ensure GDM disable-user-list option is enabled"" : [PASSED]

GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.

The disable-user-list option controls if a list of users is displayed on the login screen

Displaying the user list eliminates half of the Userid/Password equation that an unauthorized person would need to log on.

Solution:
- IF - GDM is installed:

Run the following script to enable the disable-user-list option:

Note: the l_gdm_profile variable in the script can be changed if a different profile name is desired in accordance with local site policy.

#!/usr/bin/env bash

{
   l_gdmprofile=""gdm""
   if [ ! -f ""/etc/dconf/profile/$l_gdmprofile"" ]; then
      echo ""Creating profile \""$l_gdmprofile\""""
      echo -e ""user-db:user
system-db:$l_gdmprofile
file-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults"" > /etc/dconf/profile/$l_gdmprofile
   fi
   if [ ! -d ""/etc/dconf/db/$l_gdmprofile.d/"" ]; then
      echo ""Creating dconf database directory \""/etc/dconf/db/$l_gdmprofile.d/\""""
      mkdir /etc/dconf/db/$l_gdmprofile.d/
   fi
   if ! grep -Piq '^h*disable-user-listh*=h*trueb' /etc/dconf/db/$l_gdmprofile.d/*; then
      echo ""creating gdm keyfile for machine-wide settings""
      if ! grep -Piq -- '^h*[org/gnome/login-screen]' /etc/dconf/db/$l_gdmprofile.d/*; then
         echo -e ""
[org/gnome/login-screen]
# Do not show the user list
disable-user-list=true"" >> /etc/dconf/db/$l_gdmprofile.d/00-login-screen
      else
         sed -ri '/^s*[org/gnome/login-screen]/ a# Do not show the user list
disable-user-list=true' $(grep -Pil -- '^h*[org/gnome/login-screen]' /etc/dconf/db/$l_gdmprofile.d/*)
      fi
   fi
   dconf update
}

Note: When the user profile is created or changed, the user will need to log out and log in again before the changes will be applied.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- GNOME Desktop Manager isn't installed
 - Recommendation is Not Applicable
- Audit result:
  *** PASS ***","- IF - GDM is installed:

Run the following script to enable the disable-user-list option:

Note: the l_gdm_profile variable in the script can be changed if a different profile name is desired in accordance with local site policy.

#!/usr/bin/env bash

{
   l_gdmprofile=""gdm""
   if [ ! -f ""/etc/dconf/profile/$l_gdmprofile"" ]; then
      echo ""Creating profile \""$l_gdmprofile\""""
      echo -e ""user-db:user
system-db:$l_gdmprofile
file-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults"" > /etc/dconf/profile/$l_gdmprofile
   fi
   if [ ! -d ""/etc/dconf/db/$l_gdmprofile.d/"" ]; then
      echo ""Creating dconf database directory \""/etc/dconf/db/$l_gdmprofile.d/\""""
      mkdir /etc/dconf/db/$l_gdmprofile.d/
   fi
   if ! grep -Piq '^h*disable-user-listh*=h*trueb' /etc/dconf/db/$l_gdmprofile.d/*; then
      echo ""creating gdm keyfile for machine-wide settings""
      if ! grep -Piq -- '^h*[org/gnome/login-screen]' /etc/dconf/db/$l_gdmprofile.d/*; then
         echo -e ""
[org/gnome/login-screen]
# Do not show the user list
disable-user-list=true"" >> /etc/dconf/db/$l_gdmprofile.d/00-login-screen
      else
         sed -ri '/^s*[org/gnome/login-screen]/ a# Do not show the user list
disable-user-list=true' $(grep -Pil -- '^h*[org/gnome/login-screen]' /etc/dconf/db/$l_gdmprofile.d/*)
      fi
   fi
   dconf update
}

Note: When the user profile is created or changed, the user will need to log out and log in again before the changes will be applied.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.4 Ensure GDM screen locks when the user is idle"" : [PASSED]

GNOME Desktop Manager can make the screen lock automatically whenever the user is idle for some amount of time.

Setting a lock-out value reduces the window of opportunity for unauthorized user access to another user's session that has been left unattended.

Solution:
Run the following commands to enable screen locks when the user is idle:

# gsettings set org.gnome.desktop.screensaver lock-delay 5 # gsettings set org.gnome.desktop.session idle-delay 900

- OR-

 - Create or edit the user profile in the /etc/dconf/profile/ and verify it includes the following:

user-db:user
system-db:{NAME_OF_DCONF_DATABASE}

Note: local is the name of a dconf database used in the examples.

<xhtml:ol start=""2""> -

Create the directory /etc/dconf/db/local.d/ if it doesn't already exist:

 -

Create the key file /etc/dconf/db/local.d/00-screensaver to provide information for the local database:

Example key file:

# Specify the dconf path
[org/gnome/desktop/session]

# Number of seconds of inactivity before the screen goes blank
# Set to 0 seconds if you want to deactivate the screensaver.
idle-delay=uint32 180

# Specify the dconf path
[org/gnome/desktop/screensaver]

# Number of seconds after the screen is blank before locking the screen
lock-delay=uint32 0

Note: You must include the uint32 along with the integer key values as shown.

<xhtml:ol start=""4""> - Run the following command to update the system databases:

# dconf update <xhtml:ol start=""5""> - Users must log out and back in again before the system-wide settings take effect.

Note: Users must log out and back in again before the system-wide settings take effect.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4

Policy Value:
PASSED","Run the following commands to enable screen locks when the user is idle:

# gsettings set org.gnome.desktop.screensaver lock-delay 5 # gsettings set org.gnome.desktop.session idle-delay 900

- OR-

 - Create or edit the user profile in the /etc/dconf/profile/ and verify it includes the following:

user-db:user
system-db:{NAME_OF_DCONF_DATABASE}

Note: local is the name of a dconf database used in the examples.

<xhtml:ol start=""2""> -

Create the directory /etc/dconf/db/local.d/ if it doesn't already exist:

 -

Create the key file /etc/dconf/db/local.d/00-screensaver to provide information for the local database:

Example key file:

# Specify the dconf path
[org/gnome/desktop/session]

# Number of seconds of inactivity before the screen goes blank
# Set to 0 seconds if you want to deactivate the screensaver.
idle-delay=uint32 180

# Specify the dconf path
[org/gnome/desktop/screensaver]

# Number of seconds after the screen is blank before locking the screen
lock-delay=uint32 0

Note: You must include the uint32 along with the integer key values as shown.

<xhtml:ol start=""4""> - Run the following command to update the system databases:

# dconf update <xhtml:ol start=""5""> - Users must log out and back in again before the system-wide settings take effect.

Note: Users must log out and back in again before the system-wide settings take effect.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.5 Ensure GDM screen locks cannot be overridden"" : [PASSED]

GNOME Desktop Manager can lock down specific settings by using the lockdown mode in dconf to prevent users from changing specific settings.

To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.

Setting a lock-out value reduces the window of opportunity for unauthorized user access to another user's session that has been left unattended.

Without locking down the system settings, user settings take precedence over the system settings.

Solution:
- To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/screensaver with the following content:

# Lock desktop screensaver settings
/org/gnome/desktop/session/idle-delay
/org/gnome/desktop/screensaver/lock-delay <xhtml:ol start=""2""> - Update the system databases:

# dconf update

Note: Users must log out and back in again before the system-wide settings take effect.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - GNOME Desktop Manager package is not installed on the system
  - Recommendation is not applicable","- To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/screensaver with the following content:

# Lock desktop screensaver settings
/org/gnome/desktop/session/idle-delay
/org/gnome/desktop/screensaver/lock-delay <xhtml:ol start=""2""> - Update the system databases:

# dconf update

Note: Users must log out and back in again before the system-wide settings take effect.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.6 Ensure GDM automatic mounting of removable media is disabled"" : [PASSED]

By default GNOME automatically mounts removable media when inserted as a convenience to the user.

With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves.

Solution:
- IF - GDM is installed:

Run the following script to disable automatic mounting of media for all GNOME users:

#!/usr/bin/env bash

{
   l_pkgoutput=""""
   l_gpname=""local"" # Set to desired dconf profile name (default is local)
   # Check if GNOME Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable

   # determine system's package manager
   if command -v dpkg-query > /dev/null 2>&amp;1; then
      l_pq=""dpkg-query -s""
   elif command -v rpm > /dev/null 2>&amp;1; then
      l_pq=""rpm -q""
   fi
   # Check if GDM is installed
   l_pcl=""gdm gdm3"" # Space seporated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq ""$l_pn"" > /dev/null 2>&amp;1 &amp;&amp; l_pkgoutput=""$l_pkgoutput
 - Package: \""$l_pn\"" exists on the system
 - checking configuration""
   done
   # Check configuration (If applicable)
   if [ -n ""$l_pkgoutput"" ]; then
      echo -e ""$l_pkgoutput""
      # Look for existing settings and set variables if they exist
      l_kfile=""$(grep -Prils -- '^h*automountb' /etc/dconf/db/*.d)""
      l_kfile2=""$(grep -Prils -- '^h*automount-openb' /etc/dconf/db/*.d)""
      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)
      if [ -f ""$l_kfile"" ]; then
         l_gpname=""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile"")""
         echo "" - updating dconf profile name to \""$l_gpname\""""
      elif [ -f ""$l_kfile2"" ]; then
         l_gpname=""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile2"")""
         echo "" - updating dconf profile name to \""$l_gpname\""""
      fi
      # check for consistency (Clean up configuration if needed)
      if [ -f ""$l_kfile"" ] &amp;&amp; [ ""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile"")"" != ""$l_gpname"" ]; then
         sed -ri ""/^s*automounts*=/s/^/# /"" ""$l_kfile""
         l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-automount""
      fi
      if [ -f ""$l_kfile2"" ] &amp;&amp; [ ""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile2"")"" != ""$l_gpname"" ]; then
         sed -ri ""/^s*automount-opens*=/s/^/# /"" ""$l_kfile2""
      fi
      [ -z ""$l_kfile"" ] &amp;&amp; l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-automount""
      # Check if profile file exists
      if grep -Pq -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*; then
         echo -e ""
 - dconf database profile exists in: \""$(grep -Pl -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*)\""""
      else
         if [ ! -f ""/etc/dconf/profile/user"" ]; then
            l_gpfile=""/etc/dconf/profile/user""
         else
            l_gpfile=""/etc/dconf/profile/user2""
         fi
         echo -e "" - creating dconf database profile""
         {
            echo -e ""
user-db:user""
            echo ""system-db:$l_gpname""
         } >> ""$l_gpfile""
      fi
      # create dconf directory if it doesn't exists
      l_gpdir=""/etc/dconf/db/$l_gpname.d""
      if [ -d ""$l_gpdir"" ]; then
         echo "" - The dconf database directory \""$l_gpdir\"" exists""
      else
         echo "" - creating dconf database directory \""$l_gpdir\""""
         mkdir ""$l_gpdir""
      fi
      # check automount-open setting
      if grep -Pqs -- '^h*automount-openh*=h*falseb' ""$l_kfile""; then
         echo "" - \""automount-open\"" is set to false in: \""$l_kfile\""""
      else
         echo "" - creating \""automount-open\"" entry in \""$l_kfile\""""
         ! grep -Psq -- '^h*[org/gnome/desktop/media-handling]b' ""$l_kfile"" &amp;&amp; echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
         sed -ri '/^s*[org/gnome/desktop/media-handling]/a \nautomount-open=false' ""$l_kfile""
      fi
      # check automount setting
      if grep -Pqs -- '^h*automounth*=h*falseb' ""$l_kfile""; then
         echo "" - \""automount\"" is set to false in: \""$l_kfile\""""
      else
         echo "" - creating \""automount\"" entry in \""$l_kfile\""""
         ! grep -Psq -- '^h*[org/gnome/desktop/media-handling]b' ""$l_kfile"" &amp;&amp; echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
         sed -ri '/^s*[org/gnome/desktop/media-handling]/a \nautomount=false' ""$l_kfile""
      fi
      # update dconf database
      dconf update
   else
      echo -e ""
 - GNOME Desktop Manager package is not installed on the system
 - Recommendation is not applicable""
   fi
}

Impact:

The use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - GNOME Desktop Manager package is not installed on the system
  - Recommendation is not applicable","- IF - GDM is installed:

Run the following script to disable automatic mounting of media for all GNOME users:

#!/usr/bin/env bash

{
   l_pkgoutput=""""
   l_gpname=""local"" # Set to desired dconf profile name (default is local)
   # Check if GNOME Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable

   # determine system's package manager
   if command -v dpkg-query > /dev/null 2>&amp;1; then
      l_pq=""dpkg-query -s""
   elif command -v rpm > /dev/null 2>&amp;1; then
      l_pq=""rpm -q""
   fi
   # Check if GDM is installed
   l_pcl=""gdm gdm3"" # Space seporated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq ""$l_pn"" > /dev/null 2>&amp;1 &amp;&amp; l_pkgoutput=""$l_pkgoutput
 - Package: \""$l_pn\"" exists on the system
 - checking configuration""
   done
   # Check configuration (If applicable)
   if [ -n ""$l_pkgoutput"" ]; then
      echo -e ""$l_pkgoutput""
      # Look for existing settings and set variables if they exist
      l_kfile=""$(grep -Prils -- '^h*automountb' /etc/dconf/db/*.d)""
      l_kfile2=""$(grep -Prils -- '^h*automount-openb' /etc/dconf/db/*.d)""
      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)
      if [ -f ""$l_kfile"" ]; then
         l_gpname=""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile"")""
         echo "" - updating dconf profile name to \""$l_gpname\""""
      elif [ -f ""$l_kfile2"" ]; then
         l_gpname=""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile2"")""
         echo "" - updating dconf profile name to \""$l_gpname\""""
      fi
      # check for consistency (Clean up configuration if needed)
      if [ -f ""$l_kfile"" ] &amp;&amp; [ ""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile"")"" != ""$l_gpname"" ]; then
         sed -ri ""/^s*automounts*=/s/^/# /"" ""$l_kfile""
         l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-automount""
      fi
      if [ -f ""$l_kfile2"" ] &amp;&amp; [ ""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile2"")"" != ""$l_gpname"" ]; then
         sed -ri ""/^s*automount-opens*=/s/^/# /"" ""$l_kfile2""
      fi
      [ -z ""$l_kfile"" ] &amp;&amp; l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-automount""
      # Check if profile file exists
      if grep -Pq -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*; then
         echo -e ""
 - dconf database profile exists in: \""$(grep -Pl -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*)\""""
      else
         if [ ! -f ""/etc/dconf/profile/user"" ]; then
            l_gpfile=""/etc/dconf/profile/user""
         else
            l_gpfile=""/etc/dconf/profile/user2""
         fi
         echo -e "" - creating dconf database profile""
         {
            echo -e ""
user-db:user""
            echo ""system-db:$l_gpname""
         } >> ""$l_gpfile""
      fi
      # create dconf directory if it doesn't exists
      l_gpdir=""/etc/dconf/db/$l_gpname.d""
      if [ -d ""$l_gpdir"" ]; then
         echo "" - The dconf database directory \""$l_gpdir\"" exists""
      else
         echo "" - creating dconf database directory \""$l_gpdir\""""
         mkdir ""$l_gpdir""
      fi
      # check automount-open setting
      if grep -Pqs -- '^h*automount-openh*=h*falseb' ""$l_kfile""; then
         echo "" - \""automount-open\"" is set to false in: \""$l_kfile\""""
      else
         echo "" - creating \""automount-open\"" entry in \""$l_kfile\""""
         ! grep -Psq -- '^h*[org/gnome/desktop/media-handling]b' ""$l_kfile"" &amp;&amp; echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
         sed -ri '/^s*[org/gnome/desktop/media-handling]/a \nautomount-open=false' ""$l_kfile""
      fi
      # check automount setting
      if grep -Pqs -- '^h*automounth*=h*falseb' ""$l_kfile""; then
         echo "" - \""automount\"" is set to false in: \""$l_kfile\""""
      else
         echo "" - creating \""automount\"" entry in \""$l_kfile\""""
         ! grep -Psq -- '^h*[org/gnome/desktop/media-handling]b' ""$l_kfile"" &amp;&amp; echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
         sed -ri '/^s*[org/gnome/desktop/media-handling]/a \nautomount=false' ""$l_kfile""
      fi
      # update dconf database
      dconf update
   else
      echo -e ""
 - GNOME Desktop Manager package is not installed on the system
 - Recommendation is not applicable""
   fi
}

Impact:

The use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.7 Ensure GDM disabling automatic mounting of removable media is not overridden"" : [PASSED]

By default GNOME automatically mounts removable media when inserted as a convenience to the user.

By using the lockdown mode in dconf, you can prevent users from changing specific settings. To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.

With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves.

Solution:
- To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/00-media-automount with the following content:

[org/gnome/desktop/media-handling]
automount=false
automount-open=false <xhtml:ol start=""2""> - Update the systems databases:

# dconf update

Impact:

The use of portable hard drives is very common for workstation users

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|MP-2,800-53r5|MP-2,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - GNOME Desktop Manager package is not installed on the system
  - Recommendation is not applicable","- To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/00-media-automount with the following content:

[org/gnome/desktop/media-handling]
automount=false
automount-open=false <xhtml:ol start=""2""> - Update the systems databases:

# dconf update

Impact:

The use of portable hard drives is very common for workstation users","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.8 Ensure GDM autorun-never is enabled"" : [PASSED]

The autorun-never setting allows the GNOME Desktop Display Manager to disable autorun through GDM.

Malware on removable media may taking advantage of Autorun features when the media is inserted into a system and execute.

Solution:
- IF - GDM is installed:

Run the following script to set autorun-never to true for GDM users:

#!/usr/bin/env bash

{
   l_pkgoutput="""" l_output="""" l_output2=""""
   l_gpname=""local"" # Set to desired dconf profile name (default is local)
   # Check if GNOME Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable

   # determine system's package manager
   if command -v dpkg-query &amp;> /dev/null; then
      l_pq=""dpkg-query -s""
   elif command -v rpm &amp;> /dev/null; then
      l_pq=""rpm -q""
   fi
   # Check if GDM is installed
   l_pcl=""gdm gdm3"" # Space separated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq ""$l_pn"" &amp;> /dev/null &amp;&amp; l_pkgoutput=""$l_pkgoutput
 - Package: \""$l_pn\"" exists on the system
 - checking configuration""
   done
   echo -e ""$l_pkgoutput""
   # Check configuration (If applicable)
   if [ -n ""$l_pkgoutput"" ]; then
      echo -e ""$l_pkgoutput""
      # Look for existing settings and set variables if they exist
      l_kfile=""$(grep -Prils -- '^h*autorun-neverb' /etc/dconf/db/*.d)""
      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)
      if [ -f ""$l_kfile"" ]; then
         l_gpname=""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile"")""
         echo "" - updating dconf profile name to \""$l_gpname\""""
      fi
      [ ! -f ""$l_kfile"" ] &amp;&amp; l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-autorun""
      # Check if profile file exists
      if grep -Pq -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*; then
         echo -e ""
 - dconf database profile exists in: \""$(grep -Pl -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*)\""""
      else
         [ ! -f ""/etc/dconf/profile/user"" ] &amp;&amp; l_gpfile=""/etc/dconf/profile/user"" || l_gpfile=""/etc/dconf/profile/user2""
         echo -e "" - creating dconf database profile""
         {
            echo -e ""
user-db:user""
            echo ""system-db:$l_gpname""
         } >> ""$l_gpfile""
      fi
      # create dconf directory if it doesn't exists
      l_gpdir=""/etc/dconf/db/$l_gpname.d""
      if [ -d ""$l_gpdir"" ]; then
         echo "" - The dconf database directory \""$l_gpdir\"" exists""
      else
         echo "" - creating dconf database directory \""$l_gpdir\""""
         mkdir ""$l_gpdir""
      fi
      # check autorun-never setting
      if grep -Pqs -- '^h*autorun-neverh*=h*trueb' ""$l_kfile""; then
         echo "" - \""autorun-never\"" is set to true in: \""$l_kfile\""""
      else
         echo "" - creating or updating \""autorun-never\"" entry in \""$l_kfile\""""
         if grep -Psq -- '^h*autorun-never' ""$l_kfile""; then
            sed -ri 's/(^s*autorun-nevers*=s*)(S+)(s*.*)$/1true 3/' ""$l_kfile""
         else
            ! grep -Psq -- '^h*[org/gnome/desktop/media-handling]b' ""$l_kfile"" &amp;&amp; echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
            sed -ri '/^s*[org/gnome/desktop/media-handling]/a \nautorun-never=true' ""$l_kfile""
         fi
      fi
   else
      echo -e ""
 - GNOME Desktop Manager package is not installed on the system
 - Recommendation is not applicable""
   fi
   # update dconf database
   dconf update
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - GNOME Desktop Manager package is not installed on the system
  - Recommendation is not applicable","- IF - GDM is installed:

Run the following script to set autorun-never to true for GDM users:

#!/usr/bin/env bash

{
   l_pkgoutput="""" l_output="""" l_output2=""""
   l_gpname=""local"" # Set to desired dconf profile name (default is local)
   # Check if GNOME Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable

   # determine system's package manager
   if command -v dpkg-query &amp;> /dev/null; then
      l_pq=""dpkg-query -s""
   elif command -v rpm &amp;> /dev/null; then
      l_pq=""rpm -q""
   fi
   # Check if GDM is installed
   l_pcl=""gdm gdm3"" # Space separated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq ""$l_pn"" &amp;> /dev/null &amp;&amp; l_pkgoutput=""$l_pkgoutput
 - Package: \""$l_pn\"" exists on the system
 - checking configuration""
   done
   echo -e ""$l_pkgoutput""
   # Check configuration (If applicable)
   if [ -n ""$l_pkgoutput"" ]; then
      echo -e ""$l_pkgoutput""
      # Look for existing settings and set variables if they exist
      l_kfile=""$(grep -Prils -- '^h*autorun-neverb' /etc/dconf/db/*.d)""
      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)
      if [ -f ""$l_kfile"" ]; then
         l_gpname=""$(awk -F/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile"")""
         echo "" - updating dconf profile name to \""$l_gpname\""""
      fi
      [ ! -f ""$l_kfile"" ] &amp;&amp; l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-autorun""
      # Check if profile file exists
      if grep -Pq -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*; then
         echo -e ""
 - dconf database profile exists in: \""$(grep -Pl -- ""^h*system-db:$l_gpnameb"" /etc/dconf/profile/*)\""""
      else
         [ ! -f ""/etc/dconf/profile/user"" ] &amp;&amp; l_gpfile=""/etc/dconf/profile/user"" || l_gpfile=""/etc/dconf/profile/user2""
         echo -e "" - creating dconf database profile""
         {
            echo -e ""
user-db:user""
            echo ""system-db:$l_gpname""
         } >> ""$l_gpfile""
      fi
      # create dconf directory if it doesn't exists
      l_gpdir=""/etc/dconf/db/$l_gpname.d""
      if [ -d ""$l_gpdir"" ]; then
         echo "" - The dconf database directory \""$l_gpdir\"" exists""
      else
         echo "" - creating dconf database directory \""$l_gpdir\""""
         mkdir ""$l_gpdir""
      fi
      # check autorun-never setting
      if grep -Pqs -- '^h*autorun-neverh*=h*trueb' ""$l_kfile""; then
         echo "" - \""autorun-never\"" is set to true in: \""$l_kfile\""""
      else
         echo "" - creating or updating \""autorun-never\"" entry in \""$l_kfile\""""
         if grep -Psq -- '^h*autorun-never' ""$l_kfile""; then
            sed -ri 's/(^s*autorun-nevers*=s*)(S+)(s*.*)$/1true 3/' ""$l_kfile""
         else
            ! grep -Psq -- '^h*[org/gnome/desktop/media-handling]b' ""$l_kfile"" &amp;&amp; echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
            sed -ri '/^s*[org/gnome/desktop/media-handling]/a \nautorun-never=true' ""$l_kfile""
         fi
      fi
   else
      echo -e ""
 - GNOME Desktop Manager package is not installed on the system
 - Recommendation is not applicable""
   fi
   # update dconf database
   dconf update
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""1.7.9 Ensure GDM autorun-never is not overridden"" : [PASSED]

The autorun-never setting allows the GNOME Desktop Display Manager to disable autorun through GDM.

By using the lockdown mode in dconf, you can prevent users from changing specific settings.

To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.

Malware on removable media may taking advantage of Autorun features when the media is inserted into a system and execute.

Solution:
- To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/00-media-autorun with the following content:

[org/gnome/desktop/media-handling]
autorun-never=true <xhtml:ol start=""2""> - Update the systems databases:

# dconf update

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - [org/gnome/desktop/media-handling] setting not found in /etc/dconf/db/*","- To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/00-media-autorun with the following content:

[org/gnome/desktop/media-handling]
autorun-never=true <xhtml:ol start=""2""> - Update the systems databases:

# dconf update","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.1 Ensure autofs services are not in use"" : [PASSED]

autofs allows automatic mounting of devices, typically including CD/DVDs and USB drives.

With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in the filesystem even if they lacked permissions to mount it themselves.

Solution:
Run the following commands to stop autofs.service and remove the autofs package:

# systemctl stop autofs.service
# apt purge autofs

- OR -

- IF - the autofs package is required as a dependency:

Run the following commands to stop and mask autofs.service :

# systemctl stop autofs.service
# systemctl mask autofs.service

Impact:

The use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting.

There may be packages that are dependent on the autofs package. If the autofs package is removed, these dependent packages will be removed as well. Before removing the autofs package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the autofs.service leaving the autofs package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1

Policy Value:
cmd: /bin/dpkg -s autofs 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s autofs 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'autofs' is not installed and no information is available","Run the following commands to stop autofs.service and remove the autofs package:

# systemctl stop autofs.service
# apt purge autofs

- OR -

- IF - the autofs package is required as a dependency:

Run the following commands to stop and mask autofs.service :

# systemctl stop autofs.service
# systemctl mask autofs.service

Impact:

The use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting.

There may be packages that are dependent on the autofs package. If the autofs package is removed, these dependent packages will be removed as well. Before removing the autofs package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the autofs.service leaving the autofs package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.10 Ensure nis server services are not in use"" : [PASSED]

The Network Information Service (NIS) (formally known as Yellow Pages) is a client-server directory service protocol for distributing system configuration files. The NIS server is a collection of programs that allow for the distribution of configuration files. The NIS client ( ypbind ) was used to bind a machine to an NIS server and receive the distributed configuration files.

ypserv.service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that ypserv.service be removed and other, more secure services be used

Solution:
Run the following commands to stop ypserv.service and remove ypserv package:

# systemctl stop ypserv.service
# apt purge ypserv

- OR -

- IF - the ypserv package is required as a dependency:

Run the following commands to stop and mask ypserv.service :

# systemctl stop ypserv.service
# systemctl mask ypserv.service

Impact:

There may be packages that are dependent on the ypserv package. If the ypserv package is removed, these dependent packages will be removed as well. Before removing the ypserv package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the ypserv.service leaving the ypserv package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s ypserv 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s ypserv 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'ypserv' is not installed and no information is available","Run the following commands to stop ypserv.service and remove ypserv package:

# systemctl stop ypserv.service
# apt purge ypserv

- OR -

- IF - the ypserv package is required as a dependency:

Run the following commands to stop and mask ypserv.service :

# systemctl stop ypserv.service
# systemctl mask ypserv.service

Impact:

There may be packages that are dependent on the ypserv package. If the ypserv package is removed, these dependent packages will be removed as well. Before removing the ypserv package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the ypserv.service leaving the ypserv package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.11 Ensure print server services are not in use"" : [PASSED]

The Common Unix Print System (CUPS) provides the ability to print to both local and network printers. A system running CUPS can also accept print jobs from remote systems and print them to local printers. It also provides a web based remote administration capability.

If the system does not need to print jobs or accept print jobs from other systems, it is recommended that CUPS be removed to reduce the potential attack surface.

Solution:
Run the following commands to stop cups.socket and cups.service and remove the cups package:

# systemctl stop cups.socket cups.service
# apt purge cups

- OR -

- IF - the cups package is required as a dependency:

Run the following commands to stop and mask the cups.socket and cups.service :

# systemctl stop cups.socket cups.service
# systemctl mask cups.socket cups.service

Impact:

Removing the cups package, or disabling cups.socket and/or cups.service will prevent printing from the system, a common task for workstation systems.

There may be packages that are dependent on the cups package. If the cups package is removed, these dependent packages will be removed as well. Before removing the cups package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask cups.socket and cups.service leaving the cups package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s cups 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s cups 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'cups' is not installed and no information is available","Run the following commands to stop cups.socket and cups.service and remove the cups package:

# systemctl stop cups.socket cups.service
# apt purge cups

- OR -

- IF - the cups package is required as a dependency:

Run the following commands to stop and mask the cups.socket and cups.service :

# systemctl stop cups.socket cups.service
# systemctl mask cups.socket cups.service

Impact:

Removing the cups package, or disabling cups.socket and/or cups.service will prevent printing from the system, a common task for workstation systems.

There may be packages that are dependent on the cups package. If the cups package is removed, these dependent packages will be removed as well. Before removing the cups package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask cups.socket and cups.service leaving the cups package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.12 Ensure rpcbind services are not in use"" : [PASSED]

The rpcbind utility maps RPC services to the ports on which they listen. RPC processes notify rpcbind when they start, registering the ports they are listening on and the RPC program numbers they expect to serve. The client system then contacts rpcbind on the server with a particular RPC program number. The rpcbind.service redirects the client to the proper port number so it can communicate with the requested service.

Portmapper is an RPC service, which always listens on tcp and udp 111, and is used to map other RPC services (such as nfs, nlockmgr, quotad, mountd, etc.) to their corresponding port number on the server. When a remote host makes an RPC call to that server, it first consults with portmap to determine where the RPC server is listening.

A small request (~82 bytes via UDP) sent to the Portmapper generates a large response (7x to 28x amplification), which makes it a suitable tool for DDoS attacks. If rpcbind is not required, it is recommended to remove rpcbind package to reduce the potential attack surface.

Solution:
Run the following commands to stop rpcbind.socket and rpcbind.service and remove the rpcbind package:

# systemctl stop rpcbind.socket rpcbind.service
# apt purge rpcbind

- OR -

- IF - the rpcbind package is required as a dependency:

Run the following commands to stop and mask the rpcbind.socket and rpcbind.service :

# systemctl stop rpcbind.socket rpcbind.service
# systemctl mask rpcbind.socket rpcbind.service

Impact:

Many of the libvirt packages used by Enterprise Linux virtualization, and the nfs-utils package used for The Network File System (NFS), are dependent on the rpcbind package. If the rpcbind package is removed, these dependent packages will be removed as well. Before removing the rpcbind package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the rpcbind.socket and rpcbind.service leaving the rpcbind package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s rpcbind 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s rpcbind 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'rpcbind' is not installed and no information is available","Run the following commands to stop rpcbind.socket and rpcbind.service and remove the rpcbind package:

# systemctl stop rpcbind.socket rpcbind.service
# apt purge rpcbind

- OR -

- IF - the rpcbind package is required as a dependency:

Run the following commands to stop and mask the rpcbind.socket and rpcbind.service :

# systemctl stop rpcbind.socket rpcbind.service
# systemctl mask rpcbind.socket rpcbind.service

Impact:

Many of the libvirt packages used by Enterprise Linux virtualization, and the nfs-utils package used for The Network File System (NFS), are dependent on the rpcbind package. If the rpcbind package is removed, these dependent packages will be removed as well. Before removing the rpcbind package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the rpcbind.socket and rpcbind.service leaving the rpcbind package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.13 Ensure rsync services are not in use"" : [FAILED]

The rsync service can be used to synchronize files between systems over network links.

rsync.service presents a security risk as the rsync protocol is unencrypted.

The rsync package should be removed to reduce the attack area of the system.

Solution:
Run the following commands to stop rsync.service and remove the rsync package:

# systemctl stop rsync.service
# apt purge rsync

- OR -

- IF - the rsync package is required as a dependency:

Run the following commands to stop and mask rsync.service :

# systemctl stop rsync.service
# systemctl mask rsync.service

Impact:

There may be packages that are dependent on the rsync package. If the rsync package is removed, these dependent packages will be removed as well. Before removing the rsync package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask rsync.service leaving the rsync package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - active
The command '/bin/systemctl is-active rsync.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print ""pass"" ; else print ""fail""}'' returned : 

pass

-------------------------
FAILED - enabled
The command '/bin/systemctl is-enabled rsync.service 2>/dev/null | /bin/grep '^enabled' | /bin/awk '{print} END {if (NR == 0) print ""pass"" ; else print ""fail""}'' returned : 

enabled
fail","Run the following commands to stop rsync.service and remove the rsync package:

# systemctl stop rsync.service
# apt purge rsync

- OR -

- IF - the rsync package is required as a dependency:

Run the following commands to stop and mask rsync.service :

# systemctl stop rsync.service
# systemctl mask rsync.service

Impact:

There may be packages that are dependent on the rsync package. If the rsync package is removed, these dependent packages will be removed as well. Before removing the rsync package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask rsync.service leaving the rsync package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.14 Ensure samba file server services are not in use"" : [PASSED]

The Samba daemon allows system administrators to configure their Linux systems to share file systems and directories with Windows desktops. Samba will advertise the file systems and directories via the Server Message Block (SMB) protocol. Windows desktop users will be able to mount these directories and file systems as letter drives on their systems.

If there is no need to mount directories and file systems to Windows systems, then this service should be deleted to reduce the potential attack surface.

Solution:
Run the following commands to stop smbd.service and remove samba package:

# systemctl stop smbd.service
# apt purge samba

- OR -

- IF - the samba package is required as a dependency:

Run the following commands to stop and mask the smbd.service :

# systemctl stop smbd.service
# systemctl mask smbd.service

Impact:

There may be packages that are dependent on the samba package. If the samba package is removed, these dependent packages will be removed as well. Before removing the samba package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the smbd.service leaving the samba package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s samba 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s samba 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'samba' is not installed and no information is available","Run the following commands to stop smbd.service and remove samba package:

# systemctl stop smbd.service
# apt purge samba

- OR -

- IF - the samba package is required as a dependency:

Run the following commands to stop and mask the smbd.service :

# systemctl stop smbd.service
# systemctl mask smbd.service

Impact:

There may be packages that are dependent on the samba package. If the samba package is removed, these dependent packages will be removed as well. Before removing the samba package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the smbd.service leaving the samba package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.15 Ensure snmp services are not in use"" : [PASSED]

Simple Network Management Protocol (SNMP) is a widely used protocol for monitoring the health and welfare of network equipment, computer equipment and devices like UPSs.

Net-SNMP is a suite of applications used to implement SNMPv1 (RFC 1157), SNMPv2 (RFCs 1901-1908), and SNMPv3 (RFCs 3411-3418) using both IPv4 and IPv6.

Support for SNMPv2 classic (a.k.a. ""SNMPv2 historic"" - RFCs 1441-1452) was dropped with the 4.0 release of the UCD-snmp package.

The Simple Network Management Protocol (SNMP) server is used to listen for SNMP commands from an SNMP management system, execute the commands or collect the information and then send results back to the requesting system.

The SNMP server can communicate using SNMPv1 which transmits data in the clear and does not require authentication to execute commands. SNMPv3 replaces the simple/clear text password sharing used in SNMPv2 with more securely encoded parameters. If the the SNMP service is not required, the snmpd package should be removed to reduce the attack surface of the system.

Note: If SNMP is required:

 - The server should be configured for SNMP v3 only. User Authentication and Message Encryption should be configured.
 - If SNMP v2 is absolutely necessary, modify the community strings' values.

Solution:
Run the following commands to stop snmpd.service and remove the snmpd package:

# systemctl stop snmpd.service
# apt purge snmpd

- OR - If the package is required for dependencies:

Run the following commands to stop and mask the snmpd.service :

# systemctl stop snmpd.service
# systemctl mask snmpd.service

Impact:

There may be packages that are dependent on the snmpd package. If the snmpd package is removed, these packages will be removed as well.

Before removing the snmpd package, review any dependent packages to determine if they are required on the system. If a dependent package is required, stop and mask the snmpd.service leaving the snmpd package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s snmpd 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s snmpd 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'snmpd' is not installed and no information is available","Run the following commands to stop snmpd.service and remove the snmpd package:

# systemctl stop snmpd.service
# apt purge snmpd

- OR - If the package is required for dependencies:

Run the following commands to stop and mask the snmpd.service :

# systemctl stop snmpd.service
# systemctl mask snmpd.service

Impact:

There may be packages that are dependent on the snmpd package. If the snmpd package is removed, these packages will be removed as well.

Before removing the snmpd package, review any dependent packages to determine if they are required on the system. If a dependent package is required, stop and mask the snmpd.service leaving the snmpd package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.16 Ensure tftp server services are not in use"" : [PASSED]

Trivial File Transfer Protocol (TFTP) is a simple protocol for exchanging files between two TCP/IP machines. TFTP servers allow connections from a TFTP Client for sending and receiving files.

Unless there is a need to run the system as a TFTP server, it is recommended that the package be removed to reduce the potential attack surface.

TFTP does not have built-in encryption, access control or authentication. This makes it very easy for an attacker to exploit TFTP to gain access to files

Solution:
Run the following commands to stop tftpd-hpa.service and remove the tftpd-hpa package:

# systemctl stop tftpd-hpa.service
# apt purge tftpd-hpa

- OR -

- IF - the tftpd-hpa package is required as a dependency:

Run the following commands to stop and mask tftpd-hpa.service :

# systemctl stop tftpd-hpa.service
# systemctl mask tftpd-hpa.service

Impact:

TFTP is often used to provide files for network booting such as for PXE based installation of servers.

There may be packages that are dependent on the tftpd-hpa package. If the tftpd-hpa package is removed, these dependent packages will be removed as well. Before removing the tftpd-hpa package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask tftpd-hpa.service leaving the tftpd-hpa package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s tftpd-hpa 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s tftpd-hpa 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'tftpd-hpa' is not installed and no information is available","Run the following commands to stop tftpd-hpa.service and remove the tftpd-hpa package:

# systemctl stop tftpd-hpa.service
# apt purge tftpd-hpa

- OR -

- IF - the tftpd-hpa package is required as a dependency:

Run the following commands to stop and mask tftpd-hpa.service :

# systemctl stop tftpd-hpa.service
# systemctl mask tftpd-hpa.service

Impact:

TFTP is often used to provide files for network booting such as for PXE based installation of servers.

There may be packages that are dependent on the tftpd-hpa package. If the tftpd-hpa package is removed, these dependent packages will be removed as well. Before removing the tftpd-hpa package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask tftpd-hpa.service leaving the tftpd-hpa package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.17 Ensure web proxy server services are not in use"" : [PASSED]

Squid is a standard proxy server used in many distributions and environments.

Unless a system is specifically set up to act as a proxy server, it is recommended that the squid package be removed to reduce the potential attack surface.

Note: Several HTTP proxy servers exist. These should be checked and removed unless required.

Solution:
Run the following commands to stop squid.service and remove the squid package:

# systemctl stop squid.service
# apt purge squid

- OR - If the squid package is required as a dependency:

Run the following commands to stop and mask the squid.service :

# systemctl stop squid.service
# systemctl mask squid.service

Impact:

There may be packages that are dependent on the squid package. If the squid package is removed, these dependent packages will be removed as well. Before removing the squid package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the squid.service leaving the squid package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s squid 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s squid 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'squid' is not installed and no information is available","Run the following commands to stop squid.service and remove the squid package:

# systemctl stop squid.service
# apt purge squid

- OR - If the squid package is required as a dependency:

Run the following commands to stop and mask the squid.service :

# systemctl stop squid.service
# systemctl mask squid.service

Impact:

There may be packages that are dependent on the squid package. If the squid package is removed, these dependent packages will be removed as well. Before removing the squid package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the squid.service leaving the squid package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.18 Ensure web server services are not in use"" : [PASSED]

Web servers provide the ability to host web site content.

Unless there is a local site approved requirement to run a web server service on the system, web server packages should be removed to reduce the potential attack surface.

Solution:
Run the following commands to stop httpd.socket httpd.service and nginx.service and remove httpd and nginx packages:

# systemctl stop apache2.socket httpd.service nginx.service
# apt purge apache2 nginx

- OR -

- IF - a package is installed and is required for dependencies:

Run the following commands to stop and mask apache2.socket apache2.service and nginx.service :

# systemctl stop apache2.socket apache2.service nginx.service
# systemctl mask apache2.socket apache2.service nginx.service

Note: Other web server packages may exist. If not required and authorized by local site policy, they should also be removed. If the package is required for a dependency, the service and socket should be stopped and masked.

Impact:

Removal of web server packages will remove that ability for the server to host web services.

- IF - the web server package is required for a dependency, any related service or socket should be stopped and masked.

Note: If the remediation steps to mask a service are followed and that package is not installed on the system, the service and/or socket will still be masked. If the package is installed due to an approved requirement to host a web server, the associated service and/or socket would need to be unmasked before it could be enabled and/or started.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
PASSED","Run the following commands to stop httpd.socket httpd.service and nginx.service and remove httpd and nginx packages:

# systemctl stop apache2.socket httpd.service nginx.service
# apt purge apache2 nginx

- OR -

- IF - a package is installed and is required for dependencies:

Run the following commands to stop and mask apache2.socket apache2.service and nginx.service :

# systemctl stop apache2.socket apache2.service nginx.service
# systemctl mask apache2.socket apache2.service nginx.service

Note: Other web server packages may exist. If not required and authorized by local site policy, they should also be removed. If the package is required for a dependency, the service and socket should be stopped and masked.

Impact:

Removal of web server packages will remove that ability for the server to host web services.

- IF - the web server package is required for a dependency, any related service or socket should be stopped and masked.

Note: If the remediation steps to mask a service are followed and that package is not installed on the system, the service and/or socket will still be masked. If the package is installed due to an approved requirement to host a web server, the associated service and/or socket would need to be unmasked before it could be enabled and/or started.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.19 Ensure xinetd services are not in use"" : [PASSED]

The X Window System provides a Graphical User Interface (GUI) where users can have multiple windows in which to run programs and various add on. The X Windows system is typically used on workstations where users login, but not on servers where users typically do not login.

Unless your organization specifically requires graphical login access via X Windows, remove it to reduce the potential attack surface.

Solution:
Run the following commands to stop xinetd.service and remove the xinetd package:

# systemctl stop xinetd.service
# apt purge xinetd

-OR-

-IF- the xinetd package is required as a dependency:

Run the following commands to stop and mask the xinetd.service :

# systemctl stop xinetd.service
# systemctl mask xinetd.service

Impact:

There may be packages that are dependent on the xinetd package. If the xinetd package is removed, these dependent packages will be removed as well. Before removing the xinetd package, review any dependent packages to determine if they are required on the system.

-IF- a dependent package is required: stop and mask xinetd.service leaving the xinetd package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s xinetd 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s xinetd 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'xinetd' is not installed and no information is available","Run the following commands to stop xinetd.service and remove the xinetd package:

# systemctl stop xinetd.service
# apt purge xinetd

-OR-

-IF- the xinetd package is required as a dependency:

Run the following commands to stop and mask the xinetd.service :

# systemctl stop xinetd.service
# systemctl mask xinetd.service

Impact:

There may be packages that are dependent on the xinetd package. If the xinetd package is removed, these dependent packages will be removed as well. Before removing the xinetd package, review any dependent packages to determine if they are required on the system.

-IF- a dependent package is required: stop and mask xinetd.service leaving the xinetd package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.2 Ensure avahi daemon services are not in use"" : [PASSED]

Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD service discovery. Avahi allows programs to publish and discover services and hosts running on a local network with no specific configuration. For example, a user can plug a computer into a network and Avahi automatically finds printers to print to, files to look at and people to talk to, as well as network services running on the machine.

Automatic discovery of network services is not normally required for system functionality. It is recommended to remove this package to reduce the potential attack surface.

Solution:
Run the following commands to stop avahi-daemon.socket and avahi-daemon.service and remove the avahi-daemon package:

# systemctl stop avahi-daemon.socket avahi-daemon.service
# apt purge avahi-daemon

- OR -

- IF - the avahi-daemon package is required as a dependency:

Run the following commands to stop and mask the avahi-daemon.socket and avahi-daemon.service :

# systemctl stop avahi-daemon.socket avahi-daemon.service
# systemctl mask avahi-daemon.socket avahi-daemon.service

Impact:

There may be packages that are dependent on the avahi package. If the avahi package is removed, these dependent packages will be removed as well. Before removing the avahi package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the avahi-daemon.socket and avahi-daemon.service leaving the avahi package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s avahi-daemon 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s avahi-daemon 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'avahi-daemon' is not installed and no information is available","Run the following commands to stop avahi-daemon.socket and avahi-daemon.service and remove the avahi-daemon package:

# systemctl stop avahi-daemon.socket avahi-daemon.service
# apt purge avahi-daemon

- OR -

- IF - the avahi-daemon package is required as a dependency:

Run the following commands to stop and mask the avahi-daemon.socket and avahi-daemon.service :

# systemctl stop avahi-daemon.socket avahi-daemon.service
# systemctl mask avahi-daemon.socket avahi-daemon.service

Impact:

There may be packages that are dependent on the avahi package. If the avahi package is removed, these dependent packages will be removed as well. Before removing the avahi package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the avahi-daemon.socket and avahi-daemon.service leaving the avahi package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.21 Ensure mail transfer agent is configured for local-only mode"" : [PASSED]

Mail Transfer Agents (MTA), such as sendmail and Postfix, are used to listen for incoming mail and transfer the messages to the appropriate user or mail server. If the system is not intended to be a mail server, it is recommended that the MTA be configured to only process local mail.

The software for all Mail Transfer Agents is complex and most have a long history of security issues. While it is important to ensure that the system can process local mail messages, it is not necessary to have the MTA's daemon listening on a port unless the server is intended to be a mail server that receives and processes mail from other systems.

Solution:
Edit /etc/postfix/main.cf and add the following line to the RECEIVING MAIL section. If the line already exists, change it to look like the line below:

inet_interfaces = loopback-only

Run the following command to restart postfix :

# systemctl restart postfix

Note:

 - This recommendation is designed around the postfix mail server.
 - Depending on your environment you may have an alternative MTA installed such as exim4. If this is the case consult the documentation for your installed MTA to configure the recommended state.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

/bin/bash: line 9: postconf: command not found

- Audit Result:
  ** PASS **

 - Port ""25"" is not listening on a non-loopback network interface
 - Port ""465"" is not listening on a non-loopback network interface
 - Port ""587"" is not listening on a non-loopback network interface","Edit /etc/postfix/main.cf and add the following line to the RECEIVING MAIL section. If the line already exists, change it to look like the line below:

inet_interfaces = loopback-only

Run the following command to restart postfix :

# systemctl restart postfix

Note:

 - This recommendation is designed around the postfix mail server.
 - Depending on your environment you may have an alternative MTA installed such as exim4. If this is the case consult the documentation for your installed MTA to configure the recommended state.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.22 Ensure only approved services are listening on a network interface"" : [WARNING]

A network port is identified by its number, the associated IP address, and the type of the communication protocol such as TCP or UDP.

A listening port is a network port on which an application or process listens on, acting as a communication endpoint.

Each listening port can be open or closed (filtered) using a firewall. In general terms, an open port is a network port that accepts incoming packets from remote locations.

Services listening on the system pose a potential risk as an attack vector. These services should be reviewed, and if not required, the service should be stopped, and the package containing the service should be removed. If required packages have a dependency, the service should be stopped and masked to reduce the attack surface of the system.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Run the following commands to stop the service and remove the package containing the service:

# systemctl stop <service_name>.socket <service_name>.service
# apt purge <package_name>

- OR - If required packages have a dependency:

Run the following commands to stop and mask the service and socket:

# systemctl stop <service_name>.socket <service_name>.service
# systemctl mask <service_name>.socket <service_name>.service

Note: replace <service_name> with the appropriate service name.

Impact:

There may be packages that are dependent on the service's package. If the service's package is removed, these dependent packages will be removed as well. Before removing the service's package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the <service_name>.socket and <service_name>.service leaving the service's package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/ss -plntu
expect: ^Manual Review Required$

Actual Value:
The command '/bin/ss -plntu' returned : 

Netid State  Recv-Q Send-Q Local Address:Port  Peer Address:PortProcess                                     
udp   UNCONN 0      0      127.0.0.53%lo:53         0.0.0.0:*    users:((""systemd-resolve"",pid=603,fd=13))  
udp   UNCONN 0      0      192.168.112.1:443        0.0.0.0:*    users:((""caddy"",pid=239110,fd=19))         
udp   UNCONN 0      0        198.18.30.3:443        0.0.0.0:*    users:((""caddy"",pid=239110,fd=10))         
udp   UNCONN 0      0          127.0.0.1:443        0.0.0.0:*    users:((""caddy"",pid=239110,fd=8))          
udp   UNCONN 0      0            0.0.0.0:30041      0.0.0.0:*    users:((""scion-all"",pid=241025,fd=3))      
udp   UNCONN 0      0      192.168.112.1:30042      0.0.0.0:*    users:((""vpp_main"",pid=240906,fd=67))      
udp   UNCONN 0      0            0.0.0.0:51021      0.0.0.0:*                                               
udp   UNCONN 0      0               [::]:30041         [::]:*    users:((""scion-all"",pid=241025,fd=7))      
udp   UNCONN 0      0               [::]:51021         [::]:*                                               
tcp   LISTEN 0      4096       127.0.0.1:41301      0.0.0.0:*    users:((""scion-all"",pid=240748,fd=14))     
tcp   LISTEN 0      4096       127.0.0.1:41300      0.0.0.0:*    users:((""scion-all"",pid=240748,fd=13))     
tcp   LISTEN 0      4096       127.0.0.1:41302      0.0.0.0:*    users:((""scion-all"",pid=240748,fd=12))     
tcp   LISTEN 0      4096     198.18.30.3:80         0.0.0.0:*    users:((""caddy"",pid=239110,fd=13))         
tcp   LISTEN 0      4096       127.0.0.1:41401      0.0.0.0:*    users:((""scion-all"",pid=241025,fd=9))      
tcp   LISTEN 0      4096       127.0.0.1:41400      0.0.0.0:*    users:((""scion-all"",pid=241025,fd=10))     
tcp   LISTEN 0      4096       127.0.0.1:443        0.0.0.0:*    users:((""caddy"",pid=239110,fd=7))          
tcp   LISTEN 0      4096       127.0.0.1:41001      0.0.0.0:*    users:((""scion-all"",pid=240671,fd=19))     
tcp   LISTEN 0      4096       127.0.0.1:41000      0.0.0.0:*    users:((""scion-all"",pid=240671,fd=20))     
tcp   LISTEN 0      4096       127.0.0.1:41201      0.0.0.0:*    users:((""scion-all"",pid=240990,fd=10))     
tcp   LISTEN 0      4096       127.0.0.1:41200      0.0.0.0:*    users:((""scion-all"",pid=240990,fd=11))     
tcp   LISTEN 0      4096     198.18.30.3:443        0.0.0.0:*    users:((""caddy"",pid=239110,fd=9))          
tcp   LISTEN 0      4096       127.0.0.1:41101      0.0.0.0:*    users:((""scion-all"",pid=240690,fd=9))      
tcp   LISTEN 0      4096       127.0.0.1:41100      0.0.0.0:*    users:((""scion-all"",pid=240690,fd=8))      
tcp   LISTEN 0      4096       127.0.0.1:9080       0.0.0.0:*    users:((""promtail"",pid=241046,fd=7))       
tcp   LISTEN 0      4096   192.168.112.1:80         0.0.0.0:*    users:((""caddy"",pid=239110,fd=18))         
tcp   LISTEN 0      4096       127.0.0.1:9100       0.0.0.0:*    users:((""node_exporter"",pid=241059,fd=3))  
tcp   LISTEN 0      5          127.0.0.1:33333      0.0.0.0:*    users:((""vpp_main"",pid=240906,fd=22))      
tcp   LISTEN 0      4096       127.0.0.1:8888       0.0.0.0:*    users:((""otelcol-contrib"",pid=241096,fd=3))
tcp   LISTEN 0      4096       127.0.0.1:41601      0.0.0.0:*    users:((""scion-all"",pid=241226,fd=10))     
tcp   LISTEN 0      4096       127.0.0.1:41600      0.0.0.0:*    users:((""scion-all"",pid=241226,fd=9))      
tcp   LISTEN 0      4096   192.168.112.1:443        0.0.0.0:*    users:((""caddy"",pid=239110,fd=20))         
tcp   LISTEN 0      4096   192.168.112.1:30252      0.0.0.0:*    users:((""scion-all"",pid=240671,fd=15))     
tcp   LISTEN 0      4096   127.0.0.53%lo:53         0.0.0.0:*    users:((""systemd-resolve"",pid=603,fd=14))  
tcp   LISTEN 0      4096       127.0.0.1:54497      0.0.0.0:*    users:((""promtail"",pid=241046,fd=8))       
tcp   LISTEN 0      128          0.0.0.0:22         0.0.0.0:*    users:((""sshd"",pid=897,fd=3))              
tcp   LISTEN 0      4096       127.0.0.1:48050      0.0.0.0:*    users:((""caddy"",pid=239110,fd=3))          
tcp   LISTEN 0      4096       127.0.0.1:48061      0.0.0.0:*    users:((""debugscraper"",pid=642,fd=23))     
tcp   LISTEN 0      4096       127.0.0.1:48041      0.0.0.0:*    users:((""otelcol-contrib"",pid=241096,fd=7))
tcp   LISTEN 0      4096       127.0.0.1:48021      0.0.0.0:*    users:((""appliance"",pid=638,fd=7))         
tcp   LISTEN 0      4096       127.0.0.1:48020      0.0.0.0:*    users:((""appliance"",pid=638,fd=9))         
tcp   LISTEN 0      4096       127.0.0.1:48022      0.0.0.0:*    users:((""appliance"",pid=638,fd=8))         
tcp   LISTEN 0      4096       127.0.0.1:48031      0.0.0.0:*    users:((""appliance"",pid=240764,fd=8))      
tcp   LISTEN 0      4096       127.0.0.1:48030      0.0.0.0:*    users:((""appliance"",pid=240764,fd=3))      
tcp   LISTEN 0      4096       127.0.0.1:48001      0.0.0.0:*    users:((""appliance-insta"",pid=224005,fd=7))
tcp   LISTEN 0      4096       127.0.0.1:48000      0.0.0.0:*    users:((""appliance-insta"",pid=224005,fd=9))
tcp   LISTEN 0      4096       127.0.0.1:19531      0.0.0.0:*    users:((""systemd"",pid=1,fd=63))            
tcp   LISTEN 0      4096               *:42001            *:*    users:((""caddy"",pid=239110,fd=12))         
tcp   LISTEN 0      4096               *:80               *:*    users:((""caddy"",pid=239110,fd=11))         
tcp   LISTEN 0      128             [::]:22            [::]:*    users:((""sshd"",pid=897,fd=4))","Run the following commands to stop the service and remove the package containing the service:

# systemctl stop <service_name>.socket <service_name>.service
# apt purge <package_name>

- OR - If required packages have a dependency:

Run the following commands to stop and mask the service and socket:

# systemctl stop <service_name>.socket <service_name>.service
# systemctl mask <service_name>.socket <service_name>.service

Note: replace <service_name> with the appropriate service name.

Impact:

There may be packages that are dependent on the service's package. If the service's package is removed, these dependent packages will be removed as well. Before removing the service's package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the <service_name>.socket and <service_name>.service leaving the service's package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.3 Ensure dhcp server services are not in use"" : [PASSED]

The Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to be dynamically assigned IP addresses. There are two versions of the DHCP protocol DHCPv4 and DHCPv6 At startup the server may be started for one or the other via the -4 or -6 arguments.

Unless a system is specifically set up to act as a DHCP server, it is recommended that this package be removed to reduce the potential attack surface.

Solution:
Run the following commands to stop isc-dhcp-server.service and isc-dhcp-server6.service and remove the isc-dhcp-server package:

# systemctl stop isc-dhcp-server.service isc-dhcp-server6.service
# apt purge isc-dhcp-server

- OR -

- IF - the isc-dhcp-server package is required as a dependency:

Run the following commands to stop and mask isc-dhcp-server.service and isc-dhcp-server6.service :

# systemctl stop isc-dhcp-server.service isc-dhcp-server6.service
# systemctl mask isc-dhcp-server isc-dhcp-server6.service

Impact:

There may be packages that are dependent on the isc-dhcp-server package. If the isc-dhcp-server package is removed, these dependent packages will be removed as well. Before removing the isc-dhcp-server package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the isc-dhcp-server.service and isc-dhcp-server6.service leaving the isc-dhcp-server package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s isc-dhcp-server 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s isc-dhcp-server 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'isc-dhcp-server' is not installed and no information is available","Run the following commands to stop isc-dhcp-server.service and isc-dhcp-server6.service and remove the isc-dhcp-server package:

# systemctl stop isc-dhcp-server.service isc-dhcp-server6.service
# apt purge isc-dhcp-server

- OR -

- IF - the isc-dhcp-server package is required as a dependency:

Run the following commands to stop and mask isc-dhcp-server.service and isc-dhcp-server6.service :

# systemctl stop isc-dhcp-server.service isc-dhcp-server6.service
# systemctl mask isc-dhcp-server isc-dhcp-server6.service

Impact:

There may be packages that are dependent on the isc-dhcp-server package. If the isc-dhcp-server package is removed, these dependent packages will be removed as well. Before removing the isc-dhcp-server package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the isc-dhcp-server.service and isc-dhcp-server6.service leaving the isc-dhcp-server package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.4 Ensure dns server services are not in use"" : [PASSED]

The Domain Name System (DNS) is a hierarchical naming system that maps names to IP addresses for computers, services and other resources connected to a network.

Unless a system is specifically designated to act as a DNS server, it is recommended that the package be deleted to reduce the potential attack surface.

Solution:
Run the following commands to stop bind9.service and remove the bind9 package:

# systemctl stop bind9.service
# apt purge bind9

- OR -

- IF - the bind9 package is required as a dependency:

Run the following commands to stop and mask bind9.service :

# systemctl stop bind9.service
# systemctl mask bind9.service

Impact:

There may be packages that are dependent on the bind9 package. If the bind9 package is removed, these dependent packages will be removed as well. Before removing the bind9 package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the bind9.service leaving the bind9 package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s bind9 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s bind9 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'bind9' is not installed and no information is available","Run the following commands to stop bind9.service and remove the bind9 package:

# systemctl stop bind9.service
# apt purge bind9

- OR -

- IF - the bind9 package is required as a dependency:

Run the following commands to stop and mask bind9.service :

# systemctl stop bind9.service
# systemctl mask bind9.service

Impact:

There may be packages that are dependent on the bind9 package. If the bind9 package is removed, these dependent packages will be removed as well. Before removing the bind9 package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the bind9.service leaving the bind9 package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.5 Ensure dnsmasq services are not in use"" : [PASSED]

dnsmasq is a lightweight tool that provides DNS caching, DNS forwarding and DHCP (Dynamic Host Configuration Protocol) services.

Unless a system is specifically designated to act as a DNS caching, DNS forwarding and/or DHCP server, it is recommended that the package be removed to reduce the potential attack surface.

Solution:
Run the following commands to stop dnsmasq.service and remove dnsmasq package:

# systemctl stop dnsmasq.service
# apt purge dnsmasq

- OR -

- IF - the dnsmasq package is required as a dependency:

Run the following commands to stop and mask the dnsmasq.service :

# systemctl stop dnsmasq.service
# systemctl mask dnsmasq.service

Impact:

There may be packages that are dependent on the dnsmasq package. If the dnsmasq package is removed, these dependent packages will be removed as well. Before removing the dnsmasq package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the dnsmasq.service leaving the dnsmasq package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s dnsmasq 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s dnsmasq 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'dnsmasq' is not installed and no information is available","Run the following commands to stop dnsmasq.service and remove dnsmasq package:

# systemctl stop dnsmasq.service
# apt purge dnsmasq

- OR -

- IF - the dnsmasq package is required as a dependency:

Run the following commands to stop and mask the dnsmasq.service :

# systemctl stop dnsmasq.service
# systemctl mask dnsmasq.service

Impact:

There may be packages that are dependent on the dnsmasq package. If the dnsmasq package is removed, these dependent packages will be removed as well. Before removing the dnsmasq package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the dnsmasq.service leaving the dnsmasq package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.6 Ensure ftp server services are not in use"" : [PASSED]

The File Transfer Protocol (FTP) provides networked computers with the ability to transfer files.

FTP does not protect the confidentiality of data or authentication credentials. It is recommended SFTP be used if file transfer is required. Unless there is a need to run the system as a FTP server (for example, to allow anonymous downloads), it is recommended that the package be deleted to reduce the potential attack surface.

Solution:
Run the following commands to stop vsftpd.service and remove the vsftpd package:

# systemctl stop vsftpd.service
# apt purge vsftpd

- OR -

- IF - the vsftpd package is required as a dependency:

Run the following commands to stop and mask the vsftpd.service :

# systemctl stop vsftpd.service
# systemctl mask vsftpd.service

Note: Other ftp server packages may exist. If not required and authorized by local site policy, they should also be removed. If the package is required for a dependency, the service should be stopped and masked.

Impact:

There may be packages that are dependent on the vsftpd package. If the vsftpd package is removed, these dependent packages will be removed as well. Before removing the vsftpd package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the vsftpd.service leaving the vsftpd package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s vsftpd 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s vsftpd 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'vsftpd' is not installed and no information is available","Run the following commands to stop vsftpd.service and remove the vsftpd package:

# systemctl stop vsftpd.service
# apt purge vsftpd

- OR -

- IF - the vsftpd package is required as a dependency:

Run the following commands to stop and mask the vsftpd.service :

# systemctl stop vsftpd.service
# systemctl mask vsftpd.service

Note: Other ftp server packages may exist. If not required and authorized by local site policy, they should also be removed. If the package is required for a dependency, the service should be stopped and masked.

Impact:

There may be packages that are dependent on the vsftpd package. If the vsftpd package is removed, these dependent packages will be removed as well. Before removing the vsftpd package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the vsftpd.service leaving the vsftpd package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.7 Ensure ldap server services are not in use"" : [PASSED]

The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.

If the system will not need to act as an LDAP server, it is recommended that the software be removed to reduce the potential attack surface.

Solution:
Run the following commands to stop slapd.service and remove the slapd package:

# systemctl stop slapd.service
# apt purge slapd

- OR -

- IF - the slapd package is required as a dependency:

Run the following commands to stop and mask slapd.service :

# systemctl stop slapd.service
# systemctl mask slapd.service

Impact:

There may be packages that are dependent on the slapd package. If the slapd package is removed, these dependent packages will be removed as well. Before removing the slapd package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the slapd.service leaving the slapd package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s slapd 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s slapd 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'slapd' is not installed and no information is available","Run the following commands to stop slapd.service and remove the slapd package:

# systemctl stop slapd.service
# apt purge slapd

- OR -

- IF - the slapd package is required as a dependency:

Run the following commands to stop and mask slapd.service :

# systemctl stop slapd.service
# systemctl mask slapd.service

Impact:

There may be packages that are dependent on the slapd package. If the slapd package is removed, these dependent packages will be removed as well. Before removing the slapd package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the slapd.service leaving the slapd package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.8 Ensure message access server services are not in use"" : [PASSED]

dovecot-imapd and dovecot-pop3d are an open source IMAP and POP3 server for Linux based systems.

Unless POP3 and/or IMAP servers are to be provided by this system, it is recommended that the package be removed to reduce the potential attack surface.

Note: Several IMAP/POP3 servers exist and can use other service names. These should also be audited and the packages removed if not required.

Solution:
Run one of the following commands to remove dovecot-imapd and dovecot-pop3d :

Run the following commands to stop dovecot.socket and dovecot.service and remove the dovecot-imapd and dovecot-pop3d packages:

# systemctl stop dovecot.socket dovecot.service
# apt purge dovecot-imapd dovecot-pop3d

- OR -

- IF - a package is installed and is required for dependencies:

Run the following commands to stop and mask dovecot.socket and dovecot.service :

# systemctl stop dovecot.socket dovecot.service
# systemctl mask dovecot.socket dovecot.service

Impact:

There may be packages that are dependent on dovecot-imapd and/or dovecot-pop3d packages. If dovecot-imapd and dovecot-pop3d packages are removed, these dependent packages will be removed as well. Before removing dovecot-imapd and/or dovecot-pop3d packages, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask dovecot.socket and dovecot.service leaving dovecot-imapd and/or dovecot-pop3d packages installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - dpkg check dovecot-pop3
The command '/bin/dpkg -s dovecot-pop3 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'dovecot-pop3' is not installed and no information is available

-------------------------
PASSED - dpkg check dovecot-imapd
The command '/bin/dpkg -s dovecot-imapd 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'dovecot-imapd' is not installed and no information is available","Run one of the following commands to remove dovecot-imapd and dovecot-pop3d :

Run the following commands to stop dovecot.socket and dovecot.service and remove the dovecot-imapd and dovecot-pop3d packages:

# systemctl stop dovecot.socket dovecot.service
# apt purge dovecot-imapd dovecot-pop3d

- OR -

- IF - a package is installed and is required for dependencies:

Run the following commands to stop and mask dovecot.socket and dovecot.service :

# systemctl stop dovecot.socket dovecot.service
# systemctl mask dovecot.socket dovecot.service

Impact:

There may be packages that are dependent on dovecot-imapd and/or dovecot-pop3d packages. If dovecot-imapd and dovecot-pop3d packages are removed, these dependent packages will be removed as well. Before removing dovecot-imapd and/or dovecot-pop3d packages, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask dovecot.socket and dovecot.service leaving dovecot-imapd and/or dovecot-pop3d packages installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.1.9 Ensure network file system services are not in use"" : [PASSED]

The Network File System (NFS) is one of the first and most widely distributed file systems in the UNIX environment. It provides the ability for systems to mount file systems of other servers through the network.

If the system does not export NFS shares, it is recommended that the nfs-kernel-server package be removed to reduce the remote attack surface.

Solution:
Run the following command to stop nfs-server.service and remove nfs-kernel-server package:

# systemctl stop nfs-server.service
# apt purge nfs-kernel-server

- OR -

- IF - the nfs-kernel-server package is required as a dependency:

Run the following commands to stop and mask the nfs-server.service :

# systemctl stop nfs-server.service
# systemctl mask nfs-server.service

Impact:

There may be packages that are dependent on the nfs-kernel-server package. If the nfs-kernel-server package is removed, these dependent packages will be removed as well. Before removing the nfs-kernel-server package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the nfs-server.service leaving the nfs-kernel-server package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s nfs-kernel-server 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s nfs-kernel-server 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'nfs-kernel-server' is not installed and no information is available","Run the following command to stop nfs-server.service and remove nfs-kernel-server package:

# systemctl stop nfs-server.service
# apt purge nfs-kernel-server

- OR -

- IF - the nfs-kernel-server package is required as a dependency:

Run the following commands to stop and mask the nfs-server.service :

# systemctl stop nfs-server.service
# systemctl mask nfs-server.service

Impact:

There may be packages that are dependent on the nfs-kernel-server package. If the nfs-kernel-server package is removed, these dependent packages will be removed as well. Before removing the nfs-kernel-server package, review any dependent packages to determine if they are required on the system.

- IF - a dependent package is required: stop and mask the nfs-server.service leaving the nfs-kernel-server package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.2.1 Ensure NIS Client is not installed"" : [PASSED]

The Network Information Service (NIS), formerly known as Yellow Pages, is a client-server directory service protocol used to distribute system configuration files. The NIS client was used to bind a machine to an NIS server and receive the distributed configuration files.

The NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the service be removed.

Solution:
Uninstall nis :

# apt purge nis

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|2.6,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s nis 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s nis 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'nis' is not installed and no information is available","Uninstall nis :

# apt purge nis

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.2.2 Ensure rsh client is not installed"" : [PASSED]

The rsh-client package contains the client commands for the rsh services.

These legacy clients contain numerous security exposures and have been replaced with the more secure SSH package. Even if the server is removed, it is best to ensure the clients are also removed to prevent users from inadvertently attempting to use these commands and therefore exposing their credentials. Note that removing the rsh-client package removes the clients for rsh rcp and rlogin

Solution:
Uninstall rsh :

# apt purge rsh-client

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s rsh-client 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s rsh-client 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'rsh-client' is not installed and no information is available","Uninstall rsh :

# apt purge rsh-client

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.2.3 Ensure talk client is not installed"" : [PASSED]

The talk software makes it possible for users to send and receive messages across systems through a terminal session. The talk client, which allows initialization of talk sessions, is installed by default.

The software presents a security risk as it uses unencrypted protocols for communication.

Solution:
Uninstall talk :

# apt purge talk

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s talk 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s talk 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'talk' is not installed and no information is available","Uninstall talk :

# apt purge talk

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.2.4 Ensure telnet client is not installed"" : [FAILED]

The telnet package contains the telnet client, which allows users to start connections to other systems via the telnet protocol.

The telnet protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow an unauthorized user to steal credentials. The ssh package provides an encrypted session and stronger security and is included in most Linux distributions.

Solution:
Uninstall telnet :

# apt purge telnet

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s telnet 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s telnet 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

Status: install ok installed","Uninstall telnet :

# apt purge telnet

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.2.5 Ensure ldap client is not installed"" : [PASSED]

The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.

If the system will not need to act as an LDAP client, it is recommended that the software be removed to reduce the potential attack surface.

Solution:
Uninstall ldap-utils :

# apt purge ldap-utils

Impact:

Removing the LDAP client will prevent or inhibit using LDAP for authentication in your environment.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s ldap-utils 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s ldap-utils 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'ldap-utils' is not installed and no information is available","Uninstall ldap-utils :

# apt purge ldap-utils

Impact:

Removing the LDAP client will prevent or inhibit using LDAP for authentication in your environment.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.2.6 Ensure ftp client is not installed"" : [PASSED]

FTP (File Transfer Protocol) is a traditional and widely used standard tool for transferring files between a server and clients over a network, especially where no authentication is necessary (permits anonymous users to connect to a server).

FTP does not protect the confidentiality of data or authentication credentials. It is recommended SFTP be used if file transfer is required. Unless there is a need to run the system as a FTP server (for example, to allow anonymous downloads), it is recommended that the package be removed to reduce the potential attack surface.

Solution:
Run the following command to uninstall ftp :

# apt purge ftp

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s ftp 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s ftp 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'ftp' is not installed and no information is available","Run the following command to uninstall ftp :

# apt purge ftp","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.3.1.1 Ensure a single time synchronization daemon is in use"" : [PASSED]

System time should be synchronized between all systems in an environment. This is typically done by establishing an authoritative time server or set of servers and having all systems synchronize their clocks to them.

Notes:

 - On virtual systems where host based time synchronization is available consult your virtualization software documentation and verify that host based synchronization is in use and follows local site policy. In this scenario, this section should be skipped
 - Only one time synchronization method should be in use on the system. Configuring multiple time synchronization methods could lead to unexpected or unreliable results

Time synchronization is important to support time sensitive security mechanisms and ensures log files have consistent time records across the enterprise, which aids in forensic investigations.

Solution:
On physical systems, and virtual systems where host based time synchronization is not available.

Select one of the two time synchronization daemons; chrony (1) or systemd-timesyncd (2) and following the remediation procedure for the selected daemon.

Note: enabling more than one synchronization daemon could lead to unexpected or unreliable results:

 - chrony

Run the following command to install chrony :

# apt install chrony

Run the following commands to stop and mask the systemd-timesyncd daemon:

# systemctl stop systemd-timesyncd.service

# systemctl mask systemd-timesyncd.service

Note:

 - Subsection:

Configure chrony

should be followed
 - Subsection:

Configure systemd-timesyncd

should be skipped

<xhtml:ol start=""2""> - systemd-timesyncd

Run the following command to remove the chrony package:

# apt purge chrony
# apt autoremove chrony

Note:

 - Subsection:

Configure systemd-timesyncd

should be followed
 - Subsection:

Configure chrony

should be skipped

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **
 - Only one time sync daemon is in use on the system
  - Daemon: ""systemd-timesyncd.service"" is enabled on the system
  - Daemon: ""systemd-timesyncd.service"" is active on the system
  - Daemon: ""chrony.service"" is not enabled and not active on the system","On physical systems, and virtual systems where host based time synchronization is not available.

Select one of the two time synchronization daemons; chrony (1) or systemd-timesyncd (2) and following the remediation procedure for the selected daemon.

Note: enabling more than one synchronization daemon could lead to unexpected or unreliable results:

 - chrony

Run the following command to install chrony :

# apt install chrony

Run the following commands to stop and mask the systemd-timesyncd daemon:

# systemctl stop systemd-timesyncd.service

# systemctl mask systemd-timesyncd.service

Note:

 - Subsection:

Configure chrony

should be followed
 - Subsection:

Configure systemd-timesyncd

should be skipped

<xhtml:ol start=""2""> - systemd-timesyncd

Run the following command to remove the chrony package:

# apt purge chrony
# apt autoremove chrony

Note:

 - Subsection:

Configure systemd-timesyncd

should be followed
 - Subsection:

Configure chrony

should be skipped","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.3.2.1 Ensure systemd-timesyncd configured with authorized timeserver"" : [PASSED]

NTP=

 - A space-separated list of NTP server host names or IP addresses. During runtime this list is combined with any per-interface NTP servers acquired from systemd-networkd.service(8). systemd-timesyncd will contact all configured system or per-interface servers in turn, until one responds. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. This setting defaults to an empty list.

FallbackNTP=

 - A space-separated list of NTP server host names or IP addresses to be used as the fallback NTP servers. Any per-interface NTP servers obtained from systemd-networkd.service(8) take precedence over this setting, as do any servers set via NTP= above. This setting is hence only relevant if no other NTP server information is known. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. If this option is not given, a compiled-in list of NTP servers is used.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations

Solution:
Set NTP and/or FallbackNPT parameters to local site approved authoritative time server(s) in /etc/systemd/timesyncd.conf or a file in /etc/systemd/timesyncd.conf.d/ ending inconf in the [Time] section:

Example file:

[Time]
NTP=time.nist.gov # Uses the generic name for NIST's time servers
FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov # Space separated list of NIST time servers

Example script to create systemd drop-in file:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/timesyncd.conf.d/ ] &amp;&amp; mkdir /etc/systemd/timesyncd.conf.d/
   printf '%s
' ""[Time]"" ""NTP=time.nist.gov"" ""FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov"" >> /etc/systemd/timesyncd.conf.d/60-timesyncd.conf
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - ""NTP"" is correctly set to ""time1.keen.fsnets.com"" in ""/etc/systemd/timesyncd.conf""

 - ""FallbackNTP"" is correctly set to ""ntp.ubuntu.com"" in ""/etc/systemd/timesyncd.conf""","Set NTP and/or FallbackNPT parameters to local site approved authoritative time server(s) in /etc/systemd/timesyncd.conf or a file in /etc/systemd/timesyncd.conf.d/ ending inconf in the [Time] section:

Example file:

[Time]
NTP=time.nist.gov # Uses the generic name for NIST's time servers
FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov # Space separated list of NIST time servers

Example script to create systemd drop-in file:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/timesyncd.conf.d/ ] &amp;&amp; mkdir /etc/systemd/timesyncd.conf.d/
   printf '%s
' ""[Time]"" ""NTP=time.nist.gov"" ""FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov"" >> /etc/systemd/timesyncd.conf.d/60-timesyncd.conf
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.3.2.2 Ensure systemd-timesyncd is enabled and running"" : [PASSED]

systemd-timesyncd is a daemon that has been added for synchronizing the system clock across the network

systemd-timesyncd needs to be enabled and running in order to synchronize the system to a timeserver.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations

Solution:
- IF - systemd-timesyncd is in use on the system, run the following commands:

Run the following command to unmask systemd-timesyncd.service :

# systemctl unmask systemd-timesyncd.service

Run the following command to enable and start systemd-timesyncd.service :

# systemctl --now enable systemd-timesyncd.service

- OR -

If another time synchronization service is in use on the system, run the following command to stop and mask systemd-timesyncd :

# systemctl --now mask systemd-timesyncd.service

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1M,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - check if systemd-timesyncd is enabled
The command '/bin/systemctl is-enabled systemd-timesyncd' returned : 

enabled

-------------------------
PASSED - check if systemd-timesyncd is active
The command '/bin/systemctl is-active systemd-timesyncd' returned : 

active","- IF - systemd-timesyncd is in use on the system, run the following commands:

Run the following command to unmask systemd-timesyncd.service :

# systemctl unmask systemd-timesyncd.service

Run the following command to enable and start systemd-timesyncd.service :

# systemctl --now enable systemd-timesyncd.service

- OR -

If another time synchronization service is in use on the system, run the following command to stop and mask systemd-timesyncd :

# systemctl --now mask systemd-timesyncd.service","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.3.3.1 Ensure chrony is configured with authorized timeserver"" : [PASSED]

-

server

 - The server directive specifies an NTP server which can be used as a time source. The client-server relationship is strictly hierarchical: a client might synchronize its system time to that of the server, but the server's system time will never be influenced by that of a client.
 - This directive can be used multiple times to specify multiple servers.
 - The directive is immediately followed by either the name of the server, or its IP address.

 -

pool

 - The syntax of this directive is similar to that for the server directive, except that it is used to specify a pool of NTP servers rather than a single NTP server. The pool name is expected to resolve to multiple addresses which might change over time.
 - This directive can be used multiple times to specify multiple pools.
 - All options valid in the server directive can be used in this directive too.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations

Solution:
Edit /etc/chrony/chrony.conf or a file ending insources in /etc/chrony/sources.d/ and add or edit server or pool lines as appropriate according to local site policy:

<[server|pool]> <[remote-server|remote-pool]>

Examples:

pool directive:

pool time.nist.gov iburst maxsources 4 #The maxsources option is unique to the pool directive

server directive:

server time-a-g.nist.gov iburst
server 132.163.97.3 iburst
server time-d-b.nist.gov iburst

Run one of the following commands to load the updated time sources into chronyd running config:

# systemctl restart chronyd

- OR if sources are in a .sources file -

# chronyc reload sources

- OR -

If another time synchronization service is in use on the system, run the following command to remove chrony from the system:

# apt purge chrony
# apt autoremove chrony

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1M,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4

Policy Value:
PASSED","Edit /etc/chrony/chrony.conf or a file ending insources in /etc/chrony/sources.d/ and add or edit server or pool lines as appropriate according to local site policy:

<[server|pool]> <[remote-server|remote-pool]>

Examples:

pool directive:

pool time.nist.gov iburst maxsources 4 #The maxsources option is unique to the pool directive

server directive:

server time-a-g.nist.gov iburst
server 132.163.97.3 iburst
server time-d-b.nist.gov iburst

Run one of the following commands to load the updated time sources into chronyd running config:

# systemctl restart chronyd

- OR if sources are in a .sources file -

# chronyc reload sources

- OR -

If another time synchronization service is in use on the system, run the following command to remove chrony from the system:

# apt purge chrony
# apt autoremove chrony","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.3.3.2 Ensure chrony is running as user _chrony"" : [PASSED]

The chrony package is installed with a dedicated user account _chrony This account is granted the access required by the chronyd service

The chronyd service should run with only the required privlidges

Solution:
Add or edit the user line to /etc/chrony/chrony.conf or a file ending inconf in /etc/chrony/conf.d/ :

user _chrony

- OR -

If another time synchronization service is in use on the system, run the following command to remove chrony from the system:

# apt purge chrony
# apt autoremove chrony

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4

Policy Value:
PASSED","Add or edit the user line to /etc/chrony/chrony.conf or a file ending inconf in /etc/chrony/conf.d/ :

user _chrony

- OR -

If another time synchronization service is in use on the system, run the following command to remove chrony from the system:

# apt purge chrony
# apt autoremove chrony","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.3.3.3 Ensure chrony is enabled and running"" : [PASSED]

chrony is a daemon for synchronizing the system clock across the network

chrony needs to be enabled and running in order to synchronize the system to a timeserver.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations

Solution:
- IF - chrony is in use on the system, run the following commands:

Run the following command to unmask chrony.service :

# systemctl unmask chrony.service

Run the following command to enable and start chrony.service :

# systemctl --now enable chrony.service

- OR -

If another time synchronization service is in use on the system, run the following command to remove chrony :

# apt purge chrony
# apt autoremove chrony

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4

Policy Value:
PASSED","- IF - chrony is in use on the system, run the following commands:

Run the following command to unmask chrony.service :

# systemctl unmask chrony.service

Run the following command to enable and start chrony.service :

# systemctl --now enable chrony.service

- OR -

If another time synchronization service is in use on the system, run the following command to remove chrony :

# apt purge chrony
# apt autoremove chrony","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.1 Ensure cron daemon is enabled and active"" : [PASSED]

The cron daemon is used to execute batch jobs on the system.

While there may not be user jobs that need to be run on the system, the system does have maintenance jobs that may include security monitoring that have to run, and cron is used to execute them.

Solution:
- IF - cron is installed on the system:

Run the following commands to unmask, enable, and start cron :

# systemctl unmask ""$(systemctl list-unit-files | awk '$1~/^crond?.service/{print $1}')""
# systemctl --now enable ""$(systemctl list-unit-files | awk '$1~/^crond?.service/{print $1}')""

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - enabled
The command '/bin/systemctl list-unit-files | /bin/awk '$1~/^crond?\.service/{print $2}'' returned : 

enabled

-------------------------
PASSED - active
The command '/bin/systemctl list-units | /bin/awk '$1~/^crond?\.service/{print $3}'' returned : 

active","- IF - cron is installed on the system:

Run the following commands to unmask, enable, and start cron :

# systemctl unmask ""$(systemctl list-unit-files | awk '$1~/^crond?.service/{print $1}')""
# systemctl --now enable ""$(systemctl list-unit-files | awk '$1~/^crond?.service/{print $1}')""","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.2 Ensure permissions on /etc/crontab are configured"" : [FAILED]

The /etc/crontab file is used by cron to control its own jobs. The commands in this item make sure that root is the user and group owner of the file and that only the owner can access the file.

This file contains information on what system jobs are run by cron. Write access to these files could provide unprivileged users with the ability to elevate their privileges. Read access to these files could provide users with the ability to gain insight on system jobs that run on the system and could provide them a way to gain unauthorized privileged access.

Solution:
- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on /etc/crontab :

# chown root:root /etc/crontab
# chmod og-rwx /etc/crontab

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/crontab
group: root
mask: 177
owner: root

Actual Value:
The file /etc/crontab with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE  does not match the policy value owner: root group: root mask: 177 uneven permissions : FALSE 

/etc/crontab","- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on /etc/crontab :

# chown root:root /etc/crontab
# chmod og-rwx /etc/crontab","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.3 Ensure permissions on /etc/cron.hourly are configured"" : [FAILED]

This directory contains system cron jobs that need to run on an hourly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.

Solution:
- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.hourly directory:

# chown root:root /etc/cron.hourly/
# chmod og-rwx /etc/cron.hourly/

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/cron.hourly
group: root
mask: 077
owner: root

Actual Value:
The file /etc/cron.hourly with fmode owner: root group: root mode: 0755 uid: 0 gid: 0 uneven permissions : FALSE  does not match the policy value owner: root group: root mask: 077 uneven permissions : FALSE 

/etc/cron.hourly","- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.hourly directory:

# chown root:root /etc/cron.hourly/
# chmod og-rwx /etc/cron.hourly/","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.4 Ensure permissions on /etc/cron.daily are configured"" : [FAILED]

The /etc/cron.daily directory contains system cron jobs that need to run on a daily basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.

Solution:
- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.daily directory:

# chown root:root /etc/cron.daily/
# chmod og-rwx /etc/cron.daily/

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/cron.daily
group: root
mask: 077
owner: root

Actual Value:
The file /etc/cron.daily with fmode owner: root group: root mode: 0755 uid: 0 gid: 0 uneven permissions : FALSE  does not match the policy value owner: root group: root mask: 077 uneven permissions : FALSE 

/etc/cron.daily","- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.daily directory:

# chown root:root /etc/cron.daily/
# chmod og-rwx /etc/cron.daily/","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.5 Ensure permissions on /etc/cron.weekly are configured"" : [FAILED]

The /etc/cron.weekly directory contains system cron jobs that need to run on a weekly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.

Solution:
- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.weekly directory:

# chown root:root /etc/cron.weekly/
# chmod og-rwx /etc/cron.weekly/

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/cron.weekly
group: root
mask: 077
owner: root

Actual Value:
The file /etc/cron.weekly with fmode owner: root group: root mode: 0755 uid: 0 gid: 0 uneven permissions : FALSE  does not match the policy value owner: root group: root mask: 077 uneven permissions : FALSE 

/etc/cron.weekly","- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.weekly directory:

# chown root:root /etc/cron.weekly/
# chmod og-rwx /etc/cron.weekly/","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.6 Ensure permissions on /etc/cron.monthly are configured"" : [FAILED]

The /etc/cron.monthly directory contains system cron jobs that need to run on a monthly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.

Solution:
- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.monthly directory:

# chown root:root /etc/cron.monthly/
# chmod og-rwx /etc/cron.monthly/

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/cron.monthly
group: root
mask: 077
owner: root

Actual Value:
The file /etc/cron.monthly with fmode owner: root group: root mode: 0755 uid: 0 gid: 0 uneven permissions : FALSE  does not match the policy value owner: root group: root mask: 077 uneven permissions : FALSE 

/etc/cron.monthly","- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.monthly directory:

# chown root:root /etc/cron.monthly/
# chmod og-rwx /etc/cron.monthly/","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.7 Ensure permissions on /etc/cron.d are configured"" : [FAILED]

The /etc/cron.d directory contains system cron jobs that need to run in a similar manner to the hourly, daily weekly and monthly jobs from /etc/crontab but require more granular control as to when they run. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.

Solution:
- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.d directory:

# chown root:root /etc/cron.d/
# chmod og-rwx /etc/cron.d/

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/cron.d
group: root
mask: 077
owner: root

Actual Value:
The file /etc/cron.d with fmode owner: root group: root mode: 0755 uid: 0 gid: 0 uneven permissions : FALSE  does not match the policy value owner: root group: root mask: 077 uneven permissions : FALSE 

/etc/cron.d","- IF - cron is installed on the system:

Run the following commands to set ownership and permissions on the /etc/cron.d directory:

# chown root:root /etc/cron.d/
# chmod og-rwx /etc/cron.d/","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.1.8 Ensure crontab is restricted to authorized users"" : [FAILED]

crontab is the program used to install, deinstall, or list the tables used to drive the cron daemon. Each user can have their own crontab, and though these are files in /var/spool/cron/crontabs they are not intended to be edited directly.

If the /etc/cron.allow file exists, then you must be listed (one user per line) therein in order to be allowed to use this command. If the /etc/cron.allow file does not exist but the /etc/cron.deny file does exist, then you must not be listed in the /etc/cron.deny file in order to use this command.

If neither of these files exists, then depending on site-dependent configuration parameters, only the super user will be allowed to use this command, or all users will be able to use this command.

If both files exist then /etc/cron.allow takes precedence. Which means that /etc/cron.deny is not considered and your user must be listed in /etc/cron.allow in order to be able to use the crontab.

Regardless of the existence of any of these files, the root administrative user is always allowed to setup a crontab.

The files /etc/cron.allow and /etc/cron.deny if they exist, must be either world-readable, or readable by group crontab If they are not, then cron will deny access to all users until the permissions are fixed.

There is one file for each user's crontab under the /var/spool/cron/crontabs directory. Users are not allowed to edit the files under that directory directly to ensure that only users allowed by the system to run periodic tasks can add them, and only syntactically correct crontabs will be written there. This is enforced by having the directory writable only by the crontab group and configuring crontab command with the setgid bid set for that specific group.

Note:

 - Even though a given user is not listed in cron.allow cron jobs can still be run as that user
 - The files /etc/cron.allow and /etc/cron.deny if they exist, only controls administrative access to the crontab command for scheduling and modifying cron jobs

On many systems, only the system administrator is authorized to schedule cron jobs. Using the cron.allow file to control who can run cron jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files.

Solution:
- IF - cron is installed on the system:

Run the following script to:

 - Create /etc/cron.allow if it doesn't exist
 - Change owner or user root
 - Change group owner to group root
 - Change mode to 640 or more restrictive

#!/usr/bin/env bash

{
   [ ! -e ""/etc/cron.allow"" ] &amp;&amp; touch /etc/cron.allow
   chown root:root /etc/cron.allow
   chmod u-x,g-wx,o-rwx /etc/cron.allow
}

- IF - /etc/cron.deny exists, run the following commands to:

 - Change owner or user root
 - Change group owner to group root
 - Change mode to 640 or more restrictive

# [ -e ""/etc/cron.deny"" ] &amp;&amp; chown root:root /etc/cron.deny
# [ -e ""/etc/cron.deny"" ] &amp;&amp; chmod u-x,g-wx,o-rwx /etc/cron.deny

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - /etc/cron.deny file permissions


-------------------------
FAILED - /etc/cron.allow file permissions
No files found: /etc/cron.allow","- IF - cron is installed on the system:

Run the following script to:

 - Create /etc/cron.allow if it doesn't exist
 - Change owner or user root
 - Change group owner to group root
 - Change mode to 640 or more restrictive

#!/usr/bin/env bash

{
   [ ! -e ""/etc/cron.allow"" ] &amp;&amp; touch /etc/cron.allow
   chown root:root /etc/cron.allow
   chmod u-x,g-wx,o-rwx /etc/cron.allow
}

- IF - /etc/cron.deny exists, run the following commands to:

 - Change owner or user root
 - Change group owner to group root
 - Change mode to 640 or more restrictive

# [ -e ""/etc/cron.deny"" ] &amp;&amp; chown root:root /etc/cron.deny
# [ -e ""/etc/cron.deny"" ] &amp;&amp; chmod u-x,g-wx,o-rwx /etc/cron.deny","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""2.4.2.1 Ensure at is restricted to authorized users"" : [PASSED]

at allows fairly complex time specifications, extending the POSIX.2 standard. It accepts times of the form HH:MM to run a job at a specific time of day. (If that time is already past, the next day is assumed.) You may also specify midnight, noon, or teatime (4pm) and you can have a time-of-day suffixed with AM or PM for running in the morning or the evening. You can also say what day the job will be run, by giving a date in the form month-name day with an optional year, or giving a date of the form MMDD[CC]YY, MM/DD/[CC]YY, DD.MM.[CC]YY or [CC]YY-MM-DD. The specification of a date must follow the specification of the time of day. You can also give times like now + count time-units, where the time-units can be minutes, hours, days, or weeks and you can tell at to run the job today by suffixing the time with today and to run the job tomorrow by suffixing the time with tomorrow.

The /etc/at.allow and /etc/at.deny files determine which user can submit commands for later execution via at or batch. The format of the files is a list of usernames, one on each line. Whitespace is not permitted. If the file /etc/at.allow exists, only usernames mentioned in it are allowed to use at. If /etc/at.allow does not exist, /etc/at.deny is checked, every username not mentioned in it is then allowed to use at. An empty /etc/at.deny means that every user may use at. If neither file exists, only the superuser is allowed to use at.

On many systems, only the system administrator is authorized to schedule at jobs. Using the at.allow file to control who can run at jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files.

Solution:
-IF- at is installed on the system:

Run the following script to:

 - /etc/at.allow :
 - Create the file if it doesn't exist
 - Change owner or user root
 - If group daemon exists, change to group daemon else change group to root
 - Change mode to 640 or more restrictive

 - -IF- /etc/at.deny exists:
 - Change owner or user root
 - If group daemon exists, change to group daemon else change group to root
 - Change mode to 640 or more restrictive

#!/usr/bin/env bash

{
   grep -Pq -- '^daemonb' /etc/group &amp;&amp; l_group=""daemon"" || l_group=""root""
   [ ! -e ""/etc/at.allow"" ] &amp;&amp; touch /etc/at.allow
   chown root:""$l_group"" /etc/at.allow
   chmod u-x,g-wx,o-rwx /etc/at.allow
   [ -e ""/etc/at.deny"" ] &amp;&amp; chown root:""$l_group"" /etc/at.deny
   [ -e ""/etc/at.deny"" ] &amp;&amp; chmod u-x,g-wx,o-rwx /etc/at.deny
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
PASSED","-IF- at is installed on the system:

Run the following script to:

 - /etc/at.allow :
 - Create the file if it doesn't exist
 - Change owner or user root
 - If group daemon exists, change to group daemon else change group to root
 - Change mode to 640 or more restrictive

 - -IF- /etc/at.deny exists:
 - Change owner or user root
 - If group daemon exists, change to group daemon else change group to root
 - Change mode to 640 or more restrictive

#!/usr/bin/env bash

{
   grep -Pq -- '^daemonb' /etc/group &amp;&amp; l_group=""daemon"" || l_group=""root""
   [ ! -e ""/etc/at.allow"" ] &amp;&amp; touch /etc/at.allow
   chown root:""$l_group"" /etc/at.allow
   chmod u-x,g-wx,o-rwx /etc/at.allow
   [ -e ""/etc/at.deny"" ] &amp;&amp; chown root:""$l_group"" /etc/at.deny
   [ -e ""/etc/at.deny"" ] &amp;&amp; chmod u-x,g-wx,o-rwx /etc/at.deny
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.1.1 Ensure IPv6 status is identified"" : [WARNING]

Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's designed to supply IP addressing and additional security to support the predicted growth of connected devices. IPv6 is based on 128-bit addressing and can support 340 undecillion, which is 340 trillion3 addresses.

Features of IPv6

 - Hierarchical addressing and routing infrastructure
 - Stateful and Stateless configuration
 - Support for quality of service (QoS)
 - An ideal protocol for neighboring node interaction

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations.

-IF- dual stack and IPv6 are not used in your environment, IPv6 may be disabled to reduce the attack surface of the system, and recommendations pertaining to IPv6 can be skipped.

Note: It is recommended that IPv6 be enabled and configured unless this is against local site policy

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Enable or disable IPv6 in accordance with system requirements and local site policy

Impact:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack.

When enabled, IPv6 will require additional configuration to reduce risk to the system.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/grep -Pqs '^\h*0\b' /sys/module/ipv6/parameters/disable && echo -e ""\n - IPv6 is enabled\n"" || echo -e ""\n - IPv6 is not enabled\n""
expect: Manual Review Required

Actual Value:
The command '/bin/grep -Pqs '^\h*0\b' /sys/module/ipv6/parameters/disable && echo -e ""\n - IPv6 is enabled\n"" || echo -e ""\n - IPv6 is not enabled\n""' returned : 

-e 
 - IPv6 is enabled","Enable or disable IPv6 in accordance with system requirements and local site policy

Impact:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack.

When enabled, IPv6 will require additional configuration to reduce risk to the system.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.1.2 Ensure wireless interfaces are disabled"" : [PASSED]

Wireless networking is used when wired networks are unavailable.

-IF- wireless is not to be used, wireless devices can be disabled to reduce the potential attack surface.

Solution:
Run the following script to disable any wireless interfaces:

#!/usr/bin/env bash

{
   module_fix()
   {
      if ! modprobe -n -v ""$l_mname"" | grep -P -- '^h*install /bin/(true|false)'; then
         echo -e "" - setting module: \""$l_mname\"" to be un-loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mname"".conf
      fi
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e "" - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
      if ! grep -Pq -- ""^h*blacklisth+$l_mnameb"" /etc/modprobe.d/*; then
         echo -e "" - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mname"".conf
      fi
   }
   if [ -n ""$(find /sys/class/net/*/ -type d -name wireless)"" ]; then
      l_dname=$(for driverdir in $(find /sys/class/net/*/ -type d -name wireless | xargs -0 dirname); do basename ""$(readlink -f ""$driverdir""/device/driver/module)"";done | sort -u)
      for l_mname in $l_dname; do
         module_fix
      done
   fi
}

Impact:

Many if not all laptop workstations and some desktop workstations will connect via wireless requiring these interfaces be enabled.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|15.4,CSCv7|15.5,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$
timeout: 7200

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - System has no wireless NICs installed","Run the following script to disable any wireless interfaces:

#!/usr/bin/env bash

{
   module_fix()
   {
      if ! modprobe -n -v ""$l_mname"" | grep -P -- '^h*install /bin/(true|false)'; then
         echo -e "" - setting module: \""$l_mname\"" to be un-loadable""
         echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mname"".conf
      fi
      if lsmod | grep ""$l_mname"" > /dev/null 2>&amp;1; then
         echo -e "" - unloading module \""$l_mname\""""
         modprobe -r ""$l_mname""
      fi
      if ! grep -Pq -- ""^h*blacklisth+$l_mnameb"" /etc/modprobe.d/*; then
         echo -e "" - deny listing \""$l_mname\""""
         echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mname"".conf
      fi
   }
   if [ -n ""$(find /sys/class/net/*/ -type d -name wireless)"" ]; then
      l_dname=$(for driverdir in $(find /sys/class/net/*/ -type d -name wireless | xargs -0 dirname); do basename ""$(readlink -f ""$driverdir""/device/driver/module)"";done | sort -u)
      for l_mname in $l_dname; do
         module_fix
      done
   fi
}

Impact:

Many if not all laptop workstations and some desktop workstations will connect via wireless requiring these interfaces be enabled.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.1.3 Ensure bluetooth services are not in use"" : [PASSED]

Bluetooth is a short-range wireless technology standard that is used for exchanging data between devices over short distances. It employs UHF radio waves in the ISM bands, from 2.402 GHz to 2.48 GHz. It is mainly used as an alternative to wire connections.

An attacker may be able to find a way to access or corrupt your data. One example of this type of activity is bluesnarfing which refers to attackers using a Bluetooth connection to steal information off of your Bluetooth device. Also, viruses or other malicious code can take advantage of Bluetooth technology to infect other devices. If you are infected, your data may be corrupted, compromised, stolen, or lost.

Solution:
Run the following commands to stop bluetooth.service and remove the bluez package:

# systemctl stop bluetooth.service
# apt purge bluez

- OR -

- IF - the bluez package is required as a dependency:

Run the following commands to stop and mask bluetooth.service :

# systemctl stop bluetooth.service
# systemctl mask bluetooth.service

Note: A reboot may be required

Impact:

Many personal electronic devices (PEDs) use Bluetooth technology. For example, you may be able to operate your computer with a wireless keyboard. Disabling Bluetooth will prevent these devices from connecting to the system.

There may be packages that are dependent on the bluez package. If the bluez package is removed, these dependent packages will be removed as well. Before removing the bluez package, review any dependent packages to determine if they are required on the system.

-IF- a dependent package is required: stop and mask bluetooth.service leaving the bluez package installed.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: /bin/dpkg -s bluez 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s bluez 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'bluez' is not installed and no information is available","Run the following commands to stop bluetooth.service and remove the bluez package:

# systemctl stop bluetooth.service
# apt purge bluez

- OR -

- IF - the bluez package is required as a dependency:

Run the following commands to stop and mask bluetooth.service :

# systemctl stop bluetooth.service
# systemctl mask bluetooth.service

Note: A reboot may be required

Impact:

Many personal electronic devices (PEDs) use Bluetooth technology. For example, you may be able to operate your computer with a wireless keyboard. Disabling Bluetooth will prevent these devices from connecting to the system.

There may be packages that are dependent on the bluez package. If the bluez package is removed, these dependent packages will be removed as well. Before removing the bluez package, review any dependent packages to determine if they are required on the system.

-IF- a dependent package is required: stop and mask bluetooth.service leaving the bluez package installed.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.1 Ensure ip forwarding is disabled"" : [FAILED]

The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.

Setting net.ipv4.ip_forward and net.ipv6.conf.all.forwarding to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router.

Solution:
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.ip_forward = 0

Example:

# printf '%s
' ""net.ipv4.ip_forward = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.ip_forward=0
   sysctl -w net.ipv4.route.flush=1
}

- IF - IPv6 is enabled on the system:

Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.forwarding = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.forwarding = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.forwarding=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

Impact:

IP forwarding is required on systems configured to act as a router. If these parameters are disabled, the system will not be able to perform as a router.

Many Cloud Service Provider (CSP) hosted systems require IP forwarding to be enabled. If the system is running on a CSP platform, this requirement should be reviewed before disabling IP forwarding.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.ip_forward"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv4.ip_forward"" is not set in an included file
   ** Note: ""net.ipv4.ip_forward"" May be set in a file that's ignored by load procedure **

 - ""net.ipv6.conf.all.forwarding"" is not set in an included file
   ** Note: ""net.ipv6.conf.all.forwarding"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""net.ipv6.conf.all.forwarding"" is correctly set to ""0"" in the running configuration","Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.ip_forward = 0

Example:

# printf '%s
' ""net.ipv4.ip_forward = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.ip_forward=0
   sysctl -w net.ipv4.route.flush=1
}

- IF - IPv6 is enabled on the system:

Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.forwarding = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.forwarding = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.forwarding=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

Impact:

IP forwarding is required on systems configured to act as a router. If these parameters are disabled, the system will not be able to perform as a router.

Many Cloud Service Provider (CSP) hosted systems require IP forwarding to be enabled. If the system is running on a CSP platform, this requirement should be reviewed before disabling IP forwarding.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.10 Ensure tcp syn cookies is enabled"" : [PASSED]

When tcp_syncookies is set, the kernel will handle TCP SYN packets normally until the half-open connection queue is full, at which time, the SYN cookie functionality kicks in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply replies to the SYN with a SYN|ACK, but will include a specially crafted TCP sequence number that encodes the source and destination IP address and port number and the time the packet was sent. A legitimate connection would send the ACK packet of the three way handshake with the specially crafted sequence number. This allows the system to verify that it has received a valid response to a SYN cookie and allow the connection, even though there is no corresponding SYN in the queue.

Attackers use SYN flood attacks to perform a denial of service attacked on a system by sending many SYN packets without completing the three way handshake. This will quickly use up slots in the kernel's half-open connection queue and prevent legitimate connections from succeeding. Setting net.ipv4.tcp_syncookies to 1 enables SYN cookies, allowing the system to keep accepting valid connections, even if under a denial of service attack.

Solution:
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.tcp_syncookies = 1

Example:

# printf '%s
' ""net.ipv4.tcp_syncookies = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.tcp_syncookies=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - ""net.ipv4.tcp_syncookies"" is correctly set to ""1"" in the running configuration
 - ""net.ipv4.tcp_syncookies"" is correctly set to ""1"" in ""/etc/sysctl.d/90-anapaya.conf""","Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.tcp_syncookies = 1

Example:

# printf '%s
' ""net.ipv4.tcp_syncookies = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.tcp_syncookies=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.11 Ensure ipv6 router advertisements are not accepted"" : [FAILED]

This setting disables the system's ability to accept IPv6 router advertisements.

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes. Setting net.ipv6.conf.all.accept_ra and net.ipv6.conf.default.accept_ra to 0 disables the system's ability to accept IPv6 router advertisements.

Solution:
- IF - IPv6 is enabled on the system:

Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.accept_ra = 0
 - net.ipv6.conf.default.accept_ra = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.accept_ra = 0"" ""net.ipv6.conf.default.accept_ra = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.accept_ra=0
   sysctl -w net.ipv6.conf.default.accept_ra=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv6.conf.all.accept_ra"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv6.conf.all.accept_ra"" is not set in an included file
   ** Note: ""net.ipv6.conf.all.accept_ra"" May be set in a file that's ignored by load procedure **

 - ""net.ipv6.conf.default.accept_ra"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv6.conf.default.accept_ra"" is not set in an included file
   ** Note: ""net.ipv6.conf.default.accept_ra"" May be set in a file that's ignored by load procedure **","- IF - IPv6 is enabled on the system:

Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.accept_ra = 0
 - net.ipv6.conf.default.accept_ra = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.accept_ra = 0"" ""net.ipv6.conf.default.accept_ra = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.accept_ra=0
   sysctl -w net.ipv6.conf.default.accept_ra=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.2 Ensure packet redirect sending is disabled"" : [FAILED]

ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.

An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system.

Solution:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.send_redirects = 0
 - net.ipv4.conf.default.send_redirects = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.send_redirects = 0"" ""net.ipv4.conf.default.send_redirects = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.send_redirects=0
   sysctl -w net.ipv4.conf.default.send_redirects=0
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

Impact:

IP forwarding is required on systems configured to act as a router. If these parameters are disabled, the system will not be able to perform as a router.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.conf.all.send_redirects"" is not set in an included file
   ** Note: ""net.ipv4.conf.all.send_redirects"" May be set in a file that's ignored by load procedure **

 - ""net.ipv4.conf.default.send_redirects"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv4.conf.default.send_redirects"" is not set in an included file
   ** Note: ""net.ipv4.conf.default.send_redirects"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""net.ipv4.conf.all.send_redirects"" is correctly set to ""0"" in the running configuration","Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.send_redirects = 0
 - net.ipv4.conf.default.send_redirects = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.send_redirects = 0"" ""net.ipv4.conf.default.send_redirects = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.send_redirects=0
   sysctl -w net.ipv4.conf.default.send_redirects=0
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

Impact:

IP forwarding is required on systems configured to act as a router. If these parameters are disabled, the system will not be able to perform as a router.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.3 Ensure bogus icmp responses are ignored"" : [FAILED]

Setting net.ipv4.icmp_ignore_bogus_error_responses to 1 prevents the kernel from logging bogus responses (RFC-1122 non-compliant) from broadcast reframes, keeping file systems from filling up with useless log messages.

Some routers (and some attackers) will send responses that violate RFC-1122 and attempt to fill up a log file system with many useless error messages.

Solution:
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.icmp_ignore_bogus_error_responses = 1

Example:

# printf '%s
' ""net.ipv4.icmp_ignore_bogus_error_responses = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.icmp_ignore_bogus_error_responses"" is not set in an included file
   ** Note: ""net.ipv4.icmp_ignore_bogus_error_responses"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""net.ipv4.icmp_ignore_bogus_error_responses"" is correctly set to ""1"" in the running configuration","Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.icmp_ignore_bogus_error_responses = 1

Example:

# printf '%s
' ""net.ipv4.icmp_ignore_bogus_error_responses = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.4 Ensure broadcast icmp requests are ignored"" : [FAILED]

Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 will cause the system to ignore all ICMP echo and timestamp requests to broadcast and multicast addresses.

Accepting ICMP echo and timestamp requests with broadcast or multicast destinations for your network could be used to trick your host into starting (or participating) in a Smurf attack. A Smurf attack relies on an attacker sending large amounts of ICMP broadcast messages with a spoofed source address. All hosts receiving this message and responding would send echo-reply messages back to the spoofed address, which is probably not routable. If many hosts respond to the packets, the amount of traffic on the network could be significantly multiplied.

Solution:
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.icmp_echo_ignore_broadcasts = 1

Example:

# printf '%s
' ""net.ipv4.icmp_echo_ignore_broadcasts = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.icmp_echo_ignore_broadcasts"" is not set in an included file
   ** Note: ""net.ipv4.icmp_echo_ignore_broadcasts"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""net.ipv4.icmp_echo_ignore_broadcasts"" is correctly set to ""1"" in the running configuration","Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.icmp_echo_ignore_broadcasts = 1

Example:

# printf '%s
' ""net.ipv4.icmp_echo_ignore_broadcasts = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.5 Ensure icmp redirects are not accepted"" : [FAILED]

ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables.

ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects net.ipv4.conf.default.accept_redirects net.ipv6.conf.all.accept_redirects and net.ipv6.conf.default.accept_redirects to 0 the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.

Solution:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.accept_redirects = 0
 - net.ipv4.conf.default.accept_redirects = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.accept_redirects = 0"" ""net.ipv4.conf.default.accept_redirects = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.accept_redirects=0
   sysctl -w net.ipv4.conf.default.accept_redirects=0
   sysctl -w net.ipv4.route.flush=1
}

- IF - IPv6 is enabled on the system:

Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.accept_redirects = 0
 - net.ipv6.conf.default.accept_redirects = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.accept_redirects = 0"" ""net.ipv6.conf.default.accept_redirects = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.accept_redirects=0
   sysctl -w net.ipv6.conf.default.accept_redirects=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.conf.all.accept_redirects"" is not set in an included file
   ** Note: ""net.ipv4.conf.all.accept_redirects"" May be set in a file that's ignored by load procedure **

 - ""net.ipv4.conf.default.accept_redirects"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv4.conf.default.accept_redirects"" is not set in an included file
   ** Note: ""net.ipv4.conf.default.accept_redirects"" May be set in a file that's ignored by load procedure **

 - ""net.ipv6.conf.all.accept_redirects"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv6.conf.all.accept_redirects"" is not set in an included file
   ** Note: ""net.ipv6.conf.all.accept_redirects"" May be set in a file that's ignored by load procedure **

 - ""net.ipv6.conf.default.accept_redirects"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv6.conf.default.accept_redirects"" is not set in an included file
   ** Note: ""net.ipv6.conf.default.accept_redirects"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""net.ipv4.conf.all.accept_redirects"" is correctly set to ""0"" in the running configuration","Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.accept_redirects = 0
 - net.ipv4.conf.default.accept_redirects = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.accept_redirects = 0"" ""net.ipv4.conf.default.accept_redirects = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.accept_redirects=0
   sysctl -w net.ipv4.conf.default.accept_redirects=0
   sysctl -w net.ipv4.route.flush=1
}

- IF - IPv6 is enabled on the system:

Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.accept_redirects = 0
 - net.ipv6.conf.default.accept_redirects = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.accept_redirects = 0"" ""net.ipv6.conf.default.accept_redirects = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.accept_redirects=0
   sysctl -w net.ipv6.conf.default.accept_redirects=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.6 Ensure secure icmp redirects are not accepted"" : [FAILED]

Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.

It is still possible for even known gateways to be compromised. Setting net.ipv4.conf.all.secure_redirects and net.ipv4.conf.default.secure_redirects to 0 protects the system from routing table updates by possibly compromised known gateways.

Solution:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.secure_redirects = 0
 - net.ipv4.conf.default.secure_redirects = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.secure_redirects = 0"" ""net.ipv4.conf.default.secure_redirects = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.secure_redirects=0
   sysctl -w net.ipv4.conf.default.secure_redirects=0
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.conf.all.secure_redirects"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv4.conf.all.secure_redirects"" is not set in an included file
   ** Note: ""net.ipv4.conf.all.secure_redirects"" May be set in a file that's ignored by load procedure **

 - ""net.ipv4.conf.default.secure_redirects"" is incorrectly set to ""1"" in the running configuration and should have a value of: ""0""
 - ""net.ipv4.conf.default.secure_redirects"" is not set in an included file
   ** Note: ""net.ipv4.conf.default.secure_redirects"" May be set in a file that's ignored by load procedure **","Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.secure_redirects = 0
 - net.ipv4.conf.default.secure_redirects = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.secure_redirects = 0"" ""net.ipv4.conf.default.secure_redirects = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.secure_redirects=0
   sysctl -w net.ipv4.conf.default.secure_redirects=0
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.7 Ensure reverse path filtering is enabled"" : [FAILED]

Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).

Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing.

Solution:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.rp_filter = 1
 - net.ipv4.conf.default.rp_filter = 1

Example:

# printf '%s
' ""net.ipv4.conf.all.rp_filter = 1"" ""net.ipv4.conf.default.rp_filter = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.rp_filter=1
   sysctl -w net.ipv4.conf.default.rp_filter=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

Impact:

If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.conf.all.rp_filter"" is incorrectly set to ""0"" in the running configuration and should have a value of: ""1""
 - ""net.ipv4.conf.all.rp_filter"" is incorrectly set to ""0"" in ""/etc/sysctl.d/90-anapaya.conf"" and should have a value of: ""1""

 - ""net.ipv4.conf.default.rp_filter"" is incorrectly set to ""2"" in the running configuration and should have a value of: ""1""
 - ""net.ipv4.conf.default.rp_filter"" is incorrectly set to ""2"" in ""/usr/lib/sysctl.d/50-default.conf"" and should have a value of: ""1""","Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.rp_filter = 1
 - net.ipv4.conf.default.rp_filter = 1

Example:

# printf '%s
' ""net.ipv4.conf.all.rp_filter = 1"" ""net.ipv4.conf.default.rp_filter = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.rp_filter=1
   sysctl -w net.ipv4.conf.default.rp_filter=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

Impact:

If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.8 Ensure source routed packets are not accepted"" : [FAILED]

In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Setting net.ipv4.conf.all.accept_source_route net.ipv4.conf.default.accept_source_route net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing.

Solution:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.accept_source_route = 0
 - net.ipv4.conf.default.accept_source_route = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.accept_source_route = 0"" ""net.ipv4.conf.default.accept_source_route = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.accept_source_route=0
   sysctl -w net.ipv4.conf.default.accept_source_route=0
   sysctl -w net.ipv4.route.flush=1
}

- IF - IPv6 is enabled on the system:

Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.accept_source_route = 0
 - net.ipv6.conf.default.accept_source_route = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.accept_source_route = 0"" ""net.ipv6.conf.default.accept_source_route = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following command to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.accept_source_route=0
   sysctl -w net.ipv6.conf.default.accept_source_route=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.conf.all.accept_source_route"" is not set in an included file
   ** Note: ""net.ipv4.conf.all.accept_source_route"" May be set in a file that's ignored by load procedure **

 - ""net.ipv6.conf.all.accept_source_route"" is not set in an included file
   ** Note: ""net.ipv6.conf.all.accept_source_route"" May be set in a file that's ignored by load procedure **

 - ""net.ipv6.conf.default.accept_source_route"" is not set in an included file
   ** Note: ""net.ipv6.conf.default.accept_source_route"" May be set in a file that's ignored by load procedure **



- Correctly set:

 - ""net.ipv4.conf.all.accept_source_route"" is correctly set to ""0"" in the running configuration
 - ""net.ipv4.conf.default.accept_source_route"" is correctly set to ""0"" in the running configuration
 - ""net.ipv4.conf.default.accept_source_route"" is correctly set to ""0"" in ""/usr/lib/sysctl.d/50-default.conf""

 - ""net.ipv6.conf.all.accept_source_route"" is correctly set to ""0"" in the running configuration
 - ""net.ipv6.conf.default.accept_source_route"" is correctly set to ""0"" in the running configuration","Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.accept_source_route = 0
 - net.ipv4.conf.default.accept_source_route = 0

Example:

# printf '%s
' ""net.ipv4.conf.all.accept_source_route = 0"" ""net.ipv4.conf.default.accept_source_route = 0"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.accept_source_route=0
   sysctl -w net.ipv4.conf.default.accept_source_route=0
   sysctl -w net.ipv4.route.flush=1
}

- IF - IPv6 is enabled on the system:

Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv6.conf.all.accept_source_route = 0
 - net.ipv6.conf.default.accept_source_route = 0

Example:

# printf '%s
' ""net.ipv6.conf.all.accept_source_route = 0"" ""net.ipv6.conf.default.accept_source_route = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf

Run the following command to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv6.conf.all.accept_source_route=0
   sysctl -w net.ipv6.conf.default.accept_source_route=0
   sysctl -w net.ipv6.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""3.3.9 Ensure suspicious packets are logged"" : [FAILED]

When enabled, this feature logs packets with un-routable source addresses to the kernel log.

Setting net.ipv4.conf.all.log_martians and net.ipv4.conf.default.log_martians to 1 enables this feature. Logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system.

Solution:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.log_martians = 1
 - net.ipv4.conf.default.log_martians = 1

Example:

# printf '%s
' ""net.ipv4.conf.all.log_martians = 1"" ""net.ipv4.conf.default.log_martians = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.log_martians=1
   sysctl -w net.ipv4.conf.default.log_martians=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""net.ipv4.conf.all.log_martians"" is incorrectly set to ""0"" in the running configuration and should have a value of: ""1""
 - ""net.ipv4.conf.all.log_martians"" is not set in an included file
   ** Note: ""net.ipv4.conf.all.log_martians"" May be set in a file that's ignored by load procedure **

 - ""net.ipv4.conf.default.log_martians"" is incorrectly set to ""0"" in the running configuration and should have a value of: ""1""
 - ""net.ipv4.conf.default.log_martians"" is not set in an included file
   ** Note: ""net.ipv4.conf.default.log_martians"" May be set in a file that's ignored by load procedure **","Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :

 - net.ipv4.conf.all.log_martians = 1
 - net.ipv4.conf.default.log_martians = 1

Example:

# printf '%s
' ""net.ipv4.conf.all.log_martians = 1"" ""net.ipv4.conf.default.log_martians = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf

Run the following script to set the active kernel parameters:

#!/usr/bin/env bash

{
   sysctl -w net.ipv4.conf.all.log_martians=1
   sysctl -w net.ipv4.conf.default.log_martians=1
   sysctl -w net.ipv4.route.flush=1
}

Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.1.1 Ensure ufw is installed"" : [PASSED]

The Uncomplicated Firewall (ufw) is a frontend for iptables and is particularly well-suited for host-based firewalls. ufw provides a framework for managing netfilter, as well as a command-line interface for manipulating the firewall

A firewall utility is required to configure the Linux kernel's netfilter framework via the iptables or nftables back-end.

The Linux kernel's netfilter framework host-based firewall can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host.

Note: Only one firewall utility should be installed and configured. UFW is dependent on the iptables package

Solution:
Run the following command to install Uncomplicated Firewall (UFW):

apt install ufw

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command to install Uncomplicated Firewall (UFW):

apt install ufw","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.1.2 Ensure iptables-persistent is not installed with ufw"" : [PASSED]

The iptables-persistent is a boot-time loader for netfilter rules, iptables plugin

Running both ufw and the services included in the iptables-persistent package may lead to conflict

Solution:
Run the following command to remove the iptables-persistent package:

# apt purge iptables-persistent

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command to remove the iptables-persistent package:

# apt purge iptables-persistent","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.1.3 Ensure ufw service is enabled"" : [PASSED]

UncomplicatedFirewall (ufw) is a frontend for iptables. ufw provides a framework for managing netfilter, as well as a command-line and available graphical user interface for manipulating the firewall.

Note:

 - When running ufw enable or starting ufw via its initscript, ufw will flush its chains. This is required so ufw can maintain a consistent state, but it may drop existing connections (eg ssh). ufw does support adding rules before enabling the firewall.
 - Run the following command before running ufw enable

# ufw allow proto tcp from any to any port 22
 - The rules will still be flushed, but the ssh port will be open after enabling the firewall. Please note that once ufw is 'enabled', ufw will not flush the chains when adding or removing rules (but will when modifying a rule or changing the default policy)
 - By default, ufw will prompt when enabling the firewall while running under ssh. This can be disabled by using ufw --force enable

The ufw service must be enabled and running in order for ufw to protect the system

Solution:
Run the following command to unmask the ufw daemon:

# systemctl unmask ufw.service

Run the following command to enable and start the ufw daemon:

# systemctl --now enable ufw.service

active

Run the following command to enable ufw:

# ufw enable

Impact:

Changing firewall settings while connected over network can result in being locked out of the system.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command to unmask the ufw daemon:

# systemctl unmask ufw.service

Run the following command to enable and start the ufw daemon:

# systemctl --now enable ufw.service

active

Run the following command to enable ufw:

# ufw enable

Impact:

Changing firewall settings while connected over network can result in being locked out of the system.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.1.4 Ensure ufw loopback traffic is configured"" : [PASSED]

Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6).

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

Solution:
Run the following commands to implement the loopback rules:

# ufw allow in on lo
# ufw allow out on lo
# ufw deny in from 127.0.0.0/8
# ufw deny in from ::1

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following commands to implement the loopback rules:

# ufw allow in on lo
# ufw allow out on lo
# ufw deny in from 127.0.0.0/8
# ufw deny in from ::1","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.1.5 Ensure ufw outbound connections are configured"" : [PASSED]

Configure the firewall rules for new outbound connections.

Note:

 - Changing firewall settings while connected over network can result in being locked out of the system.
 - Unlike iptables, when a new outbound rule is added, ufw automatically takes care of associated established connections, so no rules for the latter kind are required.

If rules are not in place for new outbound connections all packets will be dropped by the default policy preventing network usage.

Solution:
Configure ufw in accordance with site policy. The following commands will implement a policy to allow all outbound connections on all interfaces:

# ufw allow out on all

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Configure ufw in accordance with site policy. The following commands will implement a policy to allow all outbound connections on all interfaces:

# ufw allow out on all","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.1.6 Ensure ufw firewall rules exist for all open ports"" : [PASSED]

Services and ports can be accepted or explicitly rejected.

Note:

 - Changing firewall settings while connected over network can result in being locked out of the system
 - The remediation command opens up the port to traffic from all sources. Consult ufw documentation and set any restrictions in compliance with site policy

To reduce the attack surface of a system, all services and ports should be blocked unless required.

 - Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.
 - Without a firewall rule configured for open ports, the default firewall policy will drop all packets to these ports.
 - Required ports should have a firewall rule created to allow approved connections in accordance with local site policy.
 - Unapproved ports should have an explicit deny rule created.

Solution:
For each port identified in the audit which does not have a firewall rule, evaluate the service listening on the port and add a rule for accepting or denying inbound connections in accordance with local site policy:

Examples:

# ufw allow in <port>/<tcp or udp protocol>

# ufw deny in <port>/<tcp or udp protocol>

Note: Examples create rules for from any, to any. More specific rules should be concentered when allowing inbound traffic e.g only traffic from this network.

Example to allow traffic on port 443 using the tcp protocol from the 192.168.1.0 network:

ufw allow from 192.168.1.0/24 to any proto tcp port 443

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","For each port identified in the audit which does not have a firewall rule, evaluate the service listening on the port and add a rule for accepting or denying inbound connections in accordance with local site policy:

Examples:

# ufw allow in <port>/<tcp or udp protocol>

# ufw deny in <port>/<tcp or udp protocol>

Note: Examples create rules for from any, to any. More specific rules should be concentered when allowing inbound traffic e.g only traffic from this network.

Example to allow traffic on port 443 using the tcp protocol from the 192.168.1.0 network:

ufw allow from 192.168.1.0/24 to any proto tcp port 443","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.1.7 Ensure ufw default deny firewall policy"" : [PASSED]

A default deny policy on connections ensures that any unconfigured network usage will be rejected.

Note: Any port or protocol without a explicit allow before the default deny will be blocked

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.

Solution:
Run the following commands to implement a default

deny

policy:

# ufw default deny incoming
# ufw default deny outgoing
# ufw default deny routed

Impact:

Any port and protocol not explicitly allowed will be blocked. The following rules should be considered before applying the default deny.

ufw allow out http
  ufw allow out https
  ufw allow out ntp # Network Time Protocol
  ufw allow out to any port 53 # DNS
  ufw allow out to any port 853 # DNS over TLS
  ufw logging on

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following commands to implement a default

deny

policy:

# ufw default deny incoming
# ufw default deny outgoing
# ufw default deny routed

Impact:

Any port and protocol not explicitly allowed will be blocked. The following rules should be considered before applying the default deny.

ufw allow out http
  ufw allow out https
  ufw allow out ntp # Network Time Protocol
  ufw allow out to any port 53 # DNS
  ufw allow out to any port 853 # DNS over TLS
  ufw logging on","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.1 Ensure nftables is installed"" : [PASSED]

nftables provides a new in-kernel packet classification framework that is based on a network-specific Virtual Machine (VM) and a new nft userspace command line tool. nftables reuses the existing Netfilter subsystems such as the existing hook infrastructure, the connection tracking system, NAT, userspace queuing and logging subsystem.

Notes:

 - nftables is available in Linux kernel 3.13 and newer
 - Only one firewall utility should be installed and configured
 - Changing firewall settings while connected over the network can result in being locked out of the system

nftables is a subsystem of the Linux kernel that can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host.

Solution:
Run the following command to install nftables :

# apt install nftables

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command to install nftables :

# apt install nftables","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.10 Ensure nftables rules are permanent"" : [PASSED]

nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames.

The nftables service reads the /etc/nftables.conf file for a nftables file or files to include in the nftables ruleset.

A nftables ruleset containing the input, forward, and output base chains allow network traffic to be filtered.

Changes made to nftables ruleset only affect the live system, you will also need to configure the nftables ruleset to apply on boot

Solution:
Edit the /etc/nftables.conf file and un-comment or add a line with include <Absolute path to nftables rules file> for each nftables file you want included in the nftables ruleset on boot

Example:

# vi /etc/nftables.conf

Add the line:

include ""/etc/nftables.rules""

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Edit the /etc/nftables.conf file and un-comment or add a line with include <Absolute path to nftables rules file> for each nftables file you want included in the nftables ruleset on boot

Example:

# vi /etc/nftables.conf

Add the line:

include ""/etc/nftables.rules""","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.2 Ensure ufw is uninstalled or disabled with nftables"" : [PASSED]

Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to be easy to use.

Running both the nftables service and ufw may lead to conflict and unexpected results.

Solution:
Run one of the following to either remove ufw or disable ufw and mask ufw.service :

Run the following command to remove ufw :

# apt purge ufw

-OR-

Run the following commands to disable ufw and mask ufw.service :

# ufw disable
# systemctl stop ufw.service
# systemctl mask ufw.service

Note: ufw disable needs to be run before systemctl mask ufw.service in order to correctly disable UFW

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run one of the following to either remove ufw or disable ufw and mask ufw.service :

Run the following command to remove ufw :

# apt purge ufw

-OR-

Run the following commands to disable ufw and mask ufw.service :

# ufw disable
# systemctl stop ufw.service
# systemctl mask ufw.service

Note: ufw disable needs to be run before systemctl mask ufw.service in order to correctly disable UFW","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.3 Ensure iptables are flushed with nftables"" : [PASSED]

nftables is a replacement for iptables, ip6tables, ebtables and arptables

It is possible to mix iptables and nftables. However, this increases complexity and also the chance to introduce errors. For simplicity flush out all iptables rules, and ensure it is not loaded

Solution:
Run the following commands to flush iptables:

For iptables:

# iptables -F

For ip6tables:

# ip6tables -F

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following commands to flush iptables:

For iptables:

# iptables -F

For ip6tables:

# ip6tables -F","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.4 Ensure a nftables table exists"" : [PASSED]

Tables hold chains. Each table only has one address family and only applies to packets of this family. Tables can have one of five families.

nftables doesn't have any default tables. Without a table being build, nftables will not filter network traffic.

Solution:
Run the following command to create a table in nftables

# nft create table inet <table name>

Example:

# nft create table inet filter

Impact:

Adding rules to a running nftables can cause loss of connectivity to the system

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command to create a table in nftables

# nft create table inet <table name>

Example:

# nft create table inet filter

Impact:

Adding rules to a running nftables can cause loss of connectivity to the system","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.5 Ensure nftables base chains exist"" : [PASSED]

Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.

If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables.

Solution:
Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 ; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 ; }

# nft create chain inet filter forward { type filter hook forward priority 0 ; }

# nft create chain inet filter output { type filter hook output priority 0 ; }

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 ; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 ; }

# nft create chain inet filter forward { type filter hook forward priority 0 ; }

# nft create chain inet filter output { type filter hook output priority 0 ; }

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.6 Ensure nftables loopback traffic is configured"" : [PASSED]

Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

Solution:
Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept # nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

-IF- IPv6 is enabled on the system:

Run the following command to implement the IPv6 loopback rule:

# nft add rule inet filter input ip6 saddr ::1 counter drop

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept # nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

-IF- IPv6 is enabled on the system:

Run the following command to implement the IPv6 loopback rule:

# nft add rule inet filter input ip6 saddr ::1 counter drop","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.7 Ensure nftables outbound and established connections are configured"" : [PASSED]

Configure the firewall rules for new outbound, and established connections

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.

Solution:
Configure nftables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# nft add rule inet filter input ip protocol tcp ct state established accept

# nft add rule inet filter input ip protocol udp ct state established accept

# nft add rule inet filter input ip protocol icmp ct state established accept

# nft add rule inet filter output ip protocol tcp ct state new,related,established accept

# nft add rule inet filter output ip protocol udp ct state new,related,established accept

# nft add rule inet filter output ip protocol icmp ct state new,related,established accept

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Configure nftables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# nft add rule inet filter input ip protocol tcp ct state established accept

# nft add rule inet filter input ip protocol udp ct state established accept

# nft add rule inet filter input ip protocol icmp ct state established accept

# nft add rule inet filter output ip protocol tcp ct state new,related,established accept

# nft add rule inet filter output ip protocol udp ct state new,related,established accept

# nft add rule inet filter output ip protocol icmp ct state new,related,established accept","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.8 Ensure nftables default deny firewall policy"" : [PASSED]

Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.

There are two policies: accept (Default) and drop. If the policy is set to accept the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack.

It is easier to white list acceptable usage than to black list unacceptable usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system.

Solution:
Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop ; }

Example:

# nft chain inet filter input { policy drop ; }

# nft chain inet filter forward { policy drop ; }

# nft chain inet filter output { policy drop ; }

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop ; }

Example:

# nft chain inet filter input { policy drop ; }

# nft chain inet filter forward { policy drop ; }

# nft chain inet filter output { policy drop ; }

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.2.9 Ensure nftables service is enabled"" : [PASSED]

The nftables service allows for the loading of nftables rulesets during boot, or starting on the nftables service

The nftables service restores the nftables rules from the rules files referenced in the /etc/nftables.conf file during boot or the starting of the nftables service

Solution:
Run the following command to enable the nftables service:

# systemctl enable nftables

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED","Run the following command to enable the nftables service:

# systemctl enable nftables","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.1.1 Ensure iptables packages are installed"" : [PASSED]

iptables is a utility program that allows a system administrator to configure the tables provided by the Linux kernel firewall, implemented as different Netfilter modules, and the chains and rules it stores. Different kernel modules and programs are used for different protocols; iptables applies to IPv4, ip6tables to IPv6, arptables to ARP, and ebtables to Ethernet frames.

A method of configuring and maintaining firewall rules is necessary to configure a Host Based Firewall.

Solution:
Run the following command to install iptables and iptables-persistent

# apt install iptables iptables-persistent

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - dpkg check iptables-persistent
The command '/bin/dpkg -s iptables-persistent 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

Status: install ok installed

-------------------------
PASSED - dpkg check iptables
The command '/bin/dpkg -s iptables 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

Status: install ok installed","Run the following command to install iptables and iptables-persistent

# apt install iptables iptables-persistent","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.1.2 Ensure nftables is not installed with iptables"" : [FAILED]

nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.

Running both iptables and nftables may lead to conflict.

Solution:
Run the following command to remove nftables :

# apt purge nftables

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
cmd: /bin/dpkg -s nftables 2>&1 | /bin/grep -E '(Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s nftables 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

Status: install ok installed","Run the following command to remove nftables :

# apt purge nftables","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.1.3 Ensure ufw is uninstalled or disabled with iptables"" : [PASSED]

Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to be easy to use.

 - Uses a command-line interface consisting of a small number of simple commands
 - Uses iptables for configuration

Running iptables.persistent with ufw enabled may lead to conflict and unexpected results.

Solution:
Run one of the following commands to either remove ufw or stop and mask ufw

Run the following command to remove ufw :

# apt purge ufw

- OR -

Run the following commands to disable ufw :

# ufw disable
# systemctl stop ufw
# systemctl mask ufw

Note: ufw disable needs to be run before systemctl mask ufw in order to correctly disable UFW

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
cmd: /bin/dpkg -s ufw 2>&1 | /bin/grep -E '(^Status:|not installed)'
expect: (^Status: deinstall ok|not installed)

Actual Value:
The command '/bin/dpkg -s ufw 2>&1 | /bin/grep -E '(^Status:|not installed)'' returned : 

dpkg-query: package 'ufw' is not installed and no information is available","Run one of the following commands to either remove ufw or stop and mask ufw

Run the following command to remove ufw :

# apt purge ufw

- OR -

Run the following commands to disable ufw :

# ufw disable
# systemctl stop ufw
# systemctl mask ufw

Note: ufw disable needs to be run before systemctl mask ufw in order to correctly disable UFW","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.2.1 Ensure iptables default deny firewall policy"" : [FAILED]

A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Notes:

 -

Changing firewall settings while connected over network can result in being locked out of the system

 -

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.

Solution:
Run the following commands to implement a default DROP policy:

# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - FORWARD
The command '/sbin/iptables -L -n | /bin/grep 'Chain FORWARD'' returned : 

Chain FORWARD (policy ACCEPT)

-------------------------
FAILED - INPUT
The command '/sbin/iptables -L -n | /bin/grep 'Chain INPUT'' returned : 

Chain INPUT (policy ACCEPT)

-------------------------
FAILED - OUTPUT
The command '/sbin/iptables -L -n | /bin/grep 'Chain OUTPUT'' returned : 

Chain OUTPUT (policy ACCEPT)","Run the following commands to implement a default DROP policy:

# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.2.2 Ensure iptables loopback traffic is configured"" : [FAILED]

Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8).

Notes:

 -

Changing firewall settings while connected over network can result in being locked out of the system

 -

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

Solution:
Run the following commands to implement the loopback rules:

# iptables -A INPUT -i lo -j ACCEPT
# iptables -A OUTPUT -o lo -j ACCEPT
# iptables -A INPUT -s 127.0.0.0/8 -j DROP

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - iptables OUTPUT
The command '/sbin/iptables -L OUTPUT -v -n | /bin/awk '{ a[$3"":""$4"":""$6"":""$7"":""$8"":""$9] = NR; print } END { if (a[""ACCEPT:all:*:lo:0.0.0.0/0:0.0.0.0/0""] > 0) { print ""pass"" } else { print ""fail"" } }'' returned : 

Chain OUTPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         
fail

-------------------------
FAILED - iptables INPUT
The command '/sbin/iptables -L INPUT -v -n | /bin/awk '{ a[$3"":""$4"":""$6"":""$7"":""$8"":""$9] = NR; print } END { if (a[""ACCEPT:all:lo:*:0.0.0.0/0:0.0.0.0/0""] > 0 && a[""ACCEPT:all:lo:*:0.0.0.0/0:0.0.0.0/0""] < a[""DROP:all:*:*:127.0.0.0/8:0.0.0.0/0""]) { print ""pass"" } else { print ""fail"" } }'' returned : 

Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         
fail","Run the following commands to implement the loopback rules:

# iptables -A INPUT -i lo -j ACCEPT
# iptables -A OUTPUT -o lo -j ACCEPT
# iptables -A INPUT -s 127.0.0.0/8 -j DROP","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.2.3 Ensure iptables outbound and established connections are configured"" : [WARNING]

Configure the firewall rules for new outbound, and established connections.

Notes:

 -

Changing firewall settings while connected over network can result in being locked out of the system

 -

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# iptables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
cmd: /sbin/iptables -L -v -n
expect: ^Manual Review Required$

Actual Value:
The command '/sbin/iptables -L -v -n' returned : 

Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         

Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         

Chain OUTPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination","Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# iptables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.2.4 Ensure iptables firewall rules exist for all open ports"" : [WARNING]

Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Note:

 - Changing firewall settings while connected over network can result in being locked out of the system
 - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well
 - The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# iptables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
cmd: /bin/ss -4tuln; /sbin/iptables -L INPUT -v -n
expect: ^Manual Review Required$

Actual Value:
The command '/bin/ss -4tuln; /sbin/iptables -L INPUT -v -n' returned : 

Netid  State   Recv-Q  Send-Q   Local Address:Port    Peer Address:Port Process 
udp    UNCONN  0       0        127.0.0.53%lo:53           0.0.0.0:*            
udp    UNCONN  0       0        192.168.112.1:443          0.0.0.0:*            
udp    UNCONN  0       0          198.18.30.3:443          0.0.0.0:*            
udp    UNCONN  0       0            127.0.0.1:443          0.0.0.0:*            
udp    UNCONN  0       0              0.0.0.0:30041        0.0.0.0:*            
udp    UNCONN  0       0        192.168.112.1:30042        0.0.0.0:*            
udp    UNCONN  0       0              0.0.0.0:51021        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41301        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41300        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41302        0.0.0.0:*            
tcp    LISTEN  0       4096       198.18.30.3:80           0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41401        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41400        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:443          0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41001        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41000        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41201        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41200        0.0.0.0:*            
tcp    LISTEN  0       4096       198.18.30.3:443          0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41101        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41100        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:9080         0.0.0.0:*            
tcp    LISTEN  0       4096     192.168.112.1:80           0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:9100         0.0.0.0:*            
tcp    LISTEN  0       5            127.0.0.1:33333        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:8888         0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41601        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:41600        0.0.0.0:*            
tcp    LISTEN  0       4096     192.168.112.1:443          0.0.0.0:*            
tcp    LISTEN  0       4096     192.168.112.1:30252        0.0.0.0:*            
tcp    LISTEN  0       4096     127.0.0.53%lo:53           0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:54497        0.0.0.0:*            
tcp    LISTEN  0       128            0.0.0.0:22           0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:48050        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:48061        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:48041        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:48021        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:48020        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:48022        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:48031        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:48030        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:48001        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:48000        0.0.0.0:*            
tcp    LISTEN  0       4096         127.0.0.1:19531        0.0.0.0:*            
Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination","For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# iptables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.3.1 Ensure ip6tables default deny firewall policy"" : [FAILED]

A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Note:

 - Changing firewall settings while connected over network can result in being locked out of the system
 - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.

Solution:
IF IPv6 is enabled on your system:

Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - INPUT
The command '/sbin/ip6tables -L -n | /bin/grep 'Chain INPUT'' returned : 

Chain INPUT (policy ACCEPT)

-------------------------
FAILED - OUTPUT
The command '/sbin/ip6tables -L -n | /bin/grep 'Chain OUTPUT'' returned : 

Chain OUTPUT (policy ACCEPT)

-------------------------
FAILED - FORWARD
The command '/sbin/ip6tables -L -n | /bin/grep 'Chain FORWARD'' returned : 

Chain FORWARD (policy ACCEPT)","IF IPv6 is enabled on your system:

Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.3.2 Ensure ip6tables loopback traffic is configured"" : [FAILED]

Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (::1).

Note:

 - Changing firewall settings while connected over network can result in being locked out of the system
 - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (::1) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

Solution:
Run the following commands to implement the loopback rules:

# ip6tables -A INPUT -i lo -j ACCEPT
# ip6tables -A OUTPUT -o lo -j ACCEPT
# ip6tables -A INPUT -s ::1 -j DROP

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - ip6tables output
The command '/sbin/ip6tables -L OUTPUT -v -n | /bin/awk '{ a[$3"":""$4"":""$5"":""$6"":""$7"":""$8] = NR; print } END { if (a[""ACCEPT:all:*:lo:::/0:::/0""] > 0) { print ""pass"" } else { print ""fail"" } }'' returned : 

Chain OUTPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         
fail

-------------------------
FAILED - ip6tables input
The command '/sbin/ip6tables -L INPUT -v -n | /bin/awk '{ a[$3"":""$4"":""$5"":""$6"":""$7"":""$8] = NR; print } END { if (a[""ACCEPT:all:lo:*:::/0:::/0""] > 0 && a[""ACCEPT:all:lo:*:::/0:::/0""] < a[""DROP:all:*:*:::1:::/0""]) { print ""pass"" } else { print ""fail"" } }'' returned : 

Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         
fail","Run the following commands to implement the loopback rules:

# ip6tables -A INPUT -i lo -j ACCEPT
# ip6tables -A OUTPUT -o lo -j ACCEPT
# ip6tables -A INPUT -s ::1 -j DROP","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.3.3 Ensure ip6tables outbound and established connections are configured"" : [WARNING]

Configure the firewall rules for new outbound, and established IPv6 connections.

Note:

 - Changing firewall settings while connected over network can result in being locked out of the system
 - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
cmd: /sbin/ip6tables -L -v -n
expect: Manual Review Required$

Actual Value:
The command '/sbin/ip6tables -L -v -n' returned : 

Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         

Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         

Chain OUTPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination","Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""4.3.3.4 Ensure ip6tables firewall rules exist for all open ports"" : [WARNING]

Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Note:

 - Changing firewall settings while connected over network can result in being locked out of the system
 - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well
 - The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1

Policy Value:
cmd: /bin/ss -6tuln; /sbin/ip6tables -L INPUT -v -n
expect: ^Manual Review Required$

Actual Value:
The command '/bin/ss -6tuln; /sbin/ip6tables -L INPUT -v -n' returned : 

Netid  State   Recv-Q  Send-Q   Local Address:Port    Peer Address:Port Process 
udp    UNCONN  0       0                 [::]:30041           [::]:*            
udp    UNCONN  0       0                 [::]:51021           [::]:*            
tcp    LISTEN  0       4096                 *:42001              *:*            
tcp    LISTEN  0       4096                 *:80                 *:*            
tcp    LISTEN  0       128               [::]:22              [::]:*            
Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination","For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured"" : [FAILED]

The file /etc/ssh/sshd_config and files ending inconf in the /etc/ssh/sshd_config.d directory, contain configuration specifications for sshd

configuration specifications for sshd need to be protected from unauthorized changes by non-privileged users.

Solution:
Run the following script to set ownership and permissions on /etc/ssh/sshd_config and files ending inconf in the /etc/ssh/sshd_config.d directory:

#!/usr/bin/env bash

{
   chmod u-x,og-rwx /etc/ssh/sshd_config
   chown root:root /etc/ssh/sshd_config
   while IFS= read -r -d $'0' l_file; do
      if [ -e ""$l_file"" ]; then
         chmod u-x,og-rwx ""$l_file""
         chown root:root ""$l_file""
      fi
   done < <(find /etc/ssh/sshd_config.d -type f -print0 2>/dev/null)
}

- IF - other locations are listed in an Include statement, *.conf files in these locations access should also be modified.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - * Reasons for audit failure * :

 - File: ""/etc/ssh/sshd_config"":
  - Is mode: ""0644"" should be: ""600"" or more restrictive
 - File: ""/etc/ssh/sshd_config.d/30-anapaya-controller-PasswordAuthentication.conf"":
  - Is mode: ""0644"" should be: ""600"" or more restrictive
 - File: ""/etc/ssh/sshd_config.d/90-anapaya.conf"":
  - Is mode: ""0644"" should be: ""600"" or more restrictive","Run the following script to set ownership and permissions on /etc/ssh/sshd_config and files ending inconf in the /etc/ssh/sshd_config.d directory:

#!/usr/bin/env bash

{
   chmod u-x,og-rwx /etc/ssh/sshd_config
   chown root:root /etc/ssh/sshd_config
   while IFS= read -r -d $'0' l_file; do
      if [ -e ""$l_file"" ]; then
         chmod u-x,og-rwx ""$l_file""
         chown root:root ""$l_file""
      fi
   done < <(find /etc/ssh/sshd_config.d -type f -print0 2>/dev/null)
}

- IF - other locations are listed in an Include statement, *.conf files in these locations access should also be modified.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.10 Ensure sshd HostbasedAuthentication is disabled"" : [PASSED]

The HostbasedAuthentication parameter specifies if authentication is allowed through trusted hosts via the user ofrhosts or /etc/hosts.equiv along with successful public key client host authentication.

Even though therhosts files are ineffective if support is disabled in /etc/pam.conf disabling the ability to userhosts files in SSH provides an additional layer of protection.

Solution:
Edit the /etc/ssh/sshd_config file to set the HostbasedAuthentication parameter to no above any Include and Match entries as follows:

HostbasedAuthentication no

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - sshd hostbasedauthentication setting
The command script with multiple lines returned : 

port 22: hostbasedauthentication no
Pass

-------------------------
PASSED - config file HostbasedAuthentication setting
The file ""/etc/ssh/sshd_config"" does not contain ""^[\s]*(?i)HostbasedAuthentication(?-i)[\s]""","Edit the /etc/ssh/sshd_config file to set the HostbasedAuthentication parameter to no above any Include and Match entries as follows:

HostbasedAuthentication no

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.11 Ensure sshd IgnoreRhosts is enabled"" : [PASSED]

The IgnoreRhosts parameter specifies thatrhosts andshosts files will not be used in RhostsRSAAuthentication or HostbasedAuthentication

Setting this parameter forces users to enter a password when authenticating with SSH.

Solution:
Edit the /etc/ssh/sshd_config file to set the IgnoreRhosts parameter to yes above any Include and Match entries as follows:

IgnoreRhosts yes

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - config file IgnoreRhosts setting
The file ""/etc/ssh/sshd_config"" does not contain ""^[\s]*(?i)IgnoreRhosts(?-i)[\s]""

-------------------------
PASSED - sshd ignorerhosts setting
The command script with multiple lines returned : 

port 22: ignorerhosts yes
Pass","Edit the /etc/ssh/sshd_config file to set the IgnoreRhosts parameter to yes above any Include and Match entries as follows:

IgnoreRhosts yes

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.12 Ensure sshd KexAlgorithms is configured"" : [PASSED]

Key exchange is any method in cryptography by which cryptographic keys are exchanged between two parties, allowing use of a cryptographic algorithm. If the sender and receiver wish to exchange encrypted messages, each must be equipped to encrypt messages to be sent and decrypt messages received

Notes:

 - Kex algorithms have a higher preference the earlier they appear in the list
 - Some organizations may have stricter requirements for approved Key exchange algorithms
 - Ensure that Key exchange algorithms used are in compliance with site policy
 - The only Key Exchange Algorithms currently FIPS 140 approved are:
 - ecdh-sha2-nistp256
 - ecdh-sha2-nistp384
 - ecdh-sha2-nistp521
 - diffie-hellman-group-exchange-sha256
 - diffie-hellman-group16-sha512
 - diffie-hellman-group18-sha512
 - diffie-hellman-group14-sha256

Key exchange methods that are considered weak should be removed. A key exchange method may be weak because too few bits are used, or the hashing algorithm is considered too weak. Using weak algorithms could expose connections to man-in-the-middle attacks

Solution:
Edit the /etc/ssh/sshd_config file and add/modify the KexAlgorithms line to contain a comma separated list of the site unapproved (weak) KexAlgorithms preceded with a - above any Include entries:

Example:

KexAlgorithms -diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

port 22: kexalgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp384,diffie-hellman-group-exchange-sha256
Pass","Edit the /etc/ssh/sshd_config file and add/modify the KexAlgorithms line to contain a comma separated list of the site unapproved (weak) KexAlgorithms preceded with a - above any Include entries:

Example:

KexAlgorithms -diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.13 Ensure sshd LoginGraceTime is configured"" : [PASSED]

The LoginGraceTime parameter specifies the time allowed for successful authentication to the SSH server. The longer the Grace period is the more open unauthenticated connections can exist. Like other session controls in this session the Grace Period should be limited to appropriate organizational limits to ensure the service is available for needed access.

Setting the LoginGraceTime parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. It will also limit the number of concurrent unauthenticated connections While the recommended setting is 60 seconds (1 Minute), set the number based on site policy.

Solution:
Edit the /etc/ssh/sshd_config file to set the LoginGraceTime parameter to 60 seconds or less above any Include entry as follows:

LoginGraceTime 60

Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.11,800-53|AC-10,800-53|AC-12,800-53r5|AC-10,800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-10,ITSG-33|AC-12,LEVEL|1A,NESA|T5.5.1,NIAv2|NS49,QCSC-v1|5.2.1,QCSC-v1|5.2.2

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

port 22: logingracetime 60
Pass","Edit the /etc/ssh/sshd_config file to set the LoginGraceTime parameter to 60 seconds or less above any Include entry as follows:

LoginGraceTime 60

Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.14 Ensure sshd LogLevel is configured"" : [PASSED]

SSH provides several logging levels with varying amounts of verbosity. The DEBUG options are specifically not recommended other than strictly for debugging SSH communications. These levels provide so much data that it is difficult to identify important security information, and may violate the privacy of users.

The INFO level is the basic level that only records login activity of SSH users. In many situations, such as Incident Response, it is important to determine when a particular user was active on a system. The logout record can eliminate those users who disconnected, which helps narrow the field.

The VERBOSE level specifies that login and logout activity as well as the key fingerprint for any SSH key used for login will be logged. This information is important for SSH key management, especially in legacy environments.

Solution:
Edit the /etc/ssh/sshd_config file to set the LogLevel parameter to VERBOSE or INFO above any Include and Match entries as follows:

LogLevel VERBOSE
   - OR -
LogLevel INFO

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - sshd loglevel setting
The command script with multiple lines returned : 

port 22: loglevel INFO
Pass

-------------------------
PASSED - config file loglevel setting
No matching files were found","Edit the /etc/ssh/sshd_config file to set the LogLevel parameter to VERBOSE or INFO above any Include and Match entries as follows:

LogLevel VERBOSE
   - OR -
LogLevel INFO

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.15 Ensure sshd MACs are configured"" : [FAILED]

This variable limits the types of MAC algorithms that SSH can use during communication.

Notes:

 - Some organizations may have stricter requirements for approved MACs.
 - Ensure that MACs used are in compliance with site policy.
 - The only ""strong"" MACs currently FIPS 140 approved are:
 - HMAC-SHA1
 - HMAC-SHA2-256
 - HMAC-SHA2-384
 - HMAC-SHA2-512

MD5 and 96-bit MAC algorithms are considered weak and have been shown to increase exploitability in SSH downgrade attacks. Weak algorithms continue to have a great deal of attention as a weak spot that can be exploited with expanded computing power. An attacker that breaks the algorithm could take advantage of a MiTM position to decrypt the SSH tunnel and capture credentials and information.

Solution:
Edit the /etc/ssh/sshd_config file and add/modify the MACs line to contain a comma separated list of the site unapproved (weak) MACs preceded with a - above any Include entries:

Example:

MACs -hmac-md5,hmac-md5-96,hmac-ripemd160,hmac-sha1-96,umac-64@openssh.com,hmac-md5-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com

- IF - CVE-2023-48795 has not been reviewed and addressed, the following etm MACs should be added to the exclude list:

hmac-sha1-etm@openssh.com

,

hmac-sha2-256-etm@openssh.com

,

hmac-sha2-512-etm@openssh.com

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv7|16.5,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

port 22: macs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512
Fail","Edit the /etc/ssh/sshd_config file and add/modify the MACs line to contain a comma separated list of the site unapproved (weak) MACs preceded with a - above any Include entries:

Example:

MACs -hmac-md5,hmac-md5-96,hmac-ripemd160,hmac-sha1-96,umac-64@openssh.com,hmac-md5-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com

- IF - CVE-2023-48795 has not been reviewed and addressed, the following etm MACs should be added to the exclude list:

hmac-sha1-etm@openssh.com

,

hmac-sha2-256-etm@openssh.com

,

hmac-sha2-512-etm@openssh.com

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.16 Ensure sshd MaxAuthTries is configured"" : [FAILED]

The MaxAuthTries parameter specifies the maximum number of authentication attempts permitted per connection. When the login failure count reaches half the number, error messages will be written to the syslog file detailing the login failure.

Setting the MaxAuthTries parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. While the recommended setting is 4, set the number based on site policy.

Solution:
Edit the /etc/ssh/sshd_config file to set the MaxAuthTries parameter to 4 or less above any Include and Match entries as follows:

MaxAuthTries 4

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|16.13,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - sshd maxauthtries setting
The command script with multiple lines returned : 

port 22: maxauthtries 6
Fail

-------------------------
PASSED - config file maxauthtries setting
The file ""/etc/ssh/sshd_config"" does not contain ""^[\s]*(?i)MaxAuthTries(?-i)[\s]""","Edit the /etc/ssh/sshd_config file to set the MaxAuthTries parameter to 4 or less above any Include and Match entries as follows:

MaxAuthTries 4

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.17 Ensure sshd MaxSessions is configured"" : [PASSED]

The MaxSessions parameter specifies the maximum number of open sessions permitted from a given connection.

To protect a system from denial of service due to a large number of concurrent sessions, use the rate limiting function of MaxSessions to protect availability of sshd logins and prevent overwhelming the daemon.

Solution:
Edit the /etc/ssh/sshd_config file to set the MaxSessions parameter to 10 or less above any Include and Match entries as follows:

MaxSessions 10

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|AC-10,800-53r5|AC-10,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-10,LEVEL|1A,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - config file MaxSessions setting
The file ""/etc/ssh/sshd_config"" does not contain ""^[\s]*(?i)MaxSessions(?-i)[\s]""

-------------------------
PASSED - sshd maxsessions setting
The command script with multiple lines returned : 

port 22: maxsessions 10
Pass","Edit the /etc/ssh/sshd_config file to set the MaxSessions parameter to 10 or less above any Include and Match entries as follows:

MaxSessions 10

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.18 Ensure sshd MaxStartups is configured"" : [FAILED]

The MaxStartups parameter specifies the maximum number of concurrent unauthenticated connections to the SSH daemon.

To protect a system from denial of service due to a large number of pending authentication connection attempts, use the rate limiting function of MaxStartups to protect availability of sshd logins and prevent overwhelming the daemon.

Solution:
Edit the /etc/ssh/sshd_config file to set the MaxStartups parameter to 10:30:60 or more restrictive above any Include entries as follows:

MaxStartups 10:30:60

Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-53|AC-10,800-53r5|AC-10,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-10,LEVEL|1A,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

port 22: maxstartups 10:30:100
Fail","Edit the /etc/ssh/sshd_config file to set the MaxStartups parameter to 10:30:60 or more restrictive above any Include entries as follows:

MaxStartups 10:30:60

Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.19 Ensure sshd PermitEmptyPasswords is disabled"" : [PASSED]

The PermitEmptyPasswords parameter specifies if the SSH server allows login to accounts with empty password strings.

Disallowing remote shell access to accounts that have an empty password reduces the probability of unauthorized access to the system.

Solution:
Edit /etc/ssh/sshd_config and set the PermitEmptyPasswords parameter to no above any Include and Match entries as follows:

PermitEmptyPasswords no

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - config file permitemptypasswords setting
Compliant file(s):
      /etc/ssh/sshd_config - regex '^[\s]*(?i)PermitEmptyPasswords(?-i)[\s]' found - expect '^[\s]*(?i)PermitEmptyPasswords(?-i)[\s]+""?yes""?[\s]*$' not found in the following lines:
          59: PermitEmptyPasswords no
      /etc/ssh/sshd_config.d/30-anapaya-controller-PasswordAuthentication.conf - regex not found
      /etc/ssh/sshd_config.d/90-anapaya.conf - regex '^[\s]*(?i)PermitEmptyPasswords(?-i)[\s]' found - expect '^[\s]*(?i)PermitEmptyPasswords(?-i)[\s]+""?yes""?[\s]*$' not found in the following lines:
          2: PermitEmptyPasswords no

-------------------------
PASSED - sshd permitemptypasswords setting
The command script with multiple lines returned : 

port 22: permitemptypasswords no
Pass","Edit /etc/ssh/sshd_config and set the PermitEmptyPasswords parameter to no above any Include and Match entries as follows:

PermitEmptyPasswords no

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.2 Ensure permissions on SSH private host key files are configured"" : [PASSED]

An SSH private key is one of two files used in SSH public key authentication. In this authentication method, the possession of the private key is proof of identity. Only a private key that corresponds to a public key will be able to authenticate successfully. The private keys need to be stored and handled carefully, and no copies of the private key should be distributed.

If an unauthorized user obtains the private SSH host key file, the host could be impersonated

Solution:
Run the following script to set mode, ownership, and group on the private SSH host key files:

#!/usr/bin/env bash

{
   l_output="""" l_output2=""""
   l_ssh_group_name=""$(awk -F: '($1 ~ /^(ssh_keys|_?ssh)$/) {print $1}' /etc/group)""
   FILE_ACCESS_FIX()
   {
      while IFS=: read -r l_file_mode l_file_owner l_file_group; do
         echo ""File: \""$l_file\"" mode: \""$l_file_mode\"" owner \""$l_file_own\"" group \""$l_file_group\""""
         l_out2=""""
         [ ""l_file_group"" = ""$l_ssh_group_name"" ] &amp;&amp; l_pmask=""0137"" || l_pmask=""0177""
         l_maxperm=""$( printf '%o' $(( 0777 &amp; ~$l_pmask )) )""
         if [ $(( $l_file_mode &amp; $l_pmask )) -gt 0 ]; then
            l_out2=""$l_out2
 - Mode: \""$l_file_mode\"" should be mode: \""$l_maxperm\"" or more restrictive
 - updating to mode: :$l_maxperm\""""
            [ ""l_file_group"" = ""$l_ssh_group_name"" ] &amp;&amp; chmod u-x,g-wx,o-rwx ""$l_file"" || chmod u-x,go-rwx
         fi
         if [ ""$l_file_owner"" != ""root"" ]; then
            l_out2=""$l_out2
 - Owned by: \""$l_file_owner\"" should be owned by \""root\""
 - Changing ownership to \""root\""""
            chown root ""$l_file""
         fi
         if [[ ! ""$l_file_group"" =~ ($l_ssh_group_name|root) ]]; then
            [ -n ""$l_ssh_group_name"" ] &amp;&amp; l_new_group=""$l_ssh_group_name"" || l_new_group=""root""
            l_out2=""$l_out2
 - Owned by group \""$l_file_group\"" should be group owned by: \""$l_ssh_group_name\"" or \""root\""
 - Changing group ownership to \""$l_new_group\""""
            chgrp ""$l_new_group"" ""$l_file""
         fi
         if [ -n ""$l_out2"" ]; then
            l_output2=""$l_output2
 - File: \""$l_file\""$l_out2""
         else
            l_output=""$l_output
 - File: \""$l_file\""
 - Correct: mode: \""$l_file_mode\"", owner: \""$l_file_owner\"", and group owner: \""$l_file_group\"" configured""
         fi
      done < <(stat -Lc '%#a:%U:%G' ""$l_file"")
   }
   while IFS= read -r -d $'0' l_file; do
      if ssh-keygen -lf &amp;>/dev/null ""$l_file""; then
         file ""$l_file"" | grep -Piq -- 'bopensshh+([^#
r]+h+)?privateh+keyb' &amp;&amp; FILE_ACCESS_FIX
      fi
   done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null)
   if [ -z ""$l_output2"" ]; then
      echo -e ""
- No access changes required
""
   else
      echo -e ""
- Remediation results:
$l_output2
""
   fi
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **
 - * Correctly configured * :
 - File: ""/etc/ssh/ssh_host_ed25519_key""
  - Correct: mode: ""0600"", owner: ""root"", and group owner: ""root"" configured","Run the following script to set mode, ownership, and group on the private SSH host key files:

#!/usr/bin/env bash

{
   l_output="""" l_output2=""""
   l_ssh_group_name=""$(awk -F: '($1 ~ /^(ssh_keys|_?ssh)$/) {print $1}' /etc/group)""
   FILE_ACCESS_FIX()
   {
      while IFS=: read -r l_file_mode l_file_owner l_file_group; do
         echo ""File: \""$l_file\"" mode: \""$l_file_mode\"" owner \""$l_file_own\"" group \""$l_file_group\""""
         l_out2=""""
         [ ""l_file_group"" = ""$l_ssh_group_name"" ] &amp;&amp; l_pmask=""0137"" || l_pmask=""0177""
         l_maxperm=""$( printf '%o' $(( 0777 &amp; ~$l_pmask )) )""
         if [ $(( $l_file_mode &amp; $l_pmask )) -gt 0 ]; then
            l_out2=""$l_out2
 - Mode: \""$l_file_mode\"" should be mode: \""$l_maxperm\"" or more restrictive
 - updating to mode: :$l_maxperm\""""
            [ ""l_file_group"" = ""$l_ssh_group_name"" ] &amp;&amp; chmod u-x,g-wx,o-rwx ""$l_file"" || chmod u-x,go-rwx
         fi
         if [ ""$l_file_owner"" != ""root"" ]; then
            l_out2=""$l_out2
 - Owned by: \""$l_file_owner\"" should be owned by \""root\""
 - Changing ownership to \""root\""""
            chown root ""$l_file""
         fi
         if [[ ! ""$l_file_group"" =~ ($l_ssh_group_name|root) ]]; then
            [ -n ""$l_ssh_group_name"" ] &amp;&amp; l_new_group=""$l_ssh_group_name"" || l_new_group=""root""
            l_out2=""$l_out2
 - Owned by group \""$l_file_group\"" should be group owned by: \""$l_ssh_group_name\"" or \""root\""
 - Changing group ownership to \""$l_new_group\""""
            chgrp ""$l_new_group"" ""$l_file""
         fi
         if [ -n ""$l_out2"" ]; then
            l_output2=""$l_output2
 - File: \""$l_file\""$l_out2""
         else
            l_output=""$l_output
 - File: \""$l_file\""
 - Correct: mode: \""$l_file_mode\"", owner: \""$l_file_owner\"", and group owner: \""$l_file_group\"" configured""
         fi
      done < <(stat -Lc '%#a:%U:%G' ""$l_file"")
   }
   while IFS= read -r -d $'0' l_file; do
      if ssh-keygen -lf &amp;>/dev/null ""$l_file""; then
         file ""$l_file"" | grep -Piq -- 'bopensshh+([^#
r]+h+)?privateh+keyb' &amp;&amp; FILE_ACCESS_FIX
      fi
   done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null)
   if [ -z ""$l_output2"" ]; then
      echo -e ""
- No access changes required
""
   else
      echo -e ""
- Remediation results:
$l_output2
""
   fi
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.20 Ensure sshd PermitRootLogin is disabled"" : [FAILED]

The PermitRootLogin parameter specifies if the root user can log in using SSH. The default is prohibit-password

Disallowing root logins over SSH requires system admins to authenticate using their own individual account, then escalating to root This limits opportunity for non-repudiation and provides a clear audit trail in the event of a security incident.

Solution:
Edit the /etc/ssh/sshd_config file to set the PermitRootLogin parameter to no above any Include and Match entries as follows:

PermitRootLogin no

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - sshd -T permitrootlogin
The command script with multiple lines returned : 

port 22: permitrootlogin without-password
Fail

-------------------------
FAILED - config file permitrootlogin setting
Non-compliant file(s):
      /etc/ssh/sshd_config - regex '^[\s]*(?i)PermitRootLogin(?-i)[\s]' found - expect '^[\s]*(?i)PermitRootLogin(?-i)[\s]+""?no""?[\s]*$' not found in the following lines:
          34: PermitRootLogin without-password
      /etc/ssh/sshd_config.d/90-anapaya.conf - regex '^[\s]*(?i)PermitRootLogin(?-i)[\s]' found - expect '^[\s]*(?i)PermitRootLogin(?-i)[\s]+""?no""?[\s]*$' not found in the following lines:
          4: PermitRootLogin prohibit-password","Edit the /etc/ssh/sshd_config file to set the PermitRootLogin parameter to no above any Include and Match entries as follows:

PermitRootLogin no

Note: First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.21 Ensure sshd PermitUserEnvironment is disabled"" : [PASSED]

The PermitUserEnvironment option allows users to present environment options to the SSH daemon.

Permitting users the ability to set environment variables through the SSH daemon could potentially allow users to bypass security controls (e.g. setting an execution path that has SSH executing trojan'd programs)

Solution:
Edit the /etc/ssh/sshd_config file to set the PermitUserEnvironment parameter to no above any Include entries as follows:

PermitUserEnvironment no

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

port 22: permitemptypasswords no
Pass","Edit the /etc/ssh/sshd_config file to set the PermitUserEnvironment parameter to no above any Include entries as follows:

PermitUserEnvironment no

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.22 Ensure sshd UsePAM is enabled"" : [FAILED]

The UsePAM directive enables the Pluggable Authentication Module (PAM) interface. If set to yes this will enable PAM authentication using ChallengeResponseAuthentication and PasswordAuthentication directives in addition to PAM account and session module processing for all authentication types.

When usePAM is set to yes PAM runs through account and session types properly. This is important if you want to restrict access to services based off of IP, time or other factors of the account. Additionally, you can make sure users inherit certain environment variables on login or disallow access to the server

Solution:
Edit the /etc/ssh/sshd_config file to set the UsePAM parameter to yes above any Include entries as follows:

UsePAM yes

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

port 22: usepam no
Fail","Edit the /etc/ssh/sshd_config file to set the UsePAM parameter to yes above any Include entries as follows:

UsePAM yes

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.3 Ensure permissions on SSH public host key files are configured"" : [PASSED]

An SSH public key is one of two files used in SSH public key authentication. In this authentication method, a public key is a key that can be used for verifying digital signatures generated using a corresponding private key. Only a public key that corresponds to a private key will be able to authenticate successfully.

If a public host key file is modified by an unauthorized user, the SSH service may be compromised.

Solution:
Run the following script to set mode, ownership, and group on the public SSH host key files:

#!/usr/bin/env bash

{
   l_output="""" l_output2=""""
   l_pmask=""0133"" &amp;&amp; l_maxperm=""$( printf '%o' $(( 0777 &amp; ~$l_pmask )) )""
   FILE_ACCESS_FIX()
   {
      while IFS=: read -r l_file_mode l_file_owner l_file_group; do
         l_out2=""""
         if [ $(( $l_file_mode &amp; $l_pmask )) -gt 0 ]; then
            l_out2=""$l_out2
 - Mode: \""$l_file_mode\"" should be mode: \""$l_maxperm\"" or more restrictive
 - updating to mode: :$l_maxperm\""""
            chmod u-x,go-wx
         fi
         if [ ""$l_file_owner"" != ""root"" ]; then
            l_out2=""$l_out2
 - Owned by: \""$l_file_owner\"" should be owned by \""root\""
 - Changing ownership to \""root\""""
            chown root ""$l_file""
         fi
         if [ ""$l_file_group"" != ""root"" ]; then
            l_out2=""$l_out2
 - Owned by group \""$l_file_group\"" should be group owned by: \""root\""
 - Changing group ownership to \""root\""""
            chgrp root ""$l_file""
         fi
         if [ -n ""$l_out2"" ]; then
            l_output2=""$l_output2
 - File: \""$l_file\""$l_out2""
         else
            l_output=""$l_output
 - File: \""$l_file\""
 - Correct: mode: \""$l_file_mode\"", owner: \""$l_file_owner\"", and group owner: \""$l_file_group\"" configured""
         fi
      done < <(stat -Lc '%#a:%U:%G' ""$l_file"")
   }
   while IFS= read -r -d $'0' l_file; do
      if ssh-keygen -lf &amp;>/dev/null ""$l_file""; then
         file ""$l_file"" | grep -Piq -- 'bopensshh+([^#
r]+h+)?publich+keyb' &amp;&amp; FILE_ACCESS_FIX
      fi
   done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null)
   if [ -z ""$l_output2"" ]; then
      echo -e ""
- No access changes required
""
   else
      echo -e ""
- Remediation results:
$l_output2
""
   fi
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **
 - * Correctly configured * :
 - File: ""/etc/ssh/ssh_host_rsa_key.pub""
  - Correct: mode: ""0644"", owner: ""root"", and group owner: ""root"" configured
 - File: ""/etc/ssh/ssh_host_ed25519_key.pub""
  - Correct: mode: ""0644"", owner: ""root"", and group owner: ""root"" configured
 - File: ""/etc/ssh/ssh_host_ecdsa_key.pub""
  - Correct: mode: ""0644"", owner: ""root"", and group owner: ""root"" configured","Run the following script to set mode, ownership, and group on the public SSH host key files:

#!/usr/bin/env bash

{
   l_output="""" l_output2=""""
   l_pmask=""0133"" &amp;&amp; l_maxperm=""$( printf '%o' $(( 0777 &amp; ~$l_pmask )) )""
   FILE_ACCESS_FIX()
   {
      while IFS=: read -r l_file_mode l_file_owner l_file_group; do
         l_out2=""""
         if [ $(( $l_file_mode &amp; $l_pmask )) -gt 0 ]; then
            l_out2=""$l_out2
 - Mode: \""$l_file_mode\"" should be mode: \""$l_maxperm\"" or more restrictive
 - updating to mode: :$l_maxperm\""""
            chmod u-x,go-wx
         fi
         if [ ""$l_file_owner"" != ""root"" ]; then
            l_out2=""$l_out2
 - Owned by: \""$l_file_owner\"" should be owned by \""root\""
 - Changing ownership to \""root\""""
            chown root ""$l_file""
         fi
         if [ ""$l_file_group"" != ""root"" ]; then
            l_out2=""$l_out2
 - Owned by group \""$l_file_group\"" should be group owned by: \""root\""
 - Changing group ownership to \""root\""""
            chgrp root ""$l_file""
         fi
         if [ -n ""$l_out2"" ]; then
            l_output2=""$l_output2
 - File: \""$l_file\""$l_out2""
         else
            l_output=""$l_output
 - File: \""$l_file\""
 - Correct: mode: \""$l_file_mode\"", owner: \""$l_file_owner\"", and group owner: \""$l_file_group\"" configured""
         fi
      done < <(stat -Lc '%#a:%U:%G' ""$l_file"")
   }
   while IFS= read -r -d $'0' l_file; do
      if ssh-keygen -lf &amp;>/dev/null ""$l_file""; then
         file ""$l_file"" | grep -Piq -- 'bopensshh+([^#
r]+h+)?publich+keyb' &amp;&amp; FILE_ACCESS_FIX
      fi
   done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null)
   if [ -z ""$l_output2"" ]; then
      echo -e ""
- No access changes required
""
   else
      echo -e ""
- Remediation results:
$l_output2
""
   fi
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.4 Ensure sshd access is configured"" : [FAILED]

There are several options available to limit which users and group can access the system via SSH. It is recommended that at least one of the following options be leveraged:

 - AllowUsers :
 - The AllowUsers variable gives the system administrator the option of allowing specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by only allowing the allowed users to log in from a particular host, the entry can be specified in the form of user@host.

 - AllowGroups :
 - The AllowGroups variable gives the system administrator the option of allowing specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.

 - DenyUsers :
 - The DenyUsers variable gives the system administrator the option of denying specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by specifically denying a user's access from a particular host, the entry can be specified in the form of user@host.

 - DenyGroups :
 - The DenyGroups variable gives the system administrator the option of denying specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.

Restricting which users can remotely access the system via SSH will help ensure that only authorized users access the system.

Solution:
Edit the /etc/ssh/sshd_config file to set one or more of the parameters above any Include and Match set statements as follows:

AllowUsers <userlist>
 - AND/OR -
AllowGroups <grouplist>

Note:

 - First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in aconf file in a Include directory.
 - It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user or group and forget to add it to the deny list.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|4.3,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

port 22: 
Fail","Edit the /etc/ssh/sshd_config file to set one or more of the parameters above any Include and Match set statements as follows:

AllowUsers <userlist>
 - AND/OR -
AllowGroups <grouplist>

Note:

 - First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in aconf file in a Include directory.
 - It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user or group and forget to add it to the deny list.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.5 Ensure sshd Banner is configured"" : [FAILED]

The Banner parameter specifies a file whose contents must be sent to the remote user before authentication is permitted. By default, no banner is displayed.

Banners are used to warn connecting users of the particular site's policy regarding connection. Presenting a warning message prior to the normal user login may assist the prosecution of trespassers on the computer system.

Solution:
Edit the /etc/ssh/sshd_config file to set the Banner parameter above any Include and Match entries as follows:

Banner /etc/issue.net

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.9,800-53|AC-8,800-53r5|AC-8,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - sshd_config banner
The file ""/etc/ssh/sshd_config"" does not contain ""(?i)^\h*Banner\h+""?none\b""

-------------------------
FAILED - sshd -T banner
The command script with multiple lines returned : 

port 22: banner none
Fail","Edit the /etc/ssh/sshd_config file to set the Banner parameter above any Include and Match entries as follows:

Banner /etc/issue.net

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.6 Ensure sshd Ciphers are configured"" : [PASSED]

This variable limits the ciphers that SSH can use during communication.

Notes:

 - Some organizations may have stricter requirements for approved ciphers.
 - Ensure that ciphers used are in compliance with site policy.
 - The only ""strong"" ciphers currently FIPS 140 compliant are:
 -

aes256-gcm@openssh.com

 -

aes128-gcm@openssh.com

 - aes256-ctr
 - aes192-ctr
 - aes128-ctr

Weak ciphers that are used for authentication to the cryptographic module cannot be relied upon to provide confidentiality or integrity, and system data may be compromised.

 - The Triple DES ciphers, as used in SSH, have a birthday bound of approximately four billion blocks, which makes it easier for remote attackers to obtain clear text data via a birthday attack against a long-duration encrypted session, aka a ""Sweet32"" attack.
 - Error handling in the SSH protocol; Client and Server, when using a block cipher algorithm in Cipher Block Chaining (CBC) mode, makes it easier for remote attackers to recover certain plain text data from an arbitrary block of cipher text in an SSH session via unknown vectors.

Solution:
Edit the /etc/ssh/sshd_config file and add/modify the Ciphers line to contain a comma separated list of the site unapproved (weak) Ciphers preceded with a - above any Include entries:

Example:

Ciphers -3des-cbc,aes128-cbc,aes192-cbc,aes256-cbc,chacha20-poly1305@openssh.com

- IF - CVE-2023-48795 has been addressed, and it meets local site policy, chacha20-poly1305@openssh.com may be removed from the list of excluded ciphers.

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^Pass$

Actual Value:
The command script with multiple lines returned : 

awk: cmd. line:1: warning: escape sequence `\.' treated as plain `.'
port 22: ciphers chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com
Pass","Edit the /etc/ssh/sshd_config file and add/modify the Ciphers line to contain a comma separated list of the site unapproved (weak) Ciphers preceded with a - above any Include entries:

Example:

Ciphers -3des-cbc,aes128-cbc,aes192-cbc,aes256-cbc,chacha20-poly1305@openssh.com

- IF - CVE-2023-48795 has been addressed, and it meets local site policy, chacha20-poly1305@openssh.com may be removed from the list of excluded ciphers.

Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.1.7 Ensure sshd ClientAliveInterval and ClientAliveCountMax are configured"" : [FAILED]

Note: To clarify, the two settings described below are only meant for idle connections from a protocol perspective and are not meant to check if the user is active or not. An idle user does not mean an idle connection. SSH does not and never had, intentionally, the capability to drop idle users. In SSH versions before 8.2p1 there was a bug that caused these values to behave in such a manner that they were abused to disconnect idle users. This bug has been resolved in 8.2p1 and thus it can no longer be abused disconnect idle users.

The two options ClientAliveInterval and ClientAliveCountMax control the timeout of SSH sessions. Taken directly from man 5 sshd_config :

 -

ClientAliveInterval Sets a timeout interval in seconds after which if no data has been received from the client, sshd(8) will send a message through the encrypted channel to request a response from the client. The default is 0, indicating that these messages will not be sent to the client.

 -

ClientAliveCountMax Sets the number of client alive messages which may be sent without sshd(8) receiving any messages back from the client. If this threshold is reached while client alive messages are being sent, sshd will disconnect the client, terminating the session. It is important to note that the use of client alive messages is very different from TCPKeepAlive. The client alive messages are sent through the encrypted channel and therefore will not be spoofable. The TCP keepalive option en-abled by TCPKeepAlive is spoofable. The client alive mechanism is valuable when the client or server depend on knowing when a connection has become unresponsive.The default value is 3. If ClientAliveInterval is set to 15, and ClientAliveCountMax is left at the default, unresponsive SSH clients will be disconnected after approximately 45 seconds. Setting a zero ClientAliveCountMax disables connection termination.

In order to prevent resource exhaustion, appropriate values should be set for both ClientAliveInterval and ClientAliveCountMax Specifically, looking at the source code, ClientAliveCountMax must be greater than zero in order to utilize the ability of SSH to drop idle connections. If connections are allowed to stay open indefinitely, this can potentially be used as a DDOS attack or simple resource exhaustion could occur over unreliable networks.

The example set here is a 45 second timeout. Consult your site policy for network timeouts and apply as appropriate.

Solution:
Edit the /etc/ssh/sshd_config file to set the ClientAliveInterval and ClientAliveCountMax parameters above any Include and Match entries according to site policy.

Example:

ClientAliveInterval 15
ClientAliveCountMax 3

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.11,800-53|AC-12,800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,LEVEL|1A,NIAv2|NS49

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - ClientAliveCountMax is greater than 0
The command script with multiple lines returned : 

port 22: clientalivecountmax 3
Pass

-------------------------
FAILED - ClientAliveInterval is greater than 0
The command script with multiple lines returned : 

port 22: clientaliveinterval 0
Fail

-------------------------
PASSED - sshd_config ClientAliveCountMax
The file ""/etc/ssh/sshd_config"" does not contain ""(?i)^\h*ClientAliveCountMax\h+""?0\b""

-------------------------
PASSED - sshd_config ClientAliveInterval
The file ""/etc/ssh/sshd_config"" does not contain ""(?i)^\h*ClientAliveInterval\h+""?0\b""","Edit the /etc/ssh/sshd_config file to set the ClientAliveInterval and ClientAliveCountMax parameters above any Include and Match entries according to site policy.

Example:

ClientAliveInterval 15
ClientAliveCountMax 3

Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.2.1 Ensure sudo is installed"" : [PASSED]

sudo allows a permitted user to execute a command as the superuser or another user, as specified by the security policy. The invoking user's real (not effective) user ID is used to determine the user name with which to query the security policy.

sudo supports a plug-in architecture for security policies and input/output logging. Third parties can develop and distribute their own policy and I/O logging plug-ins to work seamlessly with the sudo front end. The default security policy is sudoers which is configured via the file /etc/sudoers and any entries in /etc/sudoers.d

The security policy determines what privileges, if any, a user has to run sudo The policy may require that users authenticate themselves with a password or another authentication mechanism. If authentication is required, sudo will exit if the user's password is not entered within a configurable time limit. This limit is policy-specific.

Solution:
First determine is LDAP functionality is required. If so, then install sudo-ldap else install sudo

Example:

# apt install sudo

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /usr/bin/dpkg -s sudo sudo-ldap 2>&1
expect: install[\s]+ok[\s]+installed

Actual Value:
The command '/usr/bin/dpkg -s sudo sudo-ldap 2>&1' returned : 

dpkg-query: package 'sudo-ldap' is not installed and no information is available
Package: sudo
Status: install ok installed
Priority: important
Section: admin
Installed-Size: 2508
Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
Architecture: amd64
Version: 1.9.9-1ubuntu2.4
Replaces: sudo-ldap
Depends: libaudit1 (>= 1:2.2.1), libc6 (>= 2.34), libpam0g (>= 0.99.7.1), libselinux1 (>= 3.1~), zlib1g (>= 1:1.2.0.2), libpam-modules, lsb-base
Conflicts: sudo-ldap
Conffiles:
 /etc/pam.d/sudo b3a1b916bf62a2cc3280f7f9b94844ff
 /etc/pam.d/sudo-i ce9740f66cedf7716e26950abfe556fa
 /etc/sudo.conf efb56b1b282fa4cad1b6c0f05137bb08
 /etc/sudo_logsrvd.conf 09ceda2c98f43e0fbb79bed7c82dba45
 /etc/sudoers 791aa979aa5e859f9ba0112a9512158c
 /etc/sudoers.d/README 44c75ff004a18eeefdde4c998914d6d3
Description: Provide limited super user privileges to specific users
 Sudo is a program designed to allow a sysadmin to give limited root
 privileges to users and log root activity.  The basic philosophy is to give
 as few privileges as possible but still allow people to get their work done.
 .
 This version is built with minimal shared library dependencies, use the
 sudo-ldap package instead if you need LDAP support for sudoers.
Homepage: https://www.sudo.ws/
Original-Maintainer: Sudo Maintainers <sudo@packages.debian.org>

Use dpkg --info (= dpkg-deb --info) to examine archive files.","First determine is LDAP functionality is required. If so, then install sudo-ldap else install sudo

Example:

# apt install sudo","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.2.2 Ensure sudo commands use pty"" : [PASSED]

sudo can be configured to run only from a pseudo terminal ( pseudo-pty ).

Attackers can run a malicious program using sudo which would fork a background process that remains even when the main program has finished executing.

Solution:
Edit the file /etc/sudoers with visudo or a file in /etc/sudoers.d/ with visudo -f <PATH TO FILE> and add the following line:

Defaults use_pty

Edit the file /etc/sudoers with visudo and any files in /etc/sudoers.d/ with visudo -f <PATH TO FILE> and remove any occurrence of !use_pty

Note:

 - sudo will read each file in /etc/sudoers.d skipping file names that end in ~ or contain a character to avoid causing problems with package manager or editor temporary/backup files.
 - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second
 - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second
 - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.

Impact:

WARNING: Editing the sudo configuration incorrectly can cause sudo to stop functioning. Always use visudo to modify sudo configuration files.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - /etc/sudoers use_pty
The command '/bin/grep -rPi -- '^\h*Defaults\h+([^#\n\r]+,)?use_pty(,\h*\h+\h*)*\h*(#.*)?$' /etc/sudoers*' returned : 

/etc/sudoers:Defaults	use_pty

-------------------------
PASSED - /etc/sudoers !use_pty
The command '/bin/grep -rPi -- '^\h*Defaults\h+([^#\n\r]+,)?!use_pty(,\h*\h+\h*)*\h*(#.*)?$' /etc/sudoers* | /bin/awk '{print} END {if (NR == 0) print ""pass"" ; else print ""fail""}'' returned : 

pass","Edit the file /etc/sudoers with visudo or a file in /etc/sudoers.d/ with visudo -f <PATH TO FILE> and add the following line:

Defaults use_pty

Edit the file /etc/sudoers with visudo and any files in /etc/sudoers.d/ with visudo -f <PATH TO FILE> and remove any occurrence of !use_pty

Note:

 - sudo will read each file in /etc/sudoers.d skipping file names that end in ~ or contain a character to avoid causing problems with package manager or editor temporary/backup files.
 - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second
 - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second
 - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.

Impact:

WARNING: Editing the sudo configuration incorrectly can cause sudo to stop functioning. Always use visudo to modify sudo configuration files.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.2.3 Ensure sudo log file exists"" : [FAILED]

sudo can use a custom log file

A sudo log file simplifies auditing of sudo commands

Solution:
Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo or visudo -f <PATH TO FILE> and add the following line:

Example:

Defaults logfile=""/var/log/sudo.log""

Note:

 - sudo will read each file in /etc/sudoers.d skipping file names that end in ~ or contain a character to avoid causing problems with package manager or editor temporary/backup files.
 - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second
 - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second
 - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.

Impact:

WARNING: Editing the sudo configuration incorrectly can cause sudo to stop functioning. Always use visudo to modify sudo configuration files.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
expect: (?i)^\h*Defaults\h+([^#]+,\h*)?logfile\h*=\h*(\""|\')?\H+(\""|\')?(,\h*\H+\h*)*\h*(#.*)?$
file: /etc/sudoers /etc/sudoers.d/*
min_occurrences: 1
regex: (?i)^\h*Defaults\h+([^#]+,\h*)?logfile\h*=\h*(\""|\')?\H+(\""|\')?(,\h*\H+\h*)*\h*(#.*)?$
string_required: NO

Actual Value:
No matching files were found
Less than 1 matches of regex found","Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo or visudo -f <PATH TO FILE> and add the following line:

Example:

Defaults logfile=""/var/log/sudo.log""

Note:

 - sudo will read each file in /etc/sudoers.d skipping file names that end in ~ or contain a character to avoid causing problems with package manager or editor temporary/backup files.
 - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second
 - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second
 - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.

Impact:

WARNING: Editing the sudo configuration incorrectly can cause sudo to stop functioning. Always use visudo to modify sudo configuration files.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.2.5 Ensure re-authentication for privilege escalation is not disabled globally"" : [PASSED]

The operating system must be configured so that users must re-authenticate for privilege escalation.

Without re-authentication, users may access resources or perform tasks for which they do not have authorization.

When operating systems provide the capability to escalate a functional capability, it is critical the user re-authenticate.

Solution:
Configure the operating system to require users to reauthenticate for privilege escalation.

Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit the relevant sudoers file.

Remove any occurrences of !authenticate tags in the file(s).

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: ^[^#].*!authenticate
file: /etc/sudoers /etc/sudoers.d/*
regex: ^[^#].*!authenticate

Actual Value:
The file ""/etc/sudoers"" does not contain ""^[^#].*!authenticate""","Configure the operating system to require users to reauthenticate for privilege escalation.

Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit the relevant sudoers file.

Remove any occurrences of !authenticate tags in the file(s).","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.2.6 Ensure sudo authentication timeout is configured correctly"" : [PASSED]

sudo caches used credentials for a default of 15 minutes. This is for ease of use when there are multiple administrative tasks to perform. The timeout can be modified to suit local security policies.

This default is distribution specific. See audit section for further information.

Setting a timeout value reduces the window of opportunity for unauthorized privileged access to another user.

Solution:
If the currently configured timeout is larger than 15 minutes, edit the file listed in the audit section with visudo -f <PATH TO FILE> and modify the entry timestamp_timeout= to 15 minutes or less as per your site policy. The value is in minutes. This particular entry may appear on it's own, or on the same line as env_reset See the following two examples:

Defaults env_reset, timestamp_timeout=15 Defaults timestamp_timeout=15
Defaults env_reset

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
PASSED

Actual Value:
One of the following must pass to satisfy this requirement:

-------------------------
PASSED - sudo timeout
The command '/bin/sudo -V | /bin/grep 'Authentication timestamp timeout:'' returned : 

Authentication timestamp timeout: 15.0 minutes

-------------------------
PASSED - On disk timestamp_timeout
No matching files were found","If the currently configured timeout is larger than 15 minutes, edit the file listed in the audit section with visudo -f <PATH TO FILE> and modify the entry timestamp_timeout= to 15 minutes or less as per your site policy. The value is in minutes. This particular entry may appear on it's own, or on the same line as env_reset See the following two examples:

Defaults env_reset, timestamp_timeout=15 Defaults timestamp_timeout=15
Defaults env_reset","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.2.7 Ensure access to the su command is restricted"" : [FAILED]

The su command allows a user to run a command or shell as another user. The program has been superseded by sudo which allows for more granular control over privileged access. Normally, the su command can be executed by any user. By uncommenting the pam_wheel.so statement in /etc/pam.d/su the su command will only allow users in a specific groups to execute su This group should be empty to reinforce the use of sudo for privileged access.

Restricting the use of su and using sudo in its place, provides system administrators better control of the escalation of user privileges to execute privileged commands. The sudo utility also provides a better logging and audit mechanism, as it can log each command executed via sudo whereas su can only record that a user executed the su program.

Solution:
Create an empty group that will be specified for use of the su command. The group should be named according to site policy.

Example:

# groupadd sugroup

Add the following line to the /etc/pam.d/su file, specifying the empty group:

auth required pam_wheel.so use_uid group=sugroup

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: sugroup=$(/bin/grep -Pi '^\h*auth\h+(?:required|requisite)\h+pam_wheel\.so\h+(?:[^#\n\r]+\h+)?((?!\2)(use_uid\b|group=\H+\b))\h+(?:[^#\n\r]+\h+)?((?!\1)(use_uid\b|group=\H+\b))(\h+.*)?$' /etc/pam.d/su | /bin/awk 'BEGIN { FS = ""=""} ; { print $2 }'); if [ ! -z $sugroup ]; then /bin/grep $sugroup /etc/group | /bin/awk 'BEGIN { FS = "":"" }; { print $4 }' | /bin/awk '{print} END {if (NF == 0) print ""pass - group empty""; else print ""fail - group not empty""}'; else echo ""fail - sugroup not found in /etc/pam.d/su""; fi
expect: pass - group empty

Actual Value:
The command 'sugroup=$(/bin/grep -Pi '^\h*auth\h+(?:required|requisite)\h+pam_wheel\.so\h+(?:[^#\n\r]+\h+)?((?!\2)(use_uid\b|group=\H+\b))\h+(?:[^#\n\r]+\h+)?((?!\1)(use_uid\b|group=\H+\b))(\h+.*)?$' /etc/pam.d/su | /bin/awk 'BEGIN { FS = ""=""} ; { print $2 }'); if [ ! -z $sugroup ]; then /bin/grep $sugroup /etc/group | /bin/awk 'BEGIN { FS = "":"" }; { print $4 }' | /bin/awk '{print} END {if (NF == 0) print ""pass - group empty""; else print ""fail - group not empty""}'; else echo ""fail - sugroup not found in /etc/pam.d/su""; fi' returned : 

fail - sugroup not found in /etc/pam.d/su","Create an empty group that will be specified for use of the su command. The group should be named according to site policy.

Example:

# groupadd sugroup

Add the following line to the /etc/pam.d/su file, specifying the empty group:

auth required pam_wheel.so use_uid group=sugroup","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.1.1 Ensure latest version of pam is installed"" : [FAILED]

Updated versions of PAM include additional functionality

To ensure the system has full functionality and access to the options covered by this Benchmark the latest version of libpam-runtime should be installed on the system

Solution:
- IF - the version of libpam-runtime on the system is less that version 1.5.2-6 :

Run the following command to update to the latest version of PAM :

# apt upgrade libpam-runtime

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
cmd: /bin/dpkg -s libpam-runtime | /bin/grep -E '(Status:|Version)'
expect: ^Version: ([1-9]|[1-9][0-9])\.([5-9]|[1-9][0-9])\.([2-9]|[1-9][0-9])-([6-9]|[1-9][0-9])

Actual Value:
The command '/bin/dpkg -s libpam-runtime | /bin/grep -E '(Status:|Version)'' returned : 

Status: install ok installed
Version: 1.4.0-11ubuntu2.4","- IF - the version of libpam-runtime on the system is less that version 1.5.2-6 :

Run the following command to update to the latest version of PAM :

# apt upgrade libpam-runtime","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.1.2 Ensure libpam-modules is installed"" : [FAILED]

Pluggable Authentication Modules for PAM

To ensure the system has full functionality and access to the PAM options covered by this Benchmark

Solution:
- IF - the version of libpam-modules on the system is less that version 1.5.2-6 :

Run the following command to update to the latest version of PAM :

# apt upgrade libpam-modules

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
cmd: /bin/dpkg -s libpam-modules | /bin/grep -E '(Status:|Version)'
expect: ^Version: (1\.5\.([2-9]|[1-9][0-9])-([6-9]|[1-9][0-9])|1\.([6-9]|[1-9][0-9])\.|[2-9]\.|[1-9][0-9]\.)

Actual Value:
The command '/bin/dpkg -s libpam-modules | /bin/grep -E '(Status:|Version)'' returned : 

Status: install ok installed
Version: 1.4.0-11ubuntu2.4","- IF - the version of libpam-modules on the system is less that version 1.5.2-6 :

Run the following command to update to the latest version of PAM :

# apt upgrade libpam-modules","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.1.3 Ensure libpam-pwquality is installed"" : [FAILED]

libpwquality provides common functions for password quality checking and scoring them based on their apparent randomness. The library also provides a function for generating random passwords with good pronounceability.

This module can be plugged into the password stack of a given service to provide some plug-in strength-checking for passwords. The code was originally based on pam_cracklib module and the module is backwards compatible with its options.

Strong passwords reduce the risk of systems being hacked through brute force methods.

Solution:
Run the following command to install libpam-pwquality :

# apt install libpam-pwquality

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
cmd: /bin/dpkg -s libpam-pwquality 2>&1 | /bin/grep -E '(Status:|not installed)'
expect: ^Status: install ok

Actual Value:
The command '/bin/dpkg -s libpam-pwquality 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

dpkg-query: package 'libpam-pwquality' is not installed and no information is available","Run the following command to install libpam-pwquality :

# apt install libpam-pwquality","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.2.1 Ensure pam_unix module is enabled"" : [PASSED]

pam_unix is the standard Unix authentication module. It uses standard calls from the system's libraries to retrieve and set account information as well as authentication. Usually this is obtained from the /etc/passwd and if shadow is enabled, the /etc/shadow file as well.

The account component performs the task of establishing the status of the user's account and password based on the following shadow elements: expire last_change max_change min_change warn_change In the case of the latter, it may offer advice to the user on changing their password or, through the PAM_AUTHTOKEN_REQD return, delay giving service to the user until they have established a new password. The entries listed above are documented in the shadow(5) manual page. Should the user's record not contain one or more of these entries, the corresponding shadow check is not performed.

The authentication component performs the task of checking the users credentials (password). The default action of this module is to not permit the user access to a service if their official password is blank.

The system should only provide access after performing authentication of a user.

Solution:
Run the following command to enable the pam_unix module:

# pam-auth-update --enable unix

Note: If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_faillock module, enable that module instead

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - common-password pam_unix.so
Compliant file(s):
      /etc/pam.d/common-password - regex '^\h*password\h+[^#\n\r]+\h+pam_unix\.so\b' found - expect '^\h*password\h+[^#\n\r]+\h+pam_unix\.so\b' found in the following lines:
          25: password	[success=1 default=ignore]	pam_unix.so obscure yescrypt

-------------------------
PASSED - common-account pam_unix.so
Compliant file(s):
      /etc/pam.d/common-account - regex '^\h*account\h+[^#\n\r]+\h+pam_unix\.so\b' found - expect '^\h*account\h+[^#\n\r]+\h+pam_unix\.so\b' found in the following lines:
          17: account	[success=1 new_authtok_reqd=done default=ignore]	pam_unix.so

-------------------------
PASSED - common-session pam_unix.so
Compliant file(s):
      /etc/pam.d/common-session - regex '^\h*session\h+[^#\n\r]+\h+pam_unix\.so\b' found - expect '^\h*session\h+[^#\n\r]+\h+pam_unix\.so\b' found in the following lines:
          29: session	required	pam_unix.so

-------------------------
PASSED - common-auth pam_unix.so
Compliant file(s):
      /etc/pam.d/common-auth - regex '^\h*auth\h+[^#\n\r]+\h+pam_unix\.so\b' found - expect '^\h*auth\h+[^#\n\r]+\h+pam_unix\.so\b' found in the following lines:
          17: auth	[success=1 default=ignore]	pam_unix.so nullok","Run the following command to enable the pam_unix module:

# pam-auth-update --enable unix

Note: If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_faillock module, enable that module instead","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.2.2 Ensure pam_faillock module is enabled"" : [FAILED]

The pam_faillock.so module maintains a list of failed authentication attempts per user during a specified interval and locks the account in case there were more than the configured number of consecutive failed authentications (this is defined by the deny parameter in the faillock configuration). It stores the failure records into per-user files in the tally directory.

Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.

Solution:
Create two pam-auth-update profiles in /usr/share/pam-configs/ :

Create the first profile with the following lines:

Name: Enable pam_faillock to deny access
Default: yes
Priority: 0
Auth-Type: Primary
Auth:
        [default=die] pam_faillock.so authfail

Example:

#!/usr/bin/env bash

{
   arr=('Name: Enable pam_faillock to deny access' 'Default: yes' 'Priority: 0' 'Auth-Type: Primary' 'Auth:' ' [default=die] pam_faillock.so authfail')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/faillock
}

Create the second profile with the following lines:

Name: Notify of failed login attempts and reset count upon success
Default: yes
Priority: 1024
Auth-Type: Primary
Auth:
        requisite pam_faillock.so preauth
Account-Type: Primary
Account:
        required pam_faillock.so

Example:

#!/usr/bin/env bash

{
   arr=('Name: Notify of failed login attempts and reset count upon success' 'Default: yes' 'Priority: 1024' 'Auth-Type: Primary' 'Auth:' ' requisite pam_faillock.so preauth' 'Account-Type: Primary' 'Account:' ' required pam_faillock.so')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/faillock_notify
}

Run the following command to update the common-auth and common-account PAM files with the new profiles:

# pam-auth-update --enable <profile_filename>

Example:

# pam-auth-update --enable faillock
# pam-auth-update --enable faillock_notify

Note:

 - The name used for the file must be used in the pam-auth-update --enable command
 - The Name: line should be easily recognizable and understood
 - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files
 - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_faillock module, enable that module instead

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.7,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),LEVEL|1A,NESA|M1.2.2,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - account pam_faillock.so
The file ""/etc/pam.d/common-account"" does not contain ""(?i)^\h*account\h+([^#\n\r]+)\h+pam_faillock\.so\b""

-------------------------
FAILED - authfail
The file ""/etc/pam.d/common-auth"" does not contain ""(?i)^\h*auth\h+([^#\n\r]+)\h+pam_faillock\.so\h+([^#\n\r]+\h+)?authfail\b""

-------------------------
FAILED - preauth
The file ""/etc/pam.d/common-auth"" does not contain ""(?i)^\h*auth\h+([^#\n\r]+)\h+pam_faillock\.so\h+([^#\n\r]+\h+)?preauth\b""","Create two pam-auth-update profiles in /usr/share/pam-configs/ :

Create the first profile with the following lines:

Name: Enable pam_faillock to deny access
Default: yes
Priority: 0
Auth-Type: Primary
Auth:
        [default=die] pam_faillock.so authfail

Example:

#!/usr/bin/env bash

{
   arr=('Name: Enable pam_faillock to deny access' 'Default: yes' 'Priority: 0' 'Auth-Type: Primary' 'Auth:' ' [default=die] pam_faillock.so authfail')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/faillock
}

Create the second profile with the following lines:

Name: Notify of failed login attempts and reset count upon success
Default: yes
Priority: 1024
Auth-Type: Primary
Auth:
        requisite pam_faillock.so preauth
Account-Type: Primary
Account:
        required pam_faillock.so

Example:

#!/usr/bin/env bash

{
   arr=('Name: Notify of failed login attempts and reset count upon success' 'Default: yes' 'Priority: 1024' 'Auth-Type: Primary' 'Auth:' ' requisite pam_faillock.so preauth' 'Account-Type: Primary' 'Account:' ' required pam_faillock.so')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/faillock_notify
}

Run the following command to update the common-auth and common-account PAM files with the new profiles:

# pam-auth-update --enable <profile_filename>

Example:

# pam-auth-update --enable faillock
# pam-auth-update --enable faillock_notify

Note:

 - The name used for the file must be used in the pam-auth-update --enable command
 - The Name: line should be easily recognizable and understood
 - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files
 - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_faillock module, enable that module instead","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.2.3 Ensure pam_pwquality module is enabled"" : [FAILED]

The pam_pwquality.so module performs password quality checking. This module can be plugged into the password stack of a given service to provide strength-checking for passwords. The code was originally based on pam_cracklib module and the module is backwards compatible with its options.

The action of this module is to prompt the user for a password and check its strength against a system dictionary and a set of rules for identifying poor choices.

The first action is to prompt for a single password, check its strength and then, if it is considered strong, prompt for the password a second time (to verify that it was typed correctly on the first occasion). All being well, the password is passed on to subsequent modules to be installed as the new authentication token.

Use of a unique, complex passwords helps to increase the time and resources required to compromise the password.

Solution:
Run the following script to verify the pam_pwquality.so line exists in a pam-auth-update profile:

# grep -P -- 'bpam_pwquality.sob' /usr/share/pam-configs/*

Output should be similar to:

/usr/share/pam-configs/pwquality: requisite pam_pwquality.so retry=3
/usr/share/pam-configs/pwquality: requisite pam_pwquality.so retry=3

- IF - similar output is returned:

Run the following command to update /etc/pam.d/common-password with the returned profile:

# pam-auth-update --enable {PROFILE_NAME}

Example:

# pam-auth-update pwquality

- IF - similar output is NOT returned:

Run the following script to create a pam-auth-update profile for pwquality :

!#/usr/bin/env bash

{
   arr=('Name: Pwquality password strength checking' 'Default: yes' 'Priority: 1024' 'Conflicts: cracklib' 'Password-Type: Primary' 'Password:' ' requisite pam_pwquality.so retry=3' 'Password-Initial:' 'requisite')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/pwquality
}

Run the following command to update /etc/pam.d/common-password with the pwquality profile:

# pam-auth-update --enable pwquality

Note:

 - The name used for the file must be used in the pam-auth-update --enable command
 - The Name: line should be easily recognizable and understood
 - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files
 - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_pwquality module, enable that module instead

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
expect: (?i)^\h*password\h+(requisite|required)\h+pam_pwquality\.so\b
file: /etc/pam.d/common-password
regex: (?i)^\h*password\h+(requisite|required)\h+pam_pwquality\.so\b

Actual Value:
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+(requisite|required)\h+pam_pwquality\.so\b""","Run the following script to verify the pam_pwquality.so line exists in a pam-auth-update profile:

# grep -P -- 'bpam_pwquality.sob' /usr/share/pam-configs/*

Output should be similar to:

/usr/share/pam-configs/pwquality: requisite pam_pwquality.so retry=3
/usr/share/pam-configs/pwquality: requisite pam_pwquality.so retry=3

- IF - similar output is returned:

Run the following command to update /etc/pam.d/common-password with the returned profile:

# pam-auth-update --enable {PROFILE_NAME}

Example:

# pam-auth-update pwquality

- IF - similar output is NOT returned:

Run the following script to create a pam-auth-update profile for pwquality :

!#/usr/bin/env bash

{
   arr=('Name: Pwquality password strength checking' 'Default: yes' 'Priority: 1024' 'Conflicts: cracklib' 'Password-Type: Primary' 'Password:' ' requisite pam_pwquality.so retry=3' 'Password-Initial:' 'requisite')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/pwquality
}

Run the following command to update /etc/pam.d/common-password with the pwquality profile:

# pam-auth-update --enable pwquality

Note:

 - The name used for the file must be used in the pam-auth-update --enable command
 - The Name: line should be easily recognizable and understood
 - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files
 - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_pwquality module, enable that module instead","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.2.4 Ensure pam_pwhistory module is enabled"" : [FAILED]

The pam_pwhistory.so module saves the last passwords for each user in order to force password change history and keep the user from alternating between the same password too frequently.

This module does not work together with kerberos. In general, it does not make much sense to use this module in conjunction with NIS or LDAP since the old passwords are stored on the local machine and are not available on another machine for password history checking.

Use of a unique, complex passwords helps to increase the time and resources required to compromise the password.

Solution:
Run the following script to verify the pam_pwquality.so line exists in a pam-auth-update profile:

# grep -P -- 'bpam_pwhistory.sob' /usr/share/pam-configs/*

Output should be similar to:

/usr/share/pam-configs/pwhistory: requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok

- IF - similar output is returned:

Run the following command to update /etc/pam.d/common-password with the returned profile:

# pam-auth-update --enable {PROFILE_NAME}

Example:

# pam-auth-update pwhistory

- IF - similar output is NOT returned:

Run the following script to create a pam-auth-update profile for pwhistory :

!#/usr/bin/env bash

{
   arr=('Name: pwhistory password history checking' 'Default: yes' 'Priority: 1024' 'Password-Type: Primary' 'Password:' ' requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/pwhistory
}

Run the following command to update /etc/pam.d/common-password with the pwhistory profile:

# pam-auth-update --enable pwhistory

Note:

 - The name used for the file must be used in the pam-auth-update --enable command
 - The Name: line should be easily recognizable and understood
 - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files
 - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_pwhistory module, enable that module instead

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
expect: (?i)^\h*password\h+(requisite|required)\h+pam_pwhistory\.so\b
file: /etc/pam.d/common-password
regex: (?i)^\h*password\h+(requisite|required)\h+pam_pwhistory\.so\b

Actual Value:
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+(requisite|required)\h+pam_pwhistory\.so\b""","Run the following script to verify the pam_pwquality.so line exists in a pam-auth-update profile:

# grep -P -- 'bpam_pwhistory.sob' /usr/share/pam-configs/*

Output should be similar to:

/usr/share/pam-configs/pwhistory: requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok

- IF - similar output is returned:

Run the following command to update /etc/pam.d/common-password with the returned profile:

# pam-auth-update --enable {PROFILE_NAME}

Example:

# pam-auth-update pwhistory

- IF - similar output is NOT returned:

Run the following script to create a pam-auth-update profile for pwhistory :

!#/usr/bin/env bash

{
   arr=('Name: pwhistory password history checking' 'Default: yes' 'Priority: 1024' 'Password-Type: Primary' 'Password:' ' requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok')
   printf '%s
' ""${arr[@]}"" > /usr/share/pam-configs/pwhistory
}

Run the following command to update /etc/pam.d/common-password with the pwhistory profile:

# pam-auth-update --enable pwhistory

Note:

 - The name used for the file must be used in the pam-auth-update --enable command
 - The Name: line should be easily recognizable and understood
 - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files
 - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_pwhistory module, enable that module instead","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.1.1 Ensure password failed attempts lockout is configured"" : [FAILED]

The deny=<n> option will deny access if the number of consecutive authentication failures for this user during the recent interval exceeds

.

Locking out user IDs after

n

unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.

Solution:
Create or edit the following line in /etc/security/faillock.conf setting the deny option to 5 or less:

deny = 5

Run the following command:

# grep -Pl -- 'bpam_faillock.soh+([^#
r]+h+)?denyb' /usr/share/pam-configs/*

Edit any returned files and remove the deny=<N> arguments from the pam_faillock.so line(s):

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.7,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),LEVEL|1A,NESA|M1.2.2,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - faillock.conf - deny
The file ""/etc/security/faillock.conf"" does not contain ""(?i)^\h*deny\h*=\h*[1-5]\b""

-------------------------
PASSED - common-auth deny
No matching files were found","Create or edit the following line in /etc/security/faillock.conf setting the deny option to 5 or less:

deny = 5

Run the following command:

# grep -Pl -- 'bpam_faillock.soh+([^#
r]+h+)?denyb' /usr/share/pam-configs/*

Edit any returned files and remove the deny=<N> arguments from the pam_faillock.so line(s):","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.1.2 Ensure password unlock time is configured"" : [FAILED]

unlock_time=<n> - The access will be re-enabled after

seconds after the lock out. The value 0 has the same meaning as value never - the access will not be re-enabled without resetting the faillock entries by the faillock(8) command.

Note:

 - The default directory that pam_faillock uses is usually cleared on system boot so the access will be also re-enabled after system reboot. If that is undesirable a different tally directory must be set with the dir option.
 - It is usually undesirable to permanently lock out users as they can become easily a target of denial of service attack unless the usernames are random and kept secret to potential attackers.
 - The maximum configurable value for unlock_time is 604800

Locking out user IDs after

n

unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.

Solution:
Set password unlock time to conform to site policy. unlock_time should be 0 (never), or 900 seconds or greater.

Edit /etc/security/faillock.conf and update or add the following line:

unlock_time = 900

Run the following command: remove the unlock_time argument from the pam_faillock.so module in the PAM files:

# grep -Pl -- 'bpam_faillock.soh+([^#
r]+h+)?unlock_timeb' /usr/share/pam-configs/*

Edit any returned files and remove the unlock_time=<N> argument from the pam_faillock.so line(s):

Impact:

Use of unlock_time=0 may allow an attacker to cause denial of service to legitimate users. This will also require a systems administrator with elevated privileges to unlock the account.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.7,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),LEVEL|1A,NESA|M1.2.2,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - faillock.conf - unlock time
The file ""/etc/security/faillock.conf"" does not contain ""(?i)^\h*unlock_time\h*=""

-------------------------
PASSED - common-auth unlock_time
No matching files were found","Set password unlock time to conform to site policy. unlock_time should be 0 (never), or 900 seconds or greater.

Edit /etc/security/faillock.conf and update or add the following line:

unlock_time = 900

Run the following command: remove the unlock_time argument from the pam_faillock.so module in the PAM files:

# grep -Pl -- 'bpam_faillock.soh+([^#
r]+h+)?unlock_timeb' /usr/share/pam-configs/*

Edit any returned files and remove the unlock_time=<N> argument from the pam_faillock.so line(s):

Impact:

Use of unlock_time=0 may allow an attacker to cause denial of service to legitimate users. This will also require a systems administrator with elevated privileges to unlock the account.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.1 Ensure password number of changed characters is configured"" : [FAILED]

The pwquality difok option sets the number of characters in a password that must not be present in the old password.

Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

Password complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised.

Solution:
Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set difok to 2 or more. Ensure setting conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*difoks*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""difok = 2"" > /etc/security/pwquality.conf.d/50-pwdifok.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?difokb' /usr/share/pam-configs/*

Edit any returned files and remove the difok argument from the pam_pwquality.so line(s):

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - pwquality - difok
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

-------------------------
PASSED - common-password difok
No matching files were found","Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set difok to 2 or more. Ensure setting conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*difoks*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""difok = 2"" > /etc/security/pwquality.conf.d/50-pwdifok.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?difokb' /usr/share/pam-configs/*

Edit any returned files and remove the difok argument from the pam_pwquality.so line(s):","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.2 Ensure minimum password length is configured"" : [FAILED]

The minimum password length setting determines the lowers number of characters that make up a password for a user account. There are many different theories about how to determine the best password length for an organization, but perhaps ""passphrase"" is a better term than ""password"".

The minlen option sets the minimum acceptable size for the new password (plus one if credits are not disabled which is the default). Cannot be set to lower value than 6.

Strong passwords help protect systems from password attacks. Types of password attacks include dictionary attacks, which attempt to use common words and phrases, and brute force attacks, which try every possible combination of characters. Also attackers may try to obtain the account database so they can use tools to discover the accounts and passwords.

Solution:
Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set password length of 14 or more characters. Ensure that password length conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*minlens*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""minlen = 14"" > /etc/security/pwquality.conf.d/50-pwlength.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?minlenb' /usr/share/pam-configs/*

Edit any returned files and remove the minlen argument from the pam_pwquality.so line(s):

Impact:

In general, it is true that longer passwords are better (harder to crack), but it is also true that forced password length requirements can cause user behavior that is predictable and undesirable. For example, requiring users to have a minimum 16-character password may cause them to choose repeating patterns like fourfourfourfour or passwordpassword that meet the requirement but aren't hard to guess. Additionally, length requirements increase the chances that users will adopt other insecure practices, like writing them down, re-using them or storing them unencrypted in their documents.

Having a reasonable minimum length with no maximum character limit increases the resultingaverage password length used (and therefore the strength).6

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - common-password minlen
No matching files were found

-------------------------
FAILED - pwquality - minlen
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf","Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set password length of 14 or more characters. Ensure that password length conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*minlens*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""minlen = 14"" > /etc/security/pwquality.conf.d/50-pwlength.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?minlenb' /usr/share/pam-configs/*

Edit any returned files and remove the minlen argument from the pam_pwquality.so line(s):

Impact:

In general, it is true that longer passwords are better (harder to crack), but it is also true that forced password length requirements can cause user behavior that is predictable and undesirable. For example, requiring users to have a minimum 16-character password may cause them to choose repeating patterns like fourfourfourfour or passwordpassword that meet the requirement but aren't hard to guess. Additionally, length requirements increase the chances that users will adopt other insecure practices, like writing them down, re-using them or storing them unencrypted in their documents.

Having a reasonable minimum length with no maximum character limit increases the resultingaverage password length used (and therefore the strength).6","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.3 Ensure password complexity is configured"" : [FAILED]

Password complexity can be set through:

 - minclass - The minimum number of classes of characters required in a new password. (digits, uppercase, lowercase, others). e.g. minclass = 4 requires digits, uppercase, lower case, and special characters.
 - dcredit - The maximum credit for having digits in the new password. If less than 0 it is the minimum number of digits in the new password. e.g. dcredit = -1 requires at least one digit
 - ucredit - The maximum credit for having uppercase characters in the new password. If less than 0 it is the minimum number of uppercase characters in the new password. e.g. ucredit = -1 requires at least one uppercase character
 - ocredit - The maximum credit for having other characters in the new password. If less than 0 it is the minimum number of other characters in the new password. e.g. ocredit = -1 requires at least one special character
 - lcredit - The maximum credit for having lowercase characters in the new password. If less than 0 it is the minimum number of lowercase characters in the new password. e.g. lcredit = -1 requires at least one lowercase character

Strong passwords protect systems from being hacked through brute force methods.

Requiring at least one non-alphabetic character increases the search space beyond pure dictionary words, which makes the resulting password harder to crack.

Forcing users to choose an excessively complex password, e.g. some combination of upper-case, lower-case, numbers, and special characters, has a negative impact. It places an extra burden on users and many will use predictable patterns (for example, a capital letter in the first position, followed by lowercase letters, then one or two numbers, and a ""special character"" at the end). Attackers know this, so dictionary attacks will often contain these common patterns and use the most common substitutions like, $ for s, @ for a, 1 for l, 0 for o.

Solution:
Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?(minclass|[dulo]credit)b' /usr/share/pam-configs/*

Edit any returned files and remove the minclass dcredit ucredit lcredit and ocredit arguments from the pam_pwquality.so line(s)

Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line(s) to set complexity according to local site policy:

 - minclass = _N_
 - dcredit = _N_ # Value should be either 0 or a number proceeded by a minus ( - ) symbol
 - ucredit = -1 # Value should be either 0 or a number proceeded by a minus ( - ) symbol
 - ocredit = -1 # Value should be either 0 or a number proceeded by a minus ( - ) symbol
 - lcredit = -1 # Value should be either 0 or a number proceeded by a minus ( - ) symbol

Example 1 - Set minclass = 3 :

#!/usr/bin/env bash

{
   sed -ri 's/^s*minclasss*=/# &amp;/' /etc/security/pwquality.conf
   sed -ri 's/^s*[dulo]credits*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""minclass = 3"" > /etc/security/pwquality.conf.d/50-pwcomplexity.conf
}

Example 2 - set dcredit = -1 ucredit = -1 and lcredit = -1 :

#!/usr/bin/env bash

{
   sed -ri 's/^s*minclasss*=/# &amp;/' /etc/security/pwquality.conf
   sed -ri 's/^s*[dulo]credits*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '%s
' ""dcredit = -1"" ""ucredit = -1"" ""lcredit = -1"" > /etc/security/pwquality.conf.d/50-pwcomplexity.conf
}

Impact:

Passwords that are too complex in nature make it harder for users to remember, leading to bad practices. In addition, composition requirements provide no defense against common attack types such as social engineering or insecure storage of passwords

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1M,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - ocredit
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

-------------------------
FAILED - ucredit
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

-------------------------
FAILED - lcredit
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

-------------------------
FAILED - dcredit
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf","Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?(minclass|[dulo]credit)b' /usr/share/pam-configs/*

Edit any returned files and remove the minclass dcredit ucredit lcredit and ocredit arguments from the pam_pwquality.so line(s)

Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line(s) to set complexity according to local site policy:

 - minclass = _N_
 - dcredit = _N_ # Value should be either 0 or a number proceeded by a minus ( - ) symbol
 - ucredit = -1 # Value should be either 0 or a number proceeded by a minus ( - ) symbol
 - ocredit = -1 # Value should be either 0 or a number proceeded by a minus ( - ) symbol
 - lcredit = -1 # Value should be either 0 or a number proceeded by a minus ( - ) symbol

Example 1 - Set minclass = 3 :

#!/usr/bin/env bash

{
   sed -ri 's/^s*minclasss*=/# &amp;/' /etc/security/pwquality.conf
   sed -ri 's/^s*[dulo]credits*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""minclass = 3"" > /etc/security/pwquality.conf.d/50-pwcomplexity.conf
}

Example 2 - set dcredit = -1 ucredit = -1 and lcredit = -1 :

#!/usr/bin/env bash

{
   sed -ri 's/^s*minclasss*=/# &amp;/' /etc/security/pwquality.conf
   sed -ri 's/^s*[dulo]credits*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '%s
' ""dcredit = -1"" ""ucredit = -1"" ""lcredit = -1"" > /etc/security/pwquality.conf.d/50-pwcomplexity.conf
}

Impact:

Passwords that are too complex in nature make it harder for users to remember, leading to bad practices. In addition, composition requirements provide no defense against common attack types such as social engineering or insecure storage of passwords","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.4 Ensure password same consecutive characters is configured"" : [FAILED]

The pwquality maxrepeat option sets the maximum number of allowed same consecutive characters in a new password.

Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

Password complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised.

Solution:
Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set maxrepeat to 3 or less and not 0 Ensure setting conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*maxrepeats*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""maxrepeat = 3"" > /etc/security/pwquality.conf.d/50-pwrepeat.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?maxrepeatb' /usr/share/pam-configs/*

Edit any returned files and remove the maxrepeat argument from the pam_pwquality.so line(s):

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - pwquality - maxrepeat
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

-------------------------
PASSED - common-password maxrepeat
No matching files were found","Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set maxrepeat to 3 or less and not 0 Ensure setting conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*maxrepeats*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""maxrepeat = 3"" > /etc/security/pwquality.conf.d/50-pwrepeat.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?maxrepeatb' /usr/share/pam-configs/*

Edit any returned files and remove the maxrepeat argument from the pam_pwquality.so line(s):","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.5 Ensure password maximum sequential characters is configured"" : [FAILED]

The pwquality maxsequence option sets the maximum length of monotonic character sequences in the new password. Examples of such sequence are 12345 or fedcb The check is disabled if the value is 0

Note: Most such passwords will not pass the simplicity check unless the sequence is only a minor part of the password.

Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

Password complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised.

Solution:
Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set maxsequence to 3 or less and not 0 Ensure setting conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*maxsequences*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""maxsequence = 3"" > /etc/security/pwquality.conf.d/50-pwmaxsequence.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?maxsequenceb' /usr/share/pam-configs/*

Edit any returned files and remove the maxsequence argument from the pam_pwquality.so line(s):

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - pwquality - maxsequence
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

-------------------------
PASSED - common-password maxsequence
No matching files were found","Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set maxsequence to 3 or less and not 0 Ensure setting conforms to local site policy:

Example:

#!/usr/bin/env bash

{
   sed -ri 's/^s*maxsequences*=/# &amp;/' /etc/security/pwquality.conf
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s' ""maxsequence = 3"" > /etc/security/pwquality.conf.d/50-pwmaxsequence.conf
}

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?maxsequenceb' /usr/share/pam-configs/*

Edit any returned files and remove the maxsequence argument from the pam_pwquality.so line(s):","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.6 Ensure password dictionary check is enabled"" : [FAILED]

The pwquality dictcheck option sets whether to check for the words from the cracklib dictionary.

If the operating system allows the user to select passwords based on dictionary words, this increases the chances of password compromise by increasing the opportunity for successful guesses, and brute-force attacks.

Solution:
Edit any file ending inconf in the /etc/security/pwquality.conf.d/ directory and/or the file /etc/security/pwquality.conf and comment out or remove any instance of dictcheck = 0 :

Example:

# sed -ri 's/^s*dictchecks*=/# &amp;/' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?dictcheckb' /usr/share/pam-configs/*

Edit any returned files and remove the dictcheck argument from the pam_pwquality.so line(s)

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - Verify that the dictcheck option is not set to 0 (disabled) in a pwquality configuration file
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

-------------------------
PASSED - dictcheck=0
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwquality\.so\h+([^#\r]+\h+)?dictcheck\h*=\h*0\b""","Edit any file ending inconf in the /etc/security/pwquality.conf.d/ directory and/or the file /etc/security/pwquality.conf and comment out or remove any instance of dictcheck = 0 :

Example:

# sed -ri 's/^s*dictchecks*=/# &amp;/' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?dictcheckb' /usr/share/pam-configs/*

Edit any returned files and remove the dictcheck argument from the pam_pwquality.so line(s)","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.7 Ensure password quality checking is enforced"" : [FAILED]

The pam_pwquality module can be configured to either reject a password if it fails the checks, or only print a warning.

This is configured by setting the enforcing=<N> argument. If nonzero, a password will be rejected if it fails the checks, otherwise only a warning message will be provided.

This setting applies only to the pam_pwquality module and possibly other applications that explicitly change their behavior based on it. It does not affect pwmake(1) and pwscore(1).

Strong passwords help protect systems from password attacks. Types of password attacks include dictionary attacks, which attempt to use common words and phrases, and brute force attacks, which try every possible combination of characters. Also attackers may try to obtain the account database so they can use tools to discover the accounts and passwords.

Solution:
Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?enforcing=0b' /usr/share/pam-configs/*

Edit any returned files and remove the enforcing=0 argument from the pam_pwquality.so line(s)

Edit /etc/security/pwquality.conf and all files ending inconf in the /etc/security/pwquality.conf.d/ directory and remove or comment out any line containing the enforcing = 0 argument:

Example:

# sed -ri 's/^s*enforcings*=s*0/# &amp;/' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - common-password enforcing=0
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwquality\.so\h+([^#\r]+\h+)?enforcing\h*=\h*0\b""

-------------------------
FAILED - pwquality.conf enforcing=0
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf","Run the following command:

# grep -Pl -- 'bpam_pwquality.soh+([^#
r]+h+)?enforcing=0b' /usr/share/pam-configs/*

Edit any returned files and remove the enforcing=0 argument from the pam_pwquality.so line(s)

Edit /etc/security/pwquality.conf and all files ending inconf in the /etc/security/pwquality.conf.d/ directory and remove or comment out any line containing the enforcing = 0 argument:

Example:

# sed -ri 's/^s*enforcings*=s*0/# &amp;/' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.2.8 Ensure password quality is enforced for the root user"" : [FAILED]

If the pwquality enforce_for_root option is enabled, the module will return error on failed check even if the user changing the password is root.

This option is off by default which means that just the message about the failed check is printed but root can change the password anyway.

Note: The root is not asked for an old password so the checks that compare the old and new password are not performed.

Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

Password complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised.

Solution:
Edit or add the following line in a *.conf file in /etc/security/pwquality.conf.d or in /etc/security/pwquality.conf :

Example:

#!/urs/bin/env bash

{
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s
' ""enforce_for_root"" > /etc/security/pwquality.conf.d/50-pwroot.conf
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
expect: (?i)^\h*enforce_for_root\b
file: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf
min_occurrences: 1
regex: (?i)^\h*enforce_for_root\b
string_required: NO

Actual Value:
No files found: /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf","Edit or add the following line in a *.conf file in /etc/security/pwquality.conf.d or in /etc/security/pwquality.conf :

Example:

#!/urs/bin/env bash

{
   [ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/
   printf '
%s
' ""enforce_for_root"" > /etc/security/pwquality.conf.d/50-pwroot.conf
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.3.1 Ensure password history remember is configured"" : [FAILED]

The /etc/security/opasswd file stores the users' old passwords and can be checked to ensure that users are not recycling recent passwords. The number of passwords remembered is set via the remember argument value in set for the pam_pwhistory module.

 - remember=<N> - <N> is the number of old passwords to remember

Requiring users not to reuse their passwords make it less likely that an attacker will be able to guess the password or use a compromised password.

Note: These change only apply to accounts configured on the local system.

Solution:
Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_pwhistory.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files and edit or add the remember= argument, with a value of 24 or more, that meets local site policy to the pam_pwhistory line in the Password section:

Example File:

Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password:
   requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes remember=<N>**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable pwhistory

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
expect: (?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwhistory\.so\h+([^#\r]+\h+)?remember=(2[4-9]|[3-9][0-9]|[1-9][0-9]{2,})\b
file: /etc/pam.d/common-password
regex: (?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwhistory\.so\h+([^#\r]+\h+)?remember=

Actual Value:
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwhistory\.so\h+([^#\r]+\h+)?remember=""","Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_pwhistory.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files and edit or add the remember= argument, with a value of 24 or more, that meets local site policy to the pam_pwhistory line in the Password section:

Example File:

Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password:
   requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes remember=<N>**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable pwhistory","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.3.2 Ensure password history is enforced for the root user"" : [FAILED]

If the pwhistory enforce_for_root option is enabled, the module will enforce password history for the root user as well

Requiring users not to reuse their passwords make it less likely that an attacker will be able to guess the password or use a compromised password

Note: These change only apply to accounts configured on the local system.

Solution:
Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_pwhistory.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files and add the enforce_for_root argument to the pam_pwhistory line in the Password section:

Example File:

Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password:
   requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes enforce_for_root**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable pwhistory

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
expect: (?i)^\h*password\h+[^#\n\r]+\h+pam_pwhistory\.so\h+([^#\n\r]+\h+)?enforce_for_root\b
file: /etc/pam.d/common-password
regex: (?i)^\h*password\h+[^#\n\r]+\h+pam_pwhistory\.so\h+([^#\n\r]+\h+)?enforce_for_root\b

Actual Value:
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+[^#\n\r]+\h+pam_pwhistory\.so\h+([^#\n\r]+\h+)?enforce_for_root\b""","Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_pwhistory.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files and add the enforce_for_root argument to the pam_pwhistory line in the Password section:

Example File:

Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password:
   requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes enforce_for_root**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable pwhistory","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.3.3 Ensure pam_pwhistory includes use_authtok"" : [FAILED]

use_authtok - When password changing enforce the module to set the new password to the one provided by a previously stacked password module

use_authtok allows multiple pam modules to confirm a new password before it is accepted.

Solution:
Edit any returned files and add the use_authtok argument to the pam_pwhistory line in the Password section:

Example File:

Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password:
   requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes use_authtok**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable pwhistory

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1

Policy Value:
expect: (?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwhistory\.so(\h+[^#\n\r]+)?\h+use_authtok\b
file: /etc/pam.d/common-password
regex: (?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwhistory\.so(\h+[^#\n\r]+)?\h+use_authtok\b

Actual Value:
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+(requisite|required|sufficient)\h+pam_pwhistory\.so(\h+[^#\n\r]+)?\h+use_authtok\b""","Edit any returned files and add the use_authtok argument to the pam_pwhistory line in the Password section:

Example File:

Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password:
   requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes use_authtok**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable pwhistory","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.4.1 Ensure pam_unix does not include nullok"" : [FAILED]

The nullok argument overrides the default action of pam_unix.so to not permit the user access to a service if their official password is blank.

Using a strong password is essential to helping protect personal and sensitive information from unauthorized access

Solution:
Run the following command:

# grep -PH -- '^h*([^#
r]+h+)?pam_unix.soh+([^#
r]+h+)?nullokb' /usr/share/pam-configs/*

Edit any files returned and remove the nullok argument for the pam_unix lines

Example File:

Name: Unix authentication
Default: yes
Priority: 256
Auth-Type: Primary
Auth:
        [success=end default=ignore] pam_unix.so try_first_pass # <- **ensure line does not include nullok nullok**
Auth-Initial:
        [success=end default=ignore] pam_unix.so # <- **ensure line does not include nullok nullok**
Account-Type: Primary
Account:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Account-Initial:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Session-Type: Additional
Session:
        required pam_unix.so
Session-Initial:
        required pam_unix.so
Password-Type: Primary
Password:
        [success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt
Password-Initial:
        [success=end default=ignore] pam_unix.so obscure yescrypt

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <EDITED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix

Note: If custom files are being used, the corresponding files in /etc/pam.d/ would need to be edited directly, and the pam-auth-update --enable <EDITED_PROFILE_NAME> command skipped

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - common-session-noninteractive nullok
The file ""/etc/pam.d/common-session-noninteractive"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+nullok\b""

-------------------------
PASSED - common-password nullok
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+nullok\b""

-------------------------
FAILED - common-auth nullok
Non-compliant file(s):
      /etc/pam.d/common-auth - regex '(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+nullok\b' found - expect '(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+nullok\b' found in the following lines:
          17: auth	[success=1 default=ignore]	pam_unix.so nullok

-------------------------
PASSED - common-account nullok
The file ""/etc/pam.d/common-account"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+nullok\b""

-------------------------
PASSED - common-session nullok
The file ""/etc/pam.d/common-session"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+nullok\b""","Run the following command:

# grep -PH -- '^h*([^#
r]+h+)?pam_unix.soh+([^#
r]+h+)?nullokb' /usr/share/pam-configs/*

Edit any files returned and remove the nullok argument for the pam_unix lines

Example File:

Name: Unix authentication
Default: yes
Priority: 256
Auth-Type: Primary
Auth:
        [success=end default=ignore] pam_unix.so try_first_pass # <- **ensure line does not include nullok nullok**
Auth-Initial:
        [success=end default=ignore] pam_unix.so # <- **ensure line does not include nullok nullok**
Account-Type: Primary
Account:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Account-Initial:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Session-Type: Additional
Session:
        required pam_unix.so
Session-Initial:
        required pam_unix.so
Password-Type: Primary
Password:
        [success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt
Password-Initial:
        [success=end default=ignore] pam_unix.so obscure yescrypt

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <EDITED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix

Note: If custom files are being used, the corresponding files in /etc/pam.d/ would need to be edited directly, and the pam-auth-update --enable <EDITED_PROFILE_NAME> command skipped","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.4.2 Ensure pam_unix does not include remember"" : [PASSED]

The remember=n argument saves the last n passwords for each user in /etc/security/opasswd in order to force password change history and keep the user from alternating between the same password too frequently. The MD5 password hash algorithm is used for storing the old passwords. Instead of this option the pam_pwhistory module should be used. The pam_pwhistory module saves the last n passwords for each user in /etc/security/opasswd using the password hash algorithm set on the pam_unix module. This allows for the yescrypt or sha512 hash algorithm to be used.

The remember=n argument should be removed to ensure a strong password hashing algorithm is being used. A stronger hash provides additional protection to the system by increasing the level of effort needed for an attacker to successfully determine local user's old passwords stored in /etc/security/opasswd

Solution:
Run the following command:

# grep -PH -- '^h*([^#
r]+h+)?pam_unix.soh+([^#
r]+h+)?rememberb' /usr/share/pam-configs/*

Edit any files returned and remove the remember=_<N>_ argument for the pam_unix lines

Example output:

[success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt remember=5 # **<- remove remember=<N>**
[success=end default=ignore] pam_unix.so obscure yescrypt remember=5 # **<- remove remember=<N>**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <EDITED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix

Note: If custom files are being used, the corresponding files in /etc/pam.d/ would need to be edited directly, and the pam-auth-update --enable <EDITED_PROFILE_NAME> command skipped

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - common-session remember
The file ""/etc/pam.d/common-session"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+remember=\b""

-------------------------
PASSED - common-password remember
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+remember=\b""

-------------------------
PASSED - common-session-noninteractive remember
The file ""/etc/pam.d/common-session-noninteractive"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+remember=\b""

-------------------------
PASSED - common-auth remember
The file ""/etc/pam.d/common-auth"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+remember=\b""

-------------------------
PASSED - common-account remember
The file ""/etc/pam.d/common-account"" does not contain ""(?i)^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b[^#\n\r]+remember=\b""","Run the following command:

# grep -PH -- '^h*([^#
r]+h+)?pam_unix.soh+([^#
r]+h+)?rememberb' /usr/share/pam-configs/*

Edit any files returned and remove the remember=_<N>_ argument for the pam_unix lines

Example output:

[success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt remember=5 # **<- remove remember=<N>**
[success=end default=ignore] pam_unix.so obscure yescrypt remember=5 # **<- remove remember=<N>**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <EDITED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix

Note: If custom files are being used, the corresponding files in /etc/pam.d/ would need to be edited directly, and the pam-auth-update --enable <EDITED_PROFILE_NAME> command skipped","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm"" : [PASSED]

A cryptographic hash function converts an arbitrary-length input into a fixed length output. Password hashing performs a one-way transformation of a password, turning the password into another string, called the hashed password.

The pam_unix module can be configured to use one of the following hashing algorithms for user's passwords:

 - md5 - When a user changes their password next, encrypt it with the MD5 algorithm.
 - bigcrypt - When a user changes their password next, encrypt it with the DEC C2 algorithm.
 - sha256 - When a user changes their password next, encrypt it with the SHA256 algorithm. The SHA256 algorithm must be supported by the crypt(3) function.
 - sha512 - When a user changes their password next, encrypt it with the SHA512 algorithm. The SHA512 algorithm must be supported by the crypt(3) function.
 - blowfish - When a user changes their password next, encrypt it with the blowfish algorithm. The blowfish algorithm must be supported by the crypt(3) function.
 - gost_yescrypt - When a user changes their password next, encrypt it with the gost-yescrypt algorithm. The gost-yescrypt algorithm must be supported by the crypt(3) function.
 - yescrypt - When a user changes their password next, encrypt it with the yescrypt algorithm. The yescrypt algorithm must be supported by the crypt(3) function.

The SHA-512 and yescrypt algorithms provide a stronger hash than other algorithms used by Linux for password hash generation. A stronger hash provides additional protection to the system by increasing the level of effort needed for an attacker to successfully determine local user passwords.

Note: These changes only apply to the local system.

Solution:
Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_unix.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files and edit or add a strong hashing algorithm, either sha512 or yescrypt, that meets local site policy to the pam_unix lines in the Password section:

Example File:

Name: Unix authentication
Default: yes
Priority: 256
Auth-Type: Primary # <- Start of ""Auth"" section
Auth:
        [success=end default=ignore] pam_unix.so try_first_pass
Auth-Initial:
        [success=end default=ignore] pam_unix.so
Account-Type: Primary # <- Start of ""Account"" section
Account:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Account-Initial:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Session-Type: Additional # <- Start of ""Session"" section
Session:
        required pam_unix.so
Session-Initial:
        required pam_unix.so
Password-Type: Primary # <- Start of ""Password"" section
Password:
        [success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt # <- **ensure hashing algorithm is either sha512 or yescrypt**
Password-Initial:
        [success=end default=ignore] pam_unix.so obscure yescrypt # <- **ensure hashing algorithm is either sha512 or yescrypt**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1

Policy Value:
expect: (?i)^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?(SHA512|YESCRYPT)\b
file: /etc/pam.d/common-password
regex: (?i)^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?(SHA512|YESCRYPT)\b

Actual Value:
Compliant file(s):
      /etc/pam.d/common-password - regex '(?i)^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?(SHA512|YESCRYPT)\b' found - expect '(?i)^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?(SHA512|YESCRYPT)\b' found in the following lines:
          25: password	[success=1 default=ignore]	pam_unix.so obscure yescrypt","Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_unix.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files and edit or add a strong hashing algorithm, either sha512 or yescrypt, that meets local site policy to the pam_unix lines in the Password section:

Example File:

Name: Unix authentication
Default: yes
Priority: 256
Auth-Type: Primary # <- Start of ""Auth"" section
Auth:
        [success=end default=ignore] pam_unix.so try_first_pass
Auth-Initial:
        [success=end default=ignore] pam_unix.so
Account-Type: Primary # <- Start of ""Account"" section
Account:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Account-Initial:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Session-Type: Additional # <- Start of ""Session"" section
Session:
        required pam_unix.so
Session-Initial:
        required pam_unix.so
Password-Type: Primary # <- Start of ""Password"" section
Password:
        [success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt # <- **ensure hashing algorithm is either sha512 or yescrypt**
Password-Initial:
        [success=end default=ignore] pam_unix.so obscure yescrypt # <- **ensure hashing algorithm is either sha512 or yescrypt**

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.3.3.4.4 Ensure pam_unix includes use_authtok"" : [FAILED]

use_authtok - When password changing enforce the module to set the new password to the one provided by a previously stacked password module

use_authtok allows multiple pam modules to confirm a new password before it is accepted.

Solution:
Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_unix.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files add use_authtok to the pam_unix line in the Password section under Password: subsection:

Note: The if the file's Password section includes a Password-Initial: subsection, use_authtok should not be added to the pam_unix line in the Password-Initial: subsection

Example File:

Name: Unix authentication
Default: yes
Priority: 256
Auth-Type: Primary # <- Start of ""Auth"" section
Auth:
        [success=end default=ignore] pam_unix.so try_first_pass
Auth-Initial:
        [success=end default=ignore] pam_unix.so
Account-Type: Primary # <- Start of ""Account"" section
Account:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Account-Initial:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Session-Type: Additional # <- Start of ""Session"" section
Session:
        required pam_unix.so
Session-Initial:
        required pam_unix.so
Password-Type: Primary # <- Start of ""Password"" section
Password:
        [success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt # <- **ensure line includes use_authtok**
Password-Initial:
        [success=end default=ignore] pam_unix.so obscure yescrypt # <- **Password-Initial: subsection does not include use_authtok

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1

Policy Value:
expect: (?i)^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?use_authtok\b
file: /etc/pam.d/common-password
regex: (?i)^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?use_authtok\b

Actual Value:
The file ""/etc/pam.d/common-password"" does not contain ""(?i)^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?use_authtok\b""","Run the following command:

# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_unix.so/) print FILENAME}' /usr/share/pam-configs/*

Edit any returned files add use_authtok to the pam_unix line in the Password section under Password: subsection:

Note: The if the file's Password section includes a Password-Initial: subsection, use_authtok should not be added to the pam_unix line in the Password-Initial: subsection

Example File:

Name: Unix authentication
Default: yes
Priority: 256
Auth-Type: Primary # <- Start of ""Auth"" section
Auth:
        [success=end default=ignore] pam_unix.so try_first_pass
Auth-Initial:
        [success=end default=ignore] pam_unix.so
Account-Type: Primary # <- Start of ""Account"" section
Account:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Account-Initial:
        [success=end new_authtok_reqd=done default=ignore] pam_unix.so
Session-Type: Additional # <- Start of ""Session"" section
Session:
        required pam_unix.so
Session-Initial:
        required pam_unix.so
Password-Type: Primary # <- Start of ""Password"" section
Password:
        [success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt # <- **ensure line includes use_authtok**
Password-Initial:
        [success=end default=ignore] pam_unix.so obscure yescrypt # <- **Password-Initial: subsection does not include use_authtok

Run the following command to update the files in the /etc/pam.d/ directory:

# pam-auth-update --enable <MODIFIED_PROFILE_NAME>

Example:

# pam-auth-update --enable unix","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.1.1 Ensure password expiration is configured"" : [FAILED]

The PASS_MAX_DAYS parameter in /etc/login.defs allows an administrator to force passwords to expire once they reach a defined age.

PASS_MAX_DAYS

<N>

- The maximum number of days a password may be used. If the password is older than this, a password change will be forced. If not specified, -1 will be assumed (which disables the restriction).

The window of opportunity for an attacker to leverage compromised credentials or successfully compromise credentials via an online brute force attack is limited by the age of the password. Therefore, reducing the maximum age of a password also reduces an attacker's window of opportunity.

We recommend a yearly password change. This is primarily because for all their good intentions users will share credentials across accounts. Therefore, even if a breach is publicly identified, the user may not see this notification, or forget they have an account on that site. This could leave a shared credential vulnerable indefinitely. Having an organizational policy of a 1-year (annual) password expiration is a reasonable compromise to mitigate this with minimal user burden.

Solution:
Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs :

PASS_MAX_DAYS 365

Modify user parameters for all users with a password set to match:

# chage --maxdays 365 <user>

Edit /etc/login.defs and set PASS_MAX_DAYS to a value greater than 0 that follows local site policy:

Example:

PASS_MAX_DAYS 365

Run the following command to modify user parameters for all users with a password set to a maximum age no greater than 356 or less than 1 that follows local site policy:

# chage --maxdays <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($5 > 365 || $5 < 1)system (""chage --maxdays 365 "" $1)}' /etc/shadow

Impact:

The password expiration must be greater than the minimum days between password changes or users will be unable to change their password.

Excessive password expiration requirements do more harm than good, because these requirements make users select predictable passwords, composed of sequential words and numbers that are closely related to each other. In these cases, the next password can be predicted based on the previous one (incrementing a number used in the password forexample). Also, password expiration requirements offer no containment benefits because attackers will often use credentials as soon as they compromise them. Instead, immediate password changes should be based on key events including, but not limited to:

 - Indication of compromise
 - Change of user roles
 - When a user leaves the organization.

Not only does changing passwords every few weeks or months frustrate the user, it's been suggested that it does more harm than good, because it could lead to bad practices by the user such as adding a character to the end of their existing password.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - shadow password max days
Non-compliant file(s):
      /etc/shadow - regex '^[^:]+:[^!*]' found - expect '^([^:]*:){4}([1-9]|[1-9][0-9]|[12][0-9]{2}|3[0-5][0-9]|36[0-5]):' not found in the following lines:
          1: root:$6$cHxy3rQ.Bf50$uYOrh7oOEHJfdggS.93HTMqhJGmQI/P9c3ecD9IYjRJpirYJmfLY3V6uXDa/cwZDEHp6ltyl7z5yWg1hT1qLG0:19417:0:99999:7:::
          26: anapaya:$6$rwiN9fzH$D11Faz.GgMt70EYN9tALinXL/.16Hcc66kM6yK1HGuQj5BKjSEdYtDuI.XQpLFq15AQ8yEXLlYhyooxQKTjs0/:18927:0:99999:7:::
          27: scion:$6$cHxy3rQ.Bf50$uYOrh7oOEHJfdggS.93HTMqhJGmQI/P9c3ecD9IYjRJpirYJmfLY3V6uXDa/cwZDEHp6ltyl7z5yWg1hT1qLG0:19443:0:99999:7:::

-------------------------
FAILED - login.defs
Non-compliant file(s):
      /etc/login.defs - regex '(?i)^[\s]*PASS_MAX_DAYS[\s]' found - expect '(?i)^[\s]*PASS_MAX_DAYS[\s]+([1-9]|[1-9][0-9]|[12][0-9]{2}|3[0-5][0-9]|36[0-5])[\s]*$' not found in the following lines:
          165: PASS_MAX_DAYS	99999","Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs :

PASS_MAX_DAYS 365

Modify user parameters for all users with a password set to match:

# chage --maxdays 365 <user>

Edit /etc/login.defs and set PASS_MAX_DAYS to a value greater than 0 that follows local site policy:

Example:

PASS_MAX_DAYS 365

Run the following command to modify user parameters for all users with a password set to a maximum age no greater than 356 or less than 1 that follows local site policy:

# chage --maxdays <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($5 > 365 || $5 < 1)system (""chage --maxdays 365 "" $1)}' /etc/shadow

Impact:

The password expiration must be greater than the minimum days between password changes or users will be unable to change their password.

Excessive password expiration requirements do more harm than good, because these requirements make users select predictable passwords, composed of sequential words and numbers that are closely related to each other. In these cases, the next password can be predicted based on the previous one (incrementing a number used in the password forexample). Also, password expiration requirements offer no containment benefits because attackers will often use credentials as soon as they compromise them. Instead, immediate password changes should be based on key events including, but not limited to:

 - Indication of compromise
 - Change of user roles
 - When a user leaves the organization.

Not only does changing passwords every few weeks or months frustrate the user, it's been suggested that it does more harm than good, because it could lead to bad practices by the user such as adding a character to the end of their existing password.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.1.3 Ensure password expiration warning days is configured"" : [PASSED]

The PASS_WARN_AGE parameter in /etc/login.defs allows an administrator to notify users that their password will expire in a defined number of days.

PASS_WARN_AGE

<N>

- The number of days warning given before a password expires. A zero means warning is given only upon the day of expiration, a negative value means no warning is given. If not specified, no warning will be provided.

Providing an advance warning that a password will be expiring gives users time to think of a secure password. Users caught unaware may choose a simple password or write it down where it may be discovered.

Solution:
Edit /etc/login.defs and set PASS_WARN_AGE to a value of 7 or more that follows local site policy:

Example:

PASS_WARN_AGE 7

Run the following command to modify user parameters for all users with a password set to a minimum warning to 7 or more days that follows local site policy:

# chage --warndays <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($6 < 7)system (""chage --warndays 7 "" $1)}' /etc/shadow

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|4.4,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - login.defs
Compliant file(s):
      /etc/login.defs - regex '(?i)^[\s]*PASS_WARN_AGE[\s]+' found - expect '(?i)^[\s]*PASS_WARN_AGE[\s]+([7-9]|[1-9][0-9]+)[\s]*$' found in the following lines:
          167: PASS_WARN_AGE	7

-------------------------
PASSED - shadow password warn age
Compliant file(s):
      /etc/shadow - regex '^[^:]+:[^!*]' found - expect '^([^:]*:){5}([7-9]|[1-9][0-9]+):' found in the following lines:
          1: root:$6$cHxy3rQ.Bf50$uYOrh7oOEHJfdggS.93HTMqhJGmQI/P9c3ecD9IYjRJpirYJmfLY3V6uXDa/cwZDEHp6ltyl7z5yWg1hT1qLG0:19417:0:99999:7:::
          26: anapaya:$6$rwiN9fzH$D11Faz.GgMt70EYN9tALinXL/.16Hcc66kM6yK1HGuQj5BKjSEdYtDuI.XQpLFq15AQ8yEXLlYhyooxQKTjs0/:18927:0:99999:7:::
          27: scion:$6$cHxy3rQ.Bf50$uYOrh7oOEHJfdggS.93HTMqhJGmQI/P9c3ecD9IYjRJpirYJmfLY3V6uXDa/cwZDEHp6ltyl7z5yWg1hT1qLG0:19443:0:99999:7:::","Edit /etc/login.defs and set PASS_WARN_AGE to a value of 7 or more that follows local site policy:

Example:

PASS_WARN_AGE 7

Run the following command to modify user parameters for all users with a password set to a minimum warning to 7 or more days that follows local site policy:

# chage --warndays <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($6 < 7)system (""chage --warndays 7 "" $1)}' /etc/shadow","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.1.4 Ensure strong password hashing algorithm is configured"" : [PASSED]

A cryptographic hash function converts an arbitrary-length input into a fixed length output. Password hashing performs a one-way transformation of a password, turning the password into another string, called the hashed password.

ENCRYPT_METHOD (string) - This defines the system default encryption algorithm for encrypting passwords (if no algorithm are specified on the command line). It can take one of these values:

 - MD5 - MD5-based algorithm will be used for encrypting password
 - SHA256 - SHA256-based algorithm will be used for encrypting password
 - SHA512 - SHA512-based algorithm will be used for encrypting password
 - BCRYPT - BCRYPT-based algorithm will be used for encrypting password
 - YESCRYPT - YESCRYPT-based algorithm will be used for encrypting password
 - DES - DES-based algorithm will be used for encrypting password (default)

Note:

 - This parameter overrides the deprecated MD5_CRYPT_ENAB variable.
 - This parameter will only affect the generation of group passwords.
 - The generation of user passwords is done by PAM and subject to the PAM configuration.
 - It is recommended to set this variable consistently with the PAM configuration.

The SHA-512 and yescrypt algorithms provide a stronger hash than other algorithms used by Linux for password hash generation. A stronger hash provides additional protection to the system by increasing the level of effort needed for an attacker to successfully determine local group passwords.

Solution:
Edit /etc/login.defs and set the ENCRYPT_METHOD to SHA512 or YESCRYPT :

ENCRYPT_METHOD <HASHING_ALGORITHM>

Example:

ENCRYPT_METHOD YESCRYPT

Note:

 - This only effects local groups' passwords created after updating the file to use sha512 or yescrypt
 - If it is determined that the password algorithm being used is not sha512 or yescrypt once it is changed, it is recommended that all group passwords be updated to use the stronger hashing algorithm.
 - It is recommended that the chosen hashing algorithm is consistent across /etc/login.defs and the PAM configuration

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1

Policy Value:
expect: ^\s*ENCRYPT_METHOD\s+(?i)(SHA512|YESCRYPT)(?-i)\s*$
file: /etc/login.defs
regex: ^\s*ENCRYPT_METHOD\s+

Actual Value:
Compliant file(s):
      /etc/login.defs - regex '^\s*ENCRYPT_METHOD\s+' found - expect '^\s*ENCRYPT_METHOD\s+(?i)(SHA512|YESCRYPT)(?-i)\s*$' found in the following lines:
          284: ENCRYPT_METHOD SHA512","Edit /etc/login.defs and set the ENCRYPT_METHOD to SHA512 or YESCRYPT :

ENCRYPT_METHOD <HASHING_ALGORITHM>

Example:

ENCRYPT_METHOD YESCRYPT

Note:

 - This only effects local groups' passwords created after updating the file to use sha512 or yescrypt
 - If it is determined that the password algorithm being used is not sha512 or yescrypt once it is changed, it is recommended that all group passwords be updated to use the stronger hashing algorithm.
 - It is recommended that the chosen hashing algorithm is consistent across /etc/login.defs and the PAM configuration","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.1.5 Ensure inactive password lock is configured"" : [FAILED]

User accounts that have been inactive for over a given period of time can be automatically disabled.

INACTIVE - Defines the number of days after the password exceeded its maximum age where the user is expected to replace this password.

The value is stored in the shadow password file. An input of 0 will disable an expired password with no delay. An input of -1 will blank the respective field in the shadow password file.

Inactive accounts pose a threat to system security since the users are not logging in to notice failed login attempts or other anomalies.

Solution:
Run the following command to set the default password inactivity period to 45 days or less that meets local site policy:

# useradd -D -f <N>

Example:

# useradd -D -f 45

Run the following command to modify user parameters for all users with a password set to a inactive age of 45 days or less that follows local site policy:

# chage --inactive <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($7 > 45 || $7 < 0)system (""chage --inactive 45 "" $1)}' /etc/shadow

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - useradd
The command '/sbin/useradd -D | /bin/grep 'INACTIVE'' returned : 

INACTIVE=-1

-------------------------
FAILED - shadow inactive password lock
Non-compliant file(s):
      /etc/shadow - regex '^[^:]+:[^!*]' found - expect '^([^:]*:){6}([1-9]|[123][0-9]|4[0-5]):' not found in the following lines:
          1: root:$6$cHxy3rQ.Bf50$uYOrh7oOEHJfdggS.93HTMqhJGmQI/P9c3ecD9IYjRJpirYJmfLY3V6uXDa/cwZDEHp6ltyl7z5yWg1hT1qLG0:19417:0:99999:7:::
          26: anapaya:$6$rwiN9fzH$D11Faz.GgMt70EYN9tALinXL/.16Hcc66kM6yK1HGuQj5BKjSEdYtDuI.XQpLFq15AQ8yEXLlYhyooxQKTjs0/:18927:0:99999:7:::
          27: scion:$6$cHxy3rQ.Bf50$uYOrh7oOEHJfdggS.93HTMqhJGmQI/P9c3ecD9IYjRJpirYJmfLY3V6uXDa/cwZDEHp6ltyl7z5yWg1hT1qLG0:19443:0:99999:7:::","Run the following command to set the default password inactivity period to 45 days or less that meets local site policy:

# useradd -D -f <N>

Example:

# useradd -D -f 45

Run the following command to modify user parameters for all users with a password set to a inactive age of 45 days or less that follows local site policy:

# chage --inactive <N> <user>

Example:

# awk -F: '($2~/^$.+$/) {if($7 > 45 || $7 < 0)system (""chage --inactive 45 "" $1)}' /etc/shadow","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.1.6 Ensure all users last password change date is in the past"" : [PASSED]

All users should have a password change date in the past.

If a user's recorded password change date is in the future, then they could bypass any set password expiration.

Solution:
Investigate any users with a password change date in the future and correct them. Locking the account, expiring the password, or resetting the password manually may be appropriate.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

Pass","Investigate any users with a password change date in the future and correct them. Locking the account, expiring the password, or resetting the password manually may be appropriate.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.1 Ensure root is the only UID 0 account"" : [PASSED]

Any account with UID 0 has superuser privileges on the system.

This access must be limited to only the default root account and only from the system console. Administrative access must be through an unprivileged account using an approved mechanism as noted in Item 5.6 Ensure access to the su command is restricted.

Solution:
Run the following command to change the root account UID to 0 :

# usermod -u 0 root

Modify any users other than root with UID 0 and assign them a new UID.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.5,800-53|AC-6(5),800-53r5|AC-6(5),CN-L3|8.1.10.6(a),CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
name: passwd_zero_uid

Actual Value:
No issues found.","Run the following command to change the root account UID to 0 :

# usermod -u 0 root

Modify any users other than root with UID 0 and assign them a new UID.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.2 Ensure root is the only GID 0 account"" : [PASSED]

The usermod command can be used to specify which group the root account belongs to. This affects permissions of files that are created by the root account.

Using GID 0 for the root account helps prevent root -owned files from accidentally becoming accessible to non-privileged users.

Solution:
Run the following command to set the root user's GID to 0 :

# usermod -g 0 root

Run the following command to set the root group's GID to 0 :

# groupmod -g 0 root

Remove any users other than the root user with GID 0 or assign them a new GID if appropriate.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **
 - * Correctly configured * :
  - No unauthorized user's GID is: ""0""
  - User ""root"" GID is correctly set to: ""0""","Run the following command to set the root user's GID to 0 :

# usermod -g 0 root

Run the following command to set the root group's GID to 0 :

# groupmod -g 0 root

Remove any users other than the root user with GID 0 or assign them a new GID if appropriate.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.3 Ensure group root is the only GID 0 group"" : [PASSED]

The groupmod command can be used to specify which group the root group belongs to. This affects permissions of files that are group owned by the root group.

Using GID 0 for the root group helps prevent root group owned files from accidentally becoming accessible to non-privileged users.

Solution:
Run the following command to set the root group's GID to 0 :

# groupmod -g 0 root

Remove any groups other than the root group with GID 0 or assign them a new GID if appropriate.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
name: group_zero_gid

Actual Value:
No issues found.","Run the following command to set the root group's GID to 0 :

# groupmod -g 0 root

Remove any groups other than the root group with GID 0 or assign them a new GID if appropriate.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.4 Ensure root password is set"" : [PASSED]

There are a number of methods to access the root account directly. Without a password set any user would be able to gain access and thus control over the entire system.

Access to root should be secured at all times.

Solution:
Run the following command to set a password for the root user:

# passwd root

Impact:

If there are any automated processes that relies on access to the root account without authentication, they will fail after remediation.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /bin/passwd -S root | /bin/awk '$2 ~ /^P/ {print ""User: \"""" $1 ""\"" Password is set""}'
expect: (?i)^User: ""root"" Password is set$

Actual Value:
The command '/bin/passwd -S root | /bin/awk '$2 ~ /^P/ {print ""User: \"""" $1 ""\"" Password is set""}'' returned : 

User: ""root"" Password is set","Run the following command to set a password for the root user:

# passwd root

Impact:

If there are any automated processes that relies on access to the root account without authentication, they will fail after remediation.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.5 Ensure root path integrity"" : [FAILED]

The root user can execute any command on the system and could be fooled into executing programs unintentionally if the PATH is not set correctly.

Including the current working directory (.) or other writable directory in root 's executable path makes it likely that an attacker can gain superuser access by forcing an administrator operating as root to execute a Trojan horse program.

Solution:
Correct or justify any:

 - Locations that are not directories
 - Empty directories ( :: )
 - Trailing ( : )
 - Current working directory ( )
 - Non root owned directories
 - Directories that less restrictive than mode 0755

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.7,800-53|CM-7(2),800-53r5|CM-7(2),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7(2),LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,SWIFT-CSCv1|2.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - * Reasons for audit failure * :

 - ""/snap/bin"" is not a directory","Correct or justify any:

 - Locations that are not directories
 - Empty directories ( :: )
 - Trailing ( : )
 - Current working directory ( )
 - Non root owned directories
 - Directories that less restrictive than mode 0755","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.6 Ensure root user umask is configured"" : [FAILED]

The user file-creation mode mask ( umask ) is used to determine the file permission for newly created directories and files. In Linux, the default permissions for any newly created directory is 0777 ( rwxrwxrwx ), and for any newly created file it is 0666 ( rw-rw-rw- ). The umask modifies the default Linux permissions by restricting (masking) these permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in the umask are cleared in the resulting file mode.

umask can be set with either Octal or Symbolic values:

 - Octal (Numeric) Value - Represented by either three or four digits. ie umask 0027 or umask 027 If a four digit umask is used, the first digit is ignored. The remaining three digits effect the resulting permissions for user, group, and world/other respectively.
 - Symbolic Value - Represented by a comma separated list for User u group g and world/other o The permissions listed are not masked by umask ie a umask set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask 027 This umask would set a newly created directory with file mode drwxr-x--- and a newly created file with file mode rw-r-----

root user Shell Configuration Files:

 - /root/.bash_profile - Is executed to configure the root users' shell before the initial command prompt. Is only read by login shells.
 - /root/.bashrc - Is executed for interactive shells. only read by a shell that's both interactive and non-login

umask is set by order of precedence. If umask is set in multiple locations, this order of precedence will determine the system's default umask

Order of precedence:

 - /root/.bash_profile
 - /root/.bashrc
 - The system default umask

Setting a secure value for umask ensures that users make a conscious choice about their file permissions. A permissive umask value could result in directories or files with excessive permissions that can be read and/or written to by unauthorized users.

Solution:
Edit /root/.bash_profile and /root/.bashrc and remove, comment out, or update any line with umask to be 0027 or more restrictive.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
expect: (?i)^\h*umask\h+(([0-7][0-7][01][0-7]\b|[0-7][0-7][0-7][0-6]\b)|([0-7][01][0-7]\b|[0-7][0-7][0-6]\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\b)))
file: /root/.bash_profile /root/.bashrc
regex: (?i)^\h*umask\h+(([0-7][0-7][01][0-7]\b|[0-7][0-7][0-7][0-6]\b)|([0-7][01][0-7]\b|[0-7][0-7][0-6]\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\b)))

Actual Value:
Non-compliant file(s):
      /root/.bashrc - regex '(?i)^\h*umask\h+(([0-7][0-7][01][0-7]\b|[0-7][0-7][0-7][0-6]\b)|([0-7][01][0-7]\b|[0-7][0-7][0-6]\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\b)))' found - expect '(?i)^\h*umask\h+(([0-7][0-7][01][0-7]\b|[0-7][0-7][0-7][0-6]\b)|([0-7][01][0-7]\b|[0-7][0-7][0-6]\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\b)))' found in the following lines:
          110: umask 026","Edit /root/.bash_profile and /root/.bashrc and remove, comment out, or update any line with umask to be 0027 or more restrictive.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.7 Ensure system accounts do not have a valid login shell"" : [PASSED]

There are a number of accounts provided with most distributions that are used to manage applications and are not intended to provide an interactive shell. Furthermore, a user may add special accounts that are not intended to provide an interactive shell.

It is important to make sure that accounts that are not being used by regular users are prevented from being used to provide an interactive shell. By default, most distributions set the password field for these accounts to an invalid string, but it is also recommended that the shell field in the password file be set to the nologin shell. This prevents the account from potentially being used to run any commands.

Solution:
Run the following command to set the shell for any service accounts returned by the audit to nologin :

# usermod -s $(command -v nologin) <user>

Example script:

#!/usr/bin/env bash

{
   l_valid_shells=""^($( awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   awk -v pat=""$l_valid_shells"" -F: '($1!~/^(root|halt|sync|shutdown|nfsnobody)$/ &amp;&amp; ($3<'""$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)""' || $3 == 65534) &amp;&amp; $(NF) ~ pat) {system (""usermod -s '""$(command -v nologin)""' "" $1)}' /etc/passwd
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^pass$

Actual Value:
The command script with multiple lines returned : 

pass","Run the following command to set the shell for any service accounts returned by the audit to nologin :

# usermod -s $(command -v nologin) <user>

Example script:

#!/usr/bin/env bash

{
   l_valid_shells=""^($( awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   awk -v pat=""$l_valid_shells"" -F: '($1!~/^(root|halt|sync|shutdown|nfsnobody)$/ &amp;&amp; ($3<'""$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)""' || $3 == 65534) &amp;&amp; $(NF) ~ pat) {system (""usermod -s '""$(command -v nologin)""' "" $1)}' /etc/passwd
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.2.8 Ensure accounts without a valid login shell are locked"" : [PASSED]

There are a number of accounts provided with most distributions that are used to manage applications and are not intended to provide an interactive shell. Furthermore, a user may add special accounts that are not intended to provide an interactive shell.

It is important to make sure that accounts that are not being used by regular users are prevented from being used to provide an interactive shell. By default, most distributions set the password field for these accounts to an invalid string, but it is also recommended that the shell field in the password file be set to the nologin shell. This prevents the account from potentially being used to run any commands.

Solution:
Run the following command to lock any non-root accounts without a valid login shell returned by the audit:

# usermod -L <user>

Example script:

:

#!/usr/bin/env bash

{
   l_valid_shells=""^($(awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   while IFS= read -r l_user; do
      passwd -S ""$l_user"" | awk '$2 !~ /^L/ {system (""usermod -L "" $1)}'
   done < <(awk -v pat=""$l_valid_shells"" -F: '($1 != ""root"" &amp;&amp; $(NF) !~ pat) {print $1}' /etc/passwd)
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: ^pass$

Actual Value:
The command script with multiple lines returned : 

pass","Run the following command to lock any non-root accounts without a valid login shell returned by the audit:

# usermod -L <user>

Example script:

:

#!/usr/bin/env bash

{
   l_valid_shells=""^($(awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   while IFS= read -r l_user; do
      passwd -S ""$l_user"" | awk '$2 !~ /^L/ {system (""usermod -L "" $1)}'
   done < <(awk -v pat=""$l_valid_shells"" -F: '($1 != ""root"" &amp;&amp; $(NF) !~ pat) {print $1}' /etc/passwd)
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.3.2 Ensure default user shell timeout is configured"" : [PASSED]

TMOUT is an environmental setting that determines the timeout of a shell in seconds.

 - TMOUT=

n

- Sets the shell timeout to

n

seconds. A setting of TMOUT=0 disables timeout.
 - readonly TMOUT- Sets the TMOUT environmental variable as readonly, preventing unwanted modification during run-time.
 - export TMOUT - exports the TMOUT variable

System Wide Shell Configuration Files:

 - /etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in thebash_profile however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive

login

shells, or shells executed with the --login parameter.
 - /etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.
 - /etc/bashrc - System wide version ofbashrc In Fedora derived distributions, /etc/bashrc also invokes /etc/profile.d/*.sh if

non-login

shell, but redirects output to /dev/null if

non-interactive.

Is only executed for

interactive

shells or if BASH_ENV is set to /etc/bashrc

Setting a timeout value reduces the window of opportunity for unauthorized user access to another user's shell session that has been left unattended. It also ends the inactive session and releases the resources associated with that session.

Solution:
Review /etc/bashrc /etc/profile and all files ending in *.sh in the /etc/profile.d/ directory and remove or edit all TMOUT=_n_ entries to follow local site policy. TMOUT should not exceed 900 or be equal to 0

Configure TMOUT in one of the following files:

 - A file in the /etc/profile.d/ directory ending insh
 - /etc/profile
 - /etc/bashrc

TMOUT configuration examples:

 - As multiple lines:

TMOUT=900
readonly TMOUT
export TMOUT
 - As a single line:

readonly TMOUT=900 ; export TMOUT

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*passed:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

grep: : No such file or directory
grep: : No such file or directory

PASSED

TMOUT is configured in: ""/etc/profile.d/90-anapaya.sh""","Review /etc/bashrc /etc/profile and all files ending in *.sh in the /etc/profile.d/ directory and remove or edit all TMOUT=_n_ entries to follow local site policy. TMOUT should not exceed 900 or be equal to 0

Configure TMOUT in one of the following files:

 - A file in the /etc/profile.d/ directory ending insh
 - /etc/profile
 - /etc/bashrc

TMOUT configuration examples:

 - As multiple lines:

TMOUT=900
readonly TMOUT
export TMOUT
 - As a single line:

readonly TMOUT=900 ; export TMOUT","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""5.4.3.3 Ensure default user umask is configured"" : [FAILED]

The user file-creation mode mask ( umask ) is used to determine the file permission for newly created directories and files. In Linux, the default permissions for any newly created directory is 0777 ( rwxrwxrwx ), and for any newly created file it is 0666 ( rw-rw-rw- ). The umask modifies the default Linux permissions by restricting (masking) these permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in the umask are cleared in the resulting file mode.

umask can be set with either Octal or Symbolic values:

 - Octal (Numeric) Value - Represented by either three or four digits. ie umask 0027 or umask 027 If a four digit umask is used, the first digit is ignored. The remaining three digits effect the resulting permissions for user, group, and world/other respectively.
 - Symbolic Value - Represented by a comma separated list for User u group g and world/other o The permissions listed are not masked by umask ie a umask set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask 027 This umask would set a newly created directory with file mode drwxr-x--- and a newly created file with file mode rw-r-----

The default umask can be set to use the pam_umask module or in a System Wide Shell Configuration File The user creating the directories or files has the discretion of changing the permissions via the chmod command, or choosing a different default umask by adding the umask command into a User Shell Configuration File (bash_profile orbashrc ), in their home directory.

Setting the default umask:

 - pam_umask module:
 - will set the umask according to the system default in /etc/login.defs and user settings, solving the problem of different umask settings with different shells, display managers, remote sessions etc.
 - umask=<mask> value in the /etc/login.defs file is interpreted as Octal
 - Setting USERGROUPS_ENAB to yes in /etc/login.defs (default):
 - will enable setting of the umask group bits to be the same as owner bits. (examples: 022 -> 002, 077 -> 007) for non-root users, if the uid is the same as gid and username is the same as the <primary group name>
 - userdel will remove the user's group if it contains no more members, and useradd will create by default a group with the name of the user

 - System Wide Shell Configuration File :
 - /etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in thebash_profile however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive

login

shells, or shells executed with the --login parameter.
 - /etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.
 - /etc/bashrc - System wide version ofbashrc In Fedora derived distributions, etc/bashrc also invokes /etc/profile.d/*.sh if

non-login

shell, but redirects output to /dev/null if

non-interactive.

Is only executed for

interactive

shells or if BASH_ENV is set to /etc/bashrc

User Shell Configuration Files:

 - ~/.bash_profile - Is executed to configure your shell before the initial command prompt. Is only read by login shells.
 - ~/.bashrc - Is executed for interactive shells. only read by a shell that's both interactive and non-login

umask is set by order of precedence. If umask is set in multiple locations, this order of precedence will determine the system's default umask

Order of precedence:

 - A file in /etc/profile.d/ ending insh - This will override any other system-wide umask setting
 - In the file /etc/profile
 - On the pam_umask.so module in /etc/pam.d/postlogin
 - In the file /etc/login.defs
 - In the file /etc/default/login

Setting a secure default value for umask ensures that users make a conscious choice about their file permissions. A permissive umask value could result in directories or files with excessive permissions that can be read and/or written to by unauthorized users.

Solution:
Run the following script and perform the instructions in the output:

#!/usr/bin/env bash

{
   l_output="""" l_output2="""" l_out=""""
   file_umask_chk()
   {
      if grep -Psiq -- '^h*umaskh+(0?[0-7][2-7]7|u(=[rwx]{0,3}),g=([rx]{0,2}),o=)(h*#.*)?$' ""$l_file""; then
         l_out=""$l_out
 - umask is set correctly in \""$l_file\""""
      elif grep -Psiq -- '^h*umaskh+(([0-7][0-7][01][0-7]b|[0-7][0-7][0-7][0-6]b)|([0-7][01][0-7]b|[0-7][0-7][0-6]b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}b)))' ""$l_file""; then
         l_output2=""$l_output2
 - \""$l_file\""""
      fi
   }
   while IFS= read -r -d $'0' l_file; do
      file_umask_chk
   done < <(find /etc/profile.d/ -type f -name '*.sh' -print0)
   [ -n ""$l_out"" ] &amp;&amp; l_output=""$l_out""
   l_file=""/etc/profile"" &amp;&amp; file_umask_chk
   l_file=""/etc/bashrc"" &amp;&amp; file_umask_chk
   l_file=""/etc/bash.bashrc"" &amp;&amp; file_umask_chk
   l_file=""/etc/pam.d/postlogin""
   if grep -Psiq '^h*sessionh+[^#
r]+h+pam_umask.soh+([^#
r]+h+)?umask=(([0-7][0-7][01][0-7]b|[0-7][0-7][0-7][0-6]b)|([0-7][01][0-7]b))' ""$l_file""; then
      l_output2=""$l_output2
 - \""$l_file\""""
   fi
   l_file=""/etc/login.defs"" &amp;&amp; file_umask_chk
   l_file=""/etc/default/login"" &amp;&amp; file_umask_chk
   if [ -z ""$l_output2"" ]; then
      echo -e "" - No files contain a UMASK that is not restrictive enough
 No UMASK updates required to existing files""
   else
      echo -e ""
 - UMASK is not restrictive enough in the following file(s):$l_output2

- Remediation Procedure:
 - Update these files and comment out the UMASK line
 or update umask to be \""0027\"" or more restrictive""
   fi
   if [ -n ""$l_output"" ]; then
      echo -e ""$l_output""
   else
      echo -e "" - Configure UMASK in a file in the \""/etc/profile.d/\"" directory ending in \"".sh\""

 Example Command (Hash to represent being run at a root prompt):

# printf '%s\
' \""umask 027\"" > /etc/profile.d/50-systemwide_umask.sh
""
   fi
}

Notes:

 - This method only applies to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked
 - If the pam_umask.so module is going to be used to set umask ensure that it's not being overridden by another setting. Refer to the PAM_UMASK(8) man page for more information

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - * Reasons for audit failure * :

 - umask is incorrectly set in ""/etc/login.defs""","Run the following script and perform the instructions in the output:

#!/usr/bin/env bash

{
   l_output="""" l_output2="""" l_out=""""
   file_umask_chk()
   {
      if grep -Psiq -- '^h*umaskh+(0?[0-7][2-7]7|u(=[rwx]{0,3}),g=([rx]{0,2}),o=)(h*#.*)?$' ""$l_file""; then
         l_out=""$l_out
 - umask is set correctly in \""$l_file\""""
      elif grep -Psiq -- '^h*umaskh+(([0-7][0-7][01][0-7]b|[0-7][0-7][0-7][0-6]b)|([0-7][01][0-7]b|[0-7][0-7][0-6]b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}b)))' ""$l_file""; then
         l_output2=""$l_output2
 - \""$l_file\""""
      fi
   }
   while IFS= read -r -d $'0' l_file; do
      file_umask_chk
   done < <(find /etc/profile.d/ -type f -name '*.sh' -print0)
   [ -n ""$l_out"" ] &amp;&amp; l_output=""$l_out""
   l_file=""/etc/profile"" &amp;&amp; file_umask_chk
   l_file=""/etc/bashrc"" &amp;&amp; file_umask_chk
   l_file=""/etc/bash.bashrc"" &amp;&amp; file_umask_chk
   l_file=""/etc/pam.d/postlogin""
   if grep -Psiq '^h*sessionh+[^#
r]+h+pam_umask.soh+([^#
r]+h+)?umask=(([0-7][0-7][01][0-7]b|[0-7][0-7][0-7][0-6]b)|([0-7][01][0-7]b))' ""$l_file""; then
      l_output2=""$l_output2
 - \""$l_file\""""
   fi
   l_file=""/etc/login.defs"" &amp;&amp; file_umask_chk
   l_file=""/etc/default/login"" &amp;&amp; file_umask_chk
   if [ -z ""$l_output2"" ]; then
      echo -e "" - No files contain a UMASK that is not restrictive enough
 No UMASK updates required to existing files""
   else
      echo -e ""
 - UMASK is not restrictive enough in the following file(s):$l_output2

- Remediation Procedure:
 - Update these files and comment out the UMASK line
 or update umask to be \""0027\"" or more restrictive""
   fi
   if [ -n ""$l_output"" ]; then
      echo -e ""$l_output""
   else
      echo -e "" - Configure UMASK in a file in the \""/etc/profile.d/\"" directory ending in \"".sh\""

 Example Command (Hash to represent being run at a root prompt):

# printf '%s\
' \""umask 027\"" > /etc/profile.d/50-systemwide_umask.sh
""
   fi
}

Notes:

 - This method only applies to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked
 - If the pam_umask.so module is going to be used to set umask ensure that it's not being overridden by another setting. Refer to the PAM_UMASK(8) man page for more information","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.1.1 Ensure AIDE is installed"" : [FAILED]

AIDE takes a snapshot of filesystem state including modification times, permissions, and file hashes which can then be used to compare against the current state of the filesystem to detect modifications to the system.

By monitoring the filesystem state compromised files can be detected to prevent or limit the exposure of accidental or malicious misconfigurations or modified binaries.

Solution:
Install AIDE using the appropriate package manager or manual installation:

# apt install aide aide-common

Configure AIDE as appropriate for your environment. Consult the AIDE documentation for options.

Run the following commands to initialize AIDE:

# aideinit
# mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.7,800-171|3.3.1,800-171|3.3.2,800-53|AC-6(9),800-53|AU-2,800-53|AU-12,800-53r5|AC-6(9),800-53r5|AU-2,800-53r5|AU-12,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.3(a),CN-L3|8.1.10.6(a),CSCv7|14.9,CSCv8|3.14,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.3,ITSG-33|AC-6,ITSG-33|AU-2,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - dpkg check aide-common
The command '/bin/dpkg -s aide-common 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

dpkg-query: package 'aide-common' is not installed and no information is available

-------------------------
FAILED - dpkg check aide
The command '/bin/dpkg -s aide 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

dpkg-query: package 'aide' is not installed and no information is available","Install AIDE using the appropriate package manager or manual installation:

# apt install aide aide-common

Configure AIDE as appropriate for your environment. Consult the AIDE documentation for options.

Run the following commands to initialize AIDE:

# aideinit
# mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.1.2 Ensure filesystem integrity is regularly checked"" : [FAILED]

Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.

Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion.

Solution:
If cron will be used to schedule and run aide check:

Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/bin/aide.wrapper --config /etc/aide/aide.conf --update

- OR - If aidecheck.service and aidecheck.timer will be used to schedule and run aide check:

Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/bin/aide.wrapper --config /etc/aide/aide.conf --update

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|14.9,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
expect: ^([^#\n\r]+\h+)?(\/usr\/s?bin\/|^\h*)aide(\.wrapper)?\h+(--(check|update)|([^#\n\r]+\h+)?\$AIDEARGS)\b
file: /etc/cron.daily/* /etc/cron.hourly/* /etc/cron.monthly/* /etc/cron.weekly/* /var/spool/cron/crontabs/* /var/spool/cron/* /etc/crontab
min_occurrences: 1
regex: ^([^#\n\r]+\h+)?(\/usr\/s?bin\/|^\h*)aide(\.wrapper)?\h+(--(check|update)|([^#\n\r]+\h+)?\$AIDEARGS)\b
string_required: NO

Actual Value:
No matching files were found
Less than 1 matches of regex found","If cron will be used to schedule and run aide check:

Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/bin/aide.wrapper --config /etc/aide/aide.conf --update

- OR - If aidecheck.service and aidecheck.timer will be used to schedule and run aide check:

Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/bin/aide.wrapper --config /etc/aide/aide.conf --update

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.1.1 Ensure journald service is enabled and active"" : [PASSED]

Ensure that the systemd-journald service is enabled to allow capturing of logging events.

If the systemd-journald service is not enabled to start on boot, the system will not capture logging events.

Solution:
Run the following commands to unmask and start systemd-journald.service

# systemctl unmask systemd-journald.service
# systemctl start systemd-journald.service

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - journald check - active
The command '/bin/systemctl is-active systemd-journald.service' returned : 

active

-------------------------
PASSED - journald check - enabled
The command '/bin/systemctl is-enabled systemd-journald.service' returned : 

static","Run the following commands to unmask and start systemd-journald.service

# systemctl unmask systemd-journald.service
# systemctl start systemd-journald.service","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.1.2 Ensure journald log file access is configured"" : [WARNING]

Journald will create logfiles that do not already exist on the system. This setting controls what permissions will be applied to these newly created files.

It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance.

Solution:
If the default configuration is not appropriate for the site specific requirements, copy /usr/lib/tmpfiles.d/systemd.conf to /etc/tmpfiles.d/systemd.conf and modify as required. Requirements is either 0640 or site policy if that is less restrictive.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
WARNING","If the default configuration is not appropriate for the site specific requirements, copy /usr/lib/tmpfiles.d/systemd.conf to /etc/tmpfiles.d/systemd.conf and modify as required. Requirements is either 0640 or site policy if that is less restrictive.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.1.3 Ensure journald log file rotation is configured"" : [WARNING]

Journald includes the capability of rotating log files regularly to avoid filling up the system with logs or making the logs unmanageably large. The file /etc/systemd/journald.conf is the configuration file used to specify how logs generated by Journald should be rotated.

By keeping the log files smaller and more manageable, a system administrator can easily archive these files to another system and spend less time looking through inordinately large log files.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Edit /etc/systemd/journald.conf or a file ending inconf the /etc/systemd/journald.conf.d/ directory. Set the following parameters in the [Journal] section to ensure logs are rotated according to site policy. The settings should be carefully understood as there are specific edge cases and prioritization of parameters.

The specific parameters for log rotation are:

SystemMaxUse=
SystemKeepFree=
RuntimeMaxUse=
RuntimeKeepFree=
MaxFileSec=

Note: If these settings appear in a canonically later file, or later in the same file, the setting will be overwritten

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
expect: ^Manual Review Required$
file: /etc/systemd/journald.conf /etc/systemd/journald.conf.d/*
min_occurrences: 1
regex: ^[\s]*(SystemMaxUse|SystemKeepFree|RuntimeMaxUse|RuntimeKeepFree|MaxFileSec)[\s]*=
required: NO

Actual Value:
No matching files were found
Less than 1 matches of regex found","Edit /etc/systemd/journald.conf or a file ending inconf the /etc/systemd/journald.conf.d/ directory. Set the following parameters in the [Journal] section to ensure logs are rotated according to site policy. The settings should be carefully understood as there are specific edge cases and prioritization of parameters.

The specific parameters for log rotation are:

SystemMaxUse=
SystemKeepFree=
RuntimeMaxUse=
RuntimeKeepFree=
MaxFileSec=

Note: If these settings appear in a canonically later file, or later in the same file, the setting will be overwritten","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.1.4 Ensure journald ForwardToSyslog is disabled"" : [PASSED]

Data from journald should be kept in the confines of the service and not forwarded to other services.

Logs of the system should be handled by journald and not forwarded to other logging mechanisms.

Solution:
Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending inconf :

ForwardToSyslog=no

Example:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/
   if grep -Psq -- '^h*[Journal] /etc/systemd/journald.conf.d/60-journald.conf; then
      printf '%s
' ""ForwardToSyslog=no"" >> /etc/systemd/journald.conf.d/60-journald.conf
   else
      printf '%s
' ""[Journal]"" ""ForwardToSyslog=no"" >> /etc/systemd/journald.conf.d/60-journald.conf
   fi
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **

 - ""ForwardToSyslog"" is not set in an included file
   ** Note: ""ForwardToSyslog"" May be set in a file that's ignored by load procedure **","Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending inconf :

ForwardToSyslog=no

Example:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/
   if grep -Psq -- '^h*[Journal] /etc/systemd/journald.conf.d/60-journald.conf; then
      printf '%s
' ""ForwardToSyslog=no"" >> /etc/systemd/journald.conf.d/60-journald.conf
   else
      printf '%s
' ""[Journal]"" ""ForwardToSyslog=no"" >> /etc/systemd/journald.conf.d/60-journald.conf
   fi
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.1.5 Ensure journald Storage is configured"" : [FAILED]

Data from journald may be stored in volatile memory or persisted locally on the server. Logs in memory will be lost upon a system reboot. By persisting logs to local disk on the server they are protected from loss due to a reboot.

Writing log data to disk will provide the ability to forensically reconstruct events which may have impacted the operations or security of a system even after a system crash or reboot.

Solution:
Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending inconf :

Storage=persistent

Example:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/
   if grep -Psq -- '^h*[Journal]' /etc/systemd/journald.conf.d/60-journald.conf; then
      printf '%s
' ""Storage=persistent"" >> /etc/systemd/journald.conf.d/60-journald.conf
   else
      printf '%s
' ""[Journal]"" ""Storage=persistent"" >> /etc/systemd/journald.conf.d/60-journald.conf
   fi
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""Storage"" is not set in an included file
   ** Note: ""Storage"" May be set in a file that's ignored by load procedure **","Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending inconf :

Storage=persistent

Example:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/
   if grep -Psq -- '^h*[Journal]' /etc/systemd/journald.conf.d/60-journald.conf; then
      printf '%s
' ""Storage=persistent"" >> /etc/systemd/journald.conf.d/60-journald.conf
   else
      printf '%s
' ""[Journal]"" ""Storage=persistent"" >> /etc/systemd/journald.conf.d/60-journald.conf
   fi
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.1.6 Ensure journald Compress is configured"" : [FAILED]

The journald system includes the capability of compressing overly large files to avoid filling up the system with logs or making the logs unmanageably large.

Uncompressed large files may unexpectedly fill a filesystem leading to resource unavailability. Compressing logs prior to write can prevent sudden, unexpected filesystem impacts.

Solution:
Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending inconf :

Compress=yes

Example:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/
   if grep -Psq -- '^h*[Journal]' /etc/systemd/journald.conf.d/60-journald.conf; then
      printf '%s
' ""Compress=yes"" >> /etc/systemd/journald.conf.d/60-journald.conf
   else
      printf '%s
' ""[Journal]"" ""Compress=yes"" >> /etc/systemd/journald.conf.d/60-journald.conf
   fi
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-4,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-4,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv7|6.4,CSCv8|8.2,CSCv8|8.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.DS-4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-4,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T3.3.1,NESA|T3.6.2,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - Reason(s) for audit failure:

 - ""Compress"" is not set in an included file
   ** Note: ""Compress"" May be set in a file that's ignored by load procedure **","Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending inconf :

Compress=yes

Example:

#!/usr/bin/env bash

{
   [ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/
   if grep -Psq -- '^h*[Journal]' /etc/systemd/journald.conf.d/60-journald.conf; then
      printf '%s
' ""Compress=yes"" >> /etc/systemd/journald.conf.d/60-journald.conf
   else
      printf '%s
' ""[Journal]"" ""Compress=yes"" >> /etc/systemd/journald.conf.d/60-journald.conf
   fi
}

Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten

Run to following command to update the parameters in the service:

# systemctl reload-or-restart systemd-journald","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.2.1 Ensure systemd-journal-remote is installed"" : [PASSED]

Journald systemd-journal-remote supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralized log management.

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.

Solution:
Run the following command to install systemd-journal-remote :

# apt install systemd-journal-remote

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
cmd: /bin/dpkg -s systemd-journal-remote 2>&1 | /bin/grep -E '(Status:|not installed)'
expect: ^Status: install ok

Actual Value:
The command '/bin/dpkg -s systemd-journal-remote 2>&1 | /bin/grep -E '(Status:|not installed)'' returned : 

Status: install ok installed","Run the following command to install systemd-journal-remote :

# apt install systemd-journal-remote","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.2.2 Ensure systemd-journal-remote authentication is configured"" : [FAILED]

Journald systemd-journal-upload supports the ability to send log events it gathers to a remote log host.

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.

Solution:
Edit the /etc/systemd/journal-upload.conf file or a file in /etc/systemd/journal-upload.conf.d ending inconf and ensure the following lines are set in the [Upload] section per your environment:

[Upload]
URL=192.168.50.42
ServerKeyFile=/etc/ssl/private/journal-upload.pem
ServerCertificateFile=/etc/ssl/certs/journal-upload.pem
TrustedCertificateFile=/etc/ssl/ca/trusted.pem

Restart the service:

# systemctl restart systemd-journal-upload

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - Trusted Cert
The file ""/etc/systemd/journal-upload.conf"" does not contain ""^[\s]*TrustedCertificateFile[\s]*=[\s]*""

-------------------------
FAILED - Cert
The file ""/etc/systemd/journal-upload.conf"" does not contain ""^[\s]*ServerCertificateFile[\s]*=[\s]*""

-------------------------
FAILED - URL
The file ""/etc/systemd/journal-upload.conf"" does not contain ""^[\s]*URL[\s]*=[\s]*""

-------------------------
FAILED - Key
The file ""/etc/systemd/journal-upload.conf"" does not contain ""^[\s]*ServerKeyFile[\s]*=[\s]*""","Edit the /etc/systemd/journal-upload.conf file or a file in /etc/systemd/journal-upload.conf.d ending inconf and ensure the following lines are set in the [Upload] section per your environment:

[Upload]
URL=192.168.50.42
ServerKeyFile=/etc/ssl/private/journal-upload.pem
ServerCertificateFile=/etc/ssl/certs/journal-upload.pem
TrustedCertificateFile=/etc/ssl/ca/trusted.pem

Restart the service:

# systemctl restart systemd-journal-upload","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.2.3 Ensure systemd-journal-upload is enabled and active"" : [FAILED]

Journald systemd-journal-upload supports the ability to send log events it gathers to a remote log host.

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.

Solution:
Run the following commands to unmask, enable and start systemd-journal-upload :

# systemctl unmask systemd-journal-upload.service
# systemctl --now enable systemd-journal-upload.service

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - enabled
The command '/bin/systemctl is-enabled systemd-journal-upload.service' returned : 

disabled

-------------------------
FAILED - active
The command '/bin/systemctl is-active systemd-journal-upload.service' returned : 

inactive","Run the following commands to unmask, enable and start systemd-journal-upload :

# systemctl unmask systemd-journal-upload.service
# systemctl --now enable systemd-journal-upload.service","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.1.2.4 Ensure systemd-journal-remote service is not in use"" : [PASSED]

Journald systemd-journal-remote supports the ability to receive messages from remote hosts, thus acting as a log server. Clients should not receive data from other hosts.

NOTE:

 - The same package, systemd-journal-remote is used for both sending logs to remote hosts and receiving incoming logs.
 - With regards to receiving logs, there are two services; systemd-journal-remote.socket and systemd-journal-remote.service

If a client is configured to also receive data, thus turning it into a server, the client system is acting outside it's operational boundary.

Solution:
Run the following commands to stop and mask systemd-journal-remote.socket and systemd-journal-remote.service:

# systemctl stop systemd-journal-remote.socket systemd-journal-remote.service
# systemctl mask systemd-journal-remote.socket systemd-journal-remote.service

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - active
The command '/bin/systemctl is-active systemd-journal-remote.socket systemd-journal-remote.service | /bin/grep -P -- '^active' | /bin/awk '{print} END {if(NR==0) print ""pass""}'' returned : 

pass

-------------------------
PASSED - enabled
The command '/bin/systemctl is-enabled systemd-journal-remote.socket systemd-journal-remote.service | /bin/grep -P -- '^enabled' | /bin/awk '{print} END {if(NR==0) print ""pass""}'' returned : 

pass","Run the following commands to stop and mask systemd-journal-remote.socket and systemd-journal-remote.service:

# systemctl stop systemd-journal-remote.socket systemd-journal-remote.service
# systemctl mask systemd-journal-remote.socket systemd-journal-remote.service","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""6.2.2.1 Ensure access to all logfiles has been configured"" : [FAILED]

Log files contain information from many services on the the local system, or in the event of a centralized log server, others systems logs as well.

In general log files are found in /var/log/ although application can be configured to store logs elsewhere. Should your application store logs in another, ensure to run the same test on that location.

It is important that log files have the correct permissions to ensure that sensitive data is protected and that only the appropriate users / groups have access to them.

Solution:
Run the following script to update permissions and ownership on files in /var/log

Although the script is not destructive, ensure that the output of the audit procedure is captured in the event that the remediation causes issues.

#!/usr/bin/env bash

{
   l_op2="""" l_output2=""""
   l_uidmin=""$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)""
   file_test_fix()
   {
      l_op2=""""
      l_fuser=""root""
      l_fgroup=""root""
      if [ $(( $l_mode &amp; $perm_mask )) -gt 0 ]; then
         l_op2=""$l_op2
 - Mode: \""$l_mode\"" should be \""$maxperm\"" or more restrictive
 - Removing excess permissions""
         chmod ""$l_rperms"" ""$l_fname""
      fi
      if [[ ! ""$l_user"" =~ $l_auser ]]; then
         l_op2=""$l_op2
 - Owned by: \""$l_user\"" and should be owned by \""${l_auser//|/ or }\""
 - Changing ownership to: \""$l_fuser\""""
         chown ""$l_fuser"" ""$l_fname""
      fi
      if [[ ! ""$l_group"" =~ $l_agroup ]]; then
         l_op2=""$l_op2
 - Group owned by: \""$l_group\"" and should be group owned by \""${l_agroup//|/ or }\""
 - Changing group ownership to: \""$l_fgroup\""""
         chgrp ""$l_fgroup"" ""$l_fname""
      fi
      [ -n ""$l_op2"" ] &amp;&amp; l_output2=""$l_output2
 - File: \""$l_fname\"" is:$l_op2
""
   }
   unset a_file &amp;&amp; a_file=() # clear and initialize array
   # Loop to create array with stat of files that could possibly fail one of the audits
   while IFS= read -r -d $'0' l_file; do
      [ -e ""$l_file"" ] &amp;&amp; a_file+=(""$(stat -Lc '%n^%#a^%U^%u^%G^%g' ""$l_file"")"")
   done < <(find -L /var/log -type f ( -perm /0137 -o ! -user root -o ! -group root ) -print0)
   while IFS=""^"" read -r l_fname l_mode l_user l_uid l_group l_gid; do
      l_bname=""$(basename ""$l_fname"")""
      case ""$l_bname"" in
         lastlog | lastlog.* | wtmp | wtmp.* | wtmp-* | btmp | btmp.* | btmp-* | README)
            perm_mask='0113'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""ug-x,o-wx""
            l_auser=""root""
            l_agroup=""(root|utmp)""
            file_test_fix
            ;;
         secure | auth.log | syslog | messages)
            perm_mask='0137'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""u-x,g-wx,o-rwx""
            l_auser=""(root|syslog)""
            l_agroup=""(root|adm)""
            file_test_fix
            ;;
         SSSD | sssd)
            perm_mask='0117'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""ug-x,o-rwx""
            l_auser=""(root|SSSD)""
            l_agroup=""(root|SSSD)""
            file_test_fix
            ;;
         gdm | gdm3)
            perm_mask='0117'
            l_rperms=""ug-x,o-rwx""
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_auser=""root""
            l_agroup=""(root|gdm|gdm3)""
            file_test_fix
            ;;
         *.journal | *.journal~)
            perm_mask='0137'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""u-x,g-wx,o-rwx""
            l_auser=""root""
            l_agroup=""(root|systemd-journal)""
            file_test_fix
            ;;
         *)
            perm_mask='0137'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""u-x,g-wx,o-rwx""
            l_auser=""(root|syslog)""
            l_agroup=""(root|adm)""
            if [ ""$l_uid"" -lt ""$l_uidmin"" ] &amp;&amp; [ -z ""$(awk -v grp=""$l_group"" -F: '$1==grp {print $4}' /etc/group)"" ]; then
               if [[ ! ""$l_user"" =~ $l_auser ]]; then
                  l_auser=""(root|syslog|$l_user)""
               fi
               if [[ ! ""$l_group"" =~ $l_agroup ]]; then
                  l_tst=""""
                  while l_out3="""" read -r l_duid; do
                     [ ""$l_duid"" -ge ""$l_uidmin"" ] &amp;&amp; l_tst=failed
                  done <<< ""$(awk -F: '$4=='""$l_gid""' {print $3}' /etc/passwd)""
                  [ ""$l_tst"" != ""failed"" ] &amp;&amp; l_agroup=""(root|adm|$l_group)""
               fi
            fi
            file_test_fix
            ;;
      esac
   done <<< ""$(printf '%s
' ""${a_file[@]}"")""
   unset a_file # Clear array
   # If all files passed, then we report no changes
   if [ -z ""$l_output2"" ]; then
      echo -e ""- All files in \""/var/log/\"" have appropriate permissions and ownership
 - No changes required
""
   else
      # print report of changes
      echo -e ""
$l_output2""
   fi
}

Note: You may also need to change the configuration for your logging software or services for any logs that had incorrect permissions.

If there are services that log to other locations, ensure that those log files have the appropriate permissions.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$
timeout: 7200

Actual Value:
The command script with multiple lines returned : 

- Audit Results:
 ** Fail **

 - File: ""/var/log/dpkg.log.5.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/alternatives.log.2.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/unattended-upgrades/unattended-upgrades-shutdown.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/alternatives.log.3.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dpkg.log.1"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dpkg.log.2.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dpkg.log.3.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/faillog"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dpkg.log.4.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/apt/history.log.3.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/apt/history.log.4.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/apt/history.log.5.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/apt/eipp.log.xz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/apt/history.log.1.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/apt/history.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/apt/history.log.2.gz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/alternatives.log.1"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/ubuntu-advantage.log.1"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/ubuntu-advantage.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/alternatives.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dist-upgrade/main.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dist-upgrade/apt.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dist-upgrade/eipp.log.xz"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dist-upgrade/20230830-0833/main.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dist-upgrade/20230830-0833/apt.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dist-upgrade/20230830-0833/history.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dist-upgrade/20230830-0833/xorg_fixup.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dist-upgrade/lspci.txt"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive

 - File: ""/var/log/dpkg.log"" is:
  - Mode: ""0644"" should be ""640"" or more restrictive","Run the following script to update permissions and ownership on files in /var/log

Although the script is not destructive, ensure that the output of the audit procedure is captured in the event that the remediation causes issues.

#!/usr/bin/env bash

{
   l_op2="""" l_output2=""""
   l_uidmin=""$(awk '/^s*UID_MIN/{print $2}' /etc/login.defs)""
   file_test_fix()
   {
      l_op2=""""
      l_fuser=""root""
      l_fgroup=""root""
      if [ $(( $l_mode &amp; $perm_mask )) -gt 0 ]; then
         l_op2=""$l_op2
 - Mode: \""$l_mode\"" should be \""$maxperm\"" or more restrictive
 - Removing excess permissions""
         chmod ""$l_rperms"" ""$l_fname""
      fi
      if [[ ! ""$l_user"" =~ $l_auser ]]; then
         l_op2=""$l_op2
 - Owned by: \""$l_user\"" and should be owned by \""${l_auser//|/ or }\""
 - Changing ownership to: \""$l_fuser\""""
         chown ""$l_fuser"" ""$l_fname""
      fi
      if [[ ! ""$l_group"" =~ $l_agroup ]]; then
         l_op2=""$l_op2
 - Group owned by: \""$l_group\"" and should be group owned by \""${l_agroup//|/ or }\""
 - Changing group ownership to: \""$l_fgroup\""""
         chgrp ""$l_fgroup"" ""$l_fname""
      fi
      [ -n ""$l_op2"" ] &amp;&amp; l_output2=""$l_output2
 - File: \""$l_fname\"" is:$l_op2
""
   }
   unset a_file &amp;&amp; a_file=() # clear and initialize array
   # Loop to create array with stat of files that could possibly fail one of the audits
   while IFS= read -r -d $'0' l_file; do
      [ -e ""$l_file"" ] &amp;&amp; a_file+=(""$(stat -Lc '%n^%#a^%U^%u^%G^%g' ""$l_file"")"")
   done < <(find -L /var/log -type f ( -perm /0137 -o ! -user root -o ! -group root ) -print0)
   while IFS=""^"" read -r l_fname l_mode l_user l_uid l_group l_gid; do
      l_bname=""$(basename ""$l_fname"")""
      case ""$l_bname"" in
         lastlog | lastlog.* | wtmp | wtmp.* | wtmp-* | btmp | btmp.* | btmp-* | README)
            perm_mask='0113'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""ug-x,o-wx""
            l_auser=""root""
            l_agroup=""(root|utmp)""
            file_test_fix
            ;;
         secure | auth.log | syslog | messages)
            perm_mask='0137'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""u-x,g-wx,o-rwx""
            l_auser=""(root|syslog)""
            l_agroup=""(root|adm)""
            file_test_fix
            ;;
         SSSD | sssd)
            perm_mask='0117'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""ug-x,o-rwx""
            l_auser=""(root|SSSD)""
            l_agroup=""(root|SSSD)""
            file_test_fix
            ;;
         gdm | gdm3)
            perm_mask='0117'
            l_rperms=""ug-x,o-rwx""
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_auser=""root""
            l_agroup=""(root|gdm|gdm3)""
            file_test_fix
            ;;
         *.journal | *.journal~)
            perm_mask='0137'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""u-x,g-wx,o-rwx""
            l_auser=""root""
            l_agroup=""(root|systemd-journal)""
            file_test_fix
            ;;
         *)
            perm_mask='0137'
            maxperm=""$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )""
            l_rperms=""u-x,g-wx,o-rwx""
            l_auser=""(root|syslog)""
            l_agroup=""(root|adm)""
            if [ ""$l_uid"" -lt ""$l_uidmin"" ] &amp;&amp; [ -z ""$(awk -v grp=""$l_group"" -F: '$1==grp {print $4}' /etc/group)"" ]; then
               if [[ ! ""$l_user"" =~ $l_auser ]]; then
                  l_auser=""(root|syslog|$l_user)""
               fi
               if [[ ! ""$l_group"" =~ $l_agroup ]]; then
                  l_tst=""""
                  while l_out3="""" read -r l_duid; do
                     [ ""$l_duid"" -ge ""$l_uidmin"" ] &amp;&amp; l_tst=failed
                  done <<< ""$(awk -F: '$4=='""$l_gid""' {print $3}' /etc/passwd)""
                  [ ""$l_tst"" != ""failed"" ] &amp;&amp; l_agroup=""(root|adm|$l_group)""
               fi
            fi
            file_test_fix
            ;;
      esac
   done <<< ""$(printf '%s
' ""${a_file[@]}"")""
   unset a_file # Clear array
   # If all files passed, then we report no changes
   if [ -z ""$l_output2"" ]; then
      echo -e ""- All files in \""/var/log/\"" have appropriate permissions and ownership
 - No changes required
""
   else
      # print report of changes
      echo -e ""
$l_output2""
   fi
}

Note: You may also need to change the configuration for your logging software or services for any logs that had incorrect permissions.

If there are services that log to other locations, ensure that those log files have the appropriate permissions.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.1 Ensure permissions on /etc/passwd are configured"" : [PASSED]

The /etc/passwd file contains user account information that is used by many system utilities and therefore must be readable for these utilities to operate.

It is critical to ensure that the /etc/passwd file is protected from unauthorized write access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.

Solution:
Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd :

# chmod u-x,go-wx /etc/passwd
# chown root:root /etc/passwd

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/passwd
group: root
mask: 133
owner: root

Actual Value:
The file /etc/passwd with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/passwd","Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd :

# chmod u-x,go-wx /etc/passwd
# chown root:root /etc/passwd","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.10 Ensure permissions on /etc/security/opasswd are configured"" : [PASSED]

/etc/security/opasswd and it's backup /etc/security/opasswd.old hold user's previous passwords if pam_unix or pam_pwhistory is in use on the system

It is critical to ensure that /etc/security/opasswd is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.

Solution:
Run the following commands to remove excess permissions, set owner, and set group on /etc/security/opasswd and /etc/security/opasswd.old is they exist:

# [ -e ""/etc/security/opasswd"" ] &amp;&amp; chmod u-x,go-rwx /etc/security/opasswd
# [ -e ""/etc/security/opasswd"" ] &amp;&amp; chown root:root /etc/security/opasswd
# [ -e ""/etc/security/opasswd.old"" ] &amp;&amp; chmod u-x,go-rwx /etc/security/opasswd.old
# [ -e ""/etc/security/opasswd.old"" ] &amp;&amp; chown root:root /etc/security/opasswd.old

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
PASSED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
PASSED - etc/security/opasswd file permissions
The file /etc/security/opasswd with fmode owner: root group: root mode: 0600 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/security/opasswd

-------------------------
PASSED - /etc/security/opasswd.old file permissions","Run the following commands to remove excess permissions, set owner, and set group on /etc/security/opasswd and /etc/security/opasswd.old is they exist:

# [ -e ""/etc/security/opasswd"" ] &amp;&amp; chmod u-x,go-rwx /etc/security/opasswd
# [ -e ""/etc/security/opasswd"" ] &amp;&amp; chown root:root /etc/security/opasswd
# [ -e ""/etc/security/opasswd.old"" ] &amp;&amp; chmod u-x,go-rwx /etc/security/opasswd.old
# [ -e ""/etc/security/opasswd.old"" ] &amp;&amp; chown root:root /etc/security/opasswd.old","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.11 Ensure world writable files and directories are secured"" : [FAILED]

World writable files are the least secure. Data in world-writable files can be modified and compromised by any user on the system. World writable files may also indicate an incorrectly written script or program that could potentially be the cause of a larger compromise to the system's integrity. See the chmod(2) man page for more information.

Setting the sticky bit on world writable directories prevents users from deleting or renaming files in that directory that are not owned by them.

Data in world-writable files can be modified and compromised by any user on the system. World writable files may also indicate an incorrectly written script or program that could potentially be the cause of a larger compromise to the system's integrity.

This feature prevents the ability to delete or rename files in world writable directories (such as /tmp ) that are owned by another user.

Solution:
- World Writable Files:
 - It is recommended that write access is removed from other with the command ( chmod o-w <filename> ), but always consult relevant vendor documentation to avoid breaking any application dependencies on a given file.

 - World Writable Directories:
 - Set the sticky bit on all world writable directories with the command ( chmod a+t <directory_name> )

Run the following script to:

 - Remove other write permission from any world writable files
 - Add the sticky bit to all world writable directories

#!/usr/bin/env bash

{
   l_smask='01000'
   a_file=(); a_dir=() # Initialize arrays
   a_path=(! -path ""/run/user/*"" -a ! -path ""/proc/*"" -a ! -path ""*/containerd/*"" -a ! -path ""*/kubelet/pods/*"" -a ! -path ""*/kubelet/plugins/*"" -a ! -path ""/sys/*"" -a ! -path ""/snap/*"")
   while IFS= read -r l_mount; do
      while IFS= read -r -d $'0' l_file; do
         if [ -e ""$l_file"" ]; then
            l_mode=""$(stat -Lc '%#a' ""$l_file"")""
            if [ -f ""$l_file"" ]; then # Remove excess permissions from WW files
               echo -e "" - File: \""$l_file\"" is mode: \""$l_mode\""
 - removing write permission on \""$l_file\"" from \""other\""""
               chmod o-w ""$l_file""
            fi
            if [ -d ""$l_file"" ]; then # Add sticky bit
               if [ ! $(( $l_mode &amp; $l_smask )) -gt 0 ]; then
                  echo -e "" - Directory: \""$l_file\"" is mode: \""$l_mode\"" and doesn't have the sticky bit set
 - Adding the sticky bit""
                  chmod a+t ""$l_file""
               fi
            fi
         fi
      done < <(find ""$l_mount"" -xdev ( ""${a_path[@]}"" ) ( -type f -o -type d ) -perm -0002 -print0 2> /dev/null)
   done < <(findmnt -Dkerno fstype,target | awk '($1 !~ /^s*(nfs|proc|smb|vfat|iso9660|efivarfs|selinuxfs)/ &amp;&amp; $2 !~ /^(/run/user/|/tmp|/var/tmp)/){print $2}')
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
name: find_world_writeable_files
timeout: 7200

Actual Value:
The following 6 files are world writeable:

  /var/lib/docker/overlay2/10113cbb589c7553e5f8a67049660722629155b38e849f7ccdb8b40d7b0c3eb1/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/6db93d60f5672fd4c7c6512d6a3052a890828ae97ae6b4987504ee06355270c8/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/460309e726a84d73f86cb230254a2afceed27e29d1a0d96b45cc5f660b50a537/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/516cf215bd236cb7f97b4494940aaa61cd7a83f3e9aaec004c342a7009864f6f/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/b191d285981c118d2283fe05a96abf5b5fdd175e21b9706209c9369692085270/lower
     owner: root, group: root, permissions: 0666

  /var/lib/docker/overlay2/7342e562b03ef7b01910649e43ffc8d1c2477ae2b3a63de25c326c8cdb171f7b/lower
     owner: root, group: root, permissions: 0666","- World Writable Files:
 - It is recommended that write access is removed from other with the command ( chmod o-w <filename> ), but always consult relevant vendor documentation to avoid breaking any application dependencies on a given file.

 - World Writable Directories:
 - Set the sticky bit on all world writable directories with the command ( chmod a+t <directory_name> )

Run the following script to:

 - Remove other write permission from any world writable files
 - Add the sticky bit to all world writable directories

#!/usr/bin/env bash

{
   l_smask='01000'
   a_file=(); a_dir=() # Initialize arrays
   a_path=(! -path ""/run/user/*"" -a ! -path ""/proc/*"" -a ! -path ""*/containerd/*"" -a ! -path ""*/kubelet/pods/*"" -a ! -path ""*/kubelet/plugins/*"" -a ! -path ""/sys/*"" -a ! -path ""/snap/*"")
   while IFS= read -r l_mount; do
      while IFS= read -r -d $'0' l_file; do
         if [ -e ""$l_file"" ]; then
            l_mode=""$(stat -Lc '%#a' ""$l_file"")""
            if [ -f ""$l_file"" ]; then # Remove excess permissions from WW files
               echo -e "" - File: \""$l_file\"" is mode: \""$l_mode\""
 - removing write permission on \""$l_file\"" from \""other\""""
               chmod o-w ""$l_file""
            fi
            if [ -d ""$l_file"" ]; then # Add sticky bit
               if [ ! $(( $l_mode &amp; $l_smask )) -gt 0 ]; then
                  echo -e "" - Directory: \""$l_file\"" is mode: \""$l_mode\"" and doesn't have the sticky bit set
 - Adding the sticky bit""
                  chmod a+t ""$l_file""
               fi
            fi
         fi
      done < <(find ""$l_mount"" -xdev ( ""${a_path[@]}"" ) ( -type f -o -type d ) -perm -0002 -print0 2> /dev/null)
   done < <(findmnt -Dkerno fstype,target | awk '($1 !~ /^s*(nfs|proc|smb|vfat|iso9660|efivarfs|selinuxfs)/ &amp;&amp; $2 !~ /^(/run/user/|/tmp|/var/tmp)/){print $2}')
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.12 Ensure no files or directories without an owner and a group exist"" : [FAILED]

Administrators may delete users or groups from the system and neglect to remove all files and/or directories owned by those users or groups.

A new user or group who is assigned a deleted user's user ID or group ID may then end up ""owning"" a deleted user or group's files, and thus have more access on the system than was intended.

Solution:
Remove or set ownership and group ownership of these files and/or directories to an active user on the system as appropriate.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
name: find_orphan_files
timeout: 7200

Actual Value:
The following 39 files are orphaned:

  /var/lib/docker/overlay2/eba0de37c7f62276407f24813a0b1ac4db324f40c2706f9e72394efbdb8fafb3/diff/pkgs/apk/x86_64
     owner: anapaya, group: 300, permissions: 0755

  /var/lib/docker/overlay2/eba0de37c7f62276407f24813a0b1ac4db324f40c2706f9e72394efbdb8fafb3/diff/pkgs/apk/x86_64/frr-doc-7.5_git-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/eba0de37c7f62276407f24813a0b1ac4db324f40c2706f9e72394efbdb8fafb3/diff/pkgs/apk/x86_64/frr-dbg-7.5_git-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/eba0de37c7f62276407f24813a0b1ac4db324f40c2706f9e72394efbdb8fafb3/diff/pkgs/apk/x86_64/APKINDEX.tar.gz
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/eba0de37c7f62276407f24813a0b1ac4db324f40c2706f9e72394efbdb8fafb3/diff/pkgs/apk/x86_64/frr-dev-7.5_git-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/eba0de37c7f62276407f24813a0b1ac4db324f40c2706f9e72394efbdb8fafb3/diff/pkgs/apk/x86_64/frr-7.5_git-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/6761a9cff08fd21279dc33140040e5f85db9f3de8f5d7fb38b6cea4039aa327b/diff/usr/share/grafana/.aws
     owner: 472, group: root, permissions: 0777

  /var/lib/docker/overlay2/6761a9cff08fd21279dc33140040e5f85db9f3de8f5d7fb38b6cea4039aa327b/diff/home/grafana
     owner: 472, group: root, permissions: 2755

  /var/lib/docker/overlay2/6761a9cff08fd21279dc33140040e5f85db9f3de8f5d7fb38b6cea4039aa327b/diff/etc/grafana/provisioning
     owner: 472, group: root, permissions: 0777

  /var/lib/docker/overlay2/6761a9cff08fd21279dc33140040e5f85db9f3de8f5d7fb38b6cea4039aa327b/diff/etc/grafana/provisioning/datasources
     owner: 472, group: root, permissions: 0777

  /var/lib/docker/overlay2/6761a9cff08fd21279dc33140040e5f85db9f3de8f5d7fb38b6cea4039aa327b/diff/etc/grafana/provisioning/plugins
     owner: 472, group: root, permissions: 0777

  /var/lib/docker/overlay2/6761a9cff08fd21279dc33140040e5f85db9f3de8f5d7fb38b6cea4039aa327b/diff/etc/grafana/provisioning/dashboards
     owner: 472, group: root, permissions: 0777

  /var/lib/docker/overlay2/6761a9cff08fd21279dc33140040e5f85db9f3de8f5d7fb38b6cea4039aa327b/diff/etc/grafana/provisioning/notifiers
     owner: 472, group: root, permissions: 0777

  /var/lib/docker/overlay2/6761a9cff08fd21279dc33140040e5f85db9f3de8f5d7fb38b6cea4039aa327b/diff/var/lib/grafana
     owner: 472, group: root, permissions: 0777

  /var/lib/docker/overlay2/6761a9cff08fd21279dc33140040e5f85db9f3de8f5d7fb38b6cea4039aa327b/diff/var/lib/grafana/plugins
     owner: 472, group: root, permissions: 0777

  /var/lib/docker/overlay2/6761a9cff08fd21279dc33140040e5f85db9f3de8f5d7fb38b6cea4039aa327b/diff/var/log/grafana
     owner: 472, group: root, permissions: 0777

  /var/lib/docker/overlay2/ea85a0fe3853c35c79e28f7157c972e1dd5d91905ec55d7fbf9bfd99eb923637/diff/var/mail/abc
     owner: 911, group: man, permissions: 0660

  /var/lib/docker/overlay2/0799e78ac2cd9e8361787fd08250988f0ebf82144345b2bf203269888a457fb8/diff/etc/shadow
     owner: root, group: 148, permissions: 0640

  /var/lib/docker/overlay2/8cae7279aff51d4a38d9f6ac0cac1a28a18e1bfd6e947e1764b6dee784782b2b/diff/home/loki
     owner: 10001, group: 10001, permissions: 2755

  /var/lib/docker/overlay2/78c25587e64b4df48912910324d9db53d2f6df585e6aa71467071cf20acdf688/diff/etc/shadow
     owner: root, group: 148, permissions: 0640

  /var/lib/docker/overlay2/78c25587e64b4df48912910324d9db53d2f6df585e6aa71467071cf20acdf688/diff/etc/shadow-
     owner: root, group: 148, permissions: 0640

  /var/lib/docker/overlay2/2d7af29bc9066e047b3041b672a7bd780e279cf0dc4cd44c89861cdc9b9e9d59/diff/home
     owner: 65532, group: 65532, permissions: 0755

  /var/lib/docker/overlay2/2d7af29bc9066e047b3041b672a7bd780e279cf0dc4cd44c89861cdc9b9e9d59/diff/home/nonroot
     owner: 65532, group: 65532, permissions: 0700

  /var/lib/docker/overlay2/12c227f7364b9638752f129896468771a382fd8c726772bc0620afdc142c028c/diff/etc/loki
     owner: 10001, group: 10001, permissions: 0755

  /var/lib/docker/overlay2/12c227f7364b9638752f129896468771a382fd8c726772bc0620afdc142c028c/diff/etc/loki/local-config.yaml
     owner: 10001, group: 10001, permissions: 0644

  /var/lib/docker/overlay2/12c227f7364b9638752f129896468771a382fd8c726772bc0620afdc142c028c/diff/loki
     owner: 10001, group: 10001, permissions: 0755

  /var/lib/docker/overlay2/12c227f7364b9638752f129896468771a382fd8c726772bc0620afdc142c028c/diff/loki/tmprules
     owner: 10001, group: 10001, permissions: 0755

  /var/lib/docker/overlay2/12c227f7364b9638752f129896468771a382fd8c726772bc0620afdc142c028c/diff/loki/rules
     owner: 10001, group: 10001, permissions: 0755

  /var/lib/docker/overlay2/fe87b224c9a24d15308665c719196294646152403f763e4928fb4bf5687741c2/diff/pkgs/apk/x86_64
     owner: anapaya, group: 300, permissions: 0755

  /var/lib/docker/overlay2/fe87b224c9a24d15308665c719196294646152403f763e4928fb4bf5687741c2/diff/pkgs/apk/x86_64/libyang-2.1.80-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/fe87b224c9a24d15308665c719196294646152403f763e4928fb4bf5687741c2/diff/pkgs/apk/x86_64/frr-dev-9.1_git-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/fe87b224c9a24d15308665c719196294646152403f763e4928fb4bf5687741c2/diff/pkgs/apk/x86_64/frr-dbg-9.1_git-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/fe87b224c9a24d15308665c719196294646152403f763e4928fb4bf5687741c2/diff/pkgs/apk/x86_64/frr-doc-9.1_git-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/fe87b224c9a24d15308665c719196294646152403f763e4928fb4bf5687741c2/diff/pkgs/apk/x86_64/APKINDEX.tar.gz
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/fe87b224c9a24d15308665c719196294646152403f763e4928fb4bf5687741c2/diff/pkgs/apk/x86_64/libyang-doc-2.1.80-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/fe87b224c9a24d15308665c719196294646152403f763e4928fb4bf5687741c2/diff/pkgs/apk/x86_64/libyang-dev-2.1.80-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/fe87b224c9a24d15308665c719196294646152403f763e4928fb4bf5687741c2/diff/pkgs/apk/x86_64/frr-9.1_git-r0.apk
     owner: anapaya, group: 300, permissions: 0644

  /var/lib/docker/overlay2/29764dbaf233299471e0417cda91dc14245029b403155f067d22ec35423162f3/diff/home
     owner: 65532, group: 65532, permissions: 0755

  /var/lib/docker/overlay2/29764dbaf233299471e0417cda91dc14245029b403155f067d22ec35423162f3/diff/home/nonroot
     owner: 65532, group: 65532, permissions: 0700","Remove or set ownership and group ownership of these files and/or directories to an active user on the system as appropriate.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","WARNING","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.13 Ensure SUID and SGID files are reviewed"" : [WARNING]

The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common reason for a SUID or SGID program is to enable users to perform functions (such as changing their password) that require root privileges.

There are valid reasons for SUID and SGID programs, but it is important to identify and review such programs to ensure they are legitimate. Review the files returned by the action in the audit section and check to see if system binaries have a different checksum than what from the package. This is an indication that the binary may have been replaced.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.

Solution:
Ensure that no rogue SUID or SGID programs have been introduced into the system. Review the files returned by the action in the Audit section and confirm the integrity of these binaries.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
name: find_suid_sgid_files
timeout: 7200

Actual Value:
The following 109 files are SUID or SGID:

  /usr/sbin/pam_extrausers_chkpwd
     owner: root, group: shadow, permissions: 2755

  /usr/sbin/unix_chkpwd
     owner: root, group: shadow, permissions: 2755

  /usr/bin/ssh-agent
     owner: root, group: _ssh, permissions: 2755

  /usr/bin/expiry
     owner: root, group: shadow, permissions: 2755

  /usr/bin/su
     owner: root, group: root, permissions: 4755

  /usr/bin/chage
     owner: root, group: shadow, permissions: 2755

  /usr/bin/chfn
     owner: root, group: root, permissions: 4755

  /usr/bin/crontab
     owner: root, group: crontab, permissions: 2755

  /usr/bin/mount
     owner: root, group: root, permissions: 4755

  /usr/bin/umount
     owner: root, group: root, permissions: 4755

  /usr/bin/newgrp
     owner: root, group: root, permissions: 4755

  /usr/bin/gpasswd
     owner: root, group: root, permissions: 4755

  /usr/bin/sudo
     owner: root, group: root, permissions: 4755

  /usr/bin/chsh
     owner: root, group: root, permissions: 4755

  /usr/bin/passwd
     owner: root, group: root, permissions: 4755

  /usr/libexec/polkit-agent-helper-1
     owner: root, group: root, permissions: 4755

  /usr/lib/openssh/ssh-keysign
     owner: root, group: root, permissions: 4755

  /usr/lib/x86_64-linux-gnu/utempter/utempter
     owner: root, group: utmp, permissions: 2755

  /usr/lib/dbus-1.0/dbus-daemon-launch-helper
     owner: root, group: messagebus, permissions: 4754

  /var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/usr/bin/expiry
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/usr/bin/chage
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/usr/bin/wall
     owner: root, group: tty, permissions: 2755

  /var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/usr/bin/chfn
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/usr/bin/newgrp
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/usr/bin/gpasswd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/usr/bin/chsh
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/usr/bin/passwd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/sbin/unix_chkpwd
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/bin/su
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/bin/mount
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/ec9ad3c19c7f6f4040226853edaa4ed220bd5c22539cbe766c97b45c319b7d7c/diff/bin/umount
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/c7e8d7ba1ed20a4e0d51ea89f678801114bcfe0fa1fdef7b613a9475e63454b4/diff/bin/fusermount
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/usr/bin/expiry
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/usr/bin/chage
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/usr/bin/wall
     owner: root, group: tty, permissions: 2755

  /var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/usr/bin/chfn
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/usr/bin/newgrp
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/usr/bin/gpasswd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/usr/bin/chsh
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/usr/bin/passwd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/sbin/unix_chkpwd
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/bin/su
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/bin/mount
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1ec83b578c77fef6bba72f867d2532c82155d89a5f3047c51f435a81938932cf/diff/bin/umount
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/121ad0592b404cd784e8de1bb8896462fdbee25e117e116dcb8e1deaee5ffa68/diff/usr/bin/ssh-agent
     owner: root, group: systemd-journal, permissions: 2755

  /var/lib/docker/overlay2/121ad0592b404cd784e8de1bb8896462fdbee25e117e116dcb8e1deaee5ffa68/diff/usr/lib/openssh/ssh-keysign
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/ea85a0fe3853c35c79e28f7157c972e1dd5d91905ec55d7fbf9bfd99eb923637/diff/usr/bin/expiry
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/ea85a0fe3853c35c79e28f7157c972e1dd5d91905ec55d7fbf9bfd99eb923637/diff/usr/bin/chage
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/ea85a0fe3853c35c79e28f7157c972e1dd5d91905ec55d7fbf9bfd99eb923637/diff/usr/bin/chfn
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/ea85a0fe3853c35c79e28f7157c972e1dd5d91905ec55d7fbf9bfd99eb923637/diff/usr/bin/newgrp
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/ea85a0fe3853c35c79e28f7157c972e1dd5d91905ec55d7fbf9bfd99eb923637/diff/usr/bin/gpasswd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/ea85a0fe3853c35c79e28f7157c972e1dd5d91905ec55d7fbf9bfd99eb923637/diff/usr/bin/chsh
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/ea85a0fe3853c35c79e28f7157c972e1dd5d91905ec55d7fbf9bfd99eb923637/diff/usr/bin/passwd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/ea85a0fe3853c35c79e28f7157c972e1dd5d91905ec55d7fbf9bfd99eb923637/diff/sbin/unix_chkpwd
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/ea85a0fe3853c35c79e28f7157c972e1dd5d91905ec55d7fbf9bfd99eb923637/diff/bin/su
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/cbe61e7a1ca5b6bad4dd3927128e52b803063a64bece343cb093b08636d72004/diff/usr/bin/expiry
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/cbe61e7a1ca5b6bad4dd3927128e52b803063a64bece343cb093b08636d72004/diff/usr/bin/chage
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/cbe61e7a1ca5b6bad4dd3927128e52b803063a64bece343cb093b08636d72004/diff/usr/bin/chfn
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/cbe61e7a1ca5b6bad4dd3927128e52b803063a64bece343cb093b08636d72004/diff/usr/bin/newgrp
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/cbe61e7a1ca5b6bad4dd3927128e52b803063a64bece343cb093b08636d72004/diff/usr/bin/gpasswd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/cbe61e7a1ca5b6bad4dd3927128e52b803063a64bece343cb093b08636d72004/diff/usr/bin/chsh
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/cbe61e7a1ca5b6bad4dd3927128e52b803063a64bece343cb093b08636d72004/diff/usr/bin/passwd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/cbe61e7a1ca5b6bad4dd3927128e52b803063a64bece343cb093b08636d72004/diff/sbin/unix_chkpwd
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/cbe61e7a1ca5b6bad4dd3927128e52b803063a64bece343cb093b08636d72004/diff/bin/su
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/usr/bin/expiry
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/usr/bin/chage
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/usr/bin/wall
     owner: root, group: tty, permissions: 2755

  /var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/usr/bin/chfn
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/usr/bin/newgrp
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/usr/bin/gpasswd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/usr/bin/chsh
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/usr/bin/passwd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/sbin/unix_chkpwd
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/bin/su
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/bin/mount
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/bin/umount
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/49c18d51d417c631121b466f6026264d942bdae33a68c6e0ec10eca10bc253a6/diff/bin/ping
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/usr/bin/expiry
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/usr/bin/chage
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/usr/bin/wall
     owner: root, group: tty, permissions: 2755

  /var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/usr/bin/chfn
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/usr/bin/newgrp
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/usr/bin/gpasswd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/usr/bin/chsh
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/usr/bin/passwd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/sbin/unix_chkpwd
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/bin/su
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/bin/mount
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/d2e35fc435eb957b6b10fe04c68382701151d45cb670e2e3dc16e6d5cc9c719c/diff/bin/umount
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1b9bbf293e16bc42603a023ffb1dfb2e7aae9fe22d5903200e1c23bb083c751c/diff/bin/s6-overlay-preinit
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/usr/bin/expiry
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/usr/bin/chage
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/usr/bin/wall
     owner: root, group: tty, permissions: 2755

  /var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/usr/bin/chfn
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/usr/bin/newgrp
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/usr/bin/gpasswd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/usr/bin/chsh
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/usr/bin/passwd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/sbin/unix_chkpwd
     owner: root, group: shadow, permissions: 2755

  /var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/bin/su
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/bin/mount
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/1c3a6bc1043c947a6318d1e1052a2657d38d8bc5eecbfead5dca5374dc7faca5/diff/bin/umount
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/fe85d861ef4280ad140e54bde4aafe37d901fd79d3014028f3e82f570c11b804/diff/usr/bin/expiry
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/fe85d861ef4280ad140e54bde4aafe37d901fd79d3014028f3e82f570c11b804/diff/usr/bin/chage
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/fe85d861ef4280ad140e54bde4aafe37d901fd79d3014028f3e82f570c11b804/diff/usr/bin/chfn
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/fe85d861ef4280ad140e54bde4aafe37d901fd79d3014028f3e82f570c11b804/diff/usr/bin/gpasswd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/fe85d861ef4280ad140e54bde4aafe37d901fd79d3014028f3e82f570c11b804/diff/usr/bin/chsh
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/fe85d861ef4280ad140e54bde4aafe37d901fd79d3014028f3e82f570c11b804/diff/usr/bin/passwd
     owner: root, group: root, permissions: 4755

  /var/lib/docker/overlay2/fe85d861ef4280ad140e54bde4aafe37d901fd79d3014028f3e82f570c11b804/diff/sbin/unix_chkpwd
     owner: root, group: shadow, permissions: 2755","Ensure that no rogue SUID or SGID programs have been introduced into the system. Review the files returned by the action in the Audit section and confirm the integrity of these binaries.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.2 Ensure permissions on /etc/passwd- are configured"" : [PASSED]

The /etc/passwd- file contains backup user account information.

It is critical to ensure that the /etc/passwd- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.

Solution:
Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd- :

# chmod u-x,go-wx /etc/passwd-
# chown root:root /etc/passwd-

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/passwd-
group: root
mask: 133
owner: root

Actual Value:
The file /etc/passwd- with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/passwd-","Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd- :

# chmod u-x,go-wx /etc/passwd-
# chown root:root /etc/passwd-","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.3 Ensure permissions on /etc/group are configured"" : [PASSED]

The /etc/group file contains a list of all the valid groups defined in the system. The command below allows read/write access for root and read access for everyone else.

The /etc/group file needs to be protected from unauthorized changes by non-privileged users, but needs to be readable as this information is used with many non-privileged programs.

Solution:
Run the following commands to remove excess permissions, set owner, and set group on /etc/group :

# chmod u-x,go-wx /etc/group
# chown root:root /etc/group

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/group
group: root
mask: 133
owner: root

Actual Value:
The file /etc/group with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/group","Run the following commands to remove excess permissions, set owner, and set group on /etc/group :

# chmod u-x,go-wx /etc/group
# chown root:root /etc/group","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.4 Ensure permissions on /etc/group- are configured"" : [PASSED]

The /etc/group- file contains a backup list of all the valid groups defined in the system.

It is critical to ensure that the /etc/group- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.

Solution:
Run the following commands to remove excess permissions, set owner, and set group on /etc/group- :

# chmod u-x,go-wx /etc/group-
# chown root:root /etc/group-

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/group-
group: root
mask: 133
owner: root

Actual Value:
The file /etc/group- with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/group-","Run the following commands to remove excess permissions, set owner, and set group on /etc/group- :

# chmod u-x,go-wx /etc/group-
# chown root:root /etc/group-","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.5 Ensure permissions on /etc/shadow are configured"" : [PASSED]

The /etc/shadow file is used to store the information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.

If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert the user accounts.

Solution:
Run one of the following commands to set ownership of /etc/shadow to root and group to either root or shadow :

# chown root:shadow /etc/shadow
  -OR-
# chown root:root /etc/shadow

Run the following command to remove excess permissions form /etc/shadow :

# chmod u-x,g-wx,o-rwx /etc/shadow

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/shadow
group: shadow
mask: 137
owner: root

Actual Value:
The file /etc/shadow with fmode owner: root group: shadow mode: 0640 uid: 0 gid: 42 uneven permissions : FALSE is compliant with the policy value 

/etc/shadow","Run one of the following commands to set ownership of /etc/shadow to root and group to either root or shadow :

# chown root:shadow /etc/shadow
  -OR-
# chown root:root /etc/shadow

Run the following command to remove excess permissions form /etc/shadow :

# chmod u-x,g-wx,o-rwx /etc/shadow","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.6 Ensure permissions on /etc/shadow- are configured"" : [PASSED]

The /etc/shadow- file is used to store backup information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.

It is critical to ensure that the /etc/shadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.

Solution:
Run one of the following commands to set ownership of /etc/shadow- to root and group to either root or shadow :

# chown root:shadow /etc/shadow-
  -OR-
# chown root:root /etc/shadow-

Run the following command to remove excess permissions form /etc/shadow- :

# chmod u-x,g-wx,o-rwx /etc/shadow-

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/shadow
group: shadow
mask: 137
owner: root

Actual Value:
The file /etc/shadow with fmode owner: root group: shadow mode: 0640 uid: 0 gid: 42 uneven permissions : FALSE is compliant with the policy value 

/etc/shadow","Run one of the following commands to set ownership of /etc/shadow- to root and group to either root or shadow :

# chown root:shadow /etc/shadow-
  -OR-
# chown root:root /etc/shadow-

Run the following command to remove excess permissions form /etc/shadow- :

# chmod u-x,g-wx,o-rwx /etc/shadow-","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.7 Ensure permissions on /etc/gshadow are configured"" : [PASSED]

The /etc/gshadow file is used to store the information about groups that is critical to the security of those accounts, such as the hashed password and other security information.

If attackers can gain read access to the /etc/gshadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/gshadow file (such as group administrators) could also be useful to subvert the group.

Solution:
Run one of the following commands to set ownership of /etc/gshadow to root and group to either root or shadow :

# chown root:shadow /etc/gshadow
  -OR-
# chown root:root /etc/gshadow

Run the following command to remove excess permissions form /etc/gshadow :

# chmod u-x,g-wx,o-rwx /etc/gshadow

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/gshadow
group: root
group: shadow
mask: 137
owner: root

Actual Value:
The file /etc/gshadow with fmode owner: root group: shadow mode: 0640 uid: 0 gid: 42 uneven permissions : FALSE is compliant with the policy value 

/etc/gshadow","Run one of the following commands to set ownership of /etc/gshadow to root and group to either root or shadow :

# chown root:shadow /etc/gshadow
  -OR-
# chown root:root /etc/gshadow

Run the following command to remove excess permissions form /etc/gshadow :

# chmod u-x,g-wx,o-rwx /etc/gshadow","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.8 Ensure permissions on /etc/gshadow- are configured"" : [PASSED]

The /etc/gshadow- file is used to store backup information about groups that is critical to the security of those accounts, such as the hashed password and other security information.

It is critical to ensure that the /etc/gshadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.

Solution:
Run one of the following commands to set ownership of /etc/gshadow- to root and group to either root or shadow :

# chown root:shadow /etc/gshadow-
  -OR-
# chown root:root /etc/gshadow-

Run the following command to remove excess permissions form /etc/gshadow- :

# chmod u-x,g-wx,o-rwx /etc/gshadow-

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/gshadow-
group: root
group: shadow
mask: 137
owner: root

Actual Value:
The file /etc/gshadow- with fmode owner: root group: shadow mode: 0640 uid: 0 gid: 42 uneven permissions : FALSE is compliant with the policy value 

/etc/gshadow-","Run one of the following commands to set ownership of /etc/gshadow- to root and group to either root or shadow :

# chown root:shadow /etc/gshadow-
  -OR-
# chown root:root /etc/gshadow-

Run the following command to remove excess permissions form /etc/gshadow- :

# chmod u-x,g-wx,o-rwx /etc/gshadow-","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.1.9 Ensure permissions on /etc/shells are configured"" : [PASSED]

/etc/shells is a text file which contains the full pathnames of valid login shells. This file is consulted by chsh and available to be queried by other programs.

It is critical to ensure that the /etc/shells file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.

Solution:
Run the following commands to remove excess permissions, set owner, and set group on /etc/shells :

# chmod u-x,go-wx /etc/shells
# chown root:root /etc/shells

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
file: /etc/shells
group: root
mask: 133
owner: root

Actual Value:
The file /etc/shells with fmode owner: root group: root mode: 0644 uid: 0 gid: 0 uneven permissions : FALSE is compliant with the policy value 

/etc/shells","Run the following commands to remove excess permissions, set owner, and set group on /etc/shells :

# chmod u-x,go-wx /etc/shells
# chown root:root /etc/shells","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.1 Ensure accounts in /etc/passwd use shadowed passwords"" : [PASSED]

Local accounts can uses shadowed passwords. With shadowed passwords, The passwords are saved in shadow password file, /etc/shadow encrypted by a salted one-way hash. Accounts with a shadowed password have an x in the second field in /etc/passwd

The /etc/passwd file also contains information like user ID's and group ID's that are used by many system programs. Therefore, the /etc/passwd file must remain world readable. In spite of encoding the password with a randomly-generated one-way hash function, an attacker could still break the system if they got access to the /etc/passwd file. This can be mitigated by using shadowed passwords, thus moving the passwords in the /etc/passwd file to /etc/shadow The /etc/shadow file is set so only root will be able to read and write. This helps mitigate the risk of an attacker gaining access to the encoded passwords with which to perform a dictionary attack.

Note:

 - All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.
 - A user account with an empty second field in /etc/passwd allows the account to be logged into by providing only the username.

Solution:
Run the following command to set accounts to use shadowed passwords and migrate passwords in /etc/passwd to /etc/shadow :

# pwconv

Investigate to determine if the account is logged in and what it is being used for, to determine if it needs to be forced off.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1

Policy Value:
cmd: /bin/awk -F: '($2 != ""x"" ) { print $1 "" is not set to shadowed passwords ""}' /etc/passwd | /bin/awk '{print} END {if (NR == 0) print ""none""}'
expect: ^none$

Actual Value:
The command '/bin/awk -F: '($2 != ""x"" ) { print $1 "" is not set to shadowed passwords ""}' /etc/passwd | /bin/awk '{print} END {if (NR == 0) print ""none""}'' returned : 

none","Run the following command to set accounts to use shadowed passwords and migrate passwords in /etc/passwd to /etc/shadow :

# pwconv

Investigate to determine if the account is logged in and what it is being used for, to determine if it needs to be forced off.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.10 Ensure local interactive user dot files access is configured"" : [PASSED]

While the system administrator can establish secure permissions for users' ""dot"" files, the users can easily override these.

 - forward file specifies an email address to forward the user's mail to.
 - rhost file provides the ""remote authentication"" database for the rcp, rlogin, and rsh commands and the rcmd() function. These files bypass the standard password-based user authentication mechanism. They specify remote hosts and users that are considered trusted (i.e. are allowed to access the local system without supplying a password)
 - netrc file contains data for logging into a remote host or passing authentication to an API.
 - bash_history file keeps track of the user's commands.

User configuration files with excessive or incorrect access may enable malicious users to steal or modify other users' data or to gain another user's system privileges.

Solution:
Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user dot file permissions and determine the action to be taken in accordance with site policy.

The following script will:

 - remove excessive permissions on dot files within interactive users' home directories
 - change ownership of dot files within interactive users' home directories to the user
 - change group ownership of dot files within interactive users' home directories to the user's primary group
 - listforward andrhost files to be investigated and manually deleted

#!/usr/bin/env bash

{
   l_valid_shells=""^($( awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   unset a_uarr &amp;&amp; a_uarr=() # Clear and initialize array
   while read -r l_epu l_eph; do # Populate array with users and user home location
      [[ -n ""$l_epu"" &amp;&amp; -n ""$l_eph"" ]] &amp;&amp; a_uarr+=(""$l_epu $l_eph"")
   done <<< ""$(awk -v pat=""$l_valid_shells"" -F: '$(NF) ~ pat { print $1 "" "" $(NF-1) }' /etc/passwd)""
   l_asize=""${#a_uarr[@]}"" # Here if we want to look at number of users before proceeding
   l_maxsize=""1000"" # Maximum number of local interactive users before warning (Default 1,000)
   [ ""$l_asize "" -gt ""$l_maxsize"" ] &amp;&amp; echo -e ""
 ** INFO **
 - \""$l_asize\"" Local interactive users found on the system
 - This may be a long running check
""
   file_access_fix()
   {
      l_facout2=""""
      l_max=""$( printf '%o' $(( 0777 &amp; ~$l_mask)) )""
      if [ $(( $l_mode &amp; $l_mask )) -gt 0 ]; then
         echo -e "" - File: \""$l_hdfile\"" is mode: \""$l_mode\"" and should be mode: \""$l_max\"" or more restrictive
 - Changing to mode \""$l_max\""""
         chmod ""$l_chp"" ""$l_hdfile""
      fi
      if [[ ! ""$l_owner"" =~ ($l_user) ]]; then
         echo -e "" - File: \""$l_hdfile\"" owned by: \""$l_owner\"" and should be owned by \""${l_user//|/ or }\""
 - Changing ownership to \""$l_user\""""
         chown ""$l_user"" ""$l_hdfile""
      fi
      if [[ ! ""$l_gowner"" =~ ($l_group) ]]; then
         echo -e "" - File: \""$l_hdfile\"" group owned by: \""$l_gowner\"" and should be group owned by \""${l_group//|/ or }\""
 - Changing group ownership to \""$l_group\""""
         chgrp ""$l_group"" ""$l_hdfile""
      fi
   }
   while read -r l_user l_home; do
      if [ -d ""$l_home"" ]; then
         echo -e ""
 - Checking user: \""$l_user\"" home directory: \""$l_home\""""
         l_group=""$(id -gn ""$l_user"" | xargs)""
         l_group=""${l_group// /|}""
         while IFS= read -r -d $'0' l_hdfile; do
            while read -r l_mode l_owner l_gowner; do
               case ""$(basename ""$l_hdfile"")"" in
                  .forward | .rhost )
                     echo -e "" - File: \""$l_hdfile\"" exists
 - Please investigate and manually delete \""$l_hdfile\""""
                  ;;
                  .netrc )
                     l_mask='0177'
                     l_chp=""u-x,go-rwx""
                     file_access_fix ;;
                  .bash_history )
                     l_mask='0177'
                     l_chp=""u-x,go-rwx""
                     file_access_fix ;;
                  * )
                     l_mask='0133'
                     l_chp=""u-x,go-wx""
                     file_access_fix ;;
                  esac
            done <<< ""$(stat -Lc '%#a %U %G' ""$l_hdfile"")""
         done < <(find ""$l_home"" -xdev -type f -name '.*' -print0)
      fi
   done <<< ""$(printf '%s
' ""${a_uarr[@]}"")""
   unset a_uarr # Remove array
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$
timeout: 7200

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** PASS **
 - * Correctly configured * :
  - No local interactive users home directories contain:
   - "".forward"" or "".rhost"" files
   - "".netrc"" files with incorrect access configured
   - "".bash_history"" files with incorrect access configured
   - ""dot"" files with incorrect access configured","Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user dot file permissions and determine the action to be taken in accordance with site policy.

The following script will:

 - remove excessive permissions on dot files within interactive users' home directories
 - change ownership of dot files within interactive users' home directories to the user
 - change group ownership of dot files within interactive users' home directories to the user's primary group
 - listforward andrhost files to be investigated and manually deleted

#!/usr/bin/env bash

{
   l_valid_shells=""^($( awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   unset a_uarr &amp;&amp; a_uarr=() # Clear and initialize array
   while read -r l_epu l_eph; do # Populate array with users and user home location
      [[ -n ""$l_epu"" &amp;&amp; -n ""$l_eph"" ]] &amp;&amp; a_uarr+=(""$l_epu $l_eph"")
   done <<< ""$(awk -v pat=""$l_valid_shells"" -F: '$(NF) ~ pat { print $1 "" "" $(NF-1) }' /etc/passwd)""
   l_asize=""${#a_uarr[@]}"" # Here if we want to look at number of users before proceeding
   l_maxsize=""1000"" # Maximum number of local interactive users before warning (Default 1,000)
   [ ""$l_asize "" -gt ""$l_maxsize"" ] &amp;&amp; echo -e ""
 ** INFO **
 - \""$l_asize\"" Local interactive users found on the system
 - This may be a long running check
""
   file_access_fix()
   {
      l_facout2=""""
      l_max=""$( printf '%o' $(( 0777 &amp; ~$l_mask)) )""
      if [ $(( $l_mode &amp; $l_mask )) -gt 0 ]; then
         echo -e "" - File: \""$l_hdfile\"" is mode: \""$l_mode\"" and should be mode: \""$l_max\"" or more restrictive
 - Changing to mode \""$l_max\""""
         chmod ""$l_chp"" ""$l_hdfile""
      fi
      if [[ ! ""$l_owner"" =~ ($l_user) ]]; then
         echo -e "" - File: \""$l_hdfile\"" owned by: \""$l_owner\"" and should be owned by \""${l_user//|/ or }\""
 - Changing ownership to \""$l_user\""""
         chown ""$l_user"" ""$l_hdfile""
      fi
      if [[ ! ""$l_gowner"" =~ ($l_group) ]]; then
         echo -e "" - File: \""$l_hdfile\"" group owned by: \""$l_gowner\"" and should be group owned by \""${l_group//|/ or }\""
 - Changing group ownership to \""$l_group\""""
         chgrp ""$l_group"" ""$l_hdfile""
      fi
   }
   while read -r l_user l_home; do
      if [ -d ""$l_home"" ]; then
         echo -e ""
 - Checking user: \""$l_user\"" home directory: \""$l_home\""""
         l_group=""$(id -gn ""$l_user"" | xargs)""
         l_group=""${l_group// /|}""
         while IFS= read -r -d $'0' l_hdfile; do
            while read -r l_mode l_owner l_gowner; do
               case ""$(basename ""$l_hdfile"")"" in
                  .forward | .rhost )
                     echo -e "" - File: \""$l_hdfile\"" exists
 - Please investigate and manually delete \""$l_hdfile\""""
                  ;;
                  .netrc )
                     l_mask='0177'
                     l_chp=""u-x,go-rwx""
                     file_access_fix ;;
                  .bash_history )
                     l_mask='0177'
                     l_chp=""u-x,go-rwx""
                     file_access_fix ;;
                  * )
                     l_mask='0133'
                     l_chp=""u-x,go-wx""
                     file_access_fix ;;
                  esac
            done <<< ""$(stat -Lc '%#a %U %G' ""$l_hdfile"")""
         done < <(find ""$l_home"" -xdev -type f -name '.*' -print0)
      fi
   done <<< ""$(printf '%s
' ""${a_uarr[@]}"")""
   unset a_uarr # Remove array
}","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.2 Ensure /etc/shadow password fields are not empty"" : [PASSED]

An account with an empty password field means that anybody may log in as that user without providing a password.

All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.

Solution:
If any accounts in the /etc/shadow file do not have a password, run the following command to lock the account until it can be determined why it does not have a password:

# passwd -l <username>

Also, check to see if the account is logged in and investigate what it is being used for to determine if it needs to be forced off.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1

Policy Value:
cmd: /bin/awk -F : '($2 == """") { print $1 "" does not have a password.""}' /etc/shadow | /bin/awk '{print} END {if (NR == 0) print ""none""}'
expect: ^none$

Actual Value:
The command '/bin/awk -F : '($2 == """") { print $1 "" does not have a password.""}' /etc/shadow | /bin/awk '{print} END {if (NR == 0) print ""none""}'' returned : 

none","If any accounts in the /etc/shadow file do not have a password, run the following command to lock the account until it can be determined why it does not have a password:

# passwd -l <username>

Also, check to see if the account is logged in and investigate what it is being used for to determine if it needs to be forced off.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.3 Ensure all groups in /etc/passwd exist in /etc/group"" : [PASSED]

Over time, system administration errors and changes can lead to groups being defined in /etc/passwd but not in /etc/group

Groups defined in the /etc/passwd file but not in the /etc/group file pose a threat to system security since group permissions are not properly managed.

Solution:
Analyze the output of the Audit step above and perform the appropriate action to correct any discrepancies found.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-2,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv8|3.3,CSCv8|14.6,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
name: passwd_invalid_gid

Actual Value:
No issues found.","Analyze the output of the Audit step above and perform the appropriate action to correct any discrepancies found.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.4 Ensure shadow group is empty"" : [PASSED]

The shadow group allows system programs which require access the ability to read the /etc/shadow file. No users should be assigned to the shadow group.

Any users assigned to the shadow group would be granted read access to the /etc/shadow file. If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed passwords to break them. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert additional user accounts.

Solution:
Run the following command to remove all users from the shadow group

# sed -ri 's/(^shadow:[^:]*:[^:]*:)([^:]+$)/1/' /etc/group

Change the primary group of any users with shadow as their primary group.

# usermod -g <primary group> <user>

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: /bin/awk -F: 'FILENAME == ""/etc/group"" && $1 == ""shadow"" { gid=$3; if ($4!="""") { print ""secondary ""$4; f=1 } } FILENAME == ""/etc/passwd"" && $4 == gid { print ""primary ""$1; f=1 } END { if (!f) print ""shadow group empty"" }' /etc/group /etc/passwd
expect: ^shadow group empty$

Actual Value:
The command '/bin/awk -F: 'FILENAME == ""/etc/group"" && $1 == ""shadow"" { gid=$3; if ($4!="""") { print ""secondary ""$4; f=1 } } FILENAME == ""/etc/passwd"" && $4 == gid { print ""primary ""$1; f=1 } END { if (!f) print ""shadow group empty"" }' /etc/group /etc/passwd' returned : 

shadow group empty","Run the following command to remove all users from the shadow group

# sed -ri 's/(^shadow:[^:]*:[^:]*:)([^:]+$)/1/' /etc/group

Change the primary group of any users with shadow as their primary group.

# usermod -g <primary group> <user>","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.5 Ensure no duplicate UIDs exist"" : [PASSED]

Although the useradd program will not let you create a duplicate User ID (UID), it is possible for an administrator to manually edit the /etc/passwd file and change the UID field.

Users must be assigned unique UIDs for accountability and to ensure appropriate access protections.

Solution:
Based on the results of the audit script, establish unique UIDs and review all files owned by the shared UIDs to determine which UID they are supposed to belong to.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5

Policy Value:
name: passwd_duplicate_uid

Actual Value:
No duplicate User IDs detected","Based on the results of the audit script, establish unique UIDs and review all files owned by the shared UIDs to determine which UID they are supposed to belong to.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.6 Ensure no duplicate GIDs exist"" : [PASSED]

Although the groupadd program will not let you create a duplicate Group ID (GID), it is possible for an administrator to manually edit the /etc/group file and change the GID field.

User groups must be assigned unique GIDs for accountability and to ensure appropriate access protections.

Solution:
Based on the results of the audit script, establish unique GIDs and review all files owned by the shared GID to determine which group they are supposed to belong to.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5

Policy Value:
name: group_duplicate_gid

Actual Value:
No duplicate Group IDs detected","Based on the results of the audit script, establish unique GIDs and review all files owned by the shared GID to determine which group they are supposed to belong to.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.7 Ensure no duplicate user names exist"" : [PASSED]

Although the useradd program will not let you create a duplicate user name, it is possible for an administrator to manually edit the /etc/passwd file and change the user name.

If a user is assigned a duplicate user name, it will create and have access to files with the first UID for that username in /etc/passwd For example, if ""test4"" has a UID of 1000 and a subsequent ""test4"" entry has a UID of 2000, logging in as ""test4"" will use UID 1000. Effectively, the UID is shared, which is a security problem.

Solution:
Based on the results of the audit script, establish unique user names for the users. File ownerships will automatically reflect the change as long as the users have unique UIDs.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5

Policy Value:
name: passwd_duplicate_username

Actual Value:
No issues found.","Based on the results of the audit script, establish unique user names for the users. File ownerships will automatically reflect the change as long as the users have unique UIDs.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","PASSED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.8 Ensure no duplicate group names exist"" : [PASSED]

Although the groupadd program will not let you create a duplicate group name, it is possible for an administrator to manually edit the /etc/group file and change the group name.

If a group is assigned a duplicate group name, it will create and have access to files with the first GID for that group in /etc/group Effectively, the GID is shared, which is a security problem.

Solution:
Based on the results of the audit script, establish unique names for the user groups. File group ownerships will automatically reflect the change as long as the groups have unique GIDs.

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5

Policy Value:
name: group_duplicate_name

Actual Value:
No issues found.","Based on the results of the audit script, establish unique names for the user groups. File group ownerships will automatically reflect the change as long as the groups have unique GIDs.","https://workbench.cisecurity.org/benchmarks/17074",""
"21157","","","FAILED","192.168.112.1","tcp","0","Unix Compliance Checks","Compliance checks for Unix systems","""7.2.9 Ensure local interactive user home directories are configured"" : [FAILED]

The user home directory is space defined for the particular user to set local environment variables and to store personal files. While the system administrator can establish secure permissions for users' home directories, the users can easily override these. Users can be defined in /etc/passwd without a home directory or with a home directory that does not actually exist.

Since the user is accountable for files stored in the user home directory, the user must be the owner of the directory. Group or world-writable user home directories may enable malicious users to steal or modify other users' data or to gain another user's system privileges. If the user's home directory does not exist or is unassigned, the user will be placed in ""/"" and will not be able to write any files or have local environment variables set.

Solution:
If a local interactive users' home directory is undefined and/or doesn't exist, follow local site policy and perform one of the following:

 - Lock the user account
 - Remove the user from the system
 - create a directory for the user. If undefined, edit /etc/passwd and add the absolute path to the directory to the last field of the user.

Run the following script to:

 - Remove excessive permissions from local interactive users home directories
 - Update the home directory's owner

#!/usr/bin/env bash

{
   l_output2=""""
   l_valid_shells=""^($( awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   unset a_uarr &amp;&amp; a_uarr=() # Clear and initialize array
   while read -r l_epu l_eph; do # Populate array with users and user home location
      a_uarr+=(""$l_epu $l_eph"")
   done <<< ""$(awk -v pat=""$l_valid_shells"" -F: '$(NF) ~ pat { print $1 "" "" $(NF-1) }' /etc/passwd)""
   l_asize=""${#a_uarr[@]}"" # Here if we want to look at number of users before proceeding
   [ ""$l_asize "" -gt ""10000"" ] &amp;&amp; echo -e ""
 ** INFO **
 - \""$l_asize\"" Local interactive users found on the system
 - This may be a long running process
""
   while read -r l_user l_home; do
      if [ -d ""$l_home"" ]; then
         l_mask='0027'
         l_max=""$( printf '%o' $(( 0777 &amp; ~$l_mask)) )""
         while read -r l_own l_mode; do
            if [ ""$l_user"" != ""$l_own"" ]; then
               l_output2=""$l_output2
 - User: \""$l_user\"" Home \""$l_home\"" is owned by: \""$l_own\""
 - changing ownership to: \""$l_user\""
""
               chown ""$l_user"" ""$l_home""
            fi
            if [ $(( $l_mode &amp; $l_mask )) -gt 0 ]; then
               l_output2=""$l_output2
 - User: \""$l_user\"" Home \""$l_home\"" is mode: \""$l_mode\"" should be mode: \""$l_max\"" or more restrictive
 - removing excess permissions
""
               chmod g-w,o-rwx ""$l_home""
            fi
         done <<< ""$(stat -Lc '%U %#a' ""$l_home"")""
      else
         l_output2=""$l_output2
 - User: \""$l_user\"" Home \""$l_home\"" Doesn't exist
 - Please create a home in accordance with local site policy""
      fi
   done <<< ""$(printf '%s
' ""${a_uarr[@]}"")""
   if [ -z ""$l_output2"" ]; then # If l_output2 is empty, we pass
      echo -e "" - No modification needed to local interactive users home directories""
   else
      echo -e ""
$l_output2""
   fi
}

See Also: https://workbench.cisecurity.org/benchmarks/17074

Reference: 800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3

Policy Value:
cmd: multiple line script
dont_echo_cmd: NO
expect: (?i)^[\s]*\**[\s]*pass:?[\s]*\**$

Actual Value:
The command script with multiple lines returned : 

- Audit Result:
  ** FAIL **
 - * Reasons for audit failure * :

  - User: ""anapaya"" Home ""/home/anapaya"" is mode: ""0755"" should be mode: ""750"" or more restrictive
  - User: ""scion"" Home ""/home/scion"" is mode: ""0755"" should be mode: ""750"" or more restrictive

- * Correctly configured * :
  - All local interactive users:
   - home directories exist
   - own their home directory","If a local interactive users' home directory is undefined and/or doesn't exist, follow local site policy and perform one of the following:

 - Lock the user account
 - Remove the user from the system
 - create a directory for the user. If undefined, edit /etc/passwd and add the absolute path to the directory to the last field of the user.

Run the following script to:

 - Remove excessive permissions from local interactive users home directories
 - Update the home directory's owner

#!/usr/bin/env bash

{
   l_output2=""""
   l_valid_shells=""^($( awk -F/ '$NF != ""nologin"" {print}' /etc/shells | sed -rn '/^//{s,/,\\/,g;p}' | paste -s -d '|' - ))$""
   unset a_uarr &amp;&amp; a_uarr=() # Clear and initialize array
   while read -r l_epu l_eph; do # Populate array with users and user home location
      a_uarr+=(""$l_epu $l_eph"")
   done <<< ""$(awk -v pat=""$l_valid_shells"" -F: '$(NF) ~ pat { print $1 "" "" $(NF-1) }' /etc/passwd)""
   l_asize=""${#a_uarr[@]}"" # Here if we want to look at number of users before proceeding
   [ ""$l_asize "" -gt ""10000"" ] &amp;&amp; echo -e ""
 ** INFO **
 - \""$l_asize\"" Local interactive users found on the system
 - This may be a long running process
""
   while read -r l_user l_home; do
      if [ -d ""$l_home"" ]; then
         l_mask='0027'
         l_max=""$( printf '%o' $(( 0777 &amp; ~$l_mask)) )""
         while read -r l_own l_mode; do
            if [ ""$l_user"" != ""$l_own"" ]; then
               l_output2=""$l_output2
 - User: \""$l_user\"" Home \""$l_home\"" is owned by: \""$l_own\""
 - changing ownership to: \""$l_user\""
""
               chown ""$l_user"" ""$l_home""
            fi
            if [ $(( $l_mode &amp; $l_mask )) -gt 0 ]; then
               l_output2=""$l_output2
 - User: \""$l_user\"" Home \""$l_home\"" is mode: \""$l_mode\"" should be mode: \""$l_max\"" or more restrictive
 - removing excess permissions
""
               chmod g-w,o-rwx ""$l_home""
            fi
         done <<< ""$(stat -Lc '%U %#a' ""$l_home"")""
      else
         l_output2=""$l_output2
 - User: \""$l_user\"" Home \""$l_home\"" Doesn't exist
 - Please create a home in accordance with local site policy""
      fi
   done <<< ""$(printf '%s
' ""${a_uarr[@]}"")""
   if [ -z ""$l_output2"" ]; then # If l_output2 is empty, we pass
      echo -e "" - No modification needed to local interactive users home directories""
   else
      echo -e ""
$l_output2""
   fi
}","https://workbench.cisecurity.org/benchmarks/17074",""
"25202","","","None","192.168.112.1","tcp","0","Enumerate IPv6 Interfaces via SSH","Nessus was able to enumerate the IPv6 interfaces on the remote host.","Nessus was able to enumerate the network interfaces configured with
IPv6 addresses by connecting to the remote host via SSH using the
supplied credentials.","Disable IPv6 if you are not actually using it. Otherwise, disable any
unused IPv6 interfaces.","","
The following IPv6 interfaces are set on the remote host :

 - fe80::290:bff:fea5:d295 (on interface enp10s0f1)
 - fe80::290:bff:fea5:d28e (on interface enp2s0f0)
 - ::1 (on interface lo)
 - fe80::ca8e:c258:f7cb:b9e8 (on interface scion-gateway)
"
"25203","","","None","192.168.112.1","tcp","0","Enumerate IPv4 Interfaces via SSH","Nessus was able to enumerate the IPv4 interfaces on the remote host.","Nessus was able to enumerate the network interfaces configured with
IPv4 addresses by connecting to the remote host via SSH using the
supplied credentials.","Disable any unused IPv4 interfaces.","","
The following IPv4 addresses are set on the remote host :

 - 172.17.0.1 (on interface docker0)
 - 192.168.112.1 (on interface enp10s0f1)
 - 10.110.192.49 (on interface enp2s0f0)
 - 127.0.0.1 (on interface lo)
 - 198.18.30.3 (on interface wg0)
"
"33276","","","None","192.168.112.1","tcp","0","Enumerate MAC Addresses via SSH","Nessus was able to enumerate MAC addresses on the remote host.","Nessus was able to enumerate MAC addresses by connecting to the remote
host via SSH with the supplied credentials.","Disable any unused interfaces.","","
The following MAC addresses exist on the remote host :

  - 00:90:0b:a5:d2:91 (interface enp2s0f3)
  - 00:90:0b:a5:d2:8f (interface enp2s0f1)
  - 00:90:0b:a5:d2:93 (interface enp8s0f1)
  - 00:90:0b:a5:d2:8e (interface enp2s0f0)
  - 00:90:0b:a5:d2:90 (interface enp2s0f2)
  - 00:90:0b:a5:d2:92 (interface enp8s0f0)
  - 02:42:c7:7b:2b:aa (interface docker0)
  - 00:90:0b:a5:d2:94 (interface enp10s0f0)
  - 00:90:0b:a5:d2:95 (interface enp10s0f1)
"
"55472","","","None","192.168.112.1","tcp","0","Device Hostname","It was possible to determine the remote system hostname.","This plugin reports a device's hostname collected via SSH or WMI.","n/a","","
  Hostname : s01-chlau1-arma
    s01-chlau1-arma (hostname command)"
"141118","","","None","192.168.112.1","tcp","22","Target Credential Status by Authentication Protocol - Valid Credentials Provided","Valid credentials were provided for an available authentication protocol.","Nessus was able to determine that valid credentials were provided for
an authentication protocol available on the remote target because it
was able to successfully authenticate directly to the remote target
using that authentication protocol at least once. Authentication was
successful because the authentication protocol service was available
remotely, the service was able to be identified, the authentication
protocol was able to be negotiated successfully, and a set of
credentials provided in the scan policy for that authentication
protocol was accepted by the remote service. See plugin output for
details, including protocol, port, and account.

Please note the following :

- This plugin reports per protocol, so it is possible for
  valid credentials to be provided for one protocol and not
  another. For example, authentication may succeed via SSH
  but fail via SMB, while no credentials were provided for
  an available SNMP service.

- Providing valid credentials for all available
  authentication protocols may improve scan coverage, but
  the value of successful authentication for a given
  protocol may vary from target to target depending upon
  what data (if any) is gathered from the target via that
  protocol. For example, successful authentication via SSH
  is more valuable for Linux targets than for Windows
  targets, and likewise successful authentication via SMB
  is more valuable for Windows targets than for Linux
  targets.","n/a","","
Nessus was able to log in to the remote host via the following :

User:       'scion'
Port:       22
Proto:      SSH
Method:     publickey
Escalation: sudo
"
